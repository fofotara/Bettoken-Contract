{
	"id": "0a0e050927a47040a5f3539ac843f8e1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/bettoken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n\n\ncontract Bettoken is ERC20, Ownable, ReentrancyGuard {\n\n    using  SafeMath for uint216;\n\n    uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18; // 200 million BETT with 18 decimals\n\n    // Private Sale variables\n    uint256 public privateSaleTarget = 1_000_000 * 10 ** 18; // 1 million USD target\n    uint256 public privateSaleTokens = 38_835_764 * 10 ** 18; // 38,835,764 BETT\n    uint256 public privateSaleStartPrice = 0.001 * 10 ** 18; // 0.001 USD per BETT\n    uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18; // 0.0505 USD per BETT\n    uint256 public privateSaleSoldTokens = 0;\n\n    // Pre-Sale variables\n    uint256 public preSaleTarget = 19_000_000 * 10 ** 18; // 19 million USD target\n    uint256 public preSaleTokens = 161_164_236 * 10 ** 18; // 161,164,236 BETT\n    uint256 public preSaleStartPrice = 0.0505 * 10 ** 18; // 0.0505 USD per BETT\n    uint256 public preSaleEndPrice = 0.1 * 10 ** 18; // 0.1 USD per BETT\n    uint256 public preSaleSoldTokens = 0;\n\n    // Sale States\n    enum SaleStage { NONE, PRIVATE, PRESALE }\n    SaleStage public stage = SaleStage.NONE;\n\n    // Vesting Parameters\n    mapping(address => uint256) public vestingBalance;\n    mapping(address => uint256) public vestingReleaseTime;\n    uint256 public vestingDuration = 6 * 30 days; // 6 ay = 6 * 30 gün\n    uint256 public stakeDuration = 365 days; // 1 yıl = 365 gün\n\n    // Events\n    event PrivateSale(address indexed buyer, uint256 amount);\n    event PreSale(address indexed buyer, uint256 amount);\n\n    constructor() ERC20(\"Bettoken\", \"BETT\") Ownable(msg.sender) {\n        _mint(address(this), TOTAL_SUPPLY);\n    }\n\n    function startPrivateSale() external onlyOwner {\n        require(stage == SaleStage.NONE, \"Private Sale has already started or concluded.\");\n        stage = SaleStage.PRIVATE;\n    }\n\n    function startPreSale() external onlyOwner {\n        require(stage == SaleStage.PRIVATE, \"Private Sale should be concluded first.\");\n        require(privateSaleSoldTokens == privateSaleTokens, \"Private Sale target not reached.\");\n        stage = SaleStage.PRESALE;\n    }\n\n    function buyTokens(uint256 usdAmount) external payable nonReentrant {\n        require(stage != SaleStage.NONE, \"No sale is active.\");\n\n        uint256 tokensToBuy;\n        if (stage == SaleStage.PRIVATE) {\n            require(privateSaleSoldTokens < privateSaleTokens, \"Private Sale sold out.\");\n            tokensToBuy = calculatePrivateSaleTokens(usdAmount);\n            privateSaleSoldTokens += tokensToBuy;\n            require(privateSaleSoldTokens <= privateSaleTokens, \"Exceeds Private Sale token limit.\");\n            vestingBalance[msg.sender] += tokensToBuy;\n            vestingReleaseTime[msg.sender] = block.timestamp + stakeDuration + vestingDuration;\n            emit PrivateSale(msg.sender, tokensToBuy);\n        } else if (stage == SaleStage.PRESALE) {\n            require(preSaleSoldTokens < preSaleTokens, \"Pre-Sale sold out.\");\n            require(usdAmount >= 100 * 10 ** 18 && usdAmount <= 3_000 * 10 ** 18, \"Purchase amount out of limits.\");\n            tokensToBuy = calculatePreSaleTokens(usdAmount);\n            preSaleSoldTokens += tokensToBuy;\n            require(preSaleSoldTokens <= preSaleTokens, \"Exceeds Pre-Sale token limit.\");\n            _transfer(address(this), msg.sender, tokensToBuy);\n            emit PreSale(msg.sender, tokensToBuy);\n        }\n    }\n\n    function calculatePrivateSaleTokens(uint256 usdAmount) internal view returns (uint256) {\n        uint256 currentPrice = privateSaleStartPrice + \n            ((privateSaleEndPrice - privateSaleStartPrice) * privateSaleSoldTokens / privateSaleTokens);\n        return usdAmount / currentPrice;\n    }\n\n    function calculatePreSaleTokens(uint256 usdAmount) internal view returns (uint256) {\n        uint256 currentPrice = preSaleStartPrice + \n            ((preSaleEndPrice - preSaleStartPrice) * preSaleSoldTokens / preSaleTokens);\n        return usdAmount / currentPrice;\n    }\n\n    function releaseVestedTokens() external nonReentrant {\n        require(block.timestamp >= vestingReleaseTime[msg.sender], \"Vesting period not yet completed.\");\n        uint256 amount = vestingBalance[msg.sender];\n        vestingBalance[msg.sender] = 0;\n        vestingReleaseTime[msg.sender] = 0;\n        _transfer(address(this), msg.sender, amount);\n    }\n\n    function haltSales() external onlyOwner {\n        require(privateSaleSoldTokens == privateSaleTokens || preSaleSoldTokens == preSaleTokens, \n                \"Sales targets not yet met.\");\n        stage = SaleStage.NONE;\n    }\n\n    function withdrawFunds() external onlyOwner nonReentrant {\n        payable(owner()).transfer(address(this).balance);\n    }\n\n    fallback() external payable {\n        revert(\"Direct ETH transfers not allowed.\");\n    }\n\n    receive() external payable {\n        revert(\"Direct ETH transfers not allowed.\");\n    }\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xC4 MSTORE8 PUSH29 0x112E7DFD362FBBC3109DCD7EFAD1E9F705B895D9C42D83F61DD9CEDB64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xC4 MSTORE8 PUSH29 0x112E7DFD362FBBC3109DCD7EFAD1E9F705B895D9C42D83F61DD9CEDB64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/bettoken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/bettoken.sol": {
				"Bettoken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PreSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PrivateSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdAmount",
									"type": "uint256"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "haltSales",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleEndPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleSoldTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleStartPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleTarget",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleEndPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleSoldTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleStartPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleTarget",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releaseVestedTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"internalType": "enum Bettoken.SaleStage",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPreSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPrivateSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vestingBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestingDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vestingReleaseTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/bettoken.sol\":290:5167  contract Bettoken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/bettoken.sol\":554:574  1_000_000 * 10 ** 18 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/bettoken.sol\":519:574  uint256 public privateSaleTarget = 1_000_000 * 10 ** 18 */\n  0x07\n  sstore\n    /* \"contracts/bettoken.sol\":639:660  38_835_764 * 10 ** 18 */\n  0x201fcafc2577d298500000\n    /* \"contracts/bettoken.sol\":604:660  uint256 public privateSaleTokens = 38_835_764 * 10 ** 18 */\n  0x08\n  sstore\n    /* \"contracts/bettoken.sol\":724:740  0.001 * 10 ** 18 */\n  0x038d7ea4c68000\n    /* \"contracts/bettoken.sol\":685:740  uint256 public privateSaleStartPrice = 0.001 * 10 ** 18 */\n  0x09\n  sstore\n    /* \"contracts/bettoken.sol\":805:822  0.0505 * 10 ** 18 */\n  0xb3697b81284000\n    /* \"contracts/bettoken.sol\":768:822  uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18 */\n  0x0a\n  sstore\n    /* \"contracts/bettoken.sol\":890:891  0 */\n  0x00\n    /* \"contracts/bettoken.sol\":851:891  uint256 public privateSaleSoldTokens = 0 */\n  0x0b\n  sstore\n    /* \"contracts/bettoken.sol\":955:976  19_000_000 * 10 ** 18 */\n  0x0fb768105935a2f3000000\n    /* \"contracts/bettoken.sol\":924:976  uint256 public preSaleTarget = 19_000_000 * 10 ** 18 */\n  0x0c\n  sstore\n    /* \"contracts/bettoken.sol\":1038:1060  161_164_236 * 10 ** 18 */\n  0x854fdabd6aa1d32fb00000\n    /* \"contracts/bettoken.sol\":1007:1060  uint256 public preSaleTokens = 161_164_236 * 10 ** 18 */\n  0x0d\n  sstore\n    /* \"contracts/bettoken.sol\":1121:1138  0.0505 * 10 ** 18 */\n  0xb3697b81284000\n    /* \"contracts/bettoken.sol\":1086:1138  uint256 public preSaleStartPrice = 0.0505 * 10 ** 18 */\n  0x0e\n  sstore\n    /* \"contracts/bettoken.sol\":1200:1214  0.1 * 10 ** 18 */\n  0x016345785d8a0000\n    /* \"contracts/bettoken.sol\":1167:1214  uint256 public preSaleEndPrice = 0.1 * 10 ** 18 */\n  0x0f\n  sstore\n    /* \"contracts/bettoken.sol\":1275:1276  0 */\n  0x00\n    /* \"contracts/bettoken.sol\":1240:1276  uint256 public preSaleSoldTokens = 0 */\n  0x10\n  sstore\n    /* \"contracts/bettoken.sol\":1373:1387  SaleStage.NONE */\n  0x00\n    /* \"contracts/bettoken.sol\":1348:1387  SaleStage public stage = SaleStage.NONE */\n  0x11\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x02\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  tag_2\n  tag_3\n  jump\t// in\ntag_2:\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/bettoken.sol\":1567:1578  6 * 30 days */\n  0xed4e00\n    /* \"contracts/bettoken.sol\":1534:1578  uint256 public vestingDuration = 6 * 30 days */\n  0x14\n  sstore\n    /* \"contracts/bettoken.sol\":1637:1645  365 days */\n  0x01e13380\n    /* \"contracts/bettoken.sol\":1606:1645  uint256 public stakeDuration = 365 days */\n  0x15\n  sstore\n    /* \"contracts/bettoken.sol\":1808:1919  constructor() ERC20(\"Bettoken\", \"BETT\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n    /* \"contracts/bettoken.sol\":1856:1866  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x426574746f6b656e000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4245545400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/bettoken.sol\":1878:1912  _mint(address(this), TOTAL_SUPPLY) */\n  tag_21\n    /* \"contracts/bettoken.sol\":1892:1896  this */\n  address\n    /* \"contracts/bettoken.sol\":423:445  200_000_000 * 10 ** 18 */\n  0xa56fa5b99019a5c8000000\n    /* \"contracts/bettoken.sol\":1878:1883  _mint */\n  shl(0x20, tag_22)\n    /* \"contracts/bettoken.sol\":1878:1912  _mint(address(this), TOTAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"contracts/bettoken.sol\":290:5167  contract Bettoken is ERC20, Ownable, ReentrancyGuard {... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_27\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_27:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_28\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_29)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_34)\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_36\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_39)\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:187   */\ntag_3:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x21\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"#utility.yul\":193:292   */\ntag_42:\n    /* \"#utility.yul\":245:251   */\n  0x00\n    /* \"#utility.yul\":279:284   */\n  dup2\n    /* \"#utility.yul\":273:285   */\n  mload\n    /* \"#utility.yul\":263:285   */\n  swap1\n  pop\n    /* \"#utility.yul\":193:292   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":298:478   */\ntag_43:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x41\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:664   */\ntag_44:\n    /* \"#utility.yul\":532:609   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":522:610   */\n  mstore\n    /* \"#utility.yul\":629:633   */\n  0x22\n    /* \"#utility.yul\":626:627   */\n  0x04\n    /* \"#utility.yul\":619:634   */\n  mstore\n    /* \"#utility.yul\":653:657   */\n  0x24\n    /* \"#utility.yul\":650:651   */\n  0x00\n    /* \"#utility.yul\":643:658   */\n  revert\n    /* \"#utility.yul\":670:990   */\ntag_45:\n    /* \"#utility.yul\":714:720   */\n  0x00\n    /* \"#utility.yul\":751:752   */\n  0x02\n    /* \"#utility.yul\":745:749   */\n  dup3\n    /* \"#utility.yul\":741:753   */\n  div\n    /* \"#utility.yul\":731:753   */\n  swap1\n  pop\n    /* \"#utility.yul\":798:799   */\n  0x01\n    /* \"#utility.yul\":792:796   */\n  dup3\n    /* \"#utility.yul\":788:800   */\n  and\n    /* \"#utility.yul\":819:837   */\n  dup1\n    /* \"#utility.yul\":809:890   */\n  tag_73\n  jumpi\n    /* \"#utility.yul\":875:879   */\n  0x7f\n    /* \"#utility.yul\":867:873   */\n  dup3\n    /* \"#utility.yul\":863:880   */\n  and\n    /* \"#utility.yul\":853:880   */\n  swap2\n  pop\n    /* \"#utility.yul\":809:890   */\ntag_73:\n    /* \"#utility.yul\":937:939   */\n  0x20\n    /* \"#utility.yul\":929:935   */\n  dup3\n    /* \"#utility.yul\":926:940   */\n  lt\n    /* \"#utility.yul\":906:924   */\n  dup2\n    /* \"#utility.yul\":903:941   */\n  sub\n    /* \"#utility.yul\":900:984   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":956:974   */\n  tag_75\n  tag_44\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":900:984   */\ntag_74:\n    /* \"#utility.yul\":721:990   */\n  pop\n    /* \"#utility.yul\":670:990   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":996:1137   */\ntag_46:\n    /* \"#utility.yul\":1045:1049   */\n  0x00\n    /* \"#utility.yul\":1068:1071   */\n  dup2\n    /* \"#utility.yul\":1060:1071   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1094   */\n  dup2\n    /* \"#utility.yul\":1088:1089   */\n  0x00\n    /* \"#utility.yul\":1081:1095   */\n  mstore\n    /* \"#utility.yul\":1125:1129   */\n  0x20\n    /* \"#utility.yul\":1122:1123   */\n  0x00\n    /* \"#utility.yul\":1112:1130   */\n  keccak256\n    /* \"#utility.yul\":1104:1130   */\n  swap1\n  pop\n    /* \"#utility.yul\":996:1137   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1143:1236   */\ntag_47:\n    /* \"#utility.yul\":1180:1186   */\n  0x00\n    /* \"#utility.yul\":1227:1229   */\n  0x20\n    /* \"#utility.yul\":1222:1224   */\n  0x1f\n    /* \"#utility.yul\":1215:1220   */\n  dup4\n    /* \"#utility.yul\":1211:1225   */\n  add\n    /* \"#utility.yul\":1207:1230   */\n  div\n    /* \"#utility.yul\":1197:1230   */\n  swap1\n  pop\n    /* \"#utility.yul\":1143:1236   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1242:1349   */\ntag_48:\n    /* \"#utility.yul\":1286:1294   */\n  0x00\n    /* \"#utility.yul\":1336:1341   */\n  dup3\n    /* \"#utility.yul\":1330:1334   */\n  dup3\n    /* \"#utility.yul\":1326:1342   */\n  shl\n    /* \"#utility.yul\":1305:1342   */\n  swap1\n  pop\n    /* \"#utility.yul\":1242:1349   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1355:1748   */\ntag_49:\n    /* \"#utility.yul\":1424:1430   */\n  0x00\n    /* \"#utility.yul\":1474:1475   */\n  0x08\n    /* \"#utility.yul\":1462:1472   */\n  dup4\n    /* \"#utility.yul\":1458:1476   */\n  mul\n    /* \"#utility.yul\":1497:1594   */\n  tag_80\n    /* \"#utility.yul\":1527:1593   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1516:1525   */\n  dup3\n    /* \"#utility.yul\":1497:1594   */\n  tag_48\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1615:1654   */\n  tag_81\n    /* \"#utility.yul\":1645:1653   */\n  dup7\n    /* \"#utility.yul\":1634:1643   */\n  dup4\n    /* \"#utility.yul\":1615:1654   */\n  tag_48\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1603:1654   */\n  swap6\n  pop\n    /* \"#utility.yul\":1687:1691   */\n  dup1\n    /* \"#utility.yul\":1683:1692   */\n  not\n    /* \"#utility.yul\":1676:1681   */\n  dup5\n    /* \"#utility.yul\":1672:1693   */\n  and\n    /* \"#utility.yul\":1663:1693   */\n  swap4\n  pop\n    /* \"#utility.yul\":1736:1740   */\n  dup1\n    /* \"#utility.yul\":1726:1734   */\n  dup7\n    /* \"#utility.yul\":1722:1741   */\n  and\n    /* \"#utility.yul\":1715:1720   */\n  dup5\n    /* \"#utility.yul\":1712:1742   */\n  or\n    /* \"#utility.yul\":1702:1742   */\n  swap3\n  pop\n    /* \"#utility.yul\":1431:1748   */\n  pop\n  pop\n    /* \"#utility.yul\":1355:1748   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1754:1831   */\ntag_50:\n    /* \"#utility.yul\":1791:1798   */\n  0x00\n    /* \"#utility.yul\":1820:1825   */\n  dup2\n    /* \"#utility.yul\":1809:1825   */\n  swap1\n  pop\n    /* \"#utility.yul\":1754:1831   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1837:1897   */\ntag_51:\n    /* \"#utility.yul\":1865:1868   */\n  0x00\n    /* \"#utility.yul\":1886:1891   */\n  dup2\n    /* \"#utility.yul\":1879:1891   */\n  swap1\n  pop\n    /* \"#utility.yul\":1837:1897   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1903:2045   */\ntag_52:\n    /* \"#utility.yul\":1953:1962   */\n  0x00\n    /* \"#utility.yul\":1986:2039   */\n  tag_85\n    /* \"#utility.yul\":2004:2038   */\n  tag_86\n    /* \"#utility.yul\":2013:2037   */\n  tag_87\n    /* \"#utility.yul\":2031:2036   */\n  dup5\n    /* \"#utility.yul\":2013:2037   */\n  tag_50\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2004:2038   */\n  tag_51\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":1986:2039   */\n  tag_50\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1973:2039   */\n  swap1\n  pop\n    /* \"#utility.yul\":1903:2045   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2051:2126   */\ntag_53:\n    /* \"#utility.yul\":2094:2097   */\n  0x00\n    /* \"#utility.yul\":2115:2120   */\n  dup2\n    /* \"#utility.yul\":2108:2120   */\n  swap1\n  pop\n    /* \"#utility.yul\":2051:2126   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2132:2401   */\ntag_54:\n    /* \"#utility.yul\":2242:2281   */\n  tag_90\n    /* \"#utility.yul\":2273:2280   */\n  dup4\n    /* \"#utility.yul\":2242:2281   */\n  tag_52\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2303:2394   */\n  tag_91\n    /* \"#utility.yul\":2352:2393   */\n  tag_92\n    /* \"#utility.yul\":2376:2392   */\n  dup3\n    /* \"#utility.yul\":2352:2393   */\n  tag_53\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2344:2350   */\n  dup5\n    /* \"#utility.yul\":2337:2341   */\n  dup5\n    /* \"#utility.yul\":2331:2342   */\n  sload\n    /* \"#utility.yul\":2303:2394   */\n  tag_49\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2297:2301   */\n  dup3\n    /* \"#utility.yul\":2290:2395   */\n  sstore\n    /* \"#utility.yul\":2208:2401   */\n  pop\n    /* \"#utility.yul\":2132:2401   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2407:2480   */\ntag_55:\n    /* \"#utility.yul\":2452:2455   */\n  0x00\n    /* \"#utility.yul\":2407:2480   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2486:2675   */\ntag_56:\n    /* \"#utility.yul\":2563:2595   */\n  tag_95\n  tag_55\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2604:2669   */\n  tag_96\n    /* \"#utility.yul\":2662:2668   */\n  dup2\n    /* \"#utility.yul\":2654:2660   */\n  dup5\n    /* \"#utility.yul\":2648:2652   */\n  dup5\n    /* \"#utility.yul\":2604:2669   */\n  tag_54\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2539:2675   */\n  pop\n    /* \"#utility.yul\":2486:2675   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2681:2867   */\ntag_57:\n    /* \"#utility.yul\":2741:2861   */\ntag_98:\n    /* \"#utility.yul\":2758:2761   */\n  dup2\n    /* \"#utility.yul\":2751:2756   */\n  dup2\n    /* \"#utility.yul\":2748:2762   */\n  lt\n    /* \"#utility.yul\":2741:2861   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":2812:2851   */\n  tag_101\n    /* \"#utility.yul\":2849:2850   */\n  0x00\n    /* \"#utility.yul\":2842:2847   */\n  dup3\n    /* \"#utility.yul\":2812:2851   */\n  tag_56\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2785:2786   */\n  0x01\n    /* \"#utility.yul\":2778:2783   */\n  dup2\n    /* \"#utility.yul\":2774:2787   */\n  add\n    /* \"#utility.yul\":2765:2787   */\n  swap1\n  pop\n    /* \"#utility.yul\":2741:2861   */\n  jump(tag_98)\ntag_100:\n    /* \"#utility.yul\":2681:2867   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2873:3416   */\ntag_58:\n    /* \"#utility.yul\":2974:2976   */\n  0x1f\n    /* \"#utility.yul\":2969:2972   */\n  dup3\n    /* \"#utility.yul\":2966:2977   */\n  gt\n    /* \"#utility.yul\":2963:3409   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":3008:3046   */\n  tag_104\n    /* \"#utility.yul\":3040:3045   */\n  dup2\n    /* \"#utility.yul\":3008:3046   */\n  tag_46\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3092:3121   */\n  tag_105\n    /* \"#utility.yul\":3110:3120   */\n  dup5\n    /* \"#utility.yul\":3092:3121   */\n  tag_47\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3082:3090   */\n  dup2\n    /* \"#utility.yul\":3078:3122   */\n  add\n    /* \"#utility.yul\":3275:3277   */\n  0x20\n    /* \"#utility.yul\":3263:3273   */\n  dup6\n    /* \"#utility.yul\":3260:3278   */\n  lt\n    /* \"#utility.yul\":3257:3306   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":3296:3304   */\n  dup2\n    /* \"#utility.yul\":3281:3304   */\n  swap1\n  pop\n    /* \"#utility.yul\":3257:3306   */\ntag_106:\n    /* \"#utility.yul\":3319:3399   */\n  tag_107\n    /* \"#utility.yul\":3375:3397   */\n  tag_108\n    /* \"#utility.yul\":3393:3396   */\n  dup6\n    /* \"#utility.yul\":3375:3397   */\n  tag_47\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3365:3373   */\n  dup4\n    /* \"#utility.yul\":3361:3398   */\n  add\n    /* \"#utility.yul\":3348:3359   */\n  dup3\n    /* \"#utility.yul\":3319:3399   */\n  tag_57\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2978:3409   */\n  pop\n  pop\n    /* \"#utility.yul\":2963:3409   */\ntag_103:\n    /* \"#utility.yul\":2873:3416   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3422:3539   */\ntag_59:\n    /* \"#utility.yul\":3476:3484   */\n  0x00\n    /* \"#utility.yul\":3526:3531   */\n  dup3\n    /* \"#utility.yul\":3520:3524   */\n  dup3\n    /* \"#utility.yul\":3516:3532   */\n  shr\n    /* \"#utility.yul\":3495:3532   */\n  swap1\n  pop\n    /* \"#utility.yul\":3422:3539   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3545:3714   */\ntag_60:\n    /* \"#utility.yul\":3589:3595   */\n  0x00\n    /* \"#utility.yul\":3622:3673   */\n  tag_111\n    /* \"#utility.yul\":3670:3671   */\n  0x00\n    /* \"#utility.yul\":3666:3672   */\n  not\n    /* \"#utility.yul\":3658:3663   */\n  dup5\n    /* \"#utility.yul\":3655:3656   */\n  0x08\n    /* \"#utility.yul\":3651:3664   */\n  mul\n    /* \"#utility.yul\":3622:3673   */\n  tag_59\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3618:3674   */\n  not\n    /* \"#utility.yul\":3703:3707   */\n  dup1\n    /* \"#utility.yul\":3697:3701   */\n  dup4\n    /* \"#utility.yul\":3693:3708   */\n  and\n    /* \"#utility.yul\":3683:3708   */\n  swap2\n  pop\n    /* \"#utility.yul\":3596:3714   */\n  pop\n    /* \"#utility.yul\":3545:3714   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3719:4014   */\ntag_61:\n    /* \"#utility.yul\":3795:3799   */\n  0x00\n    /* \"#utility.yul\":3941:3970   */\n  tag_113\n    /* \"#utility.yul\":3966:3969   */\n  dup4\n    /* \"#utility.yul\":3960:3964   */\n  dup4\n    /* \"#utility.yul\":3941:3970   */\n  tag_60\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3933:3970   */\n  swap2\n  pop\n    /* \"#utility.yul\":4003:4006   */\n  dup3\n    /* \"#utility.yul\":4000:4001   */\n  0x02\n    /* \"#utility.yul\":3996:4007   */\n  mul\n    /* \"#utility.yul\":3990:3994   */\n  dup3\n    /* \"#utility.yul\":3987:4008   */\n  or\n    /* \"#utility.yul\":3979:4008   */\n  swap1\n  pop\n    /* \"#utility.yul\":3719:4014   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4019:5414   */\ntag_11:\n    /* \"#utility.yul\":4136:4173   */\n  tag_115\n    /* \"#utility.yul\":4169:4172   */\n  dup3\n    /* \"#utility.yul\":4136:4173   */\n  tag_42\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":4238:4256   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4230:4236   */\n  dup2\n    /* \"#utility.yul\":4227:4257   */\n  gt\n    /* \"#utility.yul\":4224:4280   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":4260:4278   */\n  tag_117\n  tag_43\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4224:4280   */\ntag_116:\n    /* \"#utility.yul\":4304:4342   */\n  tag_118\n    /* \"#utility.yul\":4336:4340   */\n  dup3\n    /* \"#utility.yul\":4330:4341   */\n  sload\n    /* \"#utility.yul\":4304:4342   */\n  tag_45\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":4389:4456   */\n  tag_119\n    /* \"#utility.yul\":4449:4455   */\n  dup3\n    /* \"#utility.yul\":4441:4447   */\n  dup3\n    /* \"#utility.yul\":4435:4439   */\n  dup6\n    /* \"#utility.yul\":4389:4456   */\n  tag_58\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":4483:4484   */\n  0x00\n    /* \"#utility.yul\":4507:4511   */\n  0x20\n    /* \"#utility.yul\":4494:4511   */\n  swap1\n  pop\n    /* \"#utility.yul\":4539:4541   */\n  0x1f\n    /* \"#utility.yul\":4531:4537   */\n  dup4\n    /* \"#utility.yul\":4528:4542   */\n  gt\n    /* \"#utility.yul\":4556:4557   */\n  0x01\n    /* \"#utility.yul\":4551:5169   */\n  dup2\n  eq\n  tag_121\n  jumpi\n    /* \"#utility.yul\":5213:5214   */\n  0x00\n    /* \"#utility.yul\":5230:5236   */\n  dup5\n    /* \"#utility.yul\":5227:5304   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5279:5288   */\n  dup3\n    /* \"#utility.yul\":5274:5277   */\n  dup8\n    /* \"#utility.yul\":5270:5289   */\n  add\n    /* \"#utility.yul\":5264:5290   */\n  mload\n    /* \"#utility.yul\":5255:5290   */\n  swap1\n  pop\n    /* \"#utility.yul\":5227:5304   */\ntag_122:\n    /* \"#utility.yul\":5330:5397   */\n  tag_123\n    /* \"#utility.yul\":5390:5396   */\n  dup6\n    /* \"#utility.yul\":5383:5388   */\n  dup3\n    /* \"#utility.yul\":5330:5397   */\n  tag_61\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":5324:5328   */\n  dup7\n    /* \"#utility.yul\":5317:5398   */\n  sstore\n    /* \"#utility.yul\":5186:5408   */\n  pop\n    /* \"#utility.yul\":4521:5408   */\n  jump(tag_120)\n    /* \"#utility.yul\":4551:5169   */\ntag_121:\n    /* \"#utility.yul\":4603:4607   */\n  0x1f\n    /* \"#utility.yul\":4599:4608   */\n  not\n    /* \"#utility.yul\":4591:4597   */\n  dup5\n    /* \"#utility.yul\":4587:4609   */\n  and\n    /* \"#utility.yul\":4637:4674   */\n  tag_124\n    /* \"#utility.yul\":4669:4673   */\n  dup7\n    /* \"#utility.yul\":4637:4674   */\n  tag_46\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4696:4697   */\n  0x00\n    /* \"#utility.yul\":4710:4918   */\ntag_125:\n    /* \"#utility.yul\":4724:4731   */\n  dup3\n    /* \"#utility.yul\":4721:4722   */\n  dup2\n    /* \"#utility.yul\":4718:4732   */\n  lt\n    /* \"#utility.yul\":4710:4918   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":4803:4812   */\n  dup5\n    /* \"#utility.yul\":4798:4801   */\n  dup10\n    /* \"#utility.yul\":4794:4813   */\n  add\n    /* \"#utility.yul\":4788:4814   */\n  mload\n    /* \"#utility.yul\":4780:4786   */\n  dup3\n    /* \"#utility.yul\":4773:4815   */\n  sstore\n    /* \"#utility.yul\":4854:4855   */\n  0x01\n    /* \"#utility.yul\":4846:4852   */\n  dup3\n    /* \"#utility.yul\":4842:4856   */\n  add\n    /* \"#utility.yul\":4832:4856   */\n  swap2\n  pop\n    /* \"#utility.yul\":4901:4903   */\n  0x20\n    /* \"#utility.yul\":4890:4899   */\n  dup6\n    /* \"#utility.yul\":4886:4904   */\n  add\n    /* \"#utility.yul\":4873:4904   */\n  swap5\n  pop\n    /* \"#utility.yul\":4747:4751   */\n  0x20\n    /* \"#utility.yul\":4744:4745   */\n  dup2\n    /* \"#utility.yul\":4740:4752   */\n  add\n    /* \"#utility.yul\":4735:4752   */\n  swap1\n  pop\n    /* \"#utility.yul\":4710:4918   */\n  jump(tag_125)\ntag_127:\n    /* \"#utility.yul\":4946:4952   */\n  dup7\n    /* \"#utility.yul\":4937:4944   */\n  dup4\n    /* \"#utility.yul\":4934:4953   */\n  lt\n    /* \"#utility.yul\":4931:5110   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":5004:5013   */\n  dup5\n    /* \"#utility.yul\":4999:5002   */\n  dup10\n    /* \"#utility.yul\":4995:5014   */\n  add\n    /* \"#utility.yul\":4989:5015   */\n  mload\n    /* \"#utility.yul\":5047:5095   */\n  tag_129\n    /* \"#utility.yul\":5089:5093   */\n  0x1f\n    /* \"#utility.yul\":5081:5087   */\n  dup10\n    /* \"#utility.yul\":5077:5094   */\n  and\n    /* \"#utility.yul\":5066:5075   */\n  dup3\n    /* \"#utility.yul\":5047:5095   */\n  tag_60\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":5039:5045   */\n  dup4\n    /* \"#utility.yul\":5032:5096   */\n  sstore\n    /* \"#utility.yul\":4954:5110   */\n  pop\n    /* \"#utility.yul\":4931:5110   */\ntag_128:\n    /* \"#utility.yul\":5156:5157   */\n  0x01\n    /* \"#utility.yul\":5152:5153   */\n  0x02\n    /* \"#utility.yul\":5144:5150   */\n  dup9\n    /* \"#utility.yul\":5140:5154   */\n  mul\n    /* \"#utility.yul\":5136:5158   */\n  add\n    /* \"#utility.yul\":5130:5134   */\n  dup9\n    /* \"#utility.yul\":5123:5159   */\n  sstore\n    /* \"#utility.yul\":4558:5169   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4521:5408   */\ntag_120:\n  pop\n    /* \"#utility.yul\":4111:5414   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4019:5414   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5420:5546   */\ntag_62:\n    /* \"#utility.yul\":5457:5464   */\n  0x00\n    /* \"#utility.yul\":5497:5539   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5490:5495   */\n  dup3\n    /* \"#utility.yul\":5486:5540   */\n  and\n    /* \"#utility.yul\":5475:5540   */\n  swap1\n  pop\n    /* \"#utility.yul\":5420:5546   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5552:5648   */\ntag_63:\n    /* \"#utility.yul\":5589:5596   */\n  0x00\n    /* \"#utility.yul\":5618:5642   */\n  tag_132\n    /* \"#utility.yul\":5636:5641   */\n  dup3\n    /* \"#utility.yul\":5618:5642   */\n  tag_62\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5607:5642   */\n  swap1\n  pop\n    /* \"#utility.yul\":5552:5648   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5654:5772   */\ntag_64:\n    /* \"#utility.yul\":5741:5765   */\n  tag_134\n    /* \"#utility.yul\":5759:5764   */\n  dup2\n    /* \"#utility.yul\":5741:5765   */\n  tag_63\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5736:5739   */\n  dup3\n    /* \"#utility.yul\":5729:5766   */\n  mstore\n    /* \"#utility.yul\":5654:5772   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5778:6000   */\ntag_16:\n    /* \"#utility.yul\":5871:5875   */\n  0x00\n    /* \"#utility.yul\":5909:5911   */\n  0x20\n    /* \"#utility.yul\":5898:5907   */\n  dup3\n    /* \"#utility.yul\":5894:5912   */\n  add\n    /* \"#utility.yul\":5886:5912   */\n  swap1\n  pop\n    /* \"#utility.yul\":5922:5993   */\n  tag_136\n    /* \"#utility.yul\":5990:5991   */\n  0x00\n    /* \"#utility.yul\":5979:5988   */\n  dup4\n    /* \"#utility.yul\":5975:5992   */\n  add\n    /* \"#utility.yul\":5966:5972   */\n  dup5\n    /* \"#utility.yul\":5922:5993   */\n  tag_64\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5778:6000   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6006:6186   */\ntag_65:\n    /* \"#utility.yul\":6054:6131   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6051:6052   */\n  0x00\n    /* \"#utility.yul\":6044:6132   */\n  mstore\n    /* \"#utility.yul\":6151:6155   */\n  0x11\n    /* \"#utility.yul\":6148:6149   */\n  0x04\n    /* \"#utility.yul\":6141:6156   */\n  mstore\n    /* \"#utility.yul\":6175:6179   */\n  0x24\n    /* \"#utility.yul\":6172:6173   */\n  0x00\n    /* \"#utility.yul\":6165:6180   */\n  revert\n    /* \"#utility.yul\":6192:6383   */\ntag_33:\n    /* \"#utility.yul\":6232:6235   */\n  0x00\n    /* \"#utility.yul\":6251:6271   */\n  tag_139\n    /* \"#utility.yul\":6269:6270   */\n  dup3\n    /* \"#utility.yul\":6251:6271   */\n  tag_50\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6246:6271   */\n  swap2\n  pop\n    /* \"#utility.yul\":6285:6305   */\n  tag_140\n    /* \"#utility.yul\":6303:6304   */\n  dup4\n    /* \"#utility.yul\":6285:6305   */\n  tag_50\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6280:6305   */\n  swap3\n  pop\n    /* \"#utility.yul\":6328:6329   */\n  dup3\n    /* \"#utility.yul\":6325:6326   */\n  dup3\n    /* \"#utility.yul\":6321:6330   */\n  add\n    /* \"#utility.yul\":6314:6330   */\n  swap1\n  pop\n    /* \"#utility.yul\":6349:6352   */\n  dup1\n    /* \"#utility.yul\":6346:6347   */\n  dup3\n    /* \"#utility.yul\":6343:6353   */\n  gt\n    /* \"#utility.yul\":6340:6376   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":6356:6374   */\n  tag_142\n  tag_65\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6340:6376   */\ntag_141:\n    /* \"#utility.yul\":6192:6383   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6389:6507   */\ntag_66:\n    /* \"#utility.yul\":6476:6500   */\n  tag_144\n    /* \"#utility.yul\":6494:6499   */\n  dup2\n    /* \"#utility.yul\":6476:6500   */\n  tag_50\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6471:6474   */\n  dup3\n    /* \"#utility.yul\":6464:6501   */\n  mstore\n    /* \"#utility.yul\":6389:6507   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6513:6955   */\ntag_37:\n    /* \"#utility.yul\":6662:6666   */\n  0x00\n    /* \"#utility.yul\":6700:6702   */\n  0x60\n    /* \"#utility.yul\":6689:6698   */\n  dup3\n    /* \"#utility.yul\":6685:6703   */\n  add\n    /* \"#utility.yul\":6677:6703   */\n  swap1\n  pop\n    /* \"#utility.yul\":6713:6784   */\n  tag_146\n    /* \"#utility.yul\":6781:6782   */\n  0x00\n    /* \"#utility.yul\":6770:6779   */\n  dup4\n    /* \"#utility.yul\":6766:6783   */\n  add\n    /* \"#utility.yul\":6757:6763   */\n  dup7\n    /* \"#utility.yul\":6713:6784   */\n  tag_64\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6794:6866   */\n  tag_147\n    /* \"#utility.yul\":6862:6864   */\n  0x20\n    /* \"#utility.yul\":6851:6860   */\n  dup4\n    /* \"#utility.yul\":6847:6865   */\n  add\n    /* \"#utility.yul\":6838:6844   */\n  dup6\n    /* \"#utility.yul\":6794:6866   */\n  tag_66\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6876:6948   */\n  tag_148\n    /* \"#utility.yul\":6944:6946   */\n  0x40\n    /* \"#utility.yul\":6933:6942   */\n  dup4\n    /* \"#utility.yul\":6929:6947   */\n  add\n    /* \"#utility.yul\":6920:6926   */\n  dup5\n    /* \"#utility.yul\":6876:6948   */\n  tag_66\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6513:6955   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6961:7183   */\ntag_41:\n    /* \"#utility.yul\":7054:7058   */\n  0x00\n    /* \"#utility.yul\":7092:7094   */\n  0x20\n    /* \"#utility.yul\":7081:7090   */\n  dup3\n    /* \"#utility.yul\":7077:7095   */\n  add\n    /* \"#utility.yul\":7069:7095   */\n  swap1\n  pop\n    /* \"#utility.yul\":7105:7176   */\n  tag_150\n    /* \"#utility.yul\":7173:7174   */\n  0x00\n    /* \"#utility.yul\":7162:7171   */\n  dup4\n    /* \"#utility.yul\":7158:7175   */\n  add\n    /* \"#utility.yul\":7149:7155   */\n  dup5\n    /* \"#utility.yul\":7105:7176   */\n  tag_66\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6961:7183   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/bettoken.sol\":290:5167  contract Bettoken is ERC20, Ownable, ReentrancyGuard {... */\ntag_23:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/bettoken.sol\":290:5167  contract Bettoken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xb0e68630\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xc040e6b8\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xc552e04b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xe6bd92b9\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0xb0e68630\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb68ed11f\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xba20cf4c\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xbda95633\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x902d55a5\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x920168b3\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8f7713ff\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x2b1cbc38\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x3610724e\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x3610724e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x40f02ab6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x54dd1da4\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x55dd574c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5fb3b944\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x2b1cbc38\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x32c85ac0\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x338dbf59\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x18160ddd\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x192399d1\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x24600fc3\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0fe83bb8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1514617e\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/bettoken.sol\":5115:5158  revert(\"Direct ETH transfers not allowed.\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/bettoken.sol\":290:5167  contract Bettoken is ERC20, Ownable, ReentrancyGuard {... */\n    tag_2:\n        /* \"contracts/bettoken.sol\":5022:5065  revert(\"Direct ETH transfers not allowed.\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_47\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1007:1060  uint256 public preSaleTokens = 161_164_236 * 10 ** 18 */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1534:1578  uint256 public vestingDuration = 6 * 30 days */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1420:1469  mapping(address => uint256) public vestingBalance */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":4856:4978  function withdrawFunds() external onlyOwner nonReentrant {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contracts/bettoken.sol\":1475:1528  mapping(address => uint256) public vestingReleaseTime */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":4625:4850  function haltSales() external onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/bettoken.sol\":1925:2106  function startPrivateSale() external onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      stop\n        /* \"contracts/bettoken.sol\":2388:3677  function buyTokens(uint256 usdAmount) external payable nonReentrant {... */\n    tag_15:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n    tag_107:\n      stop\n        /* \"contracts/bettoken.sol\":1606:1645  uint256 public stakeDuration = 365 days */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":4263:4619  function releaseVestedTokens() external nonReentrant {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      stop\n        /* \"contracts/bettoken.sol\":2112:2382  function startPreSale() external onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      stop\n        /* \"contracts/bettoken.sol\":851:891  uint256 public privateSaleSoldTokens = 0 */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1167:1214  uint256 public preSaleEndPrice = 0.1 * 10 ** 18 */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":384:445  uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18 */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1086:1138  uint256 public preSaleStartPrice = 0.0505 * 10 ** 18 */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      tag_151\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":685:740  uint256 public privateSaleStartPrice = 0.001 * 10 ** 18 */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_160\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1240:1276  uint256 public preSaleSoldTokens = 0 */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      tag_166\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":519:574  uint256 public privateSaleTarget = 1_000_000 * 10 ** 18 */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_168\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      tag_170\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":768:822  uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18 */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      tag_174\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1348:1387  SaleStage public stage = SaleStage.NONE */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":604:660  uint256 public privateSaleTokens = 38_835_764 * 10 ** 18 */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      pop\n      tag_181\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      tag_185\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      tag_188\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":924:976  uint256 public preSaleTarget = 19_000_000 * 10 ** 18 */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      pop\n      tag_191\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      tag_193\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n      pop\n      tag_195\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_196:\n      tag_197\n      jump\t// in\n    tag_195:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_200\n      jump\t// in\n    tag_201:\n      dup1\n      iszero\n      tag_202\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_203\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_202)\n    tag_203:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_204:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_204\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_202:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1007:1060  uint256 public preSaleTokens = 161_164_236 * 10 ** 18 */\n    tag_65:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1534:1578  uint256 public vestingDuration = 6 * 30 days */\n    tag_70:\n      sload(0x14)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1420:1469  mapping(address => uint256) public vestingBalance */\n    tag_80:\n      mstore(0x20, 0x12)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":4856:4978  function withdrawFunds() external onlyOwner nonReentrant {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_221\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_222\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/bettoken.sol\":4931:4938  owner() */\n      tag_224\n        /* \"contracts/bettoken.sol\":4931:4936  owner */\n      tag_135\n        /* \"contracts/bettoken.sol\":4931:4938  owner() */\n      jump\t// in\n    tag_224:\n        /* \"contracts/bettoken.sol\":4923:4948  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/bettoken.sol\":4923:4971  payable(owner()).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/bettoken.sol\":4949:4970  address(this).balance */\n      selfbalance\n        /* \"contracts/bettoken.sol\":4923:4971  payable(owner()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_226:\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_227\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_228\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_227:\n        /* \"contracts/bettoken.sol\":4856:4978  function withdrawFunds() external onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1475:1528  mapping(address => uint256) public vestingReleaseTime */\n    tag_94:\n      mstore(0x20, 0x13)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bettoken.sol\":4625:4850  function haltSales() external onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_231\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/bettoken.sol\":4708:4725  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":4683:4704  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":4683:4725  privateSaleSoldTokens == privateSaleTokens */\n      eq\n        /* \"contracts/bettoken.sol\":4683:4763  privateSaleSoldTokens == privateSaleTokens || preSaleSoldTokens == preSaleTokens */\n      dup1\n      tag_233\n      jumpi\n      pop\n        /* \"contracts/bettoken.sol\":4750:4763  preSaleTokens */\n      sload(0x0d)\n        /* \"contracts/bettoken.sol\":4729:4746  preSaleSoldTokens */\n      sload(0x10)\n        /* \"contracts/bettoken.sol\":4729:4763  preSaleSoldTokens == preSaleTokens */\n      eq\n        /* \"contracts/bettoken.sol\":4683:4763  privateSaleSoldTokens == privateSaleTokens || preSaleSoldTokens == preSaleTokens */\n    tag_233:\n        /* \"contracts/bettoken.sol\":4675:4811  require(privateSaleSoldTokens == privateSaleTokens || preSaleSoldTokens == preSaleTokens, ... */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"contracts/bettoken.sol\":4829:4843  SaleStage.NONE */\n      0x00\n        /* \"contracts/bettoken.sol\":4821:4826  stage */\n      0x11\n      0x00\n        /* \"contracts/bettoken.sol\":4821:4843  stage = SaleStage.NONE */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_237\n      jumpi\n      tag_238\n      tag_239\n      jump\t// in\n    tag_238:\n    tag_237:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":4625:4850  function haltSales() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1925:2106  function startPrivateSale() external onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_241\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_241:\n        /* \"contracts/bettoken.sol\":1999:2013  SaleStage.NONE */\n      0x00\n        /* \"contracts/bettoken.sol\":1990:2013  stage == SaleStage.NONE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_243\n      jumpi\n      tag_244\n      tag_239\n      jump\t// in\n    tag_244:\n    tag_243:\n        /* \"contracts/bettoken.sol\":1990:1995  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":1990:2013  stage == SaleStage.NONE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_245\n      jumpi\n      tag_246\n      tag_239\n      jump\t// in\n    tag_246:\n    tag_245:\n      eq\n        /* \"contracts/bettoken.sol\":1982:2064  require(stage == SaleStage.NONE, \"Private Sale has already started or concluded.\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"contracts/bettoken.sol\":2082:2099  SaleStage.PRIVATE */\n      0x01\n        /* \"contracts/bettoken.sol\":2074:2079  stage */\n      0x11\n      0x00\n        /* \"contracts/bettoken.sol\":2074:2099  stage = SaleStage.PRIVATE */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_250\n      jumpi\n      tag_251\n      tag_239\n      jump\t// in\n    tag_251:\n    tag_250:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":1925:2106  function startPrivateSale() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":2388:3677  function buyTokens(uint256 usdAmount) external payable nonReentrant {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_253\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_222\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_253:\n        /* \"contracts/bettoken.sol\":2483:2497  SaleStage.NONE */\n      0x00\n        /* \"contracts/bettoken.sol\":2474:2497  stage != SaleStage.NONE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_255\n      jumpi\n      tag_256\n      tag_239\n      jump\t// in\n    tag_256:\n    tag_255:\n        /* \"contracts/bettoken.sol\":2474:2479  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":2474:2497  stage != SaleStage.NONE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_257\n      jumpi\n      tag_258\n      tag_239\n      jump\t// in\n    tag_258:\n    tag_257:\n      sub\n        /* \"contracts/bettoken.sol\":2466:2520  require(stage != SaleStage.NONE, \"No sale is active.\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"contracts/bettoken.sol\":2531:2550  uint256 tokensToBuy */\n      0x00\n        /* \"contracts/bettoken.sol\":2573:2590  SaleStage.PRIVATE */\n      0x01\n        /* \"contracts/bettoken.sol\":2564:2590  stage == SaleStage.PRIVATE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_262\n      jumpi\n      tag_263\n      tag_239\n      jump\t// in\n    tag_263:\n    tag_262:\n        /* \"contracts/bettoken.sol\":2564:2569  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":2564:2590  stage == SaleStage.PRIVATE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_264\n      jumpi\n      tag_265\n      tag_239\n      jump\t// in\n    tag_265:\n    tag_264:\n      sub\n        /* \"contracts/bettoken.sol\":2560:3671  if (stage == SaleStage.PRIVATE) {... */\n      tag_266\n      jumpi\n        /* \"contracts/bettoken.sol\":2638:2655  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":2614:2635  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":2614:2655  privateSaleSoldTokens < privateSaleTokens */\n      lt\n        /* \"contracts/bettoken.sol\":2606:2682  require(privateSaleSoldTokens < privateSaleTokens, \"Private Sale sold out.\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_267:\n        /* \"contracts/bettoken.sol\":2710:2747  calculatePrivateSaleTokens(usdAmount) */\n      tag_270\n        /* \"contracts/bettoken.sol\":2737:2746  usdAmount */\n      dup3\n        /* \"contracts/bettoken.sol\":2710:2736  calculatePrivateSaleTokens */\n      tag_271\n        /* \"contracts/bettoken.sol\":2710:2747  calculatePrivateSaleTokens(usdAmount) */\n      jump\t// in\n    tag_270:\n        /* \"contracts/bettoken.sol\":2696:2747  tokensToBuy = calculatePrivateSaleTokens(usdAmount) */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":2786:2797  tokensToBuy */\n      dup1\n        /* \"contracts/bettoken.sol\":2761:2782  privateSaleSoldTokens */\n      0x0b\n      0x00\n        /* \"contracts/bettoken.sol\":2761:2797  privateSaleSoldTokens += tokensToBuy */\n      dup3\n      dup3\n      sload\n      tag_272\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":2844:2861  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":2819:2840  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":2819:2861  privateSaleSoldTokens <= privateSaleTokens */\n      gt\n      iszero\n        /* \"contracts/bettoken.sol\":2811:2899  require(privateSaleSoldTokens <= privateSaleTokens, \"Exceeds Private Sale token limit.\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"contracts/bettoken.sol\":2943:2954  tokensToBuy */\n      dup1\n        /* \"contracts/bettoken.sol\":2913:2927  vestingBalance */\n      0x12\n        /* \"contracts/bettoken.sol\":2913:2939  vestingBalance[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":2928:2938  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":2913:2939  vestingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/bettoken.sol\":2913:2954  vestingBalance[msg.sender] += tokensToBuy */\n      dup3\n      dup3\n      sload\n      tag_277\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_277:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":3035:3050  vestingDuration */\n      sload(0x14)\n        /* \"contracts/bettoken.sol\":3019:3032  stakeDuration */\n      sload(0x15)\n        /* \"contracts/bettoken.sol\":3001:3016  block.timestamp */\n      timestamp\n        /* \"contracts/bettoken.sol\":3001:3032  block.timestamp + stakeDuration */\n      tag_278\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_278:\n        /* \"contracts/bettoken.sol\":3001:3050  block.timestamp + stakeDuration + vestingDuration */\n      tag_279\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_279:\n        /* \"contracts/bettoken.sol\":2968:2986  vestingReleaseTime */\n      0x13\n        /* \"contracts/bettoken.sol\":2968:2998  vestingReleaseTime[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":2987:2997  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":2968:2998  vestingReleaseTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bettoken.sol\":2968:3050  vestingReleaseTime[msg.sender] = block.timestamp + stakeDuration + vestingDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":3081:3091  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":3069:3105  PrivateSale(msg.sender, tokensToBuy) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8fa81bb0702332ea2a0aee44bb9e4d359cf4a2c5a820dd59d9129369bdbca73f\n        /* \"contracts/bettoken.sol\":3093:3104  tokensToBuy */\n      dup3\n        /* \"contracts/bettoken.sol\":3069:3105  PrivateSale(msg.sender, tokensToBuy) */\n      mload(0x40)\n      tag_280\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/bettoken.sol\":2560:3671  if (stage == SaleStage.PRIVATE) {... */\n      jump(tag_281)\n    tag_266:\n        /* \"contracts/bettoken.sol\":3135:3152  SaleStage.PRESALE */\n      0x02\n        /* \"contracts/bettoken.sol\":3126:3152  stage == SaleStage.PRESALE */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_282\n      jumpi\n      tag_283\n      tag_239\n      jump\t// in\n    tag_283:\n    tag_282:\n        /* \"contracts/bettoken.sol\":3126:3131  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":3126:3152  stage == SaleStage.PRESALE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_284\n      jumpi\n      tag_285\n      tag_239\n      jump\t// in\n    tag_285:\n    tag_284:\n      sub\n        /* \"contracts/bettoken.sol\":3122:3671  if (stage == SaleStage.PRESALE) {... */\n      tag_286\n      jumpi\n        /* \"contracts/bettoken.sol\":3196:3209  preSaleTokens */\n      sload(0x0d)\n        /* \"contracts/bettoken.sol\":3176:3193  preSaleSoldTokens */\n      sload(0x10)\n        /* \"contracts/bettoken.sol\":3176:3209  preSaleSoldTokens < preSaleTokens */\n      lt\n        /* \"contracts/bettoken.sol\":3168:3232  require(preSaleSoldTokens < preSaleTokens, \"Pre-Sale sold out.\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_287:\n        /* \"contracts/bettoken.sol\":3267:3281  100 * 10 ** 18 */\n      0x056bc75e2d63100000\n        /* \"contracts/bettoken.sol\":3254:3263  usdAmount */\n      dup3\n        /* \"contracts/bettoken.sol\":3254:3281  usdAmount >= 100 * 10 ** 18 */\n      lt\n      iszero\n        /* \"contracts/bettoken.sol\":3254:3314  usdAmount >= 100 * 10 ** 18 && usdAmount <= 3_000 * 10 ** 18 */\n      dup1\n      iszero\n      tag_290\n      jumpi\n      pop\n        /* \"contracts/bettoken.sol\":3298:3314  3_000 * 10 ** 18 */\n      0xa2a15d09519be00000\n        /* \"contracts/bettoken.sol\":3285:3294  usdAmount */\n      dup3\n        /* \"contracts/bettoken.sol\":3285:3314  usdAmount <= 3_000 * 10 ** 18 */\n      gt\n      iszero\n        /* \"contracts/bettoken.sol\":3254:3314  usdAmount >= 100 * 10 ** 18 && usdAmount <= 3_000 * 10 ** 18 */\n    tag_290:\n        /* \"contracts/bettoken.sol\":3246:3349  require(usdAmount >= 100 * 10 ** 18 && usdAmount <= 3_000 * 10 ** 18, \"Purchase amount out of limits.\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap1\n      tag_293\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_291:\n        /* \"contracts/bettoken.sol\":3377:3410  calculatePreSaleTokens(usdAmount) */\n      tag_294\n        /* \"contracts/bettoken.sol\":3400:3409  usdAmount */\n      dup3\n        /* \"contracts/bettoken.sol\":3377:3399  calculatePreSaleTokens */\n      tag_295\n        /* \"contracts/bettoken.sol\":3377:3410  calculatePreSaleTokens(usdAmount) */\n      jump\t// in\n    tag_294:\n        /* \"contracts/bettoken.sol\":3363:3410  tokensToBuy = calculatePreSaleTokens(usdAmount) */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":3445:3456  tokensToBuy */\n      dup1\n        /* \"contracts/bettoken.sol\":3424:3441  preSaleSoldTokens */\n      0x10\n      0x00\n        /* \"contracts/bettoken.sol\":3424:3456  preSaleSoldTokens += tokensToBuy */\n      dup3\n      dup3\n      sload\n      tag_296\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_296:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":3499:3512  preSaleTokens */\n      sload(0x0d)\n        /* \"contracts/bettoken.sol\":3478:3495  preSaleSoldTokens */\n      sload(0x10)\n        /* \"contracts/bettoken.sol\":3478:3512  preSaleSoldTokens <= preSaleTokens */\n      gt\n      iszero\n        /* \"contracts/bettoken.sol\":3470:3546  require(preSaleSoldTokens <= preSaleTokens, \"Exceeds Pre-Sale token limit.\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_297:\n        /* \"contracts/bettoken.sol\":3560:3609  _transfer(address(this), msg.sender, tokensToBuy) */\n      tag_300\n        /* \"contracts/bettoken.sol\":3578:3582  this */\n      address\n        /* \"contracts/bettoken.sol\":3585:3595  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":3597:3608  tokensToBuy */\n      dup4\n        /* \"contracts/bettoken.sol\":3560:3569  _transfer */\n      tag_216\n        /* \"contracts/bettoken.sol\":3560:3609  _transfer(address(this), msg.sender, tokensToBuy) */\n      jump\t// in\n    tag_300:\n        /* \"contracts/bettoken.sol\":3636:3646  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":3628:3660  PreSale(msg.sender, tokensToBuy) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x550498dc565cc74203b9d14cba907c9f60ceefe26e82b37df98f6cb98529cf19\n        /* \"contracts/bettoken.sol\":3648:3659  tokensToBuy */\n      dup3\n        /* \"contracts/bettoken.sol\":3628:3660  PreSale(msg.sender, tokensToBuy) */\n      mload(0x40)\n      tag_301\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/bettoken.sol\":3122:3671  if (stage == SaleStage.PRESALE) {... */\n    tag_286:\n        /* \"contracts/bettoken.sol\":2560:3671  if (stage == SaleStage.PRIVATE) {... */\n    tag_281:\n        /* \"contracts/bettoken.sol\":2456:3677  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_302\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_228\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_302:\n        /* \"contracts/bettoken.sol\":2388:3677  function buyTokens(uint256 usdAmount) external payable nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1606:1645  uint256 public stakeDuration = 365 days */\n    tag_113:\n      sload(0x15)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":4263:4619  function releaseVestedTokens() external nonReentrant {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_304\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_222\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_304:\n        /* \"contracts/bettoken.sol\":4353:4371  vestingReleaseTime */\n      0x13\n        /* \"contracts/bettoken.sol\":4353:4383  vestingReleaseTime[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":4372:4382  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":4353:4383  vestingReleaseTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/bettoken.sol\":4334:4349  block.timestamp */\n      timestamp\n        /* \"contracts/bettoken.sol\":4334:4383  block.timestamp >= vestingReleaseTime[msg.sender] */\n      lt\n      iszero\n        /* \"contracts/bettoken.sol\":4326:4421  require(block.timestamp >= vestingReleaseTime[msg.sender], \"Vesting period not yet completed.\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_307\n      swap1\n      tag_308\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_306:\n        /* \"contracts/bettoken.sol\":4431:4445  uint256 amount */\n      0x00\n        /* \"contracts/bettoken.sol\":4448:4462  vestingBalance */\n      0x12\n        /* \"contracts/bettoken.sol\":4448:4474  vestingBalance[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":4463:4473  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":4448:4474  vestingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/bettoken.sol\":4431:4474  uint256 amount = vestingBalance[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":4513:4514  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":4484:4498  vestingBalance */\n      0x12\n        /* \"contracts/bettoken.sol\":4484:4510  vestingBalance[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":4499:4509  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":4484:4510  vestingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bettoken.sol\":4484:4514  vestingBalance[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":4557:4558  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":4524:4542  vestingReleaseTime */\n      0x13\n        /* \"contracts/bettoken.sol\":4524:4554  vestingReleaseTime[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":4543:4553  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":4524:4554  vestingReleaseTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bettoken.sol\":4524:4558  vestingReleaseTime[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":4568:4612  _transfer(address(this), msg.sender, amount) */\n      tag_309\n        /* \"contracts/bettoken.sol\":4586:4590  this */\n      address\n        /* \"contracts/bettoken.sol\":4593:4603  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":4605:4611  amount */\n      dup4\n        /* \"contracts/bettoken.sol\":4568:4577  _transfer */\n      tag_216\n        /* \"contracts/bettoken.sol\":4568:4612  _transfer(address(this), msg.sender, amount) */\n      jump\t// in\n    tag_309:\n        /* \"contracts/bettoken.sol\":4316:4619  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_310\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_228\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_310:\n        /* \"contracts/bettoken.sol\":4263:4619  function releaseVestedTokens() external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":2112:2382  function startPreSale() external onlyOwner {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_312\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_312:\n        /* \"contracts/bettoken.sol\":2182:2199  SaleStage.PRIVATE */\n      0x01\n        /* \"contracts/bettoken.sol\":2173:2199  stage == SaleStage.PRIVATE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_314\n      jumpi\n      tag_315\n      tag_239\n      jump\t// in\n    tag_315:\n    tag_314:\n        /* \"contracts/bettoken.sol\":2173:2178  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":2173:2199  stage == SaleStage.PRIVATE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_316\n      jumpi\n      tag_317\n      tag_239\n      jump\t// in\n    tag_317:\n    tag_316:\n      eq\n        /* \"contracts/bettoken.sol\":2165:2243  require(stage == SaleStage.PRIVATE, \"Private Sale should be concluded first.\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_318:\n        /* \"contracts/bettoken.sol\":2286:2303  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":2261:2282  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":2261:2303  privateSaleSoldTokens == privateSaleTokens */\n      eq\n        /* \"contracts/bettoken.sol\":2253:2340  require(privateSaleSoldTokens == privateSaleTokens, \"Private Sale target not reached.\") */\n      tag_321\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_322\n      swap1\n      tag_323\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_321:\n        /* \"contracts/bettoken.sol\":2358:2375  SaleStage.PRESALE */\n      0x02\n        /* \"contracts/bettoken.sol\":2350:2355  stage */\n      0x11\n      0x00\n        /* \"contracts/bettoken.sol\":2350:2375  stage = SaleStage.PRESALE */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_324\n      jumpi\n      tag_325\n      tag_239\n      jump\t// in\n    tag_325:\n    tag_324:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":2112:2382  function startPreSale() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":851:891  uint256 public privateSaleSoldTokens = 0 */\n    tag_123:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_328\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_330\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_331\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1167:1214  uint256 public preSaleEndPrice = 0.1 * 10 ** 18 */\n    tag_140:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":384:445  uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18 */\n    tag_144:\n        /* \"contracts/bettoken.sol\":423:445  200_000_000 * 10 ** 18 */\n      0xa56fa5b99019a5c8000000\n        /* \"contracts/bettoken.sol\":384:445  uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1086:1138  uint256 public preSaleStartPrice = 0.0505 * 10 ** 18 */\n    tag_148:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_334\n      swap1\n      tag_200\n      jump\t// in\n    tag_334:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_335\n      swap1\n      tag_200\n      jump\t// in\n    tag_335:\n      dup1\n      iszero\n      tag_336\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_337\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_336)\n    tag_337:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_338:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_338\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_336:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":685:740  uint256 public privateSaleStartPrice = 0.001 * 10 ** 18 */\n    tag_161:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1240:1276  uint256 public preSaleSoldTokens = 0 */\n    tag_165:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":519:574  uint256 public privateSaleTarget = 1_000_000 * 10 ** 18 */\n    tag_169:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":768:822  uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18 */\n    tag_173:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1348:1387  SaleStage public stage = SaleStage.NONE */\n    tag_177:\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":604:660  uint256 public privateSaleTokens = 38_835_764 * 10 ** 18 */\n    tag_182:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":924:976  uint256 public preSaleTarget = 19_000_000 * 10 ** 18 */\n    tag_192:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_344\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_348\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_331\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_351\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_352\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_354\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_357\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_357:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_359\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_352\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_361\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_362\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_362:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_361:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_363\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_364\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_364:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_365\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_366\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_368\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_369\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_371\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_371:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_372\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_374\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_375\n      swap1\n      tag_376\n      jump\t// in\n    tag_375:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_374:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":3683:3979  function calculatePrivateSaleTokens(uint256 usdAmount) internal view returns (uint256) {... */\n    tag_271:\n        /* \"contracts/bettoken.sol\":3761:3768  uint256 */\n      0x00\n        /* \"contracts/bettoken.sol\":3780:3800  uint256 currentPrice */\n      dup1\n        /* \"contracts/bettoken.sol\":3913:3930  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":3889:3910  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":3864:3885  privateSaleStartPrice */\n      sload(0x09)\n        /* \"contracts/bettoken.sol\":3842:3861  privateSaleEndPrice */\n      sload(0x0a)\n        /* \"contracts/bettoken.sol\":3842:3885  privateSaleEndPrice - privateSaleStartPrice */\n      tag_379\n      swap2\n      swap1\n      tag_380\n      jump\t// in\n    tag_379:\n        /* \"contracts/bettoken.sol\":3841:3910  (privateSaleEndPrice - privateSaleStartPrice) * privateSaleSoldTokens */\n      tag_381\n      swap2\n      swap1\n      tag_382\n      jump\t// in\n    tag_381:\n        /* \"contracts/bettoken.sol\":3841:3930  (privateSaleEndPrice - privateSaleStartPrice) * privateSaleSoldTokens / privateSaleTokens */\n      tag_383\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_383:\n        /* \"contracts/bettoken.sol\":3803:3824  privateSaleStartPrice */\n      sload(0x09)\n        /* \"contracts/bettoken.sol\":3803:3931  privateSaleStartPrice + ... */\n      tag_385\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_385:\n        /* \"contracts/bettoken.sol\":3780:3931  uint256 currentPrice = privateSaleStartPrice + ... */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":3960:3972  currentPrice */\n      dup1\n        /* \"contracts/bettoken.sol\":3948:3957  usdAmount */\n      dup4\n        /* \"contracts/bettoken.sol\":3948:3972  usdAmount / currentPrice */\n      tag_386\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_386:\n        /* \"contracts/bettoken.sol\":3941:3972  return usdAmount / currentPrice */\n      swap2\n      pop\n      pop\n        /* \"contracts/bettoken.sol\":3683:3979  function calculatePrivateSaleTokens(uint256 usdAmount) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":3985:4257  function calculatePreSaleTokens(uint256 usdAmount) internal view returns (uint256) {... */\n    tag_295:\n        /* \"contracts/bettoken.sol\":4059:4066  uint256 */\n      0x00\n        /* \"contracts/bettoken.sol\":4078:4098  uint256 currentPrice */\n      dup1\n        /* \"contracts/bettoken.sol\":4195:4208  preSaleTokens */\n      sload(0x0d)\n        /* \"contracts/bettoken.sol\":4175:4192  preSaleSoldTokens */\n      sload(0x10)\n        /* \"contracts/bettoken.sol\":4154:4171  preSaleStartPrice */\n      sload(0x0e)\n        /* \"contracts/bettoken.sol\":4136:4151  preSaleEndPrice */\n      sload(0x0f)\n        /* \"contracts/bettoken.sol\":4136:4171  preSaleEndPrice - preSaleStartPrice */\n      tag_388\n      swap2\n      swap1\n      tag_380\n      jump\t// in\n    tag_388:\n        /* \"contracts/bettoken.sol\":4135:4192  (preSaleEndPrice - preSaleStartPrice) * preSaleSoldTokens */\n      tag_389\n      swap2\n      swap1\n      tag_382\n      jump\t// in\n    tag_389:\n        /* \"contracts/bettoken.sol\":4135:4208  (preSaleEndPrice - preSaleStartPrice) * preSaleSoldTokens / preSaleTokens */\n      tag_390\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_390:\n        /* \"contracts/bettoken.sol\":4101:4118  preSaleStartPrice */\n      sload(0x0e)\n        /* \"contracts/bettoken.sol\":4101:4209  preSaleStartPrice + ... */\n      tag_391\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_391:\n        /* \"contracts/bettoken.sol\":4078:4209  uint256 currentPrice = preSaleStartPrice + ... */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":4238:4250  currentPrice */\n      dup1\n        /* \"contracts/bettoken.sol\":4226:4235  usdAmount */\n      dup4\n        /* \"contracts/bettoken.sol\":4226:4250  usdAmount / currentPrice */\n      tag_392\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_392:\n        /* \"contracts/bettoken.sol\":4219:4250  return usdAmount / currentPrice */\n      swap2\n      pop\n      pop\n        /* \"contracts/bettoken.sol\":3985:4257  function calculatePreSaleTokens(uint256 usdAmount) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_395\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_396\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_397\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_398\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_398:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_397:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_399\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_400\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_400:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_399:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_402\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_403\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_403:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_404)\n    tag_402:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_405\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_406\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_406:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_405:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_404:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_407\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_408)\n    tag_407:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_409\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_409:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_410:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:402   */\n    tag_411:\n        /* \"#utility.yul\":322:356   */\n      0x44697265637420455448207472616e7366657273206e6f7420616c6c6f776564\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:357   */\n      mstore\n        /* \"#utility.yul\":391:394   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":386:388   */\n      0x20\n        /* \"#utility.yul\":378:384   */\n      dup3\n        /* \"#utility.yul\":374:389   */\n      add\n        /* \"#utility.yul\":367:395   */\n      mstore\n        /* \"#utility.yul\":182:402   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":408:774   */\n    tag_412:\n        /* \"#utility.yul\":550:553   */\n      0x00\n        /* \"#utility.yul\":571:638   */\n      tag_468\n        /* \"#utility.yul\":635:637   */\n      0x21\n        /* \"#utility.yul\":630:633   */\n      dup4\n        /* \"#utility.yul\":571:638   */\n      tag_410\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":564:638   */\n      swap2\n      pop\n        /* \"#utility.yul\":647:740   */\n      tag_469\n        /* \"#utility.yul\":736:739   */\n      dup3\n        /* \"#utility.yul\":647:740   */\n      tag_411\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":765:767   */\n      0x40\n        /* \"#utility.yul\":760:763   */\n      dup3\n        /* \"#utility.yul\":756:768   */\n      add\n        /* \"#utility.yul\":749:768   */\n      swap1\n      pop\n        /* \"#utility.yul\":408:774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":780:1199   */\n    tag_47:\n        /* \"#utility.yul\":946:950   */\n      0x00\n        /* \"#utility.yul\":984:986   */\n      0x20\n        /* \"#utility.yul\":973:982   */\n      dup3\n        /* \"#utility.yul\":969:987   */\n      add\n        /* \"#utility.yul\":961:987   */\n      swap1\n      pop\n        /* \"#utility.yul\":1033:1042   */\n      dup2\n        /* \"#utility.yul\":1027:1031   */\n      dup2\n        /* \"#utility.yul\":1023:1043   */\n      sub\n        /* \"#utility.yul\":1019:1020   */\n      0x00\n        /* \"#utility.yul\":1008:1017   */\n      dup4\n        /* \"#utility.yul\":1004:1021   */\n      add\n        /* \"#utility.yul\":997:1044   */\n      mstore\n        /* \"#utility.yul\":1061:1192   */\n      tag_471\n        /* \"#utility.yul\":1187:1191   */\n      dup2\n        /* \"#utility.yul\":1061:1192   */\n      tag_412\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":1053:1192   */\n      swap1\n      pop\n        /* \"#utility.yul\":780:1199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1205:1304   */\n    tag_413:\n        /* \"#utility.yul\":1257:1263   */\n      0x00\n        /* \"#utility.yul\":1291:1296   */\n      dup2\n        /* \"#utility.yul\":1285:1297   */\n      mload\n        /* \"#utility.yul\":1275:1297   */\n      swap1\n      pop\n        /* \"#utility.yul\":1205:1304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1310:1449   */\n    tag_414:\n        /* \"#utility.yul\":1399:1405   */\n      dup3\n        /* \"#utility.yul\":1394:1397   */\n      dup2\n        /* \"#utility.yul\":1389:1392   */\n      dup4\n        /* \"#utility.yul\":1383:1406   */\n      mcopy\n        /* \"#utility.yul\":1440:1441   */\n      0x00\n        /* \"#utility.yul\":1431:1437   */\n      dup4\n        /* \"#utility.yul\":1426:1429   */\n      dup4\n        /* \"#utility.yul\":1422:1438   */\n      add\n        /* \"#utility.yul\":1415:1442   */\n      mstore\n        /* \"#utility.yul\":1310:1449   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1455:1557   */\n    tag_415:\n        /* \"#utility.yul\":1496:1502   */\n      0x00\n        /* \"#utility.yul\":1547:1549   */\n      0x1f\n        /* \"#utility.yul\":1543:1550   */\n      not\n        /* \"#utility.yul\":1538:1540   */\n      0x1f\n        /* \"#utility.yul\":1531:1536   */\n      dup4\n        /* \"#utility.yul\":1527:1541   */\n      add\n        /* \"#utility.yul\":1523:1551   */\n      and\n        /* \"#utility.yul\":1513:1551   */\n      swap1\n      pop\n        /* \"#utility.yul\":1455:1557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1563:1940   */\n    tag_416:\n        /* \"#utility.yul\":1651:1654   */\n      0x00\n        /* \"#utility.yul\":1679:1718   */\n      tag_476\n        /* \"#utility.yul\":1712:1717   */\n      dup3\n        /* \"#utility.yul\":1679:1718   */\n      tag_413\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":1734:1805   */\n      tag_477\n        /* \"#utility.yul\":1798:1804   */\n      dup2\n        /* \"#utility.yul\":1793:1796   */\n      dup6\n        /* \"#utility.yul\":1734:1805   */\n      tag_410\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":1727:1805   */\n      swap4\n      pop\n        /* \"#utility.yul\":1814:1879   */\n      tag_478\n        /* \"#utility.yul\":1872:1878   */\n      dup2\n        /* \"#utility.yul\":1867:1870   */\n      dup6\n        /* \"#utility.yul\":1860:1864   */\n      0x20\n        /* \"#utility.yul\":1853:1858   */\n      dup7\n        /* \"#utility.yul\":1849:1865   */\n      add\n        /* \"#utility.yul\":1814:1879   */\n      tag_414\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":1904:1933   */\n      tag_479\n        /* \"#utility.yul\":1926:1932   */\n      dup2\n        /* \"#utility.yul\":1904:1933   */\n      tag_415\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":1899:1902   */\n      dup5\n        /* \"#utility.yul\":1895:1934   */\n      add\n        /* \"#utility.yul\":1888:1934   */\n      swap2\n      pop\n        /* \"#utility.yul\":1655:1940   */\n      pop\n        /* \"#utility.yul\":1563:1940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1946:2259   */\n    tag_55:\n        /* \"#utility.yul\":2059:2063   */\n      0x00\n        /* \"#utility.yul\":2097:2099   */\n      0x20\n        /* \"#utility.yul\":2086:2095   */\n      dup3\n        /* \"#utility.yul\":2082:2100   */\n      add\n        /* \"#utility.yul\":2074:2100   */\n      swap1\n      pop\n        /* \"#utility.yul\":2146:2155   */\n      dup2\n        /* \"#utility.yul\":2140:2144   */\n      dup2\n        /* \"#utility.yul\":2136:2156   */\n      sub\n        /* \"#utility.yul\":2132:2133   */\n      0x00\n        /* \"#utility.yul\":2121:2130   */\n      dup4\n        /* \"#utility.yul\":2117:2134   */\n      add\n        /* \"#utility.yul\":2110:2157   */\n      mstore\n        /* \"#utility.yul\":2174:2252   */\n      tag_481\n        /* \"#utility.yul\":2247:2251   */\n      dup2\n        /* \"#utility.yul\":2238:2244   */\n      dup5\n        /* \"#utility.yul\":2174:2252   */\n      tag_416\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":2166:2252   */\n      swap1\n      pop\n        /* \"#utility.yul\":1946:2259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2346:2463   */\n    tag_418:\n        /* \"#utility.yul\":2455:2456   */\n      0x00\n        /* \"#utility.yul\":2452:2453   */\n      dup1\n        /* \"#utility.yul\":2445:2457   */\n      revert\n        /* \"#utility.yul\":2592:2718   */\n    tag_420:\n        /* \"#utility.yul\":2629:2636   */\n      0x00\n        /* \"#utility.yul\":2669:2711   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2662:2667   */\n      dup3\n        /* \"#utility.yul\":2658:2712   */\n      and\n        /* \"#utility.yul\":2647:2712   */\n      swap1\n      pop\n        /* \"#utility.yul\":2592:2718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2724:2820   */\n    tag_421:\n        /* \"#utility.yul\":2761:2768   */\n      0x00\n        /* \"#utility.yul\":2790:2814   */\n      tag_487\n        /* \"#utility.yul\":2808:2813   */\n      dup3\n        /* \"#utility.yul\":2790:2814   */\n      tag_420\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":2779:2814   */\n      swap1\n      pop\n        /* \"#utility.yul\":2724:2820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2826:2948   */\n    tag_422:\n        /* \"#utility.yul\":2899:2923   */\n      tag_489\n        /* \"#utility.yul\":2917:2922   */\n      dup2\n        /* \"#utility.yul\":2899:2923   */\n      tag_421\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":2892:2897   */\n      dup2\n        /* \"#utility.yul\":2889:2924   */\n      eq\n        /* \"#utility.yul\":2879:2942   */\n      tag_490\n      jumpi\n        /* \"#utility.yul\":2938:2939   */\n      0x00\n        /* \"#utility.yul\":2935:2936   */\n      dup1\n        /* \"#utility.yul\":2928:2940   */\n      revert\n        /* \"#utility.yul\":2879:2942   */\n    tag_490:\n        /* \"#utility.yul\":2826:2948   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2954:3093   */\n    tag_423:\n        /* \"#utility.yul\":3000:3005   */\n      0x00\n        /* \"#utility.yul\":3038:3044   */\n      dup2\n        /* \"#utility.yul\":3025:3045   */\n      calldataload\n        /* \"#utility.yul\":3016:3045   */\n      swap1\n      pop\n        /* \"#utility.yul\":3054:3087   */\n      tag_492\n        /* \"#utility.yul\":3081:3086   */\n      dup2\n        /* \"#utility.yul\":3054:3087   */\n      tag_422\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":2954:3093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3099:3176   */\n    tag_424:\n        /* \"#utility.yul\":3136:3143   */\n      0x00\n        /* \"#utility.yul\":3165:3170   */\n      dup2\n        /* \"#utility.yul\":3154:3170   */\n      swap1\n      pop\n        /* \"#utility.yul\":3099:3176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3182:3304   */\n    tag_425:\n        /* \"#utility.yul\":3255:3279   */\n      tag_495\n        /* \"#utility.yul\":3273:3278   */\n      dup2\n        /* \"#utility.yul\":3255:3279   */\n      tag_424\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":3248:3253   */\n      dup2\n        /* \"#utility.yul\":3245:3280   */\n      eq\n        /* \"#utility.yul\":3235:3298   */\n      tag_496\n      jumpi\n        /* \"#utility.yul\":3294:3295   */\n      0x00\n        /* \"#utility.yul\":3291:3292   */\n      dup1\n        /* \"#utility.yul\":3284:3296   */\n      revert\n        /* \"#utility.yul\":3235:3298   */\n    tag_496:\n        /* \"#utility.yul\":3182:3304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3310:3449   */\n    tag_426:\n        /* \"#utility.yul\":3356:3361   */\n      0x00\n        /* \"#utility.yul\":3394:3400   */\n      dup2\n        /* \"#utility.yul\":3381:3401   */\n      calldataload\n        /* \"#utility.yul\":3372:3401   */\n      swap1\n      pop\n        /* \"#utility.yul\":3410:3443   */\n      tag_498\n        /* \"#utility.yul\":3437:3442   */\n      dup2\n        /* \"#utility.yul\":3410:3443   */\n      tag_425\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":3310:3449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3455:3929   */\n    tag_59:\n        /* \"#utility.yul\":3523:3529   */\n      0x00\n        /* \"#utility.yul\":3531:3537   */\n      dup1\n        /* \"#utility.yul\":3580:3582   */\n      0x40\n        /* \"#utility.yul\":3568:3577   */\n      dup4\n        /* \"#utility.yul\":3559:3566   */\n      dup6\n        /* \"#utility.yul\":3555:3578   */\n      sub\n        /* \"#utility.yul\":3551:3583   */\n      slt\n        /* \"#utility.yul\":3548:3667   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":3586:3665   */\n      tag_501\n      tag_418\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":3548:3667   */\n    tag_500:\n        /* \"#utility.yul\":3706:3707   */\n      0x00\n        /* \"#utility.yul\":3731:3784   */\n      tag_502\n        /* \"#utility.yul\":3776:3783   */\n      dup6\n        /* \"#utility.yul\":3767:3773   */\n      dup3\n        /* \"#utility.yul\":3756:3765   */\n      dup7\n        /* \"#utility.yul\":3752:3774   */\n      add\n        /* \"#utility.yul\":3731:3784   */\n      tag_423\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":3721:3784   */\n      swap3\n      pop\n        /* \"#utility.yul\":3677:3794   */\n      pop\n        /* \"#utility.yul\":3833:3835   */\n      0x20\n        /* \"#utility.yul\":3859:3912   */\n      tag_503\n        /* \"#utility.yul\":3904:3911   */\n      dup6\n        /* \"#utility.yul\":3895:3901   */\n      dup3\n        /* \"#utility.yul\":3884:3893   */\n      dup7\n        /* \"#utility.yul\":3880:3902   */\n      add\n        /* \"#utility.yul\":3859:3912   */\n      tag_426\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":3849:3912   */\n      swap2\n      pop\n        /* \"#utility.yul\":3804:3922   */\n      pop\n        /* \"#utility.yul\":3455:3929   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3935:4025   */\n    tag_427:\n        /* \"#utility.yul\":3969:3976   */\n      0x00\n        /* \"#utility.yul\":4012:4017   */\n      dup2\n        /* \"#utility.yul\":4005:4018   */\n      iszero\n        /* \"#utility.yul\":3998:4019   */\n      iszero\n        /* \"#utility.yul\":3987:4019   */\n      swap1\n      pop\n        /* \"#utility.yul\":3935:4025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4031:4140   */\n    tag_428:\n        /* \"#utility.yul\":4112:4133   */\n      tag_506\n        /* \"#utility.yul\":4127:4132   */\n      dup2\n        /* \"#utility.yul\":4112:4133   */\n      tag_427\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":4107:4110   */\n      dup3\n        /* \"#utility.yul\":4100:4134   */\n      mstore\n        /* \"#utility.yul\":4031:4140   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4146:4356   */\n    tag_62:\n        /* \"#utility.yul\":4233:4237   */\n      0x00\n        /* \"#utility.yul\":4271:4273   */\n      0x20\n        /* \"#utility.yul\":4260:4269   */\n      dup3\n        /* \"#utility.yul\":4256:4274   */\n      add\n        /* \"#utility.yul\":4248:4274   */\n      swap1\n      pop\n        /* \"#utility.yul\":4284:4349   */\n      tag_508\n        /* \"#utility.yul\":4346:4347   */\n      0x00\n        /* \"#utility.yul\":4335:4344   */\n      dup4\n        /* \"#utility.yul\":4331:4348   */\n      add\n        /* \"#utility.yul\":4322:4328   */\n      dup5\n        /* \"#utility.yul\":4284:4349   */\n      tag_428\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":4146:4356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4362:4480   */\n    tag_429:\n        /* \"#utility.yul\":4449:4473   */\n      tag_510\n        /* \"#utility.yul\":4467:4472   */\n      dup2\n        /* \"#utility.yul\":4449:4473   */\n      tag_424\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":4444:4447   */\n      dup3\n        /* \"#utility.yul\":4437:4474   */\n      mstore\n        /* \"#utility.yul\":4362:4480   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4486:4708   */\n    tag_67:\n        /* \"#utility.yul\":4579:4583   */\n      0x00\n        /* \"#utility.yul\":4617:4619   */\n      0x20\n        /* \"#utility.yul\":4606:4615   */\n      dup3\n        /* \"#utility.yul\":4602:4620   */\n      add\n        /* \"#utility.yul\":4594:4620   */\n      swap1\n      pop\n        /* \"#utility.yul\":4630:4701   */\n      tag_512\n        /* \"#utility.yul\":4698:4699   */\n      0x00\n        /* \"#utility.yul\":4687:4696   */\n      dup4\n        /* \"#utility.yul\":4683:4700   */\n      add\n        /* \"#utility.yul\":4674:4680   */\n      dup5\n        /* \"#utility.yul\":4630:4701   */\n      tag_429\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":4486:4708   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4714:5043   */\n    tag_79:\n        /* \"#utility.yul\":4773:4779   */\n      0x00\n        /* \"#utility.yul\":4822:4824   */\n      0x20\n        /* \"#utility.yul\":4810:4819   */\n      dup3\n        /* \"#utility.yul\":4801:4808   */\n      dup5\n        /* \"#utility.yul\":4797:4820   */\n      sub\n        /* \"#utility.yul\":4793:4825   */\n      slt\n        /* \"#utility.yul\":4790:4909   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":4828:4907   */\n      tag_515\n      tag_418\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":4790:4909   */\n    tag_514:\n        /* \"#utility.yul\":4948:4949   */\n      0x00\n        /* \"#utility.yul\":4973:5026   */\n      tag_516\n        /* \"#utility.yul\":5018:5025   */\n      dup5\n        /* \"#utility.yul\":5009:5015   */\n      dup3\n        /* \"#utility.yul\":4998:5007   */\n      dup6\n        /* \"#utility.yul\":4994:5016   */\n      add\n        /* \"#utility.yul\":4973:5026   */\n      tag_423\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":4963:5026   */\n      swap2\n      pop\n        /* \"#utility.yul\":4919:5036   */\n      pop\n        /* \"#utility.yul\":4714:5043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5049:5668   */\n    tag_85:\n        /* \"#utility.yul\":5126:5132   */\n      0x00\n        /* \"#utility.yul\":5134:5140   */\n      dup1\n        /* \"#utility.yul\":5142:5148   */\n      0x00\n        /* \"#utility.yul\":5191:5193   */\n      0x60\n        /* \"#utility.yul\":5179:5188   */\n      dup5\n        /* \"#utility.yul\":5170:5177   */\n      dup7\n        /* \"#utility.yul\":5166:5189   */\n      sub\n        /* \"#utility.yul\":5162:5194   */\n      slt\n        /* \"#utility.yul\":5159:5278   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":5197:5276   */\n      tag_519\n      tag_418\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":5159:5278   */\n    tag_518:\n        /* \"#utility.yul\":5317:5318   */\n      0x00\n        /* \"#utility.yul\":5342:5395   */\n      tag_520\n        /* \"#utility.yul\":5387:5394   */\n      dup7\n        /* \"#utility.yul\":5378:5384   */\n      dup3\n        /* \"#utility.yul\":5367:5376   */\n      dup8\n        /* \"#utility.yul\":5363:5385   */\n      add\n        /* \"#utility.yul\":5342:5395   */\n      tag_423\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":5332:5395   */\n      swap4\n      pop\n        /* \"#utility.yul\":5288:5405   */\n      pop\n        /* \"#utility.yul\":5444:5446   */\n      0x20\n        /* \"#utility.yul\":5470:5523   */\n      tag_521\n        /* \"#utility.yul\":5515:5522   */\n      dup7\n        /* \"#utility.yul\":5506:5512   */\n      dup3\n        /* \"#utility.yul\":5495:5504   */\n      dup8\n        /* \"#utility.yul\":5491:5513   */\n      add\n        /* \"#utility.yul\":5470:5523   */\n      tag_423\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":5460:5523   */\n      swap3\n      pop\n        /* \"#utility.yul\":5415:5533   */\n      pop\n        /* \"#utility.yul\":5572:5574   */\n      0x40\n        /* \"#utility.yul\":5598:5651   */\n      tag_522\n        /* \"#utility.yul\":5643:5650   */\n      dup7\n        /* \"#utility.yul\":5634:5640   */\n      dup3\n        /* \"#utility.yul\":5623:5632   */\n      dup8\n        /* \"#utility.yul\":5619:5641   */\n      add\n        /* \"#utility.yul\":5598:5651   */\n      tag_426\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":5588:5651   */\n      swap2\n      pop\n        /* \"#utility.yul\":5543:5661   */\n      pop\n        /* \"#utility.yul\":5049:5668   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5674:5760   */\n    tag_430:\n        /* \"#utility.yul\":5709:5716   */\n      0x00\n        /* \"#utility.yul\":5749:5753   */\n      0xff\n        /* \"#utility.yul\":5742:5747   */\n      dup3\n        /* \"#utility.yul\":5738:5754   */\n      and\n        /* \"#utility.yul\":5727:5754   */\n      swap1\n      pop\n        /* \"#utility.yul\":5674:5760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5766:5878   */\n    tag_431:\n        /* \"#utility.yul\":5849:5871   */\n      tag_525\n        /* \"#utility.yul\":5865:5870   */\n      dup2\n        /* \"#utility.yul\":5849:5871   */\n      tag_430\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":5844:5847   */\n      dup3\n        /* \"#utility.yul\":5837:5872   */\n      mstore\n        /* \"#utility.yul\":5766:5878   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5884:6098   */\n    tag_100:\n        /* \"#utility.yul\":5973:5977   */\n      0x00\n        /* \"#utility.yul\":6011:6013   */\n      0x20\n        /* \"#utility.yul\":6000:6009   */\n      dup3\n        /* \"#utility.yul\":5996:6014   */\n      add\n        /* \"#utility.yul\":5988:6014   */\n      swap1\n      pop\n        /* \"#utility.yul\":6024:6091   */\n      tag_527\n        /* \"#utility.yul\":6088:6089   */\n      0x00\n        /* \"#utility.yul\":6077:6086   */\n      dup4\n        /* \"#utility.yul\":6073:6090   */\n      add\n        /* \"#utility.yul\":6064:6070   */\n      dup5\n        /* \"#utility.yul\":6024:6091   */\n      tag_431\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":5884:6098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6104:6433   */\n    tag_109:\n        /* \"#utility.yul\":6163:6169   */\n      0x00\n        /* \"#utility.yul\":6212:6214   */\n      0x20\n        /* \"#utility.yul\":6200:6209   */\n      dup3\n        /* \"#utility.yul\":6191:6198   */\n      dup5\n        /* \"#utility.yul\":6187:6210   */\n      sub\n        /* \"#utility.yul\":6183:6215   */\n      slt\n        /* \"#utility.yul\":6180:6299   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":6218:6297   */\n      tag_530\n      tag_418\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":6180:6299   */\n    tag_529:\n        /* \"#utility.yul\":6338:6339   */\n      0x00\n        /* \"#utility.yul\":6363:6416   */\n      tag_531\n        /* \"#utility.yul\":6408:6415   */\n      dup5\n        /* \"#utility.yul\":6399:6405   */\n      dup3\n        /* \"#utility.yul\":6388:6397   */\n      dup6\n        /* \"#utility.yul\":6384:6406   */\n      add\n        /* \"#utility.yul\":6363:6416   */\n      tag_426\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":6353:6416   */\n      swap2\n      pop\n        /* \"#utility.yul\":6309:6426   */\n      pop\n        /* \"#utility.yul\":6104:6433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6439:6557   */\n    tag_432:\n        /* \"#utility.yul\":6526:6550   */\n      tag_533\n        /* \"#utility.yul\":6544:6549   */\n      dup2\n        /* \"#utility.yul\":6526:6550   */\n      tag_421\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":6521:6524   */\n      dup3\n        /* \"#utility.yul\":6514:6551   */\n      mstore\n        /* \"#utility.yul\":6439:6557   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6563:6785   */\n    tag_137:\n        /* \"#utility.yul\":6656:6660   */\n      0x00\n        /* \"#utility.yul\":6694:6696   */\n      0x20\n        /* \"#utility.yul\":6683:6692   */\n      dup3\n        /* \"#utility.yul\":6679:6697   */\n      add\n        /* \"#utility.yul\":6671:6697   */\n      swap1\n      pop\n        /* \"#utility.yul\":6707:6778   */\n      tag_535\n        /* \"#utility.yul\":6775:6776   */\n      0x00\n        /* \"#utility.yul\":6764:6773   */\n      dup4\n        /* \"#utility.yul\":6760:6777   */\n      add\n        /* \"#utility.yul\":6751:6757   */\n      dup5\n        /* \"#utility.yul\":6707:6778   */\n      tag_432\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":6563:6785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6791:6971   */\n    tag_239:\n        /* \"#utility.yul\":6839:6916   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6836:6837   */\n      0x00\n        /* \"#utility.yul\":6829:6917   */\n      mstore\n        /* \"#utility.yul\":6936:6940   */\n      0x21\n        /* \"#utility.yul\":6933:6934   */\n      0x04\n        /* \"#utility.yul\":6926:6941   */\n      mstore\n        /* \"#utility.yul\":6960:6964   */\n      0x24\n        /* \"#utility.yul\":6957:6958   */\n      0x00\n        /* \"#utility.yul\":6950:6965   */\n      revert\n        /* \"#utility.yul\":6977:7096   */\n    tag_433:\n        /* \"#utility.yul\":7064:7065   */\n      0x03\n        /* \"#utility.yul\":7057:7062   */\n      dup2\n        /* \"#utility.yul\":7054:7066   */\n      lt\n        /* \"#utility.yul\":7044:7090   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":7070:7088   */\n      tag_539\n      tag_239\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":7044:7090   */\n    tag_538:\n        /* \"#utility.yul\":6977:7096   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7102:7241   */\n    tag_434:\n        /* \"#utility.yul\":7153:7160   */\n      0x00\n        /* \"#utility.yul\":7182:7187   */\n      dup2\n        /* \"#utility.yul\":7171:7187   */\n      swap1\n      pop\n        /* \"#utility.yul\":7188:7235   */\n      tag_541\n        /* \"#utility.yul\":7229:7234   */\n      dup3\n        /* \"#utility.yul\":7188:7235   */\n      tag_433\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":7102:7241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7247:7386   */\n    tag_435:\n        /* \"#utility.yul\":7309:7318   */\n      0x00\n        /* \"#utility.yul\":7342:7380   */\n      tag_543\n        /* \"#utility.yul\":7374:7379   */\n      dup3\n        /* \"#utility.yul\":7342:7380   */\n      tag_434\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":7329:7380   */\n      swap1\n      pop\n        /* \"#utility.yul\":7247:7386   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7392:7547   */\n    tag_436:\n        /* \"#utility.yul\":7491:7540   */\n      tag_545\n        /* \"#utility.yul\":7534:7539   */\n      dup2\n        /* \"#utility.yul\":7491:7540   */\n      tag_435\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":7486:7489   */\n      dup3\n        /* \"#utility.yul\":7479:7541   */\n      mstore\n        /* \"#utility.yul\":7392:7547   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7553:7799   */\n    tag_179:\n        /* \"#utility.yul\":7658:7662   */\n      0x00\n        /* \"#utility.yul\":7696:7698   */\n      0x20\n        /* \"#utility.yul\":7685:7694   */\n      dup3\n        /* \"#utility.yul\":7681:7699   */\n      add\n        /* \"#utility.yul\":7673:7699   */\n      swap1\n      pop\n        /* \"#utility.yul\":7709:7792   */\n      tag_547\n        /* \"#utility.yul\":7789:7790   */\n      0x00\n        /* \"#utility.yul\":7778:7787   */\n      dup4\n        /* \"#utility.yul\":7774:7791   */\n      add\n        /* \"#utility.yul\":7765:7771   */\n      dup5\n        /* \"#utility.yul\":7709:7792   */\n      tag_436\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":7553:7799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7805:8279   */\n    tag_187:\n        /* \"#utility.yul\":7873:7879   */\n      0x00\n        /* \"#utility.yul\":7881:7887   */\n      dup1\n        /* \"#utility.yul\":7930:7932   */\n      0x40\n        /* \"#utility.yul\":7918:7927   */\n      dup4\n        /* \"#utility.yul\":7909:7916   */\n      dup6\n        /* \"#utility.yul\":7905:7928   */\n      sub\n        /* \"#utility.yul\":7901:7933   */\n      slt\n        /* \"#utility.yul\":7898:8017   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":7936:8015   */\n      tag_550\n      tag_418\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":7898:8017   */\n    tag_549:\n        /* \"#utility.yul\":8056:8057   */\n      0x00\n        /* \"#utility.yul\":8081:8134   */\n      tag_551\n        /* \"#utility.yul\":8126:8133   */\n      dup6\n        /* \"#utility.yul\":8117:8123   */\n      dup3\n        /* \"#utility.yul\":8106:8115   */\n      dup7\n        /* \"#utility.yul\":8102:8124   */\n      add\n        /* \"#utility.yul\":8081:8134   */\n      tag_423\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":8071:8134   */\n      swap3\n      pop\n        /* \"#utility.yul\":8027:8144   */\n      pop\n        /* \"#utility.yul\":8183:8185   */\n      0x20\n        /* \"#utility.yul\":8209:8262   */\n      tag_552\n        /* \"#utility.yul\":8254:8261   */\n      dup6\n        /* \"#utility.yul\":8245:8251   */\n      dup3\n        /* \"#utility.yul\":8234:8243   */\n      dup7\n        /* \"#utility.yul\":8230:8252   */\n      add\n        /* \"#utility.yul\":8209:8262   */\n      tag_423\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":8199:8262   */\n      swap2\n      pop\n        /* \"#utility.yul\":8154:8272   */\n      pop\n        /* \"#utility.yul\":7805:8279   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8285:8465   */\n    tag_437:\n        /* \"#utility.yul\":8333:8410   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8330:8331   */\n      0x00\n        /* \"#utility.yul\":8323:8411   */\n      mstore\n        /* \"#utility.yul\":8430:8434   */\n      0x22\n        /* \"#utility.yul\":8427:8428   */\n      0x04\n        /* \"#utility.yul\":8420:8435   */\n      mstore\n        /* \"#utility.yul\":8454:8458   */\n      0x24\n        /* \"#utility.yul\":8451:8452   */\n      0x00\n        /* \"#utility.yul\":8444:8459   */\n      revert\n        /* \"#utility.yul\":8471:8791   */\n    tag_200:\n        /* \"#utility.yul\":8515:8521   */\n      0x00\n        /* \"#utility.yul\":8552:8553   */\n      0x02\n        /* \"#utility.yul\":8546:8550   */\n      dup3\n        /* \"#utility.yul\":8542:8554   */\n      div\n        /* \"#utility.yul\":8532:8554   */\n      swap1\n      pop\n        /* \"#utility.yul\":8599:8600   */\n      0x01\n        /* \"#utility.yul\":8593:8597   */\n      dup3\n        /* \"#utility.yul\":8589:8601   */\n      and\n        /* \"#utility.yul\":8620:8638   */\n      dup1\n        /* \"#utility.yul\":8610:8691   */\n      tag_555\n      jumpi\n        /* \"#utility.yul\":8676:8680   */\n      0x7f\n        /* \"#utility.yul\":8668:8674   */\n      dup3\n        /* \"#utility.yul\":8664:8681   */\n      and\n        /* \"#utility.yul\":8654:8681   */\n      swap2\n      pop\n        /* \"#utility.yul\":8610:8691   */\n    tag_555:\n        /* \"#utility.yul\":8738:8740   */\n      0x20\n        /* \"#utility.yul\":8730:8736   */\n      dup3\n        /* \"#utility.yul\":8727:8741   */\n      lt\n        /* \"#utility.yul\":8707:8725   */\n      dup2\n        /* \"#utility.yul\":8704:8742   */\n      sub\n        /* \"#utility.yul\":8701:8785   */\n      tag_556\n      jumpi\n        /* \"#utility.yul\":8757:8775   */\n      tag_557\n      tag_437\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":8701:8785   */\n    tag_556:\n        /* \"#utility.yul\":8522:8791   */\n      pop\n        /* \"#utility.yul\":8471:8791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8797:8973   */\n    tag_438:\n        /* \"#utility.yul\":8937:8965   */\n      0x53616c65732074617267657473206e6f7420796574206d65742e000000000000\n        /* \"#utility.yul\":8933:8934   */\n      0x00\n        /* \"#utility.yul\":8925:8931   */\n      dup3\n        /* \"#utility.yul\":8921:8935   */\n      add\n        /* \"#utility.yul\":8914:8966   */\n      mstore\n        /* \"#utility.yul\":8797:8973   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8979:9345   */\n    tag_439:\n        /* \"#utility.yul\":9121:9124   */\n      0x00\n        /* \"#utility.yul\":9142:9209   */\n      tag_560\n        /* \"#utility.yul\":9206:9208   */\n      0x1a\n        /* \"#utility.yul\":9201:9204   */\n      dup4\n        /* \"#utility.yul\":9142:9209   */\n      tag_410\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":9135:9209   */\n      swap2\n      pop\n        /* \"#utility.yul\":9218:9311   */\n      tag_561\n        /* \"#utility.yul\":9307:9310   */\n      dup3\n        /* \"#utility.yul\":9218:9311   */\n      tag_438\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":9336:9338   */\n      0x20\n        /* \"#utility.yul\":9331:9334   */\n      dup3\n        /* \"#utility.yul\":9327:9339   */\n      add\n        /* \"#utility.yul\":9320:9339   */\n      swap1\n      pop\n        /* \"#utility.yul\":8979:9345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9351:9770   */\n    tag_236:\n        /* \"#utility.yul\":9517:9521   */\n      0x00\n        /* \"#utility.yul\":9555:9557   */\n      0x20\n        /* \"#utility.yul\":9544:9553   */\n      dup3\n        /* \"#utility.yul\":9540:9558   */\n      add\n        /* \"#utility.yul\":9532:9558   */\n      swap1\n      pop\n        /* \"#utility.yul\":9604:9613   */\n      dup2\n        /* \"#utility.yul\":9598:9602   */\n      dup2\n        /* \"#utility.yul\":9594:9614   */\n      sub\n        /* \"#utility.yul\":9590:9591   */\n      0x00\n        /* \"#utility.yul\":9579:9588   */\n      dup4\n        /* \"#utility.yul\":9575:9592   */\n      add\n        /* \"#utility.yul\":9568:9615   */\n      mstore\n        /* \"#utility.yul\":9632:9763   */\n      tag_563\n        /* \"#utility.yul\":9758:9762   */\n      dup2\n        /* \"#utility.yul\":9632:9763   */\n      tag_439\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":9624:9763   */\n      swap1\n      pop\n        /* \"#utility.yul\":9351:9770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9776:10009   */\n    tag_440:\n        /* \"#utility.yul\":9916:9950   */\n      0x507269766174652053616c652068617320616c72656164792073746172746564\n        /* \"#utility.yul\":9912:9913   */\n      0x00\n        /* \"#utility.yul\":9904:9910   */\n      dup3\n        /* \"#utility.yul\":9900:9914   */\n      add\n        /* \"#utility.yul\":9893:9951   */\n      mstore\n        /* \"#utility.yul\":9985:10001   */\n      0x206f7220636f6e636c756465642e000000000000000000000000000000000000\n        /* \"#utility.yul\":9980:9982   */\n      0x20\n        /* \"#utility.yul\":9972:9978   */\n      dup3\n        /* \"#utility.yul\":9968:9983   */\n      add\n        /* \"#utility.yul\":9961:10002   */\n      mstore\n        /* \"#utility.yul\":9776:10009   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10015:10381   */\n    tag_441:\n        /* \"#utility.yul\":10157:10160   */\n      0x00\n        /* \"#utility.yul\":10178:10245   */\n      tag_566\n        /* \"#utility.yul\":10242:10244   */\n      0x2e\n        /* \"#utility.yul\":10237:10240   */\n      dup4\n        /* \"#utility.yul\":10178:10245   */\n      tag_410\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":10171:10245   */\n      swap2\n      pop\n        /* \"#utility.yul\":10254:10347   */\n      tag_567\n        /* \"#utility.yul\":10343:10346   */\n      dup3\n        /* \"#utility.yul\":10254:10347   */\n      tag_440\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":10372:10374   */\n      0x40\n        /* \"#utility.yul\":10367:10370   */\n      dup3\n        /* \"#utility.yul\":10363:10375   */\n      add\n        /* \"#utility.yul\":10356:10375   */\n      swap1\n      pop\n        /* \"#utility.yul\":10015:10381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10387:10806   */\n    tag_249:\n        /* \"#utility.yul\":10553:10557   */\n      0x00\n        /* \"#utility.yul\":10591:10593   */\n      0x20\n        /* \"#utility.yul\":10580:10589   */\n      dup3\n        /* \"#utility.yul\":10576:10594   */\n      add\n        /* \"#utility.yul\":10568:10594   */\n      swap1\n      pop\n        /* \"#utility.yul\":10640:10649   */\n      dup2\n        /* \"#utility.yul\":10634:10638   */\n      dup2\n        /* \"#utility.yul\":10630:10650   */\n      sub\n        /* \"#utility.yul\":10626:10627   */\n      0x00\n        /* \"#utility.yul\":10615:10624   */\n      dup4\n        /* \"#utility.yul\":10611:10628   */\n      add\n        /* \"#utility.yul\":10604:10651   */\n      mstore\n        /* \"#utility.yul\":10668:10799   */\n      tag_569\n        /* \"#utility.yul\":10794:10798   */\n      dup2\n        /* \"#utility.yul\":10668:10799   */\n      tag_441\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":10660:10799   */\n      swap1\n      pop\n        /* \"#utility.yul\":10387:10806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10812:10980   */\n    tag_442:\n        /* \"#utility.yul\":10952:10972   */\n      0x4e6f2073616c65206973206163746976652e0000000000000000000000000000\n        /* \"#utility.yul\":10948:10949   */\n      0x00\n        /* \"#utility.yul\":10940:10946   */\n      dup3\n        /* \"#utility.yul\":10936:10950   */\n      add\n        /* \"#utility.yul\":10929:10973   */\n      mstore\n        /* \"#utility.yul\":10812:10980   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10986:11352   */\n    tag_443:\n        /* \"#utility.yul\":11128:11131   */\n      0x00\n        /* \"#utility.yul\":11149:11216   */\n      tag_572\n        /* \"#utility.yul\":11213:11215   */\n      0x12\n        /* \"#utility.yul\":11208:11211   */\n      dup4\n        /* \"#utility.yul\":11149:11216   */\n      tag_410\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":11142:11216   */\n      swap2\n      pop\n        /* \"#utility.yul\":11225:11318   */\n      tag_573\n        /* \"#utility.yul\":11314:11317   */\n      dup3\n        /* \"#utility.yul\":11225:11318   */\n      tag_442\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":11343:11345   */\n      0x20\n        /* \"#utility.yul\":11338:11341   */\n      dup3\n        /* \"#utility.yul\":11334:11346   */\n      add\n        /* \"#utility.yul\":11327:11346   */\n      swap1\n      pop\n        /* \"#utility.yul\":10986:11352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11358:11777   */\n    tag_261:\n        /* \"#utility.yul\":11524:11528   */\n      0x00\n        /* \"#utility.yul\":11562:11564   */\n      0x20\n        /* \"#utility.yul\":11551:11560   */\n      dup3\n        /* \"#utility.yul\":11547:11565   */\n      add\n        /* \"#utility.yul\":11539:11565   */\n      swap1\n      pop\n        /* \"#utility.yul\":11611:11620   */\n      dup2\n        /* \"#utility.yul\":11605:11609   */\n      dup2\n        /* \"#utility.yul\":11601:11621   */\n      sub\n        /* \"#utility.yul\":11597:11598   */\n      0x00\n        /* \"#utility.yul\":11586:11595   */\n      dup4\n        /* \"#utility.yul\":11582:11599   */\n      add\n        /* \"#utility.yul\":11575:11622   */\n      mstore\n        /* \"#utility.yul\":11639:11770   */\n      tag_575\n        /* \"#utility.yul\":11765:11769   */\n      dup2\n        /* \"#utility.yul\":11639:11770   */\n      tag_443\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":11631:11770   */\n      swap1\n      pop\n        /* \"#utility.yul\":11358:11777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11783:11955   */\n    tag_444:\n        /* \"#utility.yul\":11923:11947   */\n      0x507269766174652053616c6520736f6c64206f75742e00000000000000000000\n        /* \"#utility.yul\":11919:11920   */\n      0x00\n        /* \"#utility.yul\":11911:11917   */\n      dup3\n        /* \"#utility.yul\":11907:11921   */\n      add\n        /* \"#utility.yul\":11900:11948   */\n      mstore\n        /* \"#utility.yul\":11783:11955   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11961:12327   */\n    tag_445:\n        /* \"#utility.yul\":12103:12106   */\n      0x00\n        /* \"#utility.yul\":12124:12191   */\n      tag_578\n        /* \"#utility.yul\":12188:12190   */\n      0x16\n        /* \"#utility.yul\":12183:12186   */\n      dup4\n        /* \"#utility.yul\":12124:12191   */\n      tag_410\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":12117:12191   */\n      swap2\n      pop\n        /* \"#utility.yul\":12200:12293   */\n      tag_579\n        /* \"#utility.yul\":12289:12292   */\n      dup3\n        /* \"#utility.yul\":12200:12293   */\n      tag_444\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":12318:12320   */\n      0x20\n        /* \"#utility.yul\":12313:12316   */\n      dup3\n        /* \"#utility.yul\":12309:12321   */\n      add\n        /* \"#utility.yul\":12302:12321   */\n      swap1\n      pop\n        /* \"#utility.yul\":11961:12327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12333:12752   */\n    tag_269:\n        /* \"#utility.yul\":12499:12503   */\n      0x00\n        /* \"#utility.yul\":12537:12539   */\n      0x20\n        /* \"#utility.yul\":12526:12535   */\n      dup3\n        /* \"#utility.yul\":12522:12540   */\n      add\n        /* \"#utility.yul\":12514:12540   */\n      swap1\n      pop\n        /* \"#utility.yul\":12586:12595   */\n      dup2\n        /* \"#utility.yul\":12580:12584   */\n      dup2\n        /* \"#utility.yul\":12576:12596   */\n      sub\n        /* \"#utility.yul\":12572:12573   */\n      0x00\n        /* \"#utility.yul\":12561:12570   */\n      dup4\n        /* \"#utility.yul\":12557:12574   */\n      add\n        /* \"#utility.yul\":12550:12597   */\n      mstore\n        /* \"#utility.yul\":12614:12745   */\n      tag_581\n        /* \"#utility.yul\":12740:12744   */\n      dup2\n        /* \"#utility.yul\":12614:12745   */\n      tag_445\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":12606:12745   */\n      swap1\n      pop\n        /* \"#utility.yul\":12333:12752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12758:12938   */\n    tag_446:\n        /* \"#utility.yul\":12806:12883   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12803:12804   */\n      0x00\n        /* \"#utility.yul\":12796:12884   */\n      mstore\n        /* \"#utility.yul\":12903:12907   */\n      0x11\n        /* \"#utility.yul\":12900:12901   */\n      0x04\n        /* \"#utility.yul\":12893:12908   */\n      mstore\n        /* \"#utility.yul\":12927:12931   */\n      0x24\n        /* \"#utility.yul\":12924:12925   */\n      0x00\n        /* \"#utility.yul\":12917:12932   */\n      revert\n        /* \"#utility.yul\":12944:13135   */\n    tag_273:\n        /* \"#utility.yul\":12984:12987   */\n      0x00\n        /* \"#utility.yul\":13003:13023   */\n      tag_584\n        /* \"#utility.yul\":13021:13022   */\n      dup3\n        /* \"#utility.yul\":13003:13023   */\n      tag_424\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":12998:13023   */\n      swap2\n      pop\n        /* \"#utility.yul\":13037:13057   */\n      tag_585\n        /* \"#utility.yul\":13055:13056   */\n      dup4\n        /* \"#utility.yul\":13037:13057   */\n      tag_424\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":13032:13057   */\n      swap3\n      pop\n        /* \"#utility.yul\":13080:13081   */\n      dup3\n        /* \"#utility.yul\":13077:13078   */\n      dup3\n        /* \"#utility.yul\":13073:13082   */\n      add\n        /* \"#utility.yul\":13066:13082   */\n      swap1\n      pop\n        /* \"#utility.yul\":13101:13104   */\n      dup1\n        /* \"#utility.yul\":13098:13099   */\n      dup3\n        /* \"#utility.yul\":13095:13105   */\n      gt\n        /* \"#utility.yul\":13092:13128   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":13108:13126   */\n      tag_587\n      tag_446\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":13092:13128   */\n    tag_586:\n        /* \"#utility.yul\":12944:13135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13141:13361   */\n    tag_447:\n        /* \"#utility.yul\":13281:13315   */\n      0x4578636565647320507269766174652053616c6520746f6b656e206c696d6974\n        /* \"#utility.yul\":13277:13278   */\n      0x00\n        /* \"#utility.yul\":13269:13275   */\n      dup3\n        /* \"#utility.yul\":13265:13279   */\n      add\n        /* \"#utility.yul\":13258:13316   */\n      mstore\n        /* \"#utility.yul\":13350:13353   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13345:13347   */\n      0x20\n        /* \"#utility.yul\":13337:13343   */\n      dup3\n        /* \"#utility.yul\":13333:13348   */\n      add\n        /* \"#utility.yul\":13326:13354   */\n      mstore\n        /* \"#utility.yul\":13141:13361   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13367:13733   */\n    tag_448:\n        /* \"#utility.yul\":13509:13512   */\n      0x00\n        /* \"#utility.yul\":13530:13597   */\n      tag_590\n        /* \"#utility.yul\":13594:13596   */\n      0x21\n        /* \"#utility.yul\":13589:13592   */\n      dup4\n        /* \"#utility.yul\":13530:13597   */\n      tag_410\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":13523:13597   */\n      swap2\n      pop\n        /* \"#utility.yul\":13606:13699   */\n      tag_591\n        /* \"#utility.yul\":13695:13698   */\n      dup3\n        /* \"#utility.yul\":13606:13699   */\n      tag_447\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":13724:13726   */\n      0x40\n        /* \"#utility.yul\":13719:13722   */\n      dup3\n        /* \"#utility.yul\":13715:13727   */\n      add\n        /* \"#utility.yul\":13708:13727   */\n      swap1\n      pop\n        /* \"#utility.yul\":13367:13733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13739:14158   */\n    tag_276:\n        /* \"#utility.yul\":13905:13909   */\n      0x00\n        /* \"#utility.yul\":13943:13945   */\n      0x20\n        /* \"#utility.yul\":13932:13941   */\n      dup3\n        /* \"#utility.yul\":13928:13946   */\n      add\n        /* \"#utility.yul\":13920:13946   */\n      swap1\n      pop\n        /* \"#utility.yul\":13992:14001   */\n      dup2\n        /* \"#utility.yul\":13986:13990   */\n      dup2\n        /* \"#utility.yul\":13982:14002   */\n      sub\n        /* \"#utility.yul\":13978:13979   */\n      0x00\n        /* \"#utility.yul\":13967:13976   */\n      dup4\n        /* \"#utility.yul\":13963:13980   */\n      add\n        /* \"#utility.yul\":13956:14003   */\n      mstore\n        /* \"#utility.yul\":14020:14151   */\n      tag_593\n        /* \"#utility.yul\":14146:14150   */\n      dup2\n        /* \"#utility.yul\":14020:14151   */\n      tag_448\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":14012:14151   */\n      swap1\n      pop\n        /* \"#utility.yul\":13739:14158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14164:14332   */\n    tag_449:\n        /* \"#utility.yul\":14304:14324   */\n      0x5072652d53616c6520736f6c64206f75742e0000000000000000000000000000\n        /* \"#utility.yul\":14300:14301   */\n      0x00\n        /* \"#utility.yul\":14292:14298   */\n      dup3\n        /* \"#utility.yul\":14288:14302   */\n      add\n        /* \"#utility.yul\":14281:14325   */\n      mstore\n        /* \"#utility.yul\":14164:14332   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14338:14704   */\n    tag_450:\n        /* \"#utility.yul\":14480:14483   */\n      0x00\n        /* \"#utility.yul\":14501:14568   */\n      tag_596\n        /* \"#utility.yul\":14565:14567   */\n      0x12\n        /* \"#utility.yul\":14560:14563   */\n      dup4\n        /* \"#utility.yul\":14501:14568   */\n      tag_410\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":14494:14568   */\n      swap2\n      pop\n        /* \"#utility.yul\":14577:14670   */\n      tag_597\n        /* \"#utility.yul\":14666:14669   */\n      dup3\n        /* \"#utility.yul\":14577:14670   */\n      tag_449\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":14695:14697   */\n      0x20\n        /* \"#utility.yul\":14690:14693   */\n      dup3\n        /* \"#utility.yul\":14686:14698   */\n      add\n        /* \"#utility.yul\":14679:14698   */\n      swap1\n      pop\n        /* \"#utility.yul\":14338:14704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14710:15129   */\n    tag_289:\n        /* \"#utility.yul\":14876:14880   */\n      0x00\n        /* \"#utility.yul\":14914:14916   */\n      0x20\n        /* \"#utility.yul\":14903:14912   */\n      dup3\n        /* \"#utility.yul\":14899:14917   */\n      add\n        /* \"#utility.yul\":14891:14917   */\n      swap1\n      pop\n        /* \"#utility.yul\":14963:14972   */\n      dup2\n        /* \"#utility.yul\":14957:14961   */\n      dup2\n        /* \"#utility.yul\":14953:14973   */\n      sub\n        /* \"#utility.yul\":14949:14950   */\n      0x00\n        /* \"#utility.yul\":14938:14947   */\n      dup4\n        /* \"#utility.yul\":14934:14951   */\n      add\n        /* \"#utility.yul\":14927:14974   */\n      mstore\n        /* \"#utility.yul\":14991:15122   */\n      tag_599\n        /* \"#utility.yul\":15117:15121   */\n      dup2\n        /* \"#utility.yul\":14991:15122   */\n      tag_450\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":14983:15122   */\n      swap1\n      pop\n        /* \"#utility.yul\":14710:15129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15135:15315   */\n    tag_451:\n        /* \"#utility.yul\":15275:15307   */\n      0x507572636861736520616d6f756e74206f7574206f66206c696d6974732e0000\n        /* \"#utility.yul\":15271:15272   */\n      0x00\n        /* \"#utility.yul\":15263:15269   */\n      dup3\n        /* \"#utility.yul\":15259:15273   */\n      add\n        /* \"#utility.yul\":15252:15308   */\n      mstore\n        /* \"#utility.yul\":15135:15315   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15321:15687   */\n    tag_452:\n        /* \"#utility.yul\":15463:15466   */\n      0x00\n        /* \"#utility.yul\":15484:15551   */\n      tag_602\n        /* \"#utility.yul\":15548:15550   */\n      0x1e\n        /* \"#utility.yul\":15543:15546   */\n      dup4\n        /* \"#utility.yul\":15484:15551   */\n      tag_410\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":15477:15551   */\n      swap2\n      pop\n        /* \"#utility.yul\":15560:15653   */\n      tag_603\n        /* \"#utility.yul\":15649:15652   */\n      dup3\n        /* \"#utility.yul\":15560:15653   */\n      tag_451\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":15678:15680   */\n      0x20\n        /* \"#utility.yul\":15673:15676   */\n      dup3\n        /* \"#utility.yul\":15669:15681   */\n      add\n        /* \"#utility.yul\":15662:15681   */\n      swap1\n      pop\n        /* \"#utility.yul\":15321:15687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15693:16112   */\n    tag_293:\n        /* \"#utility.yul\":15859:15863   */\n      0x00\n        /* \"#utility.yul\":15897:15899   */\n      0x20\n        /* \"#utility.yul\":15886:15895   */\n      dup3\n        /* \"#utility.yul\":15882:15900   */\n      add\n        /* \"#utility.yul\":15874:15900   */\n      swap1\n      pop\n        /* \"#utility.yul\":15946:15955   */\n      dup2\n        /* \"#utility.yul\":15940:15944   */\n      dup2\n        /* \"#utility.yul\":15936:15956   */\n      sub\n        /* \"#utility.yul\":15932:15933   */\n      0x00\n        /* \"#utility.yul\":15921:15930   */\n      dup4\n        /* \"#utility.yul\":15917:15934   */\n      add\n        /* \"#utility.yul\":15910:15957   */\n      mstore\n        /* \"#utility.yul\":15974:16105   */\n      tag_605\n        /* \"#utility.yul\":16100:16104   */\n      dup2\n        /* \"#utility.yul\":15974:16105   */\n      tag_452\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":15966:16105   */\n      swap1\n      pop\n        /* \"#utility.yul\":15693:16112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16118:16297   */\n    tag_453:\n        /* \"#utility.yul\":16258:16289   */\n      0x45786365656473205072652d53616c6520746f6b656e206c696d69742e000000\n        /* \"#utility.yul\":16254:16255   */\n      0x00\n        /* \"#utility.yul\":16246:16252   */\n      dup3\n        /* \"#utility.yul\":16242:16256   */\n      add\n        /* \"#utility.yul\":16235:16290   */\n      mstore\n        /* \"#utility.yul\":16118:16297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16303:16669   */\n    tag_454:\n        /* \"#utility.yul\":16445:16448   */\n      0x00\n        /* \"#utility.yul\":16466:16533   */\n      tag_608\n        /* \"#utility.yul\":16530:16532   */\n      0x1d\n        /* \"#utility.yul\":16525:16528   */\n      dup4\n        /* \"#utility.yul\":16466:16533   */\n      tag_410\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":16459:16533   */\n      swap2\n      pop\n        /* \"#utility.yul\":16542:16635   */\n      tag_609\n        /* \"#utility.yul\":16631:16634   */\n      dup3\n        /* \"#utility.yul\":16542:16635   */\n      tag_453\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":16660:16662   */\n      0x20\n        /* \"#utility.yul\":16655:16658   */\n      dup3\n        /* \"#utility.yul\":16651:16663   */\n      add\n        /* \"#utility.yul\":16644:16663   */\n      swap1\n      pop\n        /* \"#utility.yul\":16303:16669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16675:17094   */\n    tag_299:\n        /* \"#utility.yul\":16841:16845   */\n      0x00\n        /* \"#utility.yul\":16879:16881   */\n      0x20\n        /* \"#utility.yul\":16868:16877   */\n      dup3\n        /* \"#utility.yul\":16864:16882   */\n      add\n        /* \"#utility.yul\":16856:16882   */\n      swap1\n      pop\n        /* \"#utility.yul\":16928:16937   */\n      dup2\n        /* \"#utility.yul\":16922:16926   */\n      dup2\n        /* \"#utility.yul\":16918:16938   */\n      sub\n        /* \"#utility.yul\":16914:16915   */\n      0x00\n        /* \"#utility.yul\":16903:16912   */\n      dup4\n        /* \"#utility.yul\":16899:16916   */\n      add\n        /* \"#utility.yul\":16892:16939   */\n      mstore\n        /* \"#utility.yul\":16956:17087   */\n      tag_611\n        /* \"#utility.yul\":17082:17086   */\n      dup2\n        /* \"#utility.yul\":16956:17087   */\n      tag_454\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":16948:17087   */\n      swap1\n      pop\n        /* \"#utility.yul\":16675:17094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17100:17320   */\n    tag_455:\n        /* \"#utility.yul\":17240:17274   */\n      0x56657374696e6720706572696f64206e6f742079657420636f6d706c65746564\n        /* \"#utility.yul\":17236:17237   */\n      0x00\n        /* \"#utility.yul\":17228:17234   */\n      dup3\n        /* \"#utility.yul\":17224:17238   */\n      add\n        /* \"#utility.yul\":17217:17275   */\n      mstore\n        /* \"#utility.yul\":17309:17312   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17304:17306   */\n      0x20\n        /* \"#utility.yul\":17296:17302   */\n      dup3\n        /* \"#utility.yul\":17292:17307   */\n      add\n        /* \"#utility.yul\":17285:17313   */\n      mstore\n        /* \"#utility.yul\":17100:17320   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17326:17692   */\n    tag_456:\n        /* \"#utility.yul\":17468:17471   */\n      0x00\n        /* \"#utility.yul\":17489:17556   */\n      tag_614\n        /* \"#utility.yul\":17553:17555   */\n      0x21\n        /* \"#utility.yul\":17548:17551   */\n      dup4\n        /* \"#utility.yul\":17489:17556   */\n      tag_410\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":17482:17556   */\n      swap2\n      pop\n        /* \"#utility.yul\":17565:17658   */\n      tag_615\n        /* \"#utility.yul\":17654:17657   */\n      dup3\n        /* \"#utility.yul\":17565:17658   */\n      tag_455\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":17683:17685   */\n      0x40\n        /* \"#utility.yul\":17678:17681   */\n      dup3\n        /* \"#utility.yul\":17674:17686   */\n      add\n        /* \"#utility.yul\":17667:17686   */\n      swap1\n      pop\n        /* \"#utility.yul\":17326:17692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17698:18117   */\n    tag_308:\n        /* \"#utility.yul\":17864:17868   */\n      0x00\n        /* \"#utility.yul\":17902:17904   */\n      0x20\n        /* \"#utility.yul\":17891:17900   */\n      dup3\n        /* \"#utility.yul\":17887:17905   */\n      add\n        /* \"#utility.yul\":17879:17905   */\n      swap1\n      pop\n        /* \"#utility.yul\":17951:17960   */\n      dup2\n        /* \"#utility.yul\":17945:17949   */\n      dup2\n        /* \"#utility.yul\":17941:17961   */\n      sub\n        /* \"#utility.yul\":17937:17938   */\n      0x00\n        /* \"#utility.yul\":17926:17935   */\n      dup4\n        /* \"#utility.yul\":17922:17939   */\n      add\n        /* \"#utility.yul\":17915:17962   */\n      mstore\n        /* \"#utility.yul\":17979:18110   */\n      tag_617\n        /* \"#utility.yul\":18105:18109   */\n      dup2\n        /* \"#utility.yul\":17979:18110   */\n      tag_456\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":17971:18110   */\n      swap1\n      pop\n        /* \"#utility.yul\":17698:18117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18123:18349   */\n    tag_457:\n        /* \"#utility.yul\":18263:18297   */\n      0x507269766174652053616c652073686f756c6420626520636f6e636c75646564\n        /* \"#utility.yul\":18259:18260   */\n      0x00\n        /* \"#utility.yul\":18251:18257   */\n      dup3\n        /* \"#utility.yul\":18247:18261   */\n      add\n        /* \"#utility.yul\":18240:18298   */\n      mstore\n        /* \"#utility.yul\":18332:18341   */\n      0x2066697273742e00000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18327:18329   */\n      0x20\n        /* \"#utility.yul\":18319:18325   */\n      dup3\n        /* \"#utility.yul\":18315:18330   */\n      add\n        /* \"#utility.yul\":18308:18342   */\n      mstore\n        /* \"#utility.yul\":18123:18349   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18355:18721   */\n    tag_458:\n        /* \"#utility.yul\":18497:18500   */\n      0x00\n        /* \"#utility.yul\":18518:18585   */\n      tag_620\n        /* \"#utility.yul\":18582:18584   */\n      0x27\n        /* \"#utility.yul\":18577:18580   */\n      dup4\n        /* \"#utility.yul\":18518:18585   */\n      tag_410\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":18511:18585   */\n      swap2\n      pop\n        /* \"#utility.yul\":18594:18687   */\n      tag_621\n        /* \"#utility.yul\":18683:18686   */\n      dup3\n        /* \"#utility.yul\":18594:18687   */\n      tag_457\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":18712:18714   */\n      0x40\n        /* \"#utility.yul\":18707:18710   */\n      dup3\n        /* \"#utility.yul\":18703:18715   */\n      add\n        /* \"#utility.yul\":18696:18715   */\n      swap1\n      pop\n        /* \"#utility.yul\":18355:18721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18727:19146   */\n    tag_320:\n        /* \"#utility.yul\":18893:18897   */\n      0x00\n        /* \"#utility.yul\":18931:18933   */\n      0x20\n        /* \"#utility.yul\":18920:18929   */\n      dup3\n        /* \"#utility.yul\":18916:18934   */\n      add\n        /* \"#utility.yul\":18908:18934   */\n      swap1\n      pop\n        /* \"#utility.yul\":18980:18989   */\n      dup2\n        /* \"#utility.yul\":18974:18978   */\n      dup2\n        /* \"#utility.yul\":18970:18990   */\n      sub\n        /* \"#utility.yul\":18966:18967   */\n      0x00\n        /* \"#utility.yul\":18955:18964   */\n      dup4\n        /* \"#utility.yul\":18951:18968   */\n      add\n        /* \"#utility.yul\":18944:18991   */\n      mstore\n        /* \"#utility.yul\":19008:19139   */\n      tag_623\n        /* \"#utility.yul\":19134:19138   */\n      dup2\n        /* \"#utility.yul\":19008:19139   */\n      tag_458\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":19000:19139   */\n      swap1\n      pop\n        /* \"#utility.yul\":18727:19146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19152:19334   */\n    tag_459:\n        /* \"#utility.yul\":19292:19326   */\n      0x507269766174652053616c6520746172676574206e6f7420726561636865642e\n        /* \"#utility.yul\":19288:19289   */\n      0x00\n        /* \"#utility.yul\":19280:19286   */\n      dup3\n        /* \"#utility.yul\":19276:19290   */\n      add\n        /* \"#utility.yul\":19269:19327   */\n      mstore\n        /* \"#utility.yul\":19152:19334   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19340:19706   */\n    tag_460:\n        /* \"#utility.yul\":19482:19485   */\n      0x00\n        /* \"#utility.yul\":19503:19570   */\n      tag_626\n        /* \"#utility.yul\":19567:19569   */\n      0x20\n        /* \"#utility.yul\":19562:19565   */\n      dup4\n        /* \"#utility.yul\":19503:19570   */\n      tag_410\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":19496:19570   */\n      swap2\n      pop\n        /* \"#utility.yul\":19579:19672   */\n      tag_627\n        /* \"#utility.yul\":19668:19671   */\n      dup3\n        /* \"#utility.yul\":19579:19672   */\n      tag_459\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":19697:19699   */\n      0x20\n        /* \"#utility.yul\":19692:19695   */\n      dup3\n        /* \"#utility.yul\":19688:19700   */\n      add\n        /* \"#utility.yul\":19681:19700   */\n      swap1\n      pop\n        /* \"#utility.yul\":19340:19706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19712:20131   */\n    tag_323:\n        /* \"#utility.yul\":19878:19882   */\n      0x00\n        /* \"#utility.yul\":19916:19918   */\n      0x20\n        /* \"#utility.yul\":19905:19914   */\n      dup3\n        /* \"#utility.yul\":19901:19919   */\n      add\n        /* \"#utility.yul\":19893:19919   */\n      swap1\n      pop\n        /* \"#utility.yul\":19965:19974   */\n      dup2\n        /* \"#utility.yul\":19959:19963   */\n      dup2\n        /* \"#utility.yul\":19955:19975   */\n      sub\n        /* \"#utility.yul\":19951:19952   */\n      0x00\n        /* \"#utility.yul\":19940:19949   */\n      dup4\n        /* \"#utility.yul\":19936:19953   */\n      add\n        /* \"#utility.yul\":19929:19976   */\n      mstore\n        /* \"#utility.yul\":19993:20124   */\n      tag_629\n        /* \"#utility.yul\":20119:20123   */\n      dup2\n        /* \"#utility.yul\":19993:20124   */\n      tag_460\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":19985:20124   */\n      swap1\n      pop\n        /* \"#utility.yul\":19712:20131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20137:20579   */\n    tag_358:\n        /* \"#utility.yul\":20286:20290   */\n      0x00\n        /* \"#utility.yul\":20324:20326   */\n      0x60\n        /* \"#utility.yul\":20313:20322   */\n      dup3\n        /* \"#utility.yul\":20309:20327   */\n      add\n        /* \"#utility.yul\":20301:20327   */\n      swap1\n      pop\n        /* \"#utility.yul\":20337:20408   */\n      tag_631\n        /* \"#utility.yul\":20405:20406   */\n      0x00\n        /* \"#utility.yul\":20394:20403   */\n      dup4\n        /* \"#utility.yul\":20390:20407   */\n      add\n        /* \"#utility.yul\":20381:20387   */\n      dup7\n        /* \"#utility.yul\":20337:20408   */\n      tag_432\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":20418:20490   */\n      tag_632\n        /* \"#utility.yul\":20486:20488   */\n      0x20\n        /* \"#utility.yul\":20475:20484   */\n      dup4\n        /* \"#utility.yul\":20471:20489   */\n      add\n        /* \"#utility.yul\":20462:20468   */\n      dup6\n        /* \"#utility.yul\":20418:20490   */\n      tag_429\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":20500:20572   */\n      tag_633\n        /* \"#utility.yul\":20568:20570   */\n      0x40\n        /* \"#utility.yul\":20557:20566   */\n      dup4\n        /* \"#utility.yul\":20553:20571   */\n      add\n        /* \"#utility.yul\":20544:20550   */\n      dup5\n        /* \"#utility.yul\":20500:20572   */\n      tag_429\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":20137:20579   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20585:20766   */\n    tag_461:\n        /* \"#utility.yul\":20725:20758   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":20721:20722   */\n      0x00\n        /* \"#utility.yul\":20713:20719   */\n      dup3\n        /* \"#utility.yul\":20709:20723   */\n      add\n        /* \"#utility.yul\":20702:20759   */\n      mstore\n        /* \"#utility.yul\":20585:20766   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20772:21138   */\n    tag_462:\n        /* \"#utility.yul\":20914:20917   */\n      0x00\n        /* \"#utility.yul\":20935:21002   */\n      tag_636\n        /* \"#utility.yul\":20999:21001   */\n      0x1f\n        /* \"#utility.yul\":20994:20997   */\n      dup4\n        /* \"#utility.yul\":20935:21002   */\n      tag_410\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":20928:21002   */\n      swap2\n      pop\n        /* \"#utility.yul\":21011:21104   */\n      tag_637\n        /* \"#utility.yul\":21100:21103   */\n      dup3\n        /* \"#utility.yul\":21011:21104   */\n      tag_461\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":21129:21131   */\n      0x20\n        /* \"#utility.yul\":21124:21127   */\n      dup3\n        /* \"#utility.yul\":21120:21132   */\n      add\n        /* \"#utility.yul\":21113:21132   */\n      swap1\n      pop\n        /* \"#utility.yul\":20772:21138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21144:21563   */\n    tag_376:\n        /* \"#utility.yul\":21310:21314   */\n      0x00\n        /* \"#utility.yul\":21348:21350   */\n      0x20\n        /* \"#utility.yul\":21337:21346   */\n      dup3\n        /* \"#utility.yul\":21333:21351   */\n      add\n        /* \"#utility.yul\":21325:21351   */\n      swap1\n      pop\n        /* \"#utility.yul\":21397:21406   */\n      dup2\n        /* \"#utility.yul\":21391:21395   */\n      dup2\n        /* \"#utility.yul\":21387:21407   */\n      sub\n        /* \"#utility.yul\":21383:21384   */\n      0x00\n        /* \"#utility.yul\":21372:21381   */\n      dup4\n        /* \"#utility.yul\":21368:21385   */\n      add\n        /* \"#utility.yul\":21361:21408   */\n      mstore\n        /* \"#utility.yul\":21425:21556   */\n      tag_639\n        /* \"#utility.yul\":21551:21555   */\n      dup2\n        /* \"#utility.yul\":21425:21556   */\n      tag_462\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":21417:21556   */\n      swap1\n      pop\n        /* \"#utility.yul\":21144:21563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21569:21763   */\n    tag_380:\n        /* \"#utility.yul\":21609:21613   */\n      0x00\n        /* \"#utility.yul\":21629:21649   */\n      tag_641\n        /* \"#utility.yul\":21647:21648   */\n      dup3\n        /* \"#utility.yul\":21629:21649   */\n      tag_424\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":21624:21649   */\n      swap2\n      pop\n        /* \"#utility.yul\":21663:21683   */\n      tag_642\n        /* \"#utility.yul\":21681:21682   */\n      dup4\n        /* \"#utility.yul\":21663:21683   */\n      tag_424\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":21658:21683   */\n      swap3\n      pop\n        /* \"#utility.yul\":21707:21708   */\n      dup3\n        /* \"#utility.yul\":21704:21705   */\n      dup3\n        /* \"#utility.yul\":21700:21709   */\n      sub\n        /* \"#utility.yul\":21692:21709   */\n      swap1\n      pop\n        /* \"#utility.yul\":21731:21732   */\n      dup2\n        /* \"#utility.yul\":21725:21729   */\n      dup2\n        /* \"#utility.yul\":21722:21733   */\n      gt\n        /* \"#utility.yul\":21719:21756   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":21736:21754   */\n      tag_644\n      tag_446\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":21719:21756   */\n    tag_643:\n        /* \"#utility.yul\":21569:21763   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21769:22179   */\n    tag_382:\n        /* \"#utility.yul\":21809:21816   */\n      0x00\n        /* \"#utility.yul\":21832:21852   */\n      tag_646\n        /* \"#utility.yul\":21850:21851   */\n      dup3\n        /* \"#utility.yul\":21832:21852   */\n      tag_424\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":21827:21852   */\n      swap2\n      pop\n        /* \"#utility.yul\":21866:21886   */\n      tag_647\n        /* \"#utility.yul\":21884:21885   */\n      dup4\n        /* \"#utility.yul\":21866:21886   */\n      tag_424\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":21861:21886   */\n      swap3\n      pop\n        /* \"#utility.yul\":21921:21922   */\n      dup3\n        /* \"#utility.yul\":21918:21919   */\n      dup3\n        /* \"#utility.yul\":21914:21923   */\n      mul\n        /* \"#utility.yul\":21943:21973   */\n      tag_648\n        /* \"#utility.yul\":21961:21972   */\n      dup2\n        /* \"#utility.yul\":21943:21973   */\n      tag_424\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":21932:21973   */\n      swap2\n      pop\n        /* \"#utility.yul\":22122:22123   */\n      dup3\n        /* \"#utility.yul\":22113:22120   */\n      dup3\n        /* \"#utility.yul\":22109:22124   */\n      div\n        /* \"#utility.yul\":22106:22107   */\n      dup5\n        /* \"#utility.yul\":22103:22125   */\n      eq\n        /* \"#utility.yul\":22083:22084   */\n      dup4\n        /* \"#utility.yul\":22076:22085   */\n      iszero\n        /* \"#utility.yul\":22056:22139   */\n      or\n        /* \"#utility.yul\":22033:22172   */\n      tag_649\n      jumpi\n        /* \"#utility.yul\":22152:22170   */\n      tag_650\n      tag_446\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":22033:22172   */\n    tag_649:\n        /* \"#utility.yul\":21817:22179   */\n      pop\n        /* \"#utility.yul\":21769:22179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22185:22365   */\n    tag_463:\n        /* \"#utility.yul\":22233:22310   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22230:22231   */\n      0x00\n        /* \"#utility.yul\":22223:22311   */\n      mstore\n        /* \"#utility.yul\":22330:22334   */\n      0x12\n        /* \"#utility.yul\":22327:22328   */\n      0x04\n        /* \"#utility.yul\":22320:22335   */\n      mstore\n        /* \"#utility.yul\":22354:22358   */\n      0x24\n        /* \"#utility.yul\":22351:22352   */\n      0x00\n        /* \"#utility.yul\":22344:22359   */\n      revert\n        /* \"#utility.yul\":22371:22556   */\n    tag_384:\n        /* \"#utility.yul\":22411:22412   */\n      0x00\n        /* \"#utility.yul\":22428:22448   */\n      tag_653\n        /* \"#utility.yul\":22446:22447   */\n      dup3\n        /* \"#utility.yul\":22428:22448   */\n      tag_424\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":22423:22448   */\n      swap2\n      pop\n        /* \"#utility.yul\":22462:22482   */\n      tag_654\n        /* \"#utility.yul\":22480:22481   */\n      dup4\n        /* \"#utility.yul\":22462:22482   */\n      tag_424\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":22457:22482   */\n      swap3\n      pop\n        /* \"#utility.yul\":22501:22502   */\n      dup3\n        /* \"#utility.yul\":22491:22526   */\n      tag_655\n      jumpi\n        /* \"#utility.yul\":22506:22524   */\n      tag_656\n      tag_463\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":22491:22526   */\n    tag_655:\n        /* \"#utility.yul\":22548:22549   */\n      dup3\n        /* \"#utility.yul\":22545:22546   */\n      dup3\n        /* \"#utility.yul\":22541:22550   */\n      div\n        /* \"#utility.yul\":22536:22550   */\n      swap1\n      pop\n        /* \"#utility.yul\":22371:22556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220092d6ebf1ef9f3a25290c943b0061a2486924efb9bf38c01240c66534473fec364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1451": {
									"entryPoint": null,
									"id": 1451,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 690,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 495,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 823,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2381,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1838,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1598,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1739,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1776,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7186:9",
										"nodeType": "YulBlock",
										"src": "0:7186:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:9",
													"nodeType": "YulBlock",
													"src": "35:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:9",
																		"nodeType": "YulLiteral",
																		"src": "52:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:9",
																		"nodeType": "YulLiteral",
																		"src": "55:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:9"
																},
																"nativeSrc": "45:88:9",
																"nodeType": "YulFunctionCall",
																"src": "45:88:9"
															},
															"nativeSrc": "45:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:9",
																		"nodeType": "YulLiteral",
																		"src": "149:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:9",
																		"nodeType": "YulLiteral",
																		"src": "152:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:9"
																},
																"nativeSrc": "142:15:9",
																"nodeType": "YulFunctionCall",
																"src": "142:15:9"
															},
															"nativeSrc": "142:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:9",
																		"nodeType": "YulLiteral",
																		"src": "173:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:9",
																		"nodeType": "YulLiteral",
																		"src": "176:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:9"
																},
																"nativeSrc": "166:15:9",
																"nodeType": "YulFunctionCall",
																"src": "166:15:9"
															},
															"nativeSrc": "166:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "7:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:9"
											},
											{
												"body": {
													"nativeSrc": "252:40:9",
													"nodeType": "YulBlock",
													"src": "252:40:9",
													"statements": [
														{
															"nativeSrc": "263:22:9",
															"nodeType": "YulAssignment",
															"src": "263:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "279:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "273:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "273:5:9"
																},
																"nativeSrc": "273:12:9",
																"nodeType": "YulFunctionCall",
																"src": "273:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "263:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "263:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "193:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "235:5:9",
														"nodeType": "YulTypedName",
														"src": "235:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "245:6:9",
														"nodeType": "YulTypedName",
														"src": "245:6:9",
														"type": ""
													}
												],
												"src": "193:99:9"
											},
											{
												"body": {
													"nativeSrc": "326:152:9",
													"nodeType": "YulBlock",
													"src": "326:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:9",
																		"nodeType": "YulLiteral",
																		"src": "343:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:9",
																		"nodeType": "YulLiteral",
																		"src": "346:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:9"
																},
																"nativeSrc": "336:88:9",
																"nodeType": "YulFunctionCall",
																"src": "336:88:9"
															},
															"nativeSrc": "336:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:9",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:9",
																		"nodeType": "YulLiteral",
																		"src": "443:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nativeSrc": "433:15:9",
																"nodeType": "YulFunctionCall",
																"src": "433:15:9"
															},
															"nativeSrc": "433:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:9",
																		"nodeType": "YulLiteral",
																		"src": "464:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:9",
																		"nodeType": "YulLiteral",
																		"src": "467:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:9"
																},
																"nativeSrc": "457:15:9",
																"nodeType": "YulFunctionCall",
																"src": "457:15:9"
															},
															"nativeSrc": "457:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "298:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:9"
											},
											{
												"body": {
													"nativeSrc": "512:152:9",
													"nodeType": "YulBlock",
													"src": "512:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "529:1:9",
																		"nodeType": "YulLiteral",
																		"src": "529:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "532:77:9",
																		"nodeType": "YulLiteral",
																		"src": "532:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "522:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "522:6:9"
																},
																"nativeSrc": "522:88:9",
																"nodeType": "YulFunctionCall",
																"src": "522:88:9"
															},
															"nativeSrc": "522:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "522:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "626:1:9",
																		"nodeType": "YulLiteral",
																		"src": "626:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "629:4:9",
																		"nodeType": "YulLiteral",
																		"src": "629:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "619:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "619:6:9"
																},
																"nativeSrc": "619:15:9",
																"nodeType": "YulFunctionCall",
																"src": "619:15:9"
															},
															"nativeSrc": "619:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "619:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "650:1:9",
																		"nodeType": "YulLiteral",
																		"src": "650:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "653:4:9",
																		"nodeType": "YulLiteral",
																		"src": "653:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "643:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:9"
																},
																"nativeSrc": "643:15:9",
																"nodeType": "YulFunctionCall",
																"src": "643:15:9"
															},
															"nativeSrc": "643:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "643:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "484:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "484:180:9"
											},
											{
												"body": {
													"nativeSrc": "721:269:9",
													"nodeType": "YulBlock",
													"src": "721:269:9",
													"statements": [
														{
															"nativeSrc": "731:22:9",
															"nodeType": "YulAssignment",
															"src": "731:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "745:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "745:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "751:1:9",
																		"nodeType": "YulLiteral",
																		"src": "751:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "741:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "741:3:9"
																},
																"nativeSrc": "741:12:9",
																"nodeType": "YulFunctionCall",
																"src": "741:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "731:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "731:6:9"
																}
															]
														},
														{
															"nativeSrc": "762:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "762:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "792:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "792:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:1:9",
																		"nodeType": "YulLiteral",
																		"src": "798:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "788:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "788:3:9"
																},
																"nativeSrc": "788:12:9",
																"nodeType": "YulFunctionCall",
																"src": "788:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "766:18:9",
																	"nodeType": "YulTypedName",
																	"src": "766:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "839:51:9",
																"nodeType": "YulBlock",
																"src": "839:51:9",
																"statements": [
																	{
																		"nativeSrc": "853:27:9",
																		"nodeType": "YulAssignment",
																		"src": "853:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "867:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "867:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "875:4:9",
																					"nodeType": "YulLiteral",
																					"src": "875:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "863:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "863:3:9"
																			},
																			"nativeSrc": "863:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "863:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "853:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "853:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "819:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "819:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "812:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "812:6:9"
																},
																"nativeSrc": "812:26:9",
																"nodeType": "YulFunctionCall",
																"src": "812:26:9"
															},
															"nativeSrc": "809:81:9",
															"nodeType": "YulIf",
															"src": "809:81:9"
														},
														{
															"body": {
																"nativeSrc": "942:42:9",
																"nodeType": "YulBlock",
																"src": "942:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "956:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "956:16:9"
																			},
																			"nativeSrc": "956:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "956:18:9"
																		},
																		"nativeSrc": "956:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "956:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "906:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "906:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "929:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "937:2:9",
																				"nodeType": "YulLiteral",
																				"src": "937:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "926:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "926:2:9"
																		},
																		"nativeSrc": "926:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "926:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "903:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "903:2:9"
																},
																"nativeSrc": "903:38:9",
																"nodeType": "YulFunctionCall",
																"src": "903:38:9"
															},
															"nativeSrc": "900:84:9",
															"nodeType": "YulIf",
															"src": "900:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "670:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "705:4:9",
														"nodeType": "YulTypedName",
														"src": "705:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "714:6:9",
														"nodeType": "YulTypedName",
														"src": "714:6:9",
														"type": ""
													}
												],
												"src": "670:320:9"
											},
											{
												"body": {
													"nativeSrc": "1050:87:9",
													"nodeType": "YulBlock",
													"src": "1050:87:9",
													"statements": [
														{
															"nativeSrc": "1060:11:9",
															"nodeType": "YulAssignment",
															"src": "1060:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "1068:3:9",
																"nodeType": "YulIdentifier",
																"src": "1068:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1060:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1060:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1088:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1088:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1091:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1091:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1081:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1081:6:9"
																},
																"nativeSrc": "1081:14:9",
																"nodeType": "YulFunctionCall",
																"src": "1081:14:9"
															},
															"nativeSrc": "1081:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "1081:14:9"
														},
														{
															"nativeSrc": "1104:26:9",
															"nodeType": "YulAssignment",
															"src": "1104:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1122:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1122:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1125:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1125:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1112:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1112:9:9"
																},
																"nativeSrc": "1112:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1112:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1104:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1104:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "996:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1037:3:9",
														"nodeType": "YulTypedName",
														"src": "1037:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1045:4:9",
														"nodeType": "YulTypedName",
														"src": "1045:4:9",
														"type": ""
													}
												],
												"src": "996:141:9"
											},
											{
												"body": {
													"nativeSrc": "1187:49:9",
													"nodeType": "YulBlock",
													"src": "1187:49:9",
													"statements": [
														{
															"nativeSrc": "1197:33:9",
															"nodeType": "YulAssignment",
															"src": "1197:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1215:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1215:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1222:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1222:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1211:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1211:3:9"
																		},
																		"nativeSrc": "1211:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1211:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1227:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1227:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1207:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1207:3:9"
																},
																"nativeSrc": "1207:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1207:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1197:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1197:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "1143:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1170:5:9",
														"nodeType": "YulTypedName",
														"src": "1170:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1180:6:9",
														"nodeType": "YulTypedName",
														"src": "1180:6:9",
														"type": ""
													}
												],
												"src": "1143:93:9"
											},
											{
												"body": {
													"nativeSrc": "1295:54:9",
													"nodeType": "YulBlock",
													"src": "1295:54:9",
													"statements": [
														{
															"nativeSrc": "1305:37:9",
															"nodeType": "YulAssignment",
															"src": "1305:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1330:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1330:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1336:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1336:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1326:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1326:3:9"
																},
																"nativeSrc": "1326:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1326:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1305:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "1305:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1242:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1270:4:9",
														"nodeType": "YulTypedName",
														"src": "1270:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1276:5:9",
														"nodeType": "YulTypedName",
														"src": "1276:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1286:8:9",
														"nodeType": "YulTypedName",
														"src": "1286:8:9",
														"type": ""
													}
												],
												"src": "1242:107:9"
											},
											{
												"body": {
													"nativeSrc": "1431:317:9",
													"nodeType": "YulBlock",
													"src": "1431:317:9",
													"statements": [
														{
															"nativeSrc": "1441:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1441:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1462:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1462:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1474:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1474:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1458:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1458:3:9"
																},
																"nativeSrc": "1458:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1458:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1445:9:9",
																	"nodeType": "YulTypedName",
																	"src": "1445:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1485:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1485:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1516:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1516:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1527:66:9",
																		"nodeType": "YulLiteral",
																		"src": "1527:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1497:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1497:18:9"
																},
																"nativeSrc": "1497:97:9",
																"nodeType": "YulFunctionCall",
																"src": "1497:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1489:4:9",
																	"nodeType": "YulTypedName",
																	"src": "1489:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1603:51:9",
															"nodeType": "YulAssignment",
															"src": "1603:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1634:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1634:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1645:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "1645:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1615:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1615:18:9"
																},
																"nativeSrc": "1615:39:9",
																"nodeType": "YulFunctionCall",
																"src": "1615:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1603:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "1603:8:9"
																}
															]
														},
														{
															"nativeSrc": "1663:30:9",
															"nodeType": "YulAssignment",
															"src": "1663:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1676:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1676:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1687:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1687:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1683:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1683:3:9"
																		},
																		"nativeSrc": "1683:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1683:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1672:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1672:3:9"
																},
																"nativeSrc": "1672:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1672:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1663:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1663:5:9"
																}
															]
														},
														{
															"nativeSrc": "1702:40:9",
															"nodeType": "YulAssignment",
															"src": "1702:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1715:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1715:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1726:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "1726:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1736:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1736:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1722:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:9"
																		},
																		"nativeSrc": "1722:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1712:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1712:2:9"
																},
																"nativeSrc": "1712:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1712:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1702:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1702:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1355:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1392:5:9",
														"nodeType": "YulTypedName",
														"src": "1392:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1399:10:9",
														"nodeType": "YulTypedName",
														"src": "1399:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1411:8:9",
														"nodeType": "YulTypedName",
														"src": "1411:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1424:6:9",
														"nodeType": "YulTypedName",
														"src": "1424:6:9",
														"type": ""
													}
												],
												"src": "1355:393:9"
											},
											{
												"body": {
													"nativeSrc": "1799:32:9",
													"nodeType": "YulBlock",
													"src": "1799:32:9",
													"statements": [
														{
															"nativeSrc": "1809:16:9",
															"nodeType": "YulAssignment",
															"src": "1809:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "1820:5:9",
																"nodeType": "YulIdentifier",
																"src": "1820:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1809:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1809:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1754:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1781:5:9",
														"nodeType": "YulTypedName",
														"src": "1781:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1791:7:9",
														"nodeType": "YulTypedName",
														"src": "1791:7:9",
														"type": ""
													}
												],
												"src": "1754:77:9"
											},
											{
												"body": {
													"nativeSrc": "1869:28:9",
													"nodeType": "YulBlock",
													"src": "1869:28:9",
													"statements": [
														{
															"nativeSrc": "1879:12:9",
															"nodeType": "YulAssignment",
															"src": "1879:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "1886:5:9",
																"nodeType": "YulIdentifier",
																"src": "1886:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1879:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1879:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1837:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1855:5:9",
														"nodeType": "YulTypedName",
														"src": "1855:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1865:3:9",
														"nodeType": "YulTypedName",
														"src": "1865:3:9",
														"type": ""
													}
												],
												"src": "1837:60:9"
											},
											{
												"body": {
													"nativeSrc": "1963:82:9",
													"nodeType": "YulBlock",
													"src": "1963:82:9",
													"statements": [
														{
															"nativeSrc": "1973:66:9",
															"nodeType": "YulAssignment",
															"src": "1973:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2031:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2031:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2013:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2013:17:9"
																				},
																				"nativeSrc": "2013:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2013:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2004:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "2004:8:9"
																		},
																		"nativeSrc": "2004:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2004:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1986:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1986:17:9"
																},
																"nativeSrc": "1986:53:9",
																"nodeType": "YulFunctionCall",
																"src": "1986:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1973:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1973:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1903:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1943:5:9",
														"nodeType": "YulTypedName",
														"src": "1943:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1953:9:9",
														"nodeType": "YulTypedName",
														"src": "1953:9:9",
														"type": ""
													}
												],
												"src": "1903:142:9"
											},
											{
												"body": {
													"nativeSrc": "2098:28:9",
													"nodeType": "YulBlock",
													"src": "2098:28:9",
													"statements": [
														{
															"nativeSrc": "2108:12:9",
															"nodeType": "YulAssignment",
															"src": "2108:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "2115:5:9",
																"nodeType": "YulIdentifier",
																"src": "2115:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2108:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2051:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2084:5:9",
														"nodeType": "YulTypedName",
														"src": "2084:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2094:3:9",
														"nodeType": "YulTypedName",
														"src": "2094:3:9",
														"type": ""
													}
												],
												"src": "2051:75:9"
											},
											{
												"body": {
													"nativeSrc": "2208:193:9",
													"nodeType": "YulBlock",
													"src": "2208:193:9",
													"statements": [
														{
															"nativeSrc": "2218:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2218:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2273:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "2273:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2242:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "2242:30:9"
																},
																"nativeSrc": "2242:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2242:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2222:16:9",
																	"nodeType": "YulTypedName",
																	"src": "2222:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2297:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2297:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2337:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "2337:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2331:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2331:5:9"
																				},
																				"nativeSrc": "2331:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2331:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2344:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2344:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2376:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "2376:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2352:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "2352:23:9"
																				},
																				"nativeSrc": "2352:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2352:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2303:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "2303:27:9"
																		},
																		"nativeSrc": "2303:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2303:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2290:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2290:6:9"
																},
																"nativeSrc": "2290:105:9",
																"nodeType": "YulFunctionCall",
																"src": "2290:105:9"
															},
															"nativeSrc": "2290:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "2290:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2132:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2185:4:9",
														"nodeType": "YulTypedName",
														"src": "2185:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2191:6:9",
														"nodeType": "YulTypedName",
														"src": "2191:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2199:7:9",
														"nodeType": "YulTypedName",
														"src": "2199:7:9",
														"type": ""
													}
												],
												"src": "2132:269:9"
											},
											{
												"body": {
													"nativeSrc": "2456:24:9",
													"nodeType": "YulBlock",
													"src": "2456:24:9",
													"statements": [
														{
															"nativeSrc": "2466:8:9",
															"nodeType": "YulAssignment",
															"src": "2466:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2473:1:9",
																"nodeType": "YulLiteral",
																"src": "2473:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2466:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2407:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2452:3:9",
														"nodeType": "YulTypedName",
														"src": "2452:3:9",
														"type": ""
													}
												],
												"src": "2407:73:9"
											},
											{
												"body": {
													"nativeSrc": "2539:136:9",
													"nodeType": "YulBlock",
													"src": "2539:136:9",
													"statements": [
														{
															"nativeSrc": "2549:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2549:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2563:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "2563:30:9"
																},
																"nativeSrc": "2563:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2563:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2553:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2553:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2648:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2648:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2654:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2654:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2662:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2662:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2604:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2604:43:9"
																},
																"nativeSrc": "2604:65:9",
																"nodeType": "YulFunctionCall",
																"src": "2604:65:9"
															},
															"nativeSrc": "2604:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "2604:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2486:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2525:4:9",
														"nodeType": "YulTypedName",
														"src": "2525:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2531:6:9",
														"nodeType": "YulTypedName",
														"src": "2531:6:9",
														"type": ""
													}
												],
												"src": "2486:189:9"
											},
											{
												"body": {
													"nativeSrc": "2731:136:9",
													"nodeType": "YulBlock",
													"src": "2731:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2798:63:9",
																"nodeType": "YulBlock",
																"src": "2798:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2842:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2842:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2849:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2849:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2812:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "2812:29:9"
																			},
																			"nativeSrc": "2812:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2812:39:9"
																		},
																		"nativeSrc": "2812:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2812:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2751:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2751:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2758:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2758:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2748:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2748:2:9"
																},
																"nativeSrc": "2748:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2748:14:9"
															},
															"nativeSrc": "2741:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2763:26:9",
																"nodeType": "YulBlock",
																"src": "2763:26:9",
																"statements": [
																	{
																		"nativeSrc": "2765:22:9",
																		"nodeType": "YulAssignment",
																		"src": "2765:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2778:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2778:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2785:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2785:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2774:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:9"
																			},
																			"nativeSrc": "2774:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2774:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2765:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2765:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2745:2:9",
																"nodeType": "YulBlock",
																"src": "2745:2:9",
																"statements": []
															},
															"src": "2741:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2681:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2719:5:9",
														"nodeType": "YulTypedName",
														"src": "2719:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2726:3:9",
														"nodeType": "YulTypedName",
														"src": "2726:3:9",
														"type": ""
													}
												],
												"src": "2681:186:9"
											},
											{
												"body": {
													"nativeSrc": "2952:464:9",
													"nodeType": "YulBlock",
													"src": "2952:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2978:431:9",
																"nodeType": "YulBlock",
																"src": "2978:431:9",
																"statements": [
																	{
																		"nativeSrc": "2992:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2992:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3040:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3040:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3008:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "3008:31:9"
																			},
																			"nativeSrc": "3008:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3008:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2996:8:9",
																				"nodeType": "YulTypedName",
																				"src": "2996:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3059:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3059:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3082:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "3082:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3110:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "3110:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3092:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "3092:17:9"
																					},
																					"nativeSrc": "3092:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3092:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3078:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3078:3:9"
																			},
																			"nativeSrc": "3078:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3078:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3063:11:9",
																				"nodeType": "YulTypedName",
																				"src": "3063:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3279:27:9",
																			"nodeType": "YulBlock",
																			"src": "3279:27:9",
																			"statements": [
																				{
																					"nativeSrc": "3281:23:9",
																					"nodeType": "YulAssignment",
																					"src": "3281:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3296:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "3296:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3281:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "3281:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3263:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "3263:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3275:2:9",
																					"nodeType": "YulLiteral",
																					"src": "3275:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3260:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "3260:2:9"
																			},
																			"nativeSrc": "3260:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3260:18:9"
																		},
																		"nativeSrc": "3257:49:9",
																		"nodeType": "YulIf",
																		"src": "3257:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3348:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "3348:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3365:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "3365:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3393:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3393:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3375:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "3375:17:9"
																							},
																							"nativeSrc": "3375:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3375:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3361:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3361:3:9"
																					},
																					"nativeSrc": "3361:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3361:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3319:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "3319:28:9"
																			},
																			"nativeSrc": "3319:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3319:80:9"
																		},
																		"nativeSrc": "3319:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3319:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2969:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2969:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2974:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2974:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2966:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2966:2:9"
																},
																"nativeSrc": "2966:11:9",
																"nodeType": "YulFunctionCall",
																"src": "2966:11:9"
															},
															"nativeSrc": "2963:446:9",
															"nodeType": "YulIf",
															"src": "2963:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2873:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2928:5:9",
														"nodeType": "YulTypedName",
														"src": "2928:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2935:3:9",
														"nodeType": "YulTypedName",
														"src": "2935:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2940:10:9",
														"nodeType": "YulTypedName",
														"src": "2940:10:9",
														"type": ""
													}
												],
												"src": "2873:543:9"
											},
											{
												"body": {
													"nativeSrc": "3485:54:9",
													"nodeType": "YulBlock",
													"src": "3485:54:9",
													"statements": [
														{
															"nativeSrc": "3495:37:9",
															"nodeType": "YulAssignment",
															"src": "3495:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3520:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3520:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3526:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3526:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3516:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3516:3:9"
																},
																"nativeSrc": "3516:16:9",
																"nodeType": "YulFunctionCall",
																"src": "3516:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3495:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "3495:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3422:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3460:4:9",
														"nodeType": "YulTypedName",
														"src": "3460:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3466:5:9",
														"nodeType": "YulTypedName",
														"src": "3466:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3476:8:9",
														"nodeType": "YulTypedName",
														"src": "3476:8:9",
														"type": ""
													}
												],
												"src": "3422:117:9"
											},
											{
												"body": {
													"nativeSrc": "3596:118:9",
													"nodeType": "YulBlock",
													"src": "3596:118:9",
													"statements": [
														{
															"nativeSrc": "3606:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3606:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3655:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3655:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3658:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3658:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3651:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3651:3:9"
																				},
																				"nativeSrc": "3651:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3651:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3670:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3670:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3666:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3666:3:9"
																				},
																				"nativeSrc": "3666:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3666:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3622:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "3622:28:9"
																		},
																		"nativeSrc": "3622:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3622:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3618:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3618:3:9"
																},
																"nativeSrc": "3618:56:9",
																"nodeType": "YulFunctionCall",
																"src": "3618:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3610:4:9",
																	"nodeType": "YulTypedName",
																	"src": "3610:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3683:25:9",
															"nodeType": "YulAssignment",
															"src": "3683:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3697:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3697:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3703:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3703:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3693:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3693:3:9"
																},
																"nativeSrc": "3693:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3693:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3683:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3683:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3545:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3573:4:9",
														"nodeType": "YulTypedName",
														"src": "3573:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3579:5:9",
														"nodeType": "YulTypedName",
														"src": "3579:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3589:6:9",
														"nodeType": "YulTypedName",
														"src": "3589:6:9",
														"type": ""
													}
												],
												"src": "3545:169:9"
											},
											{
												"body": {
													"nativeSrc": "3800:214:9",
													"nodeType": "YulBlock",
													"src": "3800:214:9",
													"statements": [
														{
															"nativeSrc": "3933:37:9",
															"nodeType": "YulAssignment",
															"src": "3933:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3960:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3960:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3966:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3966:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3941:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3941:18:9"
																},
																"nativeSrc": "3941:29:9",
																"nodeType": "YulFunctionCall",
																"src": "3941:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3933:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3933:4:9"
																}
															]
														},
														{
															"nativeSrc": "3979:29:9",
															"nodeType": "YulAssignment",
															"src": "3979:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3990:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3990:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4000:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4000:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4003:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4003:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3996:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3996:3:9"
																		},
																		"nativeSrc": "3996:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3996:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3987:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3987:2:9"
																},
																"nativeSrc": "3987:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3987:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3979:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3979:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3719:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3781:4:9",
														"nodeType": "YulTypedName",
														"src": "3781:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3787:3:9",
														"nodeType": "YulTypedName",
														"src": "3787:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3795:4:9",
														"nodeType": "YulTypedName",
														"src": "3795:4:9",
														"type": ""
													}
												],
												"src": "3719:295:9"
											},
											{
												"body": {
													"nativeSrc": "4111:1303:9",
													"nodeType": "YulBlock",
													"src": "4111:1303:9",
													"statements": [
														{
															"nativeSrc": "4122:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4122:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4169:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4169:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4136:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "4136:32:9"
																},
																"nativeSrc": "4136:37:9",
																"nodeType": "YulFunctionCall",
																"src": "4136:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4126:6:9",
																	"nodeType": "YulTypedName",
																	"src": "4126:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4258:22:9",
																"nodeType": "YulBlock",
																"src": "4258:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4260:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4260:16:9"
																			},
																			"nativeSrc": "4260:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4260:18:9"
																		},
																		"nativeSrc": "4260:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4260:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4230:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4238:18:9",
																		"nodeType": "YulLiteral",
																		"src": "4238:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4227:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4227:2:9"
																},
																"nativeSrc": "4227:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4227:30:9"
															},
															"nativeSrc": "4224:56:9",
															"nodeType": "YulIf",
															"src": "4224:56:9"
														},
														{
															"nativeSrc": "4290:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4290:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4336:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4336:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4330:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4330:5:9"
																		},
																		"nativeSrc": "4330:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4330:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4304:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "4304:25:9"
																},
																"nativeSrc": "4304:38:9",
																"nodeType": "YulFunctionCall",
																"src": "4304:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4294:6:9",
																	"nodeType": "YulTypedName",
																	"src": "4294:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4435:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4435:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4441:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4441:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4449:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4449:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4389:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "4389:45:9"
																},
																"nativeSrc": "4389:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4389:67:9"
															},
															"nativeSrc": "4389:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4389:67:9"
														},
														{
															"nativeSrc": "4466:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4466:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "4483:1:9",
																"nodeType": "YulLiteral",
																"src": "4483:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4470:9:9",
																	"nodeType": "YulTypedName",
																	"src": "4470:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4494:17:9",
															"nodeType": "YulAssignment",
															"src": "4494:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "4507:4:9",
																"nodeType": "YulLiteral",
																"src": "4507:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4494:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4494:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4558:611:9",
																		"nodeType": "YulBlock",
																		"src": "4558:611:9",
																		"statements": [
																			{
																				"nativeSrc": "4572:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4572:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4591:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "4591:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4603:4:9",
																									"nodeType": "YulLiteral",
																									"src": "4603:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4599:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "4599:3:9"
																							},
																							"nativeSrc": "4599:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4599:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4587:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "4587:3:9"
																					},
																					"nativeSrc": "4587:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4587:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4576:7:9",
																						"nodeType": "YulTypedName",
																						"src": "4576:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4623:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4623:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4669:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "4669:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4637:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "4637:31:9"
																					},
																					"nativeSrc": "4637:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4637:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4627:6:9",
																						"nodeType": "YulTypedName",
																						"src": "4627:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4687:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4687:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4696:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4696:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4691:1:9",
																						"nodeType": "YulTypedName",
																						"src": "4691:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4755:163:9",
																					"nodeType": "YulBlock",
																					"src": "4755:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4780:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4780:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4798:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "4798:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4803:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "4803:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4794:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "4794:3:9"
																												},
																												"nativeSrc": "4794:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "4794:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4788:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "4788:5:9"
																										},
																										"nativeSrc": "4788:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4788:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4773:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4773:6:9"
																								},
																								"nativeSrc": "4773:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4773:42:9"
																							},
																							"nativeSrc": "4773:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "4773:42:9"
																						},
																						{
																							"nativeSrc": "4832:24:9",
																							"nodeType": "YulAssignment",
																							"src": "4832:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4846:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4846:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4854:1:9",
																										"nodeType": "YulLiteral",
																										"src": "4854:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4842:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4842:3:9"
																								},
																								"nativeSrc": "4842:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4842:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4832:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4832:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4873:31:9",
																							"nodeType": "YulAssignment",
																							"src": "4873:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4890:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "4890:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4901:2:9",
																										"nodeType": "YulLiteral",
																										"src": "4901:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4886:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4886:3:9"
																								},
																								"nativeSrc": "4886:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4886:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4873:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "4873:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4721:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "4721:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4724:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "4724:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4718:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4718:2:9"
																					},
																					"nativeSrc": "4718:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4718:14:9"
																				},
																				"nativeSrc": "4710:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4733:21:9",
																					"nodeType": "YulBlock",
																					"src": "4733:21:9",
																					"statements": [
																						{
																							"nativeSrc": "4735:17:9",
																							"nodeType": "YulAssignment",
																							"src": "4735:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4744:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "4744:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4747:4:9",
																										"nodeType": "YulLiteral",
																										"src": "4747:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4740:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4740:3:9"
																								},
																								"nativeSrc": "4740:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4740:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4735:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "4735:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4714:3:9",
																					"nodeType": "YulBlock",
																					"src": "4714:3:9",
																					"statements": []
																				},
																				"src": "4710:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "4954:156:9",
																					"nodeType": "YulBlock",
																					"src": "4954:156:9",
																					"statements": [
																						{
																							"nativeSrc": "4972:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4972:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4999:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "4999:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5004:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "5004:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4995:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "4995:3:9"
																										},
																										"nativeSrc": "4995:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4995:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4989:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "4989:5:9"
																								},
																								"nativeSrc": "4989:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4989:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4976:9:9",
																									"nodeType": "YulTypedName",
																									"src": "4976:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5039:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "5039:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5066:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "5066:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5081:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "5081:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5089:4:9",
																														"nodeType": "YulLiteral",
																														"src": "5089:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5077:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "5077:3:9"
																												},
																												"nativeSrc": "5077:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "5077:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5047:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "5047:18:9"
																										},
																										"nativeSrc": "5047:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "5047:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5032:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5032:6:9"
																								},
																								"nativeSrc": "5032:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5032:64:9"
																							},
																							"nativeSrc": "5032:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "5032:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4937:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "4937:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4946:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "4946:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4934:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4934:2:9"
																					},
																					"nativeSrc": "4934:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4934:19:9"
																				},
																				"nativeSrc": "4931:179:9",
																				"nodeType": "YulIf",
																				"src": "4931:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5130:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "5130:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5144:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "5144:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5152:1:9",
																											"nodeType": "YulLiteral",
																											"src": "5152:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5140:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "5140:3:9"
																									},
																									"nativeSrc": "5140:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "5140:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5156:1:9",
																									"nodeType": "YulLiteral",
																									"src": "5156:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5136:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "5136:3:9"
																							},
																							"nativeSrc": "5136:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "5136:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5123:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5123:6:9"
																					},
																					"nativeSrc": "5123:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5123:36:9"
																				},
																				"nativeSrc": "5123:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "5123:36:9"
																			}
																		]
																	},
																	"nativeSrc": "4551:618:9",
																	"nodeType": "YulCase",
																	"src": "4551:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4556:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4556:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5186:222:9",
																		"nodeType": "YulBlock",
																		"src": "5186:222:9",
																		"statements": [
																			{
																				"nativeSrc": "5200:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5200:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5213:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5213:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5204:5:9",
																						"nodeType": "YulTypedName",
																						"src": "5204:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5237:67:9",
																					"nodeType": "YulBlock",
																					"src": "5237:67:9",
																					"statements": [
																						{
																							"nativeSrc": "5255:35:9",
																							"nodeType": "YulAssignment",
																							"src": "5255:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5274:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "5274:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5279:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "5279:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5270:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "5270:3:9"
																										},
																										"nativeSrc": "5270:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "5270:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5264:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5264:5:9"
																								},
																								"nativeSrc": "5264:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5264:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5255:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5255:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5230:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "5230:6:9"
																				},
																				"nativeSrc": "5227:77:9",
																				"nodeType": "YulIf",
																				"src": "5227:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5324:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "5324:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5383:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5383:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5390:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5390:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5330:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "5330:52:9"
																							},
																							"nativeSrc": "5330:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "5330:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5317:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5317:6:9"
																					},
																					"nativeSrc": "5317:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5317:81:9"
																				},
																				"nativeSrc": "5317:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "5317:81:9"
																			}
																		]
																	},
																	"nativeSrc": "5178:230:9",
																	"nodeType": "YulCase",
																	"src": "5178:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4531:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4531:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4539:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4539:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4528:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4528:2:9"
																},
																"nativeSrc": "4528:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4528:14:9"
															},
															"nativeSrc": "4521:887:9",
															"nodeType": "YulSwitch",
															"src": "4521:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4019:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4100:4:9",
														"nodeType": "YulTypedName",
														"src": "4100:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4106:3:9",
														"nodeType": "YulTypedName",
														"src": "4106:3:9",
														"type": ""
													}
												],
												"src": "4019:1395:9"
											},
											{
												"body": {
													"nativeSrc": "5465:81:9",
													"nodeType": "YulBlock",
													"src": "5465:81:9",
													"statements": [
														{
															"nativeSrc": "5475:65:9",
															"nodeType": "YulAssignment",
															"src": "5475:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5490:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5490:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5497:42:9",
																		"nodeType": "YulLiteral",
																		"src": "5497:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5486:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5486:3:9"
																},
																"nativeSrc": "5486:54:9",
																"nodeType": "YulFunctionCall",
																"src": "5486:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5475:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5475:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5420:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5447:5:9",
														"nodeType": "YulTypedName",
														"src": "5447:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5457:7:9",
														"nodeType": "YulTypedName",
														"src": "5457:7:9",
														"type": ""
													}
												],
												"src": "5420:126:9"
											},
											{
												"body": {
													"nativeSrc": "5597:51:9",
													"nodeType": "YulBlock",
													"src": "5597:51:9",
													"statements": [
														{
															"nativeSrc": "5607:35:9",
															"nodeType": "YulAssignment",
															"src": "5607:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5636:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5636:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5618:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "5618:17:9"
																},
																"nativeSrc": "5618:24:9",
																"nodeType": "YulFunctionCall",
																"src": "5618:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5607:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5607:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5552:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5579:5:9",
														"nodeType": "YulTypedName",
														"src": "5579:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5589:7:9",
														"nodeType": "YulTypedName",
														"src": "5589:7:9",
														"type": ""
													}
												],
												"src": "5552:96:9"
											},
											{
												"body": {
													"nativeSrc": "5719:53:9",
													"nodeType": "YulBlock",
													"src": "5719:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5736:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5736:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5759:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5759:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5741:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5741:17:9"
																		},
																		"nativeSrc": "5741:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5741:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5729:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5729:6:9"
																},
																"nativeSrc": "5729:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5729:37:9"
															},
															"nativeSrc": "5729:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5729:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5654:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5707:5:9",
														"nodeType": "YulTypedName",
														"src": "5707:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5714:3:9",
														"nodeType": "YulTypedName",
														"src": "5714:3:9",
														"type": ""
													}
												],
												"src": "5654:118:9"
											},
											{
												"body": {
													"nativeSrc": "5876:124:9",
													"nodeType": "YulBlock",
													"src": "5876:124:9",
													"statements": [
														{
															"nativeSrc": "5886:26:9",
															"nodeType": "YulAssignment",
															"src": "5886:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5898:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5898:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5909:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5909:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5894:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5894:3:9"
																},
																"nativeSrc": "5894:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5894:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5886:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5886:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5966:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5966:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5979:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5979:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5990:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5990:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5975:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:9"
																		},
																		"nativeSrc": "5975:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5975:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5922:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5922:43:9"
																},
																"nativeSrc": "5922:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5922:71:9"
															},
															"nativeSrc": "5922:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5922:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5778:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5848:9:9",
														"nodeType": "YulTypedName",
														"src": "5848:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5860:6:9",
														"nodeType": "YulTypedName",
														"src": "5860:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5871:4:9",
														"nodeType": "YulTypedName",
														"src": "5871:4:9",
														"type": ""
													}
												],
												"src": "5778:222:9"
											},
											{
												"body": {
													"nativeSrc": "6034:152:9",
													"nodeType": "YulBlock",
													"src": "6034:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6051:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6051:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6054:77:9",
																		"nodeType": "YulLiteral",
																		"src": "6054:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6044:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6044:6:9"
																},
																"nativeSrc": "6044:88:9",
																"nodeType": "YulFunctionCall",
																"src": "6044:88:9"
															},
															"nativeSrc": "6044:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "6044:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6148:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6148:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6151:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6151:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6141:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6141:6:9"
																},
																"nativeSrc": "6141:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6141:15:9"
															},
															"nativeSrc": "6141:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6141:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6172:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6172:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6175:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6175:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6165:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6165:6:9"
																},
																"nativeSrc": "6165:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6165:15:9"
															},
															"nativeSrc": "6165:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6165:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6006:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6006:180:9"
											},
											{
												"body": {
													"nativeSrc": "6236:147:9",
													"nodeType": "YulBlock",
													"src": "6236:147:9",
													"statements": [
														{
															"nativeSrc": "6246:25:9",
															"nodeType": "YulAssignment",
															"src": "6246:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6269:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6269:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6251:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "6251:17:9"
																},
																"nativeSrc": "6251:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6251:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6246:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "6246:1:9"
																}
															]
														},
														{
															"nativeSrc": "6280:25:9",
															"nodeType": "YulAssignment",
															"src": "6280:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6303:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6303:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6285:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "6285:17:9"
																},
																"nativeSrc": "6285:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6285:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6280:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "6280:1:9"
																}
															]
														},
														{
															"nativeSrc": "6314:16:9",
															"nodeType": "YulAssignment",
															"src": "6314:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6325:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6325:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6328:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6328:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6321:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6321:3:9"
																},
																"nativeSrc": "6321:9:9",
																"nodeType": "YulFunctionCall",
																"src": "6321:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6314:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6314:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6354:22:9",
																"nodeType": "YulBlock",
																"src": "6354:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6356:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6356:16:9"
																			},
																			"nativeSrc": "6356:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6356:18:9"
																		},
																		"nativeSrc": "6356:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6356:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6346:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6346:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6349:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6349:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6343:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6343:2:9"
																},
																"nativeSrc": "6343:10:9",
																"nodeType": "YulFunctionCall",
																"src": "6343:10:9"
															},
															"nativeSrc": "6340:36:9",
															"nodeType": "YulIf",
															"src": "6340:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6192:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6223:1:9",
														"nodeType": "YulTypedName",
														"src": "6223:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6226:1:9",
														"nodeType": "YulTypedName",
														"src": "6226:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6232:3:9",
														"nodeType": "YulTypedName",
														"src": "6232:3:9",
														"type": ""
													}
												],
												"src": "6192:191:9"
											},
											{
												"body": {
													"nativeSrc": "6454:53:9",
													"nodeType": "YulBlock",
													"src": "6454:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6471:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6471:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6494:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6494:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6476:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "6476:17:9"
																		},
																		"nativeSrc": "6476:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6476:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6464:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6464:6:9"
																},
																"nativeSrc": "6464:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6464:37:9"
															},
															"nativeSrc": "6464:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "6464:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6389:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6442:5:9",
														"nodeType": "YulTypedName",
														"src": "6442:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6449:3:9",
														"nodeType": "YulTypedName",
														"src": "6449:3:9",
														"type": ""
													}
												],
												"src": "6389:118:9"
											},
											{
												"body": {
													"nativeSrc": "6667:288:9",
													"nodeType": "YulBlock",
													"src": "6667:288:9",
													"statements": [
														{
															"nativeSrc": "6677:26:9",
															"nodeType": "YulAssignment",
															"src": "6677:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6689:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6689:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6700:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6700:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6685:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6685:3:9"
																},
																"nativeSrc": "6685:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6685:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6677:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6677:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6757:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6757:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6770:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6770:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6781:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6781:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6766:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6766:3:9"
																		},
																		"nativeSrc": "6766:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6766:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6713:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6713:43:9"
																},
																"nativeSrc": "6713:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6713:71:9"
															},
															"nativeSrc": "6713:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6713:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6838:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6838:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6851:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6851:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6862:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6862:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6847:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6847:3:9"
																		},
																		"nativeSrc": "6847:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6847:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6794:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6794:43:9"
																},
																"nativeSrc": "6794:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6794:72:9"
															},
															"nativeSrc": "6794:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6794:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6920:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6920:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6933:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6933:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6944:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6944:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6929:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6929:3:9"
																		},
																		"nativeSrc": "6929:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6929:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6876:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6876:43:9"
																},
																"nativeSrc": "6876:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6876:72:9"
															},
															"nativeSrc": "6876:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6876:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6513:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:9",
														"nodeType": "YulTypedName",
														"src": "6623:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6635:6:9",
														"nodeType": "YulTypedName",
														"src": "6635:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6643:6:9",
														"nodeType": "YulTypedName",
														"src": "6643:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6651:6:9",
														"nodeType": "YulTypedName",
														"src": "6651:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6662:4:9",
														"nodeType": "YulTypedName",
														"src": "6662:4:9",
														"type": ""
													}
												],
												"src": "6513:442:9"
											},
											{
												"body": {
													"nativeSrc": "7059:124:9",
													"nodeType": "YulBlock",
													"src": "7059:124:9",
													"statements": [
														{
															"nativeSrc": "7069:26:9",
															"nodeType": "YulAssignment",
															"src": "7069:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7081:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7081:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7092:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7092:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7077:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7077:3:9"
																},
																"nativeSrc": "7077:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7077:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7069:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7069:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7149:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7149:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7162:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7162:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7173:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7173:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7158:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7158:3:9"
																		},
																		"nativeSrc": "7158:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7158:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7105:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7105:43:9"
																},
																"nativeSrc": "7105:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7105:71:9"
															},
															"nativeSrc": "7105:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7105:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6961:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7031:9:9",
														"nodeType": "YulTypedName",
														"src": "7031:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7043:6:9",
														"nodeType": "YulTypedName",
														"src": "7043:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7054:4:9",
														"nodeType": "YulTypedName",
														"src": "7054:4:9",
														"type": ""
													}
												],
												"src": "6961:222:9"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405269d3c21bcecceda10000006007556a201fcafc2577d29850000060085566038d7ea4c6800060095566b3697b81284000600a555f600b556a0fb768105935a2f3000000600c556a854fdabd6aa1d32fb00000600d5566b3697b81284000600e5567016345785d8a0000600f555f6010555f60115f6101000a81548160ff0219169083600281111561009857610097610550565b5b021790555062ed4e006014556301e133806015553480156100b7575f80fd5b50336040518060400160405280600881526020017f426574746f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4245545400000000000000000000000000000000000000000000000000000000815250816003908161013491906107b7565b50806004908161014491906107b7565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101b7575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101ae91906108c5565b60405180910390fd5b6101c6816101ef60201b60201c565b5060016006819055506101ea306aa56fa5b99019a5c80000006102b260201b60201c565b61099b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610322575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161031991906108c5565b60405180910390fd5b6103335f838361033760201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610387578060025f82825461037b919061090b565b92505081905550610455565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610410578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104079392919061094d565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361049c578060025f82825403925050819055506104e6565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105439190610982565b60405180910390a3505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105f857607f821691505b60208210810361060b5761060a6105b4565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261066d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610632565b6106778683610632565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6106bb6106b66106b18461068f565b610698565b61068f565b9050919050565b5f819050919050565b6106d4836106a1565b6106e86106e0826106c2565b84845461063e565b825550505050565b5f90565b6106fc6106f0565b6107078184846106cb565b505050565b5b8181101561072a5761071f5f826106f4565b60018101905061070d565b5050565b601f82111561076f5761074081610611565b61074984610623565b81016020851015610758578190505b61076c61076485610623565b83018261070c565b50505b505050565b5f82821c905092915050565b5f61078f5f1984600802610774565b1980831691505092915050565b5f6107a78383610780565b9150826002028217905092915050565b6107c08261057d565b67ffffffffffffffff8111156107d9576107d8610587565b5b6107e382546105e1565b6107ee82828561072e565b5f60209050601f83116001811461081f575f841561080d578287015190505b610817858261079c565b86555061087e565b601f19841661082d86610611565b5f5b828110156108545784890151825560018201915060208501945060208101905061082f565b86831015610871578489015161086d601f891682610780565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108af82610886565b9050919050565b6108bf816108a5565b82525050565b5f6020820190506108d85f8301846108b6565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109158261068f565b91506109208361068f565b9250828201905080821115610938576109376108de565b5b92915050565b6109478161068f565b82525050565b5f6060820190506109605f8301866108b6565b61096d602083018561093e565b61097a604083018461093e565b949350505050565b5f6020820190506109955f83018461093e565b92915050565b612706806109a85f395ff3fe6080604052600436106101fc575f3560e01c806370a082311161010c578063b0e686301161009f578063c040e6b81161006e578063c040e6b81461071f578063c552e04b14610749578063dd62ed3e14610773578063e6bd92b9146107af578063f2fde38b146107d95761023c565b8063b0e6863014610677578063b68ed11f146106a1578063ba20cf4c146106cb578063bda95633146106f55761023c565b8063902d55a5116100db578063902d55a5146105bd578063920168b3146105e757806395d89b4114610611578063a9059cbb1461063b5761023c565b806370a0823114610517578063715018a6146105535780638da5cb5b146105695780638f7713ff146105935761023c565b80632b1cbc381161018f5780633610724e1161015e5780633610724e1461047b57806340f02ab61461049757806354dd1da4146104c157806355dd574c146104d75780635fb3b944146104ed5761023c565b80632b1cbc38146103e9578063313ce5671461042557806332c85ac01461044f578063338dbf59146104655761023c565b806318160ddd116101cb57806318160ddd14610331578063192399d11461035b57806323b872dd1461039757806324600fc3146103d35761023c565b806306fdde0314610277578063095ea7b3146102a15780630fe83bb8146102dd5780631514617e146103075761023c565b3661023c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023390611c01565b60405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026e90611c01565b60405180910390fd5b348015610282575f80fd5b5061028b610801565b6040516102989190611c7f565b60405180910390f35b3480156102ac575f80fd5b506102c760048036038101906102c29190611d30565b610891565b6040516102d49190611d88565b60405180910390f35b3480156102e8575f80fd5b506102f16108b3565b6040516102fe9190611db0565b60405180910390f35b348015610312575f80fd5b5061031b6108b9565b6040516103289190611db0565b60405180910390f35b34801561033c575f80fd5b506103456108bf565b6040516103529190611db0565b60405180910390f35b348015610366575f80fd5b50610381600480360381019061037c9190611dc9565b6108c8565b60405161038e9190611db0565b60405180910390f35b3480156103a2575f80fd5b506103bd60048036038101906103b89190611df4565b6108dd565b6040516103ca9190611d88565b60405180910390f35b3480156103de575f80fd5b506103e761090b565b005b3480156103f4575f80fd5b5061040f600480360381019061040a9190611dc9565b610970565b60405161041c9190611db0565b60405180910390f35b348015610430575f80fd5b50610439610985565b6040516104469190611e5f565b60405180910390f35b34801561045a575f80fd5b5061046361098d565b005b348015610470575f80fd5b50610479610a14565b005b61049560048036038101906104909190611e78565b610abc565b005b3480156104a2575f80fd5b506104ab610ed6565b6040516104b89190611db0565b60405180910390f35b3480156104cc575f80fd5b506104d5610edc565b005b3480156104e2575f80fd5b506104eb61103f565b005b3480156104f8575f80fd5b5061050161112e565b60405161050e9190611db0565b60405180910390f35b348015610522575f80fd5b5061053d60048036038101906105389190611dc9565b611134565b60405161054a9190611db0565b60405180910390f35b34801561055e575f80fd5b50610567611179565b005b348015610574575f80fd5b5061057d61118c565b60405161058a9190611eb2565b60405180910390f35b34801561059e575f80fd5b506105a76111b4565b6040516105b49190611db0565b60405180910390f35b3480156105c8575f80fd5b506105d16111ba565b6040516105de9190611db0565b60405180910390f35b3480156105f2575f80fd5b506105fb6111c9565b6040516106089190611db0565b60405180910390f35b34801561061c575f80fd5b506106256111cf565b6040516106329190611c7f565b60405180910390f35b348015610646575f80fd5b50610661600480360381019061065c9190611d30565b61125f565b60405161066e9190611d88565b60405180910390f35b348015610682575f80fd5b5061068b611281565b6040516106989190611db0565b60405180910390f35b3480156106ac575f80fd5b506106b5611287565b6040516106c29190611db0565b60405180910390f35b3480156106d6575f80fd5b506106df61128d565b6040516106ec9190611db0565b60405180910390f35b348015610700575f80fd5b50610709611293565b6040516107169190611db0565b60405180910390f35b34801561072a575f80fd5b50610733611299565b6040516107409190611f3e565b60405180910390f35b348015610754575f80fd5b5061075d6112ab565b60405161076a9190611db0565b60405180910390f35b34801561077e575f80fd5b5061079960048036038101906107949190611f57565b6112b1565b6040516107a69190611db0565b60405180910390f35b3480156107ba575f80fd5b506107c3611333565b6040516107d09190611db0565b60405180910390f35b3480156107e4575f80fd5b506107ff60048036038101906107fa9190611dc9565b611339565b005b60606003805461081090611fc2565b80601f016020809104026020016040519081016040528092919081815260200182805461083c90611fc2565b80156108875780601f1061085e57610100808354040283529160200191610887565b820191905f5260205f20905b81548152906001019060200180831161086a57829003601f168201915b5050505050905090565b5f8061089b6113bd565b90506108a88185856113c4565b600191505092915050565b600d5481565b60145481565b5f600254905090565b6012602052805f5260405f205f915090505481565b5f806108e76113bd565b90506108f48582856113d6565b6108ff858585611468565b60019150509392505050565b610913611558565b61091b6115df565b61092361118c565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610965573d5f803e3d5ffd5b5061096e61162e565b565b6013602052805f5260405f205f915090505481565b5f6012905090565b610995611558565b600854600b5414806109aa5750600d54601054145b6109e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e09061203c565b60405180910390fd5b5f60115f6101000a81548160ff02191690836002811115610a0d57610a0c611ecb565b5b0217905550565b610a1c611558565b5f6002811115610a2f57610a2e611ecb565b5b60115f9054906101000a900460ff166002811115610a5057610a4f611ecb565b5b14610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a87906120ca565b60405180910390fd5b600160115f6101000a81548160ff02191690836002811115610ab557610ab4611ecb565b5b0217905550565b610ac46115df565b5f6002811115610ad757610ad6611ecb565b5b60115f9054906101000a900460ff166002811115610af857610af7611ecb565b5b03610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f90612132565b60405180910390fd5b5f60016002811115610b4d57610b4c611ecb565b5b60115f9054906101000a900460ff166002811115610b6e57610b6d611ecb565b5b03610d2557600854600b5410610bb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb09061219a565b60405180910390fd5b610bc282611638565b905080600b5f828254610bd591906121e5565b92505081905550600854600b541115610c23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1a90612288565b60405180910390fd5b8060125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c6f91906121e5565b9250508190555060145460155442610c8791906121e5565b610c9191906121e5565b60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167f8fa81bb0702332ea2a0aee44bb9e4d359cf4a2c5a820dd59d9129369bdbca73f82604051610d189190611db0565b60405180910390a2610eca565b600280811115610d3857610d37611ecb565b5b60115f9054906101000a900460ff166002811115610d5957610d58611ecb565b5b03610ec957600d5460105410610da4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9b906122f0565b60405180910390fd5b68056bc75e2d631000008210158015610dc6575068a2a15d09519be000008211155b610e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfc90612358565b60405180910390fd5b610e0e82611687565b90508060105f828254610e2191906121e5565b92505081905550600d546010541115610e6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e66906123c0565b60405180910390fd5b610e7a303383611468565b3373ffffffffffffffffffffffffffffffffffffffff167f550498dc565cc74203b9d14cba907c9f60ceefe26e82b37df98f6cb98529cf1982604051610ec09190611db0565b60405180910390a25b5b50610ed361162e565b50565b60155481565b610ee46115df565b60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054421015610f64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5b9061244e565b60405180910390fd5b5f60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611034303383611468565b5061103d61162e565b565b611047611558565b6001600281111561105b5761105a611ecb565b5b60115f9054906101000a900460ff16600281111561107c5761107b611ecb565b5b146110bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b3906124dc565b60405180910390fd5b600854600b5414611102576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f990612544565b60405180910390fd5b600260115f6101000a81548160ff0219169083600281111561112757611126611ecb565b5b0217905550565b600b5481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b611181611558565b61118a5f6116d6565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600f5481565b6aa56fa5b99019a5c800000081565b600e5481565b6060600480546111de90611fc2565b80601f016020809104026020016040519081016040528092919081815260200182805461120a90611fc2565b80156112555780601f1061122c57610100808354040283529160200191611255565b820191905f5260205f20905b81548152906001019060200180831161123857829003601f168201915b5050505050905090565b5f806112696113bd565b9050611276818585611468565b600191505092915050565b60095481565b60105481565b60075481565b600a5481565b60115f9054906101000a900460ff1681565b60085481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600c5481565b611341611558565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113b1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016113a89190611eb2565b60405180910390fd5b6113ba816116d6565b50565b5f33905090565b6113d18383836001611799565b505050565b5f6113e184846112b1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146114625781811015611453578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161144a93929190612562565b60405180910390fd5b61146184848484035f611799565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114d8575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114cf9190611eb2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611548575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161153f9190611eb2565b60405180910390fd5b611553838383611968565b505050565b6115606113bd565b73ffffffffffffffffffffffffffffffffffffffff1661157e61118c565b73ffffffffffffffffffffffffffffffffffffffff16146115dd576115a16113bd565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115d49190611eb2565b60405180910390fd5b565b600260065403611624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161b906125e1565b60405180910390fd5b6002600681905550565b6001600681905550565b5f80600854600b54600954600a5461165091906125ff565b61165a9190612632565b61166491906126a0565b60095461167191906121e5565b9050808361167f91906126a0565b915050919050565b5f80600d54601054600e54600f5461169f91906125ff565b6116a99190612632565b6116b391906126a0565b600e546116c091906121e5565b905080836116ce91906126a0565b915050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611809575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016118009190611eb2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611879575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016118709190611eb2565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611962578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516119599190611db0565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119b8578060025f8282546119ac91906121e5565b92505081905550611a86565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611a41578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611a3893929190612562565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611acd578060025f8282540392505081905550611b17565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b749190611db0565b60405180910390a3505050565b5f82825260208201905092915050565b7f44697265637420455448207472616e7366657273206e6f7420616c6c6f7765645f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f611beb602183611b81565b9150611bf682611b91565b604082019050919050565b5f6020820190508181035f830152611c1881611bdf565b9050919050565b5f81519050919050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611c5182611c1f565b611c5b8185611b81565b9350611c6b818560208601611c29565b611c7481611c37565b840191505092915050565b5f6020820190508181035f830152611c978184611c47565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ccc82611ca3565b9050919050565b611cdc81611cc2565b8114611ce6575f80fd5b50565b5f81359050611cf781611cd3565b92915050565b5f819050919050565b611d0f81611cfd565b8114611d19575f80fd5b50565b5f81359050611d2a81611d06565b92915050565b5f8060408385031215611d4657611d45611c9f565b5b5f611d5385828601611ce9565b9250506020611d6485828601611d1c565b9150509250929050565b5f8115159050919050565b611d8281611d6e565b82525050565b5f602082019050611d9b5f830184611d79565b92915050565b611daa81611cfd565b82525050565b5f602082019050611dc35f830184611da1565b92915050565b5f60208284031215611dde57611ddd611c9f565b5b5f611deb84828501611ce9565b91505092915050565b5f805f60608486031215611e0b57611e0a611c9f565b5b5f611e1886828701611ce9565b9350506020611e2986828701611ce9565b9250506040611e3a86828701611d1c565b9150509250925092565b5f60ff82169050919050565b611e5981611e44565b82525050565b5f602082019050611e725f830184611e50565b92915050565b5f60208284031215611e8d57611e8c611c9f565b5b5f611e9a84828501611d1c565b91505092915050565b611eac81611cc2565b82525050565b5f602082019050611ec55f830184611ea3565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60038110611f0957611f08611ecb565b5b50565b5f819050611f1982611ef8565b919050565b5f611f2882611f0c565b9050919050565b611f3881611f1e565b82525050565b5f602082019050611f515f830184611f2f565b92915050565b5f8060408385031215611f6d57611f6c611c9f565b5b5f611f7a85828601611ce9565b9250506020611f8b85828601611ce9565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611fd957607f821691505b602082108103611fec57611feb611f95565b5b50919050565b7f53616c65732074617267657473206e6f7420796574206d65742e0000000000005f82015250565b5f612026601a83611b81565b915061203182611ff2565b602082019050919050565b5f6020820190508181035f8301526120538161201a565b9050919050565b7f507269766174652053616c652068617320616c726561647920737461727465645f8201527f206f7220636f6e636c756465642e000000000000000000000000000000000000602082015250565b5f6120b4602e83611b81565b91506120bf8261205a565b604082019050919050565b5f6020820190508181035f8301526120e1816120a8565b9050919050565b7f4e6f2073616c65206973206163746976652e00000000000000000000000000005f82015250565b5f61211c601283611b81565b9150612127826120e8565b602082019050919050565b5f6020820190508181035f83015261214981612110565b9050919050565b7f507269766174652053616c6520736f6c64206f75742e000000000000000000005f82015250565b5f612184601683611b81565b915061218f82612150565b602082019050919050565b5f6020820190508181035f8301526121b181612178565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6121ef82611cfd565b91506121fa83611cfd565b9250828201905080821115612212576122116121b8565b5b92915050565b7f4578636565647320507269766174652053616c6520746f6b656e206c696d69745f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f612272602183611b81565b915061227d82612218565b604082019050919050565b5f6020820190508181035f83015261229f81612266565b9050919050565b7f5072652d53616c6520736f6c64206f75742e00000000000000000000000000005f82015250565b5f6122da601283611b81565b91506122e5826122a6565b602082019050919050565b5f6020820190508181035f830152612307816122ce565b9050919050565b7f507572636861736520616d6f756e74206f7574206f66206c696d6974732e00005f82015250565b5f612342601e83611b81565b915061234d8261230e565b602082019050919050565b5f6020820190508181035f83015261236f81612336565b9050919050565b7f45786365656473205072652d53616c6520746f6b656e206c696d69742e0000005f82015250565b5f6123aa601d83611b81565b91506123b582612376565b602082019050919050565b5f6020820190508181035f8301526123d78161239e565b9050919050565b7f56657374696e6720706572696f64206e6f742079657420636f6d706c657465645f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f612438602183611b81565b9150612443826123de565b604082019050919050565b5f6020820190508181035f8301526124658161242c565b9050919050565b7f507269766174652053616c652073686f756c6420626520636f6e636c756465645f8201527f2066697273742e00000000000000000000000000000000000000000000000000602082015250565b5f6124c6602783611b81565b91506124d18261246c565b604082019050919050565b5f6020820190508181035f8301526124f3816124ba565b9050919050565b7f507269766174652053616c6520746172676574206e6f7420726561636865642e5f82015250565b5f61252e602083611b81565b9150612539826124fa565b602082019050919050565b5f6020820190508181035f83015261255b81612522565b9050919050565b5f6060820190506125755f830186611ea3565b6125826020830185611da1565b61258f6040830184611da1565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6125cb601f83611b81565b91506125d682612597565b602082019050919050565b5f6020820190508181035f8301526125f8816125bf565b9050919050565b5f61260982611cfd565b915061261483611cfd565b925082820390508181111561262c5761262b6121b8565b5b92915050565b5f61263c82611cfd565b915061264783611cfd565b925082820261265581611cfd565b9150828204841483151761266c5761266b6121b8565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6126aa82611cfd565b91506126b583611cfd565b9250826126c5576126c4612673565b5b82820490509291505056fea2646970667358221220092d6ebf1ef9f3a25290c943b0061a2486924efb9bf38c01240c66534473fec364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x7 SSTORE PUSH11 0x201FCAFC2577D298500000 PUSH1 0x8 SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x9 SSTORE PUSH7 0xB3697B81284000 PUSH1 0xA SSTORE PUSH0 PUSH1 0xB SSTORE PUSH11 0xFB768105935A2F3000000 PUSH1 0xC SSTORE PUSH11 0x854FDABD6AA1D32FB00000 PUSH1 0xD SSTORE PUSH7 0xB3697B81284000 PUSH1 0xE SSTORE PUSH8 0x16345785D8A0000 PUSH1 0xF SSTORE PUSH0 PUSH1 0x10 SSTORE PUSH0 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x98 JUMPI PUSH2 0x97 PUSH2 0x550 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH3 0xED4E00 PUSH1 0x14 SSTORE PUSH4 0x1E13380 PUSH1 0x15 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426574746F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4245545400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x7B7 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x7B7 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C6 DUP2 PUSH2 0x1EF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x1EA ADDRESS PUSH11 0xA56FA5B99019A5C8000000 PUSH2 0x2B2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x322 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x333 PUSH0 DUP4 DUP4 PUSH2 0x337 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x387 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x455 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x410 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x407 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x49C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4E6 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5F8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x60B JUMPI PUSH2 0x60A PUSH2 0x5B4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x66D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x632 JUMP JUMPDEST PUSH2 0x677 DUP7 DUP4 PUSH2 0x632 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6BB PUSH2 0x6B6 PUSH2 0x6B1 DUP5 PUSH2 0x68F JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D4 DUP4 PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0x6E8 PUSH2 0x6E0 DUP3 PUSH2 0x6C2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x63E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x6FC PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x707 DUP2 DUP5 DUP5 PUSH2 0x6CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72A JUMPI PUSH2 0x71F PUSH0 DUP3 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x70D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x76F JUMPI PUSH2 0x740 DUP2 PUSH2 0x611 JUMP JUMPDEST PUSH2 0x749 DUP5 PUSH2 0x623 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x758 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x76C PUSH2 0x764 DUP6 PUSH2 0x623 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x70C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x78F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x774 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7A7 DUP4 DUP4 PUSH2 0x780 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7C0 DUP3 PUSH2 0x57D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7D9 JUMPI PUSH2 0x7D8 PUSH2 0x587 JUMP JUMPDEST JUMPDEST PUSH2 0x7E3 DUP3 SLOAD PUSH2 0x5E1 JUMP JUMPDEST PUSH2 0x7EE DUP3 DUP3 DUP6 PUSH2 0x72E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x81F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x80D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x817 DUP6 DUP3 PUSH2 0x79C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x87E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x82D DUP7 PUSH2 0x611 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x854 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x82F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x871 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x86D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x780 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8AF DUP3 PUSH2 0x886 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BF DUP2 PUSH2 0x8A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x8B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x915 DUP3 PUSH2 0x68F JUMP JUMPDEST SWAP2 POP PUSH2 0x920 DUP4 PUSH2 0x68F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x938 JUMPI PUSH2 0x937 PUSH2 0x8DE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x947 DUP2 PUSH2 0x68F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x960 PUSH0 DUP4 ADD DUP7 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x96D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x97A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x93E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x995 PUSH0 DUP4 ADD DUP5 PUSH2 0x93E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2706 DUP1 PUSH2 0x9A8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10C JUMPI DUP1 PUSH4 0xB0E68630 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xC040E6B8 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x71F JUMPI DUP1 PUSH4 0xC552E04B EQ PUSH2 0x749 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x773 JUMPI DUP1 PUSH4 0xE6BD92B9 EQ PUSH2 0x7AF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7D9 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0xB0E68630 EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0xB68ED11F EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0xBA20CF4C EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0xBDA95633 EQ PUSH2 0x6F5 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x902D55A5 GT PUSH2 0xDB JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0x920168B3 EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x611 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x63B JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x8F7713FF EQ PUSH2 0x593 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x2B1CBC38 GT PUSH2 0x18F JUMPI DUP1 PUSH4 0x3610724E GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x40F02AB6 EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0x54DD1DA4 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x55DD574C EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x5FB3B944 EQ PUSH2 0x4ED JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x2B1CBC38 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x32C85AC0 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x338DBF59 EQ PUSH2 0x465 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1CB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x192399D1 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x3D3 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xFE83BB8 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x1514617E EQ PUSH2 0x307 JUMPI PUSH2 0x23C JUMP JUMPDEST CALLDATASIZE PUSH2 0x23C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x233 SWAP1 PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26E SWAP1 PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x345 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0x90B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x439 PUSH2 0x985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x463 PUSH2 0x98D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x479 PUSH2 0xA14 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x1E78 JUMP JUMPDEST PUSH2 0xABC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AB PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D5 PUSH2 0xEDC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB PUSH2 0x103F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x501 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x522 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x567 PUSH2 0x1179 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x574 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x57D PUSH2 0x118C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A7 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D1 PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FB PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x625 PUSH2 0x11CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x632 SWAP2 SWAP1 PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0x125F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x682 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x68B PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B5 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DF PUSH2 0x128D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EC SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x700 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x709 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x733 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x75D PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x799 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C3 PUSH2 0x1333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FA SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH2 0x1339 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x810 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x83C SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x887 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x85E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x887 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x86A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x89B PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH2 0x8A8 DUP2 DUP6 DUP6 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8E7 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH2 0x8F4 DUP6 DUP3 DUP6 PUSH2 0x13D6 JUMP JUMPDEST PUSH2 0x8FF DUP6 DUP6 DUP6 PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x913 PUSH2 0x1558 JUMP JUMPDEST PUSH2 0x91B PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x923 PUSH2 0x118C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x965 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x96E PUSH2 0x162E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x995 PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD EQ DUP1 PUSH2 0x9AA JUMPI POP PUSH1 0xD SLOAD PUSH1 0x10 SLOAD EQ JUMPDEST PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E0 SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH2 0xA0C PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xA1C PUSH2 0x1558 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA2F JUMPI PUSH2 0xA2E PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA50 JUMPI PUSH2 0xA4F PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST EQ PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA87 SWAP1 PUSH2 0x20CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAB5 JUMPI PUSH2 0xAB4 PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xAC4 PUSH2 0x15DF JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAD7 JUMPI PUSH2 0xAD6 PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAF8 JUMPI PUSH2 0xAF7 PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST SUB PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2F SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB4D JUMPI PUSH2 0xB4C PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB6E JUMPI PUSH2 0xB6D PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST SUB PUSH2 0xD25 JUMPI PUSH1 0x8 SLOAD PUSH1 0xB SLOAD LT PUSH2 0xBB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB0 SWAP1 PUSH2 0x219A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBC2 DUP3 PUSH2 0x1638 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBD5 SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1A SWAP1 PUSH2 0x2288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC6F SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD TIMESTAMP PUSH2 0xC87 SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST PUSH2 0xC91 SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FA81BB0702332EA2A0AEE44BB9E4D359CF4A2C5A820DD59D9129369BDBCA73F DUP3 PUSH1 0x40 MLOAD PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xD38 JUMPI PUSH2 0xD37 PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD59 JUMPI PUSH2 0xD58 PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST SUB PUSH2 0xEC9 JUMPI PUSH1 0xD SLOAD PUSH1 0x10 SLOAD LT PUSH2 0xDA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9B SWAP1 PUSH2 0x22F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH9 0x56BC75E2D63100000 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xDC6 JUMPI POP PUSH9 0xA2A15D09519BE00000 DUP3 GT ISZERO JUMPDEST PUSH2 0xE05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFC SWAP1 PUSH2 0x2358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE0E DUP3 PUSH2 0x1687 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x10 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE21 SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xD SLOAD PUSH1 0x10 SLOAD GT ISZERO PUSH2 0xE6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE66 SWAP1 PUSH2 0x23C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7A ADDRESS CALLER DUP4 PUSH2 0x1468 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x550498DC565CC74203B9D14CBA907C9F60CEEFE26E82B37DF98F6CB98529CF19 DUP3 PUSH1 0x40 MLOAD PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST JUMPDEST POP PUSH2 0xED3 PUSH2 0x162E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xEE4 PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5B SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1034 ADDRESS CALLER DUP4 PUSH2 0x1468 JUMP JUMPDEST POP PUSH2 0x103D PUSH2 0x162E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1047 PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x105B JUMPI PUSH2 0x105A PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x107C JUMPI PUSH2 0x107B PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST EQ PUSH2 0x10BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B3 SWAP1 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD EQ PUSH2 0x1102 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F9 SWAP1 PUSH2 0x2544 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1127 JUMPI PUSH2 0x1126 PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1181 PUSH2 0x1558 JUMP JUMPDEST PUSH2 0x118A PUSH0 PUSH2 0x16D6 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH11 0xA56FA5B99019A5C8000000 DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x11DE SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x120A SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1255 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x122C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1255 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1238 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1269 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH2 0x1276 DUP2 DUP6 DUP6 PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1341 PUSH2 0x1558 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A8 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13BA DUP2 PUSH2 0x16D6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13D1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1799 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13E1 DUP5 DUP5 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1462 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1453 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2562 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1461 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1799 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14D8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CF SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1548 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153F SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1553 DUP4 DUP4 DUP4 PUSH2 0x1968 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1560 PUSH2 0x13BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x157E PUSH2 0x118C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15DD JUMPI PUSH2 0x15A1 PUSH2 0x13BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D4 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161B SWAP1 PUSH2 0x25E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x8 SLOAD PUSH1 0xB SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x1650 SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x165A SWAP2 SWAP1 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0x1664 SWAP2 SWAP1 PUSH2 0x26A0 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1671 SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH2 0x167F SWAP2 SWAP1 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xD SLOAD PUSH1 0x10 SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH2 0x169F SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x16A9 SWAP2 SWAP1 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0x16B3 SWAP2 SWAP1 PUSH2 0x26A0 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x16C0 SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH2 0x16CE SWAP2 SWAP1 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1809 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1800 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1879 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1870 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1962 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1959 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x19AC SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A86 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1A41 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A38 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2562 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ACD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B17 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B74 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x44697265637420455448207472616E7366657273206E6F7420616C6C6F776564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BEB PUSH1 0x21 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF6 DUP3 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C18 DUP2 PUSH2 0x1BDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C51 DUP3 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1C5B DUP2 DUP6 PUSH2 0x1B81 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C6B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C29 JUMP JUMPDEST PUSH2 0x1C74 DUP2 PUSH2 0x1C37 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C97 DUP2 DUP5 PUSH2 0x1C47 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CCC DUP3 PUSH2 0x1CA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDC DUP2 PUSH2 0x1CC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CF7 DUP2 PUSH2 0x1CD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0F DUP2 PUSH2 0x1CFD JUMP JUMPDEST DUP2 EQ PUSH2 0x1D19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D2A DUP2 PUSH2 0x1D06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D46 JUMPI PUSH2 0x1D45 PUSH2 0x1C9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D53 DUP6 DUP3 DUP7 ADD PUSH2 0x1CE9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D64 DUP6 DUP3 DUP7 ADD PUSH2 0x1D1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D82 DUP2 PUSH2 0x1D6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D9B PUSH0 DUP4 ADD DUP5 PUSH2 0x1D79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DAA DUP2 PUSH2 0x1CFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DDE JUMPI PUSH2 0x1DDD PUSH2 0x1C9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DEB DUP5 DUP3 DUP6 ADD PUSH2 0x1CE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E0B JUMPI PUSH2 0x1E0A PUSH2 0x1C9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E18 DUP7 DUP3 DUP8 ADD PUSH2 0x1CE9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E29 DUP7 DUP3 DUP8 ADD PUSH2 0x1CE9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E3A DUP7 DUP3 DUP8 ADD PUSH2 0x1D1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E59 DUP2 PUSH2 0x1E44 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E72 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E8D JUMPI PUSH2 0x1E8C PUSH2 0x1C9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E9A DUP5 DUP3 DUP6 ADD PUSH2 0x1D1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EAC DUP2 PUSH2 0x1CC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1F09 JUMPI PUSH2 0x1F08 PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x1F19 DUP3 PUSH2 0x1EF8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F28 DUP3 PUSH2 0x1F0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F38 DUP2 PUSH2 0x1F1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F51 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F6D JUMPI PUSH2 0x1F6C PUSH2 0x1C9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F7A DUP6 DUP3 DUP7 ADD PUSH2 0x1CE9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F8B DUP6 DUP3 DUP7 ADD PUSH2 0x1CE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FD9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FEC JUMPI PUSH2 0x1FEB PUSH2 0x1F95 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616C65732074617267657473206E6F7420796574206D65742E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2026 PUSH1 0x1A DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x2031 DUP3 PUSH2 0x1FF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2053 DUP2 PUSH2 0x201A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C652068617320616C72656164792073746172746564 PUSH0 DUP3 ADD MSTORE PUSH32 0x206F7220636F6E636C756465642E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20B4 PUSH1 0x2E DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x20BF DUP3 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20E1 DUP2 PUSH2 0x20A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2073616C65206973206163746976652E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x211C PUSH1 0x12 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x2127 DUP3 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2149 DUP2 PUSH2 0x2110 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520736F6C64206F75742E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2184 PUSH1 0x16 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x218F DUP3 PUSH2 0x2150 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21B1 DUP2 PUSH2 0x2178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21EF DUP3 PUSH2 0x1CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x21FA DUP4 PUSH2 0x1CFD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2212 JUMPI PUSH2 0x2211 PUSH2 0x21B8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4578636565647320507269766174652053616C6520746F6B656E206C696D6974 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2272 PUSH1 0x21 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x227D DUP3 PUSH2 0x2218 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x229F DUP2 PUSH2 0x2266 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D53616C6520736F6C64206F75742E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22DA PUSH1 0x12 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E5 DUP3 PUSH2 0x22A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2307 DUP2 PUSH2 0x22CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507572636861736520616D6F756E74206F7574206F66206C696D6974732E0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2342 PUSH1 0x1E DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x234D DUP3 PUSH2 0x230E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x236F DUP2 PUSH2 0x2336 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473205072652D53616C6520746F6B656E206C696D69742E000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23AA PUSH1 0x1D DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B5 DUP3 PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23D7 DUP2 PUSH2 0x239E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E6720706572696F64206E6F742079657420636F6D706C65746564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2438 PUSH1 0x21 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x2443 DUP3 PUSH2 0x23DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2465 DUP2 PUSH2 0x242C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C652073686F756C6420626520636F6E636C75646564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2066697273742E00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24C6 PUSH1 0x27 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x24D1 DUP3 PUSH2 0x246C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24F3 DUP2 PUSH2 0x24BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520746172676574206E6F7420726561636865642E PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x252E PUSH1 0x20 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x2539 DUP3 PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x255B DUP2 PUSH2 0x2522 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2575 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EA3 JUMP JUMPDEST PUSH2 0x2582 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DA1 JUMP JUMPDEST PUSH2 0x258F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DA1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25CB PUSH1 0x1F DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x25D6 DUP3 PUSH2 0x2597 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25F8 DUP2 PUSH2 0x25BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2609 DUP3 PUSH2 0x1CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x2614 DUP4 PUSH2 0x1CFD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x262C JUMPI PUSH2 0x262B PUSH2 0x21B8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x263C DUP3 PUSH2 0x1CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x2647 DUP4 PUSH2 0x1CFD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2655 DUP2 PUSH2 0x1CFD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x266C JUMPI PUSH2 0x266B PUSH2 0x21B8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26AA DUP3 PUSH2 0x1CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x26B5 DUP4 PUSH2 0x1CFD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x26C5 JUMPI PUSH2 0x26C4 PUSH2 0x2673 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x2D PUSH15 0xBF1EF9F3A25290C943B0061A248692 0x4E 0xFB SWAP12 RETURN DUP13 ADD 0x24 0xC PUSH7 0x534473FEC36473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "290:4877:8:-:0;;;554:20;519:55;;639:21;604:56;;724:16;685:55;;805:17;768:54;;890:1;851:40;;955:21;924:52;;1038:22;1007:53;;1121:17;1086:52;;1200:14;1167:47;;1275:1;1240:36;;1373:14;1348:39;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1567:11;1534:44;;1637:8;1606:39;;1808:111;;;;;;;;;;1856:10;1896:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:2;1821:7;:22;;;;1878:34:8::2;1892:4;423:22;1878:5;;;:34;;:::i;:::-;290:4877:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:3:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:180:9:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:99;245:6;279:5;273:12;263:22;;193:99;;;:::o;298:180::-;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:180;532:77;529:1;522:88;629:4;626:1;619:15;653:4;650:1;643:15;670:320;714:6;751:1;745:4;741:12;731:22;;798:1;792:4;788:12;819:18;809:81;;875:4;867:6;863:17;853:27;;809:81;937:2;929:6;926:14;906:18;903:38;900:84;;956:18;;:::i;:::-;900:84;721:269;670:320;;;:::o;996:141::-;1045:4;1068:3;1060:11;;1091:3;1088:1;1081:14;1125:4;1122:1;1112:18;1104:26;;996:141;;;:::o;1143:93::-;1180:6;1227:2;1222;1215:5;1211:14;1207:23;1197:33;;1143:93;;;:::o;1242:107::-;1286:8;1336:5;1330:4;1326:16;1305:37;;1242:107;;;;:::o;1355:393::-;1424:6;1474:1;1462:10;1458:18;1497:97;1527:66;1516:9;1497:97;:::i;:::-;1615:39;1645:8;1634:9;1615:39;:::i;:::-;1603:51;;1687:4;1683:9;1676:5;1672:21;1663:30;;1736:4;1726:8;1722:19;1715:5;1712:30;1702:40;;1431:317;;1355:393;;;;;:::o;1754:77::-;1791:7;1820:5;1809:16;;1754:77;;;:::o;1837:60::-;1865:3;1886:5;1879:12;;1837:60;;;:::o;1903:142::-;1953:9;1986:53;2004:34;2013:24;2031:5;2013:24;:::i;:::-;2004:34;:::i;:::-;1986:53;:::i;:::-;1973:66;;1903:142;;;:::o;2051:75::-;2094:3;2115:5;2108:12;;2051:75;;;:::o;2132:269::-;2242:39;2273:7;2242:39;:::i;:::-;2303:91;2352:41;2376:16;2352:41;:::i;:::-;2344:6;2337:4;2331:11;2303:91;:::i;:::-;2297:4;2290:105;2208:193;2132:269;;;:::o;2407:73::-;2452:3;2407:73;:::o;2486:189::-;2563:32;;:::i;:::-;2604:65;2662:6;2654;2648:4;2604:65;:::i;:::-;2539:136;2486:189;;:::o;2681:186::-;2741:120;2758:3;2751:5;2748:14;2741:120;;;2812:39;2849:1;2842:5;2812:39;:::i;:::-;2785:1;2778:5;2774:13;2765:22;;2741:120;;;2681:186;;:::o;2873:543::-;2974:2;2969:3;2966:11;2963:446;;;3008:38;3040:5;3008:38;:::i;:::-;3092:29;3110:10;3092:29;:::i;:::-;3082:8;3078:44;3275:2;3263:10;3260:18;3257:49;;;3296:8;3281:23;;3257:49;3319:80;3375:22;3393:3;3375:22;:::i;:::-;3365:8;3361:37;3348:11;3319:80;:::i;:::-;2978:431;;2963:446;2873:543;;;:::o;3422:117::-;3476:8;3526:5;3520:4;3516:16;3495:37;;3422:117;;;;:::o;3545:169::-;3589:6;3622:51;3670:1;3666:6;3658:5;3655:1;3651:13;3622:51;:::i;:::-;3618:56;3703:4;3697;3693:15;3683:25;;3596:118;3545:169;;;;:::o;3719:295::-;3795:4;3941:29;3966:3;3960:4;3941:29;:::i;:::-;3933:37;;4003:3;4000:1;3996:11;3990:4;3987:21;3979:29;;3719:295;;;;:::o;4019:1395::-;4136:37;4169:3;4136:37;:::i;:::-;4238:18;4230:6;4227:30;4224:56;;;4260:18;;:::i;:::-;4224:56;4304:38;4336:4;4330:11;4304:38;:::i;:::-;4389:67;4449:6;4441;4435:4;4389:67;:::i;:::-;4483:1;4507:4;4494:17;;4539:2;4531:6;4528:14;4556:1;4551:618;;;;5213:1;5230:6;5227:77;;;5279:9;5274:3;5270:19;5264:26;5255:35;;5227:77;5330:67;5390:6;5383:5;5330:67;:::i;:::-;5324:4;5317:81;5186:222;4521:887;;4551:618;4603:4;4599:9;4591:6;4587:22;4637:37;4669:4;4637:37;:::i;:::-;4696:1;4710:208;4724:7;4721:1;4718:14;4710:208;;;4803:9;4798:3;4794:19;4788:26;4780:6;4773:42;4854:1;4846:6;4842:14;4832:24;;4901:2;4890:9;4886:18;4873:31;;4747:4;4744:1;4740:12;4735:17;;4710:208;;;4946:6;4937:7;4934:19;4931:179;;;5004:9;4999:3;4995:19;4989:26;5047:48;5089:4;5081:6;5077:17;5066:9;5047:48;:::i;:::-;5039:6;5032:64;4954:156;4931:179;5156:1;5152;5144:6;5140:14;5136:22;5130:4;5123:36;4558:611;;;4521:887;;4111:1303;;;4019:1395;;:::o;5420:126::-;5457:7;5497:42;5490:5;5486:54;5475:65;;5420:126;;;:::o;5552:96::-;5589:7;5618:24;5636:5;5618:24;:::i;:::-;5607:35;;5552:96;;;:::o;5654:118::-;5741:24;5759:5;5741:24;:::i;:::-;5736:3;5729:37;5654:118;;:::o;5778:222::-;5871:4;5909:2;5898:9;5894:18;5886:26;;5922:71;5990:1;5979:9;5975:17;5966:6;5922:71;:::i;:::-;5778:222;;;;:::o;6006:180::-;6054:77;6051:1;6044:88;6151:4;6148:1;6141:15;6175:4;6172:1;6165:15;6192:191;6232:3;6251:20;6269:1;6251:20;:::i;:::-;6246:25;;6285:20;6303:1;6285:20;:::i;:::-;6280:25;;6328:1;6325;6321:9;6314:16;;6349:3;6346:1;6343:10;6340:36;;;6356:18;;:::i;:::-;6340:36;6192:191;;;;:::o;6389:118::-;6476:24;6494:5;6476:24;:::i;:::-;6471:3;6464:37;6389:118;;:::o;6513:442::-;6662:4;6700:2;6689:9;6685:18;6677:26;;6713:71;6781:1;6770:9;6766:17;6757:6;6713:71;:::i;:::-;6794:72;6862:2;6851:9;6847:18;6838:6;6794:72;:::i;:::-;6876;6944:2;6933:9;6929:18;6920:6;6876:72;:::i;:::-;6513:442;;;;;;:::o;6961:222::-;7054:4;7092:2;7081:9;7077:18;7069:26;;7105:71;7173:1;7162:9;7158:17;7149:6;7105:71;:::i;:::-;6961:222;;;;:::o;290:4877:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TOTAL_SUPPLY_1332": {
									"entryPoint": 4538,
									"id": 1332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1786": {
									"entryPoint": null,
									"id": 1786,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1794": {
									"entryPoint": null,
									"id": 1794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_755": {
									"entryPoint": 5060,
									"id": 755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_815": {
									"entryPoint": 6041,
									"id": 815,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5464,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_980": {
									"entryPoint": 5053,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": 5678,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 5599,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_863": {
									"entryPoint": 5078,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5846,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_594": {
									"entryPoint": 5224,
									"id": 594,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 6504,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_491": {
									"entryPoint": 4785,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_515": {
									"entryPoint": 2193,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_450": {
									"entryPoint": 4404,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyTokens_1635": {
									"entryPoint": 2748,
									"id": 1635,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculatePreSaleTokens_1687": {
									"entryPoint": 5767,
									"id": 1687,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculatePrivateSaleTokens_1661": {
									"entryPoint": 5688,
									"id": 1661,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_428": {
									"entryPoint": 2437,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@haltSales_1757": {
									"entryPoint": 2445,
									"id": 1757,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_410": {
									"entryPoint": 2049,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 4492,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@preSaleEndPrice_1391": {
									"entryPoint": 4532,
									"id": 1391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleSoldTokens_1394": {
									"entryPoint": 4743,
									"id": 1394,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleStartPrice_1384": {
									"entryPoint": 4553,
									"id": 1384,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleTarget_1370": {
									"entryPoint": 4915,
									"id": 1370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleTokens_1377": {
									"entryPoint": 2227,
									"id": 1377,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleEndPrice_1360": {
									"entryPoint": 4755,
									"id": 1360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleSoldTokens_1363": {
									"entryPoint": 4398,
									"id": 1363,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleStartPrice_1353": {
									"entryPoint": 4737,
									"id": 1353,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleTarget_1339": {
									"entryPoint": 4749,
									"id": 1339,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleTokens_1346": {
									"entryPoint": 4779,
									"id": 1346,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releaseVestedTokens_1735": {
									"entryPoint": 3804,
									"id": 1735,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 4473,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stage_1403": {
									"entryPoint": 4761,
									"id": 1403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeDuration_1419": {
									"entryPoint": 3798,
									"id": 1419,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startPreSale_1496": {
									"entryPoint": 4159,
									"id": 1496,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startPrivateSale_1470": {
									"entryPoint": 2580,
									"id": 1470,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_419": {
									"entryPoint": 4559,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_437": {
									"entryPoint": 2239,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_547": {
									"entryPoint": 2269,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4921,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_474": {
									"entryPoint": 4703,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@vestingBalance_1407": {
									"entryPoint": 2248,
									"id": 1407,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestingDuration_1416": {
									"entryPoint": 2233,
									"id": 1416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestingReleaseTime_1411": {
									"entryPoint": 2416,
									"id": 1411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawFunds_1778": {
									"entryPoint": 2315,
									"id": 1778,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_SaleStage_$1398_to_t_uint8_fromStack": {
									"entryPoint": 7983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9570,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_SaleStage_$1398__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_SaleStage_$1398": {
									"entryPoint": 7948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_SaleStage_$1398_to_t_uint8": {
									"entryPoint": 7966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7209,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8632,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9843,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7883,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8085,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef": {
									"entryPoint": 8178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878": {
									"entryPoint": 9324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec": {
									"entryPoint": 8974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d": {
									"entryPoint": 9182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67": {
									"entryPoint": 9078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804": {
									"entryPoint": 8282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb": {
									"entryPoint": 8528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513": {
									"entryPoint": 8870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e": {
									"entryPoint": 8728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f": {
									"entryPoint": 8424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd": {
									"entryPoint": 7057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e": {
									"entryPoint": 9466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 9623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_SaleStage_$1398": {
									"entryPoint": 7928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22559:9",
										"nodeType": "YulBlock",
										"src": "0:22559:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:9",
													"nodeType": "YulBlock",
													"src": "103:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:9"
																},
																"nativeSrc": "113:19:9",
																"nodeType": "YulFunctionCall",
																"src": "113:19:9"
															},
															"nativeSrc": "113:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:9"
														},
														{
															"nativeSrc": "141:29:9",
															"nodeType": "YulAssignment",
															"src": "141:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:9",
																		"nodeType": "YulLiteral",
																		"src": "165:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:9"
																},
																"nativeSrc": "156:14:9",
																"nodeType": "YulFunctionCall",
																"src": "156:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:9",
														"nodeType": "YulTypedName",
														"src": "75:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:9",
														"nodeType": "YulTypedName",
														"src": "80:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:9",
														"nodeType": "YulTypedName",
														"src": "91:11:9",
														"type": ""
													}
												],
												"src": "7:169:9"
											},
											{
												"body": {
													"nativeSrc": "288:114:9",
													"nodeType": "YulBlock",
													"src": "288:114:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:9",
																				"nodeType": "YulLiteral",
																				"src": "318:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:9"
																		},
																		"nativeSrc": "306:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:9"
																	},
																	{
																		"hexValue": "44697265637420455448207472616e7366657273206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "322:34:9",
																		"nodeType": "YulLiteral",
																		"src": "322:34:9",
																		"type": "",
																		"value": "Direct ETH transfers not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:9"
																},
																"nativeSrc": "299:58:9",
																"nodeType": "YulFunctionCall",
																"src": "299:58:9"
															},
															"nativeSrc": "299:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "299:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "378:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "378:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "386:2:9",
																				"nodeType": "YulLiteral",
																				"src": "386:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "374:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "374:3:9"
																		},
																		"nativeSrc": "374:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "374:15:9"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "391:3:9",
																		"nodeType": "YulLiteral",
																		"src": "391:3:9",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "367:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "367:6:9"
																},
																"nativeSrc": "367:28:9",
																"nodeType": "YulFunctionCall",
																"src": "367:28:9"
															},
															"nativeSrc": "367:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "367:28:9"
														}
													]
												},
												"name": "store_literal_in_memory_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
												"nativeSrc": "182:220:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:9",
														"nodeType": "YulTypedName",
														"src": "280:6:9",
														"type": ""
													}
												],
												"src": "182:220:9"
											},
											{
												"body": {
													"nativeSrc": "554:220:9",
													"nodeType": "YulBlock",
													"src": "554:220:9",
													"statements": [
														{
															"nativeSrc": "564:74:9",
															"nodeType": "YulAssignment",
															"src": "564:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "630:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "630:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "635:2:9",
																		"nodeType": "YulLiteral",
																		"src": "635:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "571:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "571:58:9"
																},
																"nativeSrc": "571:67:9",
																"nodeType": "YulFunctionCall",
																"src": "571:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "564:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "564:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "736:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "736:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
																	"nativeSrc": "647:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "647:88:9"
																},
																"nativeSrc": "647:93:9",
																"nodeType": "YulFunctionCall",
																"src": "647:93:9"
															},
															"nativeSrc": "647:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "647:93:9"
														},
														{
															"nativeSrc": "749:19:9",
															"nodeType": "YulAssignment",
															"src": "749:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "760:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "760:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "765:2:9",
																		"nodeType": "YulLiteral",
																		"src": "765:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "756:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:9"
																},
																"nativeSrc": "756:12:9",
																"nodeType": "YulFunctionCall",
																"src": "756:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "749:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "749:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "408:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "542:3:9",
														"nodeType": "YulTypedName",
														"src": "542:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "550:3:9",
														"nodeType": "YulTypedName",
														"src": "550:3:9",
														"type": ""
													}
												],
												"src": "408:366:9"
											},
											{
												"body": {
													"nativeSrc": "951:248:9",
													"nodeType": "YulBlock",
													"src": "951:248:9",
													"statements": [
														{
															"nativeSrc": "961:26:9",
															"nodeType": "YulAssignment",
															"src": "961:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "973:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "973:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "984:2:9",
																		"nodeType": "YulLiteral",
																		"src": "984:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "969:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:9"
																},
																"nativeSrc": "969:18:9",
																"nodeType": "YulFunctionCall",
																"src": "969:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "961:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "961:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1008:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1008:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1019:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1019:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1004:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1004:3:9"
																		},
																		"nativeSrc": "1004:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1004:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1027:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1027:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1033:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1033:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1023:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:9"
																		},
																		"nativeSrc": "1023:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1023:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "997:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "997:6:9"
																},
																"nativeSrc": "997:47:9",
																"nodeType": "YulFunctionCall",
																"src": "997:47:9"
															},
															"nativeSrc": "997:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "997:47:9"
														},
														{
															"nativeSrc": "1053:139:9",
															"nodeType": "YulAssignment",
															"src": "1053:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1187:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1187:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1061:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "1061:124:9"
																},
																"nativeSrc": "1061:131:9",
																"nodeType": "YulFunctionCall",
																"src": "1061:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1053:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1053:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "780:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "931:9:9",
														"nodeType": "YulTypedName",
														"src": "931:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "946:4:9",
														"nodeType": "YulTypedName",
														"src": "946:4:9",
														"type": ""
													}
												],
												"src": "780:419:9"
											},
											{
												"body": {
													"nativeSrc": "1264:40:9",
													"nodeType": "YulBlock",
													"src": "1264:40:9",
													"statements": [
														{
															"nativeSrc": "1275:22:9",
															"nodeType": "YulAssignment",
															"src": "1275:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1291:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1291:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1285:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1285:5:9"
																},
																"nativeSrc": "1285:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1285:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1275:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1275:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1205:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1247:5:9",
														"nodeType": "YulTypedName",
														"src": "1247:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1257:6:9",
														"nodeType": "YulTypedName",
														"src": "1257:6:9",
														"type": ""
													}
												],
												"src": "1205:99:9"
											},
											{
												"body": {
													"nativeSrc": "1372:77:9",
													"nodeType": "YulBlock",
													"src": "1372:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1389:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1389:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1394:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1394:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1399:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1399:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1383:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1383:5:9"
																},
																"nativeSrc": "1383:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1383:23:9"
															},
															"nativeSrc": "1383:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "1383:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1426:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1426:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1431:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1431:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1422:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1422:3:9"
																		},
																		"nativeSrc": "1422:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1422:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1440:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1415:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:9"
																},
																"nativeSrc": "1415:27:9",
																"nodeType": "YulFunctionCall",
																"src": "1415:27:9"
															},
															"nativeSrc": "1415:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "1415:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1310:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1354:3:9",
														"nodeType": "YulTypedName",
														"src": "1354:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1359:3:9",
														"nodeType": "YulTypedName",
														"src": "1359:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1364:6:9",
														"nodeType": "YulTypedName",
														"src": "1364:6:9",
														"type": ""
													}
												],
												"src": "1310:139:9"
											},
											{
												"body": {
													"nativeSrc": "1503:54:9",
													"nodeType": "YulBlock",
													"src": "1503:54:9",
													"statements": [
														{
															"nativeSrc": "1513:38:9",
															"nodeType": "YulAssignment",
															"src": "1513:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1531:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1531:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1538:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1527:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1527:3:9"
																		},
																		"nativeSrc": "1527:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1527:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1547:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1547:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1543:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:9"
																		},
																		"nativeSrc": "1543:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1543:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1523:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1523:3:9"
																},
																"nativeSrc": "1523:28:9",
																"nodeType": "YulFunctionCall",
																"src": "1523:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1513:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1513:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1455:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1486:5:9",
														"nodeType": "YulTypedName",
														"src": "1486:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1496:6:9",
														"nodeType": "YulTypedName",
														"src": "1496:6:9",
														"type": ""
													}
												],
												"src": "1455:102:9"
											},
											{
												"body": {
													"nativeSrc": "1655:285:9",
													"nodeType": "YulBlock",
													"src": "1655:285:9",
													"statements": [
														{
															"nativeSrc": "1665:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1665:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1712:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1712:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1679:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "1679:32:9"
																},
																"nativeSrc": "1679:39:9",
																"nodeType": "YulFunctionCall",
																"src": "1679:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1669:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1669:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1727:78:9",
															"nodeType": "YulAssignment",
															"src": "1727:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1793:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1793:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1798:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1798:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1734:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "1734:58:9"
																},
																"nativeSrc": "1734:71:9",
																"nodeType": "YulFunctionCall",
																"src": "1734:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1727:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1727:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1853:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1853:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1860:4:9",
																				"nodeType": "YulLiteral",
																				"src": "1860:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1849:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1849:3:9"
																		},
																		"nativeSrc": "1849:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1849:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1867:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1867:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1872:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1872:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1814:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "1814:34:9"
																},
																"nativeSrc": "1814:65:9",
																"nodeType": "YulFunctionCall",
																"src": "1814:65:9"
															},
															"nativeSrc": "1814:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "1814:65:9"
														},
														{
															"nativeSrc": "1888:46:9",
															"nodeType": "YulAssignment",
															"src": "1888:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1899:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1899:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1926:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1926:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1904:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "1904:21:9"
																		},
																		"nativeSrc": "1904:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1904:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1895:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1895:3:9"
																},
																"nativeSrc": "1895:39:9",
																"nodeType": "YulFunctionCall",
																"src": "1895:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1888:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1888:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1563:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1636:5:9",
														"nodeType": "YulTypedName",
														"src": "1636:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1643:3:9",
														"nodeType": "YulTypedName",
														"src": "1643:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1651:3:9",
														"nodeType": "YulTypedName",
														"src": "1651:3:9",
														"type": ""
													}
												],
												"src": "1563:377:9"
											},
											{
												"body": {
													"nativeSrc": "2064:195:9",
													"nodeType": "YulBlock",
													"src": "2064:195:9",
													"statements": [
														{
															"nativeSrc": "2074:26:9",
															"nodeType": "YulAssignment",
															"src": "2074:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2086:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2086:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2097:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2097:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2082:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2082:3:9"
																},
																"nativeSrc": "2082:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2082:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2074:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2074:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2121:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2132:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2132:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2117:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2117:3:9"
																		},
																		"nativeSrc": "2117:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2140:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2140:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2146:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2146:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2136:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2136:3:9"
																		},
																		"nativeSrc": "2136:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2136:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2110:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2110:6:9"
																},
																"nativeSrc": "2110:47:9",
																"nodeType": "YulFunctionCall",
																"src": "2110:47:9"
															},
															"nativeSrc": "2110:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "2110:47:9"
														},
														{
															"nativeSrc": "2166:86:9",
															"nodeType": "YulAssignment",
															"src": "2166:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2238:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2238:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2247:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2247:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2174:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "2174:63:9"
																},
																"nativeSrc": "2174:78:9",
																"nodeType": "YulFunctionCall",
																"src": "2174:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2166:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2166:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1946:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2036:9:9",
														"nodeType": "YulTypedName",
														"src": "2036:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2048:6:9",
														"nodeType": "YulTypedName",
														"src": "2048:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2059:4:9",
														"nodeType": "YulTypedName",
														"src": "2059:4:9",
														"type": ""
													}
												],
												"src": "1946:313:9"
											},
											{
												"body": {
													"nativeSrc": "2305:35:9",
													"nodeType": "YulBlock",
													"src": "2305:35:9",
													"statements": [
														{
															"nativeSrc": "2315:19:9",
															"nodeType": "YulAssignment",
															"src": "2315:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2331:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2331:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2325:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2325:5:9"
																},
																"nativeSrc": "2325:9:9",
																"nodeType": "YulFunctionCall",
																"src": "2325:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2315:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "2265:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2298:6:9",
														"nodeType": "YulTypedName",
														"src": "2298:6:9",
														"type": ""
													}
												],
												"src": "2265:75:9"
											},
											{
												"body": {
													"nativeSrc": "2435:28:9",
													"nodeType": "YulBlock",
													"src": "2435:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2452:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2452:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2455:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2455:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2445:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2445:6:9"
																},
																"nativeSrc": "2445:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2445:12:9"
															},
															"nativeSrc": "2445:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "2445:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2346:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2346:117:9"
											},
											{
												"body": {
													"nativeSrc": "2558:28:9",
													"nodeType": "YulBlock",
													"src": "2558:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2575:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2575:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2578:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2578:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2568:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2568:6:9"
																},
																"nativeSrc": "2568:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2568:12:9"
															},
															"nativeSrc": "2568:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "2568:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2469:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2469:117:9"
											},
											{
												"body": {
													"nativeSrc": "2637:81:9",
													"nodeType": "YulBlock",
													"src": "2637:81:9",
													"statements": [
														{
															"nativeSrc": "2647:65:9",
															"nodeType": "YulAssignment",
															"src": "2647:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2662:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2662:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2669:42:9",
																		"nodeType": "YulLiteral",
																		"src": "2669:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2658:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:9"
																},
																"nativeSrc": "2658:54:9",
																"nodeType": "YulFunctionCall",
																"src": "2658:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2647:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2647:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2592:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2619:5:9",
														"nodeType": "YulTypedName",
														"src": "2619:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2629:7:9",
														"nodeType": "YulTypedName",
														"src": "2629:7:9",
														"type": ""
													}
												],
												"src": "2592:126:9"
											},
											{
												"body": {
													"nativeSrc": "2769:51:9",
													"nodeType": "YulBlock",
													"src": "2769:51:9",
													"statements": [
														{
															"nativeSrc": "2779:35:9",
															"nodeType": "YulAssignment",
															"src": "2779:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2808:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2808:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2790:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2790:17:9"
																},
																"nativeSrc": "2790:24:9",
																"nodeType": "YulFunctionCall",
																"src": "2790:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2779:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2779:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2724:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2751:5:9",
														"nodeType": "YulTypedName",
														"src": "2751:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2761:7:9",
														"nodeType": "YulTypedName",
														"src": "2761:7:9",
														"type": ""
													}
												],
												"src": "2724:96:9"
											},
											{
												"body": {
													"nativeSrc": "2869:79:9",
													"nodeType": "YulBlock",
													"src": "2869:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2926:16:9",
																"nodeType": "YulBlock",
																"src": "2926:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2935:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2935:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2938:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2928:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2928:6:9"
																			},
																			"nativeSrc": "2928:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2928:12:9"
																		},
																		"nativeSrc": "2928:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2928:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2892:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2892:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2917:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2917:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2899:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2899:17:9"
																				},
																				"nativeSrc": "2899:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2899:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2889:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2889:2:9"
																		},
																		"nativeSrc": "2889:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2889:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2882:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2882:6:9"
																},
																"nativeSrc": "2882:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2882:43:9"
															},
															"nativeSrc": "2879:63:9",
															"nodeType": "YulIf",
															"src": "2879:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2826:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2862:5:9",
														"nodeType": "YulTypedName",
														"src": "2862:5:9",
														"type": ""
													}
												],
												"src": "2826:122:9"
											},
											{
												"body": {
													"nativeSrc": "3006:87:9",
													"nodeType": "YulBlock",
													"src": "3006:87:9",
													"statements": [
														{
															"nativeSrc": "3016:29:9",
															"nodeType": "YulAssignment",
															"src": "3016:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3038:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3038:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3025:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3025:12:9"
																},
																"nativeSrc": "3025:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3025:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3016:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3016:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3081:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3081:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3054:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3054:26:9"
																},
																"nativeSrc": "3054:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3054:33:9"
															},
															"nativeSrc": "3054:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3054:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2954:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2984:6:9",
														"nodeType": "YulTypedName",
														"src": "2984:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2992:3:9",
														"nodeType": "YulTypedName",
														"src": "2992:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3000:5:9",
														"nodeType": "YulTypedName",
														"src": "3000:5:9",
														"type": ""
													}
												],
												"src": "2954:139:9"
											},
											{
												"body": {
													"nativeSrc": "3144:32:9",
													"nodeType": "YulBlock",
													"src": "3144:32:9",
													"statements": [
														{
															"nativeSrc": "3154:16:9",
															"nodeType": "YulAssignment",
															"src": "3154:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "3165:5:9",
																"nodeType": "YulIdentifier",
																"src": "3165:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3154:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3154:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3099:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3126:5:9",
														"nodeType": "YulTypedName",
														"src": "3126:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3136:7:9",
														"nodeType": "YulTypedName",
														"src": "3136:7:9",
														"type": ""
													}
												],
												"src": "3099:77:9"
											},
											{
												"body": {
													"nativeSrc": "3225:79:9",
													"nodeType": "YulBlock",
													"src": "3225:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3282:16:9",
																"nodeType": "YulBlock",
																"src": "3282:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3291:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3291:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3294:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3294:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3284:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3284:6:9"
																			},
																			"nativeSrc": "3284:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3284:12:9"
																		},
																		"nativeSrc": "3284:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3284:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3248:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3248:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3273:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3273:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3255:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3255:17:9"
																				},
																				"nativeSrc": "3255:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3255:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3245:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3245:2:9"
																		},
																		"nativeSrc": "3245:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3245:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3238:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3238:6:9"
																},
																"nativeSrc": "3238:43:9",
																"nodeType": "YulFunctionCall",
																"src": "3238:43:9"
															},
															"nativeSrc": "3235:63:9",
															"nodeType": "YulIf",
															"src": "3235:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3182:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3218:5:9",
														"nodeType": "YulTypedName",
														"src": "3218:5:9",
														"type": ""
													}
												],
												"src": "3182:122:9"
											},
											{
												"body": {
													"nativeSrc": "3362:87:9",
													"nodeType": "YulBlock",
													"src": "3362:87:9",
													"statements": [
														{
															"nativeSrc": "3372:29:9",
															"nodeType": "YulAssignment",
															"src": "3372:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3394:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3394:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3381:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3381:12:9"
																},
																"nativeSrc": "3381:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3381:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3372:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3372:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3437:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3437:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3410:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3410:26:9"
																},
																"nativeSrc": "3410:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3410:33:9"
															},
															"nativeSrc": "3410:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3410:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3310:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3340:6:9",
														"nodeType": "YulTypedName",
														"src": "3340:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3348:3:9",
														"nodeType": "YulTypedName",
														"src": "3348:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3356:5:9",
														"nodeType": "YulTypedName",
														"src": "3356:5:9",
														"type": ""
													}
												],
												"src": "3310:139:9"
											},
											{
												"body": {
													"nativeSrc": "3538:391:9",
													"nodeType": "YulBlock",
													"src": "3538:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3584:83:9",
																"nodeType": "YulBlock",
																"src": "3584:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3586:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3586:77:9"
																			},
																			"nativeSrc": "3586:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3586:79:9"
																		},
																		"nativeSrc": "3586:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3586:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3559:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3559:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3568:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3555:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3555:3:9"
																		},
																		"nativeSrc": "3555:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3555:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3580:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3580:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3551:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3551:3:9"
																},
																"nativeSrc": "3551:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3551:32:9"
															},
															"nativeSrc": "3548:119:9",
															"nodeType": "YulIf",
															"src": "3548:119:9"
														},
														{
															"nativeSrc": "3677:117:9",
															"nodeType": "YulBlock",
															"src": "3677:117:9",
															"statements": [
																{
																	"nativeSrc": "3692:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3692:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3706:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3706:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3696:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3696:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3721:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3721:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3756:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3756:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3767:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3767:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3752:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3752:3:9"
																				},
																				"nativeSrc": "3752:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3752:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3776:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3776:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3731:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3731:20:9"
																		},
																		"nativeSrc": "3731:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3731:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3721:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3721:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3804:118:9",
															"nodeType": "YulBlock",
															"src": "3804:118:9",
															"statements": [
																{
																	"nativeSrc": "3819:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3819:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3833:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3823:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3823:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3849:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3849:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3884:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3884:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3895:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3895:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3880:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3880:3:9"
																				},
																				"nativeSrc": "3880:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3880:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3904:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3904:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3859:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3859:20:9"
																		},
																		"nativeSrc": "3859:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3859:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3849:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3849:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3455:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3500:9:9",
														"nodeType": "YulTypedName",
														"src": "3500:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3511:7:9",
														"nodeType": "YulTypedName",
														"src": "3511:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3523:6:9",
														"nodeType": "YulTypedName",
														"src": "3523:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3531:6:9",
														"nodeType": "YulTypedName",
														"src": "3531:6:9",
														"type": ""
													}
												],
												"src": "3455:474:9"
											},
											{
												"body": {
													"nativeSrc": "3977:48:9",
													"nodeType": "YulBlock",
													"src": "3977:48:9",
													"statements": [
														{
															"nativeSrc": "3987:32:9",
															"nodeType": "YulAssignment",
															"src": "3987:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4012:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4012:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4005:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4005:6:9"
																		},
																		"nativeSrc": "4005:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4005:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3998:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3998:6:9"
																},
																"nativeSrc": "3998:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3998:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3987:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3987:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3935:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3959:5:9",
														"nodeType": "YulTypedName",
														"src": "3959:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3969:7:9",
														"nodeType": "YulTypedName",
														"src": "3969:7:9",
														"type": ""
													}
												],
												"src": "3935:90:9"
											},
											{
												"body": {
													"nativeSrc": "4090:50:9",
													"nodeType": "YulBlock",
													"src": "4090:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4107:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4107:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4127:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4127:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4112:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "4112:14:9"
																		},
																		"nativeSrc": "4112:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4100:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4100:6:9"
																},
																"nativeSrc": "4100:34:9",
																"nodeType": "YulFunctionCall",
																"src": "4100:34:9"
															},
															"nativeSrc": "4100:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "4100:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "4031:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4078:5:9",
														"nodeType": "YulTypedName",
														"src": "4078:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4085:3:9",
														"nodeType": "YulTypedName",
														"src": "4085:3:9",
														"type": ""
													}
												],
												"src": "4031:109:9"
											},
											{
												"body": {
													"nativeSrc": "4238:118:9",
													"nodeType": "YulBlock",
													"src": "4238:118:9",
													"statements": [
														{
															"nativeSrc": "4248:26:9",
															"nodeType": "YulAssignment",
															"src": "4248:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4260:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4260:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4271:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4271:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4256:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4256:3:9"
																},
																"nativeSrc": "4256:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4256:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4248:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4248:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4322:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4322:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4335:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4335:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4346:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4346:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4331:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4331:3:9"
																		},
																		"nativeSrc": "4331:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4331:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4284:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "4284:37:9"
																},
																"nativeSrc": "4284:65:9",
																"nodeType": "YulFunctionCall",
																"src": "4284:65:9"
															},
															"nativeSrc": "4284:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "4284:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4146:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4210:9:9",
														"nodeType": "YulTypedName",
														"src": "4210:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4222:6:9",
														"nodeType": "YulTypedName",
														"src": "4222:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4233:4:9",
														"nodeType": "YulTypedName",
														"src": "4233:4:9",
														"type": ""
													}
												],
												"src": "4146:210:9"
											},
											{
												"body": {
													"nativeSrc": "4427:53:9",
													"nodeType": "YulBlock",
													"src": "4427:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4444:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4444:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4467:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4467:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4449:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "4449:17:9"
																		},
																		"nativeSrc": "4449:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4449:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4437:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4437:6:9"
																},
																"nativeSrc": "4437:37:9",
																"nodeType": "YulFunctionCall",
																"src": "4437:37:9"
															},
															"nativeSrc": "4437:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "4437:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4362:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4415:5:9",
														"nodeType": "YulTypedName",
														"src": "4415:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4422:3:9",
														"nodeType": "YulTypedName",
														"src": "4422:3:9",
														"type": ""
													}
												],
												"src": "4362:118:9"
											},
											{
												"body": {
													"nativeSrc": "4584:124:9",
													"nodeType": "YulBlock",
													"src": "4584:124:9",
													"statements": [
														{
															"nativeSrc": "4594:26:9",
															"nodeType": "YulAssignment",
															"src": "4594:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4606:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4606:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4617:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4617:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4602:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4602:3:9"
																},
																"nativeSrc": "4602:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4602:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4594:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4594:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4674:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4674:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4687:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4687:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4698:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4698:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4683:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4683:3:9"
																		},
																		"nativeSrc": "4683:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4683:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4630:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "4630:43:9"
																},
																"nativeSrc": "4630:71:9",
																"nodeType": "YulFunctionCall",
																"src": "4630:71:9"
															},
															"nativeSrc": "4630:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "4630:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4486:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4556:9:9",
														"nodeType": "YulTypedName",
														"src": "4556:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4568:6:9",
														"nodeType": "YulTypedName",
														"src": "4568:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4579:4:9",
														"nodeType": "YulTypedName",
														"src": "4579:4:9",
														"type": ""
													}
												],
												"src": "4486:222:9"
											},
											{
												"body": {
													"nativeSrc": "4780:263:9",
													"nodeType": "YulBlock",
													"src": "4780:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4826:83:9",
																"nodeType": "YulBlock",
																"src": "4826:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4828:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4828:77:9"
																			},
																			"nativeSrc": "4828:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4828:79:9"
																		},
																		"nativeSrc": "4828:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4828:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4801:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4801:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4810:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4810:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4797:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4797:3:9"
																		},
																		"nativeSrc": "4797:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4797:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4822:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4822:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4793:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:9"
																},
																"nativeSrc": "4793:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4793:32:9"
															},
															"nativeSrc": "4790:119:9",
															"nodeType": "YulIf",
															"src": "4790:119:9"
														},
														{
															"nativeSrc": "4919:117:9",
															"nodeType": "YulBlock",
															"src": "4919:117:9",
															"statements": [
																{
																	"nativeSrc": "4934:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4934:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4948:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4948:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4938:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4938:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4963:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4963:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4998:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4998:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5009:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5009:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4994:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4994:3:9"
																				},
																				"nativeSrc": "4994:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4994:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5018:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5018:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4973:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4973:20:9"
																		},
																		"nativeSrc": "4973:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4973:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4963:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4963:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4714:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4750:9:9",
														"nodeType": "YulTypedName",
														"src": "4750:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4761:7:9",
														"nodeType": "YulTypedName",
														"src": "4761:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4773:6:9",
														"nodeType": "YulTypedName",
														"src": "4773:6:9",
														"type": ""
													}
												],
												"src": "4714:329:9"
											},
											{
												"body": {
													"nativeSrc": "5149:519:9",
													"nodeType": "YulBlock",
													"src": "5149:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5195:83:9",
																"nodeType": "YulBlock",
																"src": "5195:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5197:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5197:77:9"
																			},
																			"nativeSrc": "5197:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5197:79:9"
																		},
																		"nativeSrc": "5197:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5197:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5170:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5170:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5179:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5179:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5166:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5166:3:9"
																		},
																		"nativeSrc": "5166:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5166:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5162:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5162:3:9"
																},
																"nativeSrc": "5162:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5162:32:9"
															},
															"nativeSrc": "5159:119:9",
															"nodeType": "YulIf",
															"src": "5159:119:9"
														},
														{
															"nativeSrc": "5288:117:9",
															"nodeType": "YulBlock",
															"src": "5288:117:9",
															"statements": [
																{
																	"nativeSrc": "5303:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5303:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5307:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5307:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5332:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5332:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5367:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5367:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5378:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5378:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5363:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5363:3:9"
																				},
																				"nativeSrc": "5363:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5363:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5387:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5387:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5342:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5342:20:9"
																		},
																		"nativeSrc": "5342:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5342:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5332:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5332:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5415:118:9",
															"nodeType": "YulBlock",
															"src": "5415:118:9",
															"statements": [
																{
																	"nativeSrc": "5430:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5430:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5444:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5444:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5434:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5434:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5460:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5460:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5495:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5495:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5506:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5506:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5491:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5491:3:9"
																				},
																				"nativeSrc": "5491:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5491:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5515:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5515:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5470:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5470:20:9"
																		},
																		"nativeSrc": "5470:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5470:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5460:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5460:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5543:118:9",
															"nodeType": "YulBlock",
															"src": "5543:118:9",
															"statements": [
																{
																	"nativeSrc": "5558:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5558:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5572:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5572:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5562:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5562:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5588:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5588:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5623:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5623:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5634:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5634:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5619:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5619:3:9"
																				},
																				"nativeSrc": "5619:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5619:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5643:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5643:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5598:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5598:20:9"
																		},
																		"nativeSrc": "5598:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5588:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5588:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5049:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5103:9:9",
														"nodeType": "YulTypedName",
														"src": "5103:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5114:7:9",
														"nodeType": "YulTypedName",
														"src": "5114:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5126:6:9",
														"nodeType": "YulTypedName",
														"src": "5126:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5134:6:9",
														"nodeType": "YulTypedName",
														"src": "5134:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5142:6:9",
														"nodeType": "YulTypedName",
														"src": "5142:6:9",
														"type": ""
													}
												],
												"src": "5049:619:9"
											},
											{
												"body": {
													"nativeSrc": "5717:43:9",
													"nodeType": "YulBlock",
													"src": "5717:43:9",
													"statements": [
														{
															"nativeSrc": "5727:27:9",
															"nodeType": "YulAssignment",
															"src": "5727:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5742:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5742:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5749:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5749:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5738:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5738:3:9"
																},
																"nativeSrc": "5738:16:9",
																"nodeType": "YulFunctionCall",
																"src": "5738:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5727:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5727:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5674:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5699:5:9",
														"nodeType": "YulTypedName",
														"src": "5699:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5709:7:9",
														"nodeType": "YulTypedName",
														"src": "5709:7:9",
														"type": ""
													}
												],
												"src": "5674:86:9"
											},
											{
												"body": {
													"nativeSrc": "5827:51:9",
													"nodeType": "YulBlock",
													"src": "5827:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5844:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5844:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5865:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5849:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "5849:15:9"
																		},
																		"nativeSrc": "5849:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5849:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5837:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5837:6:9"
																},
																"nativeSrc": "5837:35:9",
																"nodeType": "YulFunctionCall",
																"src": "5837:35:9"
															},
															"nativeSrc": "5837:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "5837:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5766:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5815:5:9",
														"nodeType": "YulTypedName",
														"src": "5815:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5822:3:9",
														"nodeType": "YulTypedName",
														"src": "5822:3:9",
														"type": ""
													}
												],
												"src": "5766:112:9"
											},
											{
												"body": {
													"nativeSrc": "5978:120:9",
													"nodeType": "YulBlock",
													"src": "5978:120:9",
													"statements": [
														{
															"nativeSrc": "5988:26:9",
															"nodeType": "YulAssignment",
															"src": "5988:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6000:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6000:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6011:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6011:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5996:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5996:3:9"
																},
																"nativeSrc": "5996:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5996:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5988:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5988:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6064:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6064:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6077:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6077:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6088:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6088:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6073:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6073:3:9"
																		},
																		"nativeSrc": "6073:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6073:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6024:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "6024:39:9"
																},
																"nativeSrc": "6024:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6024:67:9"
															},
															"nativeSrc": "6024:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "6024:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5884:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5950:9:9",
														"nodeType": "YulTypedName",
														"src": "5950:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5962:6:9",
														"nodeType": "YulTypedName",
														"src": "5962:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5973:4:9",
														"nodeType": "YulTypedName",
														"src": "5973:4:9",
														"type": ""
													}
												],
												"src": "5884:214:9"
											},
											{
												"body": {
													"nativeSrc": "6170:263:9",
													"nodeType": "YulBlock",
													"src": "6170:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6216:83:9",
																"nodeType": "YulBlock",
																"src": "6216:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6218:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6218:77:9"
																			},
																			"nativeSrc": "6218:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6218:79:9"
																		},
																		"nativeSrc": "6218:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6218:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6191:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6191:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6200:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6200:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6187:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6187:3:9"
																		},
																		"nativeSrc": "6187:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6187:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6212:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6212:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6183:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6183:3:9"
																},
																"nativeSrc": "6183:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6183:32:9"
															},
															"nativeSrc": "6180:119:9",
															"nodeType": "YulIf",
															"src": "6180:119:9"
														},
														{
															"nativeSrc": "6309:117:9",
															"nodeType": "YulBlock",
															"src": "6309:117:9",
															"statements": [
																{
																	"nativeSrc": "6324:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6324:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6338:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6338:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6328:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6328:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6353:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6353:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6388:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6388:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6399:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6399:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6384:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6384:3:9"
																				},
																				"nativeSrc": "6384:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6384:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6408:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6408:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6363:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6363:20:9"
																		},
																		"nativeSrc": "6363:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6363:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6353:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6353:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6104:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6140:9:9",
														"nodeType": "YulTypedName",
														"src": "6140:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6151:7:9",
														"nodeType": "YulTypedName",
														"src": "6151:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6163:6:9",
														"nodeType": "YulTypedName",
														"src": "6163:6:9",
														"type": ""
													}
												],
												"src": "6104:329:9"
											},
											{
												"body": {
													"nativeSrc": "6504:53:9",
													"nodeType": "YulBlock",
													"src": "6504:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6521:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6521:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6544:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6544:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6526:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "6526:17:9"
																		},
																		"nativeSrc": "6526:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6526:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6514:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6514:6:9"
																},
																"nativeSrc": "6514:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6514:37:9"
															},
															"nativeSrc": "6514:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "6514:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6439:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6492:5:9",
														"nodeType": "YulTypedName",
														"src": "6492:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6499:3:9",
														"nodeType": "YulTypedName",
														"src": "6499:3:9",
														"type": ""
													}
												],
												"src": "6439:118:9"
											},
											{
												"body": {
													"nativeSrc": "6661:124:9",
													"nodeType": "YulBlock",
													"src": "6661:124:9",
													"statements": [
														{
															"nativeSrc": "6671:26:9",
															"nodeType": "YulAssignment",
															"src": "6671:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6683:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6683:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6694:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6694:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6679:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6679:3:9"
																},
																"nativeSrc": "6679:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6679:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6671:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6671:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6751:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6751:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6764:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6764:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6775:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6775:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6760:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6760:3:9"
																		},
																		"nativeSrc": "6760:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6760:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6707:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6707:43:9"
																},
																"nativeSrc": "6707:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6707:71:9"
															},
															"nativeSrc": "6707:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6707:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6563:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6633:9:9",
														"nodeType": "YulTypedName",
														"src": "6633:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6645:6:9",
														"nodeType": "YulTypedName",
														"src": "6645:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6656:4:9",
														"nodeType": "YulTypedName",
														"src": "6656:4:9",
														"type": ""
													}
												],
												"src": "6563:222:9"
											},
											{
												"body": {
													"nativeSrc": "6819:152:9",
													"nodeType": "YulBlock",
													"src": "6819:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6836:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6836:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6839:77:9",
																		"nodeType": "YulLiteral",
																		"src": "6839:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6829:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6829:6:9"
																},
																"nativeSrc": "6829:88:9",
																"nodeType": "YulFunctionCall",
																"src": "6829:88:9"
															},
															"nativeSrc": "6829:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "6829:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6933:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6933:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6936:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6936:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6926:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6926:6:9"
																},
																"nativeSrc": "6926:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6926:15:9"
															},
															"nativeSrc": "6926:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6926:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6957:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6957:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6960:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6960:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6950:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6950:6:9"
																},
																"nativeSrc": "6950:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6950:15:9"
															},
															"nativeSrc": "6950:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6950:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "6791:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6791:180:9"
											},
											{
												"body": {
													"nativeSrc": "7034:62:9",
													"nodeType": "YulBlock",
													"src": "7034:62:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7068:22:9",
																"nodeType": "YulBlock",
																"src": "7068:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "7070:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7070:16:9"
																			},
																			"nativeSrc": "7070:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7070:18:9"
																		},
																		"nativeSrc": "7070:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7070:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7057:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7057:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7064:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7064:1:9",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7054:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7054:2:9"
																		},
																		"nativeSrc": "7054:12:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7054:12:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7047:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7047:6:9"
																},
																"nativeSrc": "7047:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7047:20:9"
															},
															"nativeSrc": "7044:46:9",
															"nodeType": "YulIf",
															"src": "7044:46:9"
														}
													]
												},
												"name": "validator_assert_t_enum$_SaleStage_$1398",
												"nativeSrc": "6977:119:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7027:5:9",
														"nodeType": "YulTypedName",
														"src": "7027:5:9",
														"type": ""
													}
												],
												"src": "6977:119:9"
											},
											{
												"body": {
													"nativeSrc": "7161:80:9",
													"nodeType": "YulBlock",
													"src": "7161:80:9",
													"statements": [
														{
															"nativeSrc": "7171:16:9",
															"nodeType": "YulAssignment",
															"src": "7171:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "7182:5:9",
																"nodeType": "YulIdentifier",
																"src": "7182:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7171:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "7171:7:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7229:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7229:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_SaleStage_$1398",
																	"nativeSrc": "7188:40:9",
																	"nodeType": "YulIdentifier",
																	"src": "7188:40:9"
																},
																"nativeSrc": "7188:47:9",
																"nodeType": "YulFunctionCall",
																"src": "7188:47:9"
															},
															"nativeSrc": "7188:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "7188:47:9"
														}
													]
												},
												"name": "cleanup_t_enum$_SaleStage_$1398",
												"nativeSrc": "7102:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7143:5:9",
														"nodeType": "YulTypedName",
														"src": "7143:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7153:7:9",
														"nodeType": "YulTypedName",
														"src": "7153:7:9",
														"type": ""
													}
												],
												"src": "7102:139:9"
											},
											{
												"body": {
													"nativeSrc": "7319:67:9",
													"nodeType": "YulBlock",
													"src": "7319:67:9",
													"statements": [
														{
															"nativeSrc": "7329:51:9",
															"nodeType": "YulAssignment",
															"src": "7329:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7374:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7374:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_SaleStage_$1398",
																	"nativeSrc": "7342:31:9",
																	"nodeType": "YulIdentifier",
																	"src": "7342:31:9"
																},
																"nativeSrc": "7342:38:9",
																"nodeType": "YulFunctionCall",
																"src": "7342:38:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7329:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "7329:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_SaleStage_$1398_to_t_uint8",
												"nativeSrc": "7247:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7299:5:9",
														"nodeType": "YulTypedName",
														"src": "7299:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7309:9:9",
														"nodeType": "YulTypedName",
														"src": "7309:9:9",
														"type": ""
													}
												],
												"src": "7247:139:9"
											},
											{
												"body": {
													"nativeSrc": "7469:78:9",
													"nodeType": "YulBlock",
													"src": "7469:78:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7486:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7486:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7534:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7534:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_SaleStage_$1398_to_t_uint8",
																			"nativeSrc": "7491:42:9",
																			"nodeType": "YulIdentifier",
																			"src": "7491:42:9"
																		},
																		"nativeSrc": "7491:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7491:49:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7479:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7479:6:9"
																},
																"nativeSrc": "7479:62:9",
																"nodeType": "YulFunctionCall",
																"src": "7479:62:9"
															},
															"nativeSrc": "7479:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "7479:62:9"
														}
													]
												},
												"name": "abi_encode_t_enum$_SaleStage_$1398_to_t_uint8_fromStack",
												"nativeSrc": "7392:155:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7457:5:9",
														"nodeType": "YulTypedName",
														"src": "7457:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7464:3:9",
														"nodeType": "YulTypedName",
														"src": "7464:3:9",
														"type": ""
													}
												],
												"src": "7392:155:9"
											},
											{
												"body": {
													"nativeSrc": "7663:136:9",
													"nodeType": "YulBlock",
													"src": "7663:136:9",
													"statements": [
														{
															"nativeSrc": "7673:26:9",
															"nodeType": "YulAssignment",
															"src": "7673:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7685:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7685:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7696:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7681:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7681:3:9"
																},
																"nativeSrc": "7681:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7681:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7673:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7673:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7765:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7765:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7778:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7778:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7789:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7789:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7774:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7774:3:9"
																		},
																		"nativeSrc": "7774:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7774:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_SaleStage_$1398_to_t_uint8_fromStack",
																	"nativeSrc": "7709:55:9",
																	"nodeType": "YulIdentifier",
																	"src": "7709:55:9"
																},
																"nativeSrc": "7709:83:9",
																"nodeType": "YulFunctionCall",
																"src": "7709:83:9"
															},
															"nativeSrc": "7709:83:9",
															"nodeType": "YulExpressionStatement",
															"src": "7709:83:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_SaleStage_$1398__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7553:246:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7635:9:9",
														"nodeType": "YulTypedName",
														"src": "7635:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7647:6:9",
														"nodeType": "YulTypedName",
														"src": "7647:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7658:4:9",
														"nodeType": "YulTypedName",
														"src": "7658:4:9",
														"type": ""
													}
												],
												"src": "7553:246:9"
											},
											{
												"body": {
													"nativeSrc": "7888:391:9",
													"nodeType": "YulBlock",
													"src": "7888:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7934:83:9",
																"nodeType": "YulBlock",
																"src": "7934:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7936:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7936:77:9"
																			},
																			"nativeSrc": "7936:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7936:79:9"
																		},
																		"nativeSrc": "7936:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7936:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7909:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7909:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7918:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7918:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7905:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7905:3:9"
																		},
																		"nativeSrc": "7905:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7905:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7930:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7930:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7901:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7901:3:9"
																},
																"nativeSrc": "7901:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7901:32:9"
															},
															"nativeSrc": "7898:119:9",
															"nodeType": "YulIf",
															"src": "7898:119:9"
														},
														{
															"nativeSrc": "8027:117:9",
															"nodeType": "YulBlock",
															"src": "8027:117:9",
															"statements": [
																{
																	"nativeSrc": "8042:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8042:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8056:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8056:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8046:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8046:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8071:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8071:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8106:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8106:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8117:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8117:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8102:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8102:3:9"
																				},
																				"nativeSrc": "8102:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8102:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8126:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8126:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8081:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8081:20:9"
																		},
																		"nativeSrc": "8081:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8081:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8071:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8071:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8154:118:9",
															"nodeType": "YulBlock",
															"src": "8154:118:9",
															"statements": [
																{
																	"nativeSrc": "8169:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8169:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8183:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8183:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8173:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8173:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8199:63:9",
																	"nodeType": "YulAssignment",
																	"src": "8199:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8234:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8234:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8245:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8245:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8230:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8230:3:9"
																				},
																				"nativeSrc": "8230:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8230:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8254:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8254:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8209:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "8209:20:9"
																		},
																		"nativeSrc": "8209:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8209:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8199:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8199:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7805:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7850:9:9",
														"nodeType": "YulTypedName",
														"src": "7850:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7861:7:9",
														"nodeType": "YulTypedName",
														"src": "7861:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7873:6:9",
														"nodeType": "YulTypedName",
														"src": "7873:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7881:6:9",
														"nodeType": "YulTypedName",
														"src": "7881:6:9",
														"type": ""
													}
												],
												"src": "7805:474:9"
											},
											{
												"body": {
													"nativeSrc": "8313:152:9",
													"nodeType": "YulBlock",
													"src": "8313:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8330:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8330:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8333:77:9",
																		"nodeType": "YulLiteral",
																		"src": "8333:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8323:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8323:6:9"
																},
																"nativeSrc": "8323:88:9",
																"nodeType": "YulFunctionCall",
																"src": "8323:88:9"
															},
															"nativeSrc": "8323:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "8323:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8427:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8427:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8430:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8430:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8420:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8420:6:9"
																},
																"nativeSrc": "8420:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8420:15:9"
															},
															"nativeSrc": "8420:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8420:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8451:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8451:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8454:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8454:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8444:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8444:6:9"
																},
																"nativeSrc": "8444:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8444:15:9"
															},
															"nativeSrc": "8444:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8444:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8285:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "8285:180:9"
											},
											{
												"body": {
													"nativeSrc": "8522:269:9",
													"nodeType": "YulBlock",
													"src": "8522:269:9",
													"statements": [
														{
															"nativeSrc": "8532:22:9",
															"nodeType": "YulAssignment",
															"src": "8532:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8546:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8546:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8552:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8552:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8542:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8542:3:9"
																},
																"nativeSrc": "8542:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8542:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8532:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8532:6:9"
																}
															]
														},
														{
															"nativeSrc": "8563:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8563:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8593:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8593:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8599:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8599:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8589:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8589:3:9"
																},
																"nativeSrc": "8589:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8589:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8567:18:9",
																	"nodeType": "YulTypedName",
																	"src": "8567:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8640:51:9",
																"nodeType": "YulBlock",
																"src": "8640:51:9",
																"statements": [
																	{
																		"nativeSrc": "8654:27:9",
																		"nodeType": "YulAssignment",
																		"src": "8654:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8668:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "8668:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8676:4:9",
																					"nodeType": "YulLiteral",
																					"src": "8676:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8664:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8664:3:9"
																			},
																			"nativeSrc": "8664:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8664:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8654:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8654:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8620:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "8620:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8613:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8613:6:9"
																},
																"nativeSrc": "8613:26:9",
																"nodeType": "YulFunctionCall",
																"src": "8613:26:9"
															},
															"nativeSrc": "8610:81:9",
															"nodeType": "YulIf",
															"src": "8610:81:9"
														},
														{
															"body": {
																"nativeSrc": "8743:42:9",
																"nodeType": "YulBlock",
																"src": "8743:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8757:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8757:16:9"
																			},
																			"nativeSrc": "8757:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8757:18:9"
																		},
																		"nativeSrc": "8757:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8757:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8707:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "8707:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8730:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8730:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8738:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8738:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8727:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "8727:2:9"
																		},
																		"nativeSrc": "8727:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8727:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8704:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8704:2:9"
																},
																"nativeSrc": "8704:38:9",
																"nodeType": "YulFunctionCall",
																"src": "8704:38:9"
															},
															"nativeSrc": "8701:84:9",
															"nodeType": "YulIf",
															"src": "8701:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8471:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8506:4:9",
														"nodeType": "YulTypedName",
														"src": "8506:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8515:6:9",
														"nodeType": "YulTypedName",
														"src": "8515:6:9",
														"type": ""
													}
												],
												"src": "8471:320:9"
											},
											{
												"body": {
													"nativeSrc": "8903:70:9",
													"nodeType": "YulBlock",
													"src": "8903:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8925:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8925:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8933:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8933:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8921:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8921:3:9"
																		},
																		"nativeSrc": "8921:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8921:14:9"
																	},
																	{
																		"hexValue": "53616c65732074617267657473206e6f7420796574206d65742e",
																		"kind": "string",
																		"nativeSrc": "8937:28:9",
																		"nodeType": "YulLiteral",
																		"src": "8937:28:9",
																		"type": "",
																		"value": "Sales targets not yet met."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8914:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8914:6:9"
																},
																"nativeSrc": "8914:52:9",
																"nodeType": "YulFunctionCall",
																"src": "8914:52:9"
															},
															"nativeSrc": "8914:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "8914:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef",
												"nativeSrc": "8797:176:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8895:6:9",
														"nodeType": "YulTypedName",
														"src": "8895:6:9",
														"type": ""
													}
												],
												"src": "8797:176:9"
											},
											{
												"body": {
													"nativeSrc": "9125:220:9",
													"nodeType": "YulBlock",
													"src": "9125:220:9",
													"statements": [
														{
															"nativeSrc": "9135:74:9",
															"nodeType": "YulAssignment",
															"src": "9135:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9201:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9201:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9206:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9206:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9142:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9142:58:9"
																},
																"nativeSrc": "9142:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9142:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9135:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9135:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9307:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9307:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef",
																	"nativeSrc": "9218:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "9218:88:9"
																},
																"nativeSrc": "9218:93:9",
																"nodeType": "YulFunctionCall",
																"src": "9218:93:9"
															},
															"nativeSrc": "9218:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "9218:93:9"
														},
														{
															"nativeSrc": "9320:19:9",
															"nodeType": "YulAssignment",
															"src": "9320:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9331:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9331:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9336:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9336:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9327:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9327:3:9"
																},
																"nativeSrc": "9327:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9327:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9320:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9320:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8979:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9113:3:9",
														"nodeType": "YulTypedName",
														"src": "9113:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9121:3:9",
														"nodeType": "YulTypedName",
														"src": "9121:3:9",
														"type": ""
													}
												],
												"src": "8979:366:9"
											},
											{
												"body": {
													"nativeSrc": "9522:248:9",
													"nodeType": "YulBlock",
													"src": "9522:248:9",
													"statements": [
														{
															"nativeSrc": "9532:26:9",
															"nodeType": "YulAssignment",
															"src": "9532:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9544:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9544:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9555:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9555:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9540:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9540:3:9"
																},
																"nativeSrc": "9540:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9540:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9532:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9532:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9579:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9579:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9590:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9590:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9575:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9575:3:9"
																		},
																		"nativeSrc": "9575:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9575:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9598:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9598:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9604:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9604:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9594:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9594:3:9"
																		},
																		"nativeSrc": "9594:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9594:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9568:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9568:6:9"
																},
																"nativeSrc": "9568:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9568:47:9"
															},
															"nativeSrc": "9568:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9568:47:9"
														},
														{
															"nativeSrc": "9624:139:9",
															"nodeType": "YulAssignment",
															"src": "9624:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9758:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9758:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9632:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "9632:124:9"
																},
																"nativeSrc": "9632:131:9",
																"nodeType": "YulFunctionCall",
																"src": "9632:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9624:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9624:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9351:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9502:9:9",
														"nodeType": "YulTypedName",
														"src": "9502:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9517:4:9",
														"nodeType": "YulTypedName",
														"src": "9517:4:9",
														"type": ""
													}
												],
												"src": "9351:419:9"
											},
											{
												"body": {
													"nativeSrc": "9882:127:9",
													"nodeType": "YulBlock",
													"src": "9882:127:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9904:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9904:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9912:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9912:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9900:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9900:3:9"
																		},
																		"nativeSrc": "9900:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9900:14:9"
																	},
																	{
																		"hexValue": "507269766174652053616c652068617320616c72656164792073746172746564",
																		"kind": "string",
																		"nativeSrc": "9916:34:9",
																		"nodeType": "YulLiteral",
																		"src": "9916:34:9",
																		"type": "",
																		"value": "Private Sale has already started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9893:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9893:6:9"
																},
																"nativeSrc": "9893:58:9",
																"nodeType": "YulFunctionCall",
																"src": "9893:58:9"
															},
															"nativeSrc": "9893:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "9893:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9972:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9972:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9980:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9980:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9968:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9968:3:9"
																		},
																		"nativeSrc": "9968:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9968:15:9"
																	},
																	{
																		"hexValue": "206f7220636f6e636c756465642e",
																		"kind": "string",
																		"nativeSrc": "9985:16:9",
																		"nodeType": "YulLiteral",
																		"src": "9985:16:9",
																		"type": "",
																		"value": " or concluded."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9961:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9961:6:9"
																},
																"nativeSrc": "9961:41:9",
																"nodeType": "YulFunctionCall",
																"src": "9961:41:9"
															},
															"nativeSrc": "9961:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "9961:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804",
												"nativeSrc": "9776:233:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9874:6:9",
														"nodeType": "YulTypedName",
														"src": "9874:6:9",
														"type": ""
													}
												],
												"src": "9776:233:9"
											},
											{
												"body": {
													"nativeSrc": "10161:220:9",
													"nodeType": "YulBlock",
													"src": "10161:220:9",
													"statements": [
														{
															"nativeSrc": "10171:74:9",
															"nodeType": "YulAssignment",
															"src": "10171:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10237:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10237:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10242:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10242:2:9",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10178:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "10178:58:9"
																},
																"nativeSrc": "10178:67:9",
																"nodeType": "YulFunctionCall",
																"src": "10178:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10171:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10171:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10343:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10343:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804",
																	"nativeSrc": "10254:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10254:88:9"
																},
																"nativeSrc": "10254:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10254:93:9"
															},
															"nativeSrc": "10254:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10254:93:9"
														},
														{
															"nativeSrc": "10356:19:9",
															"nodeType": "YulAssignment",
															"src": "10356:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10367:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10367:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10372:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10372:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10363:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10363:3:9"
																},
																"nativeSrc": "10363:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10363:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10356:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10356:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10015:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10149:3:9",
														"nodeType": "YulTypedName",
														"src": "10149:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10157:3:9",
														"nodeType": "YulTypedName",
														"src": "10157:3:9",
														"type": ""
													}
												],
												"src": "10015:366:9"
											},
											{
												"body": {
													"nativeSrc": "10558:248:9",
													"nodeType": "YulBlock",
													"src": "10558:248:9",
													"statements": [
														{
															"nativeSrc": "10568:26:9",
															"nodeType": "YulAssignment",
															"src": "10568:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10580:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10580:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10591:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10591:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10576:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10576:3:9"
																},
																"nativeSrc": "10576:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10576:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10568:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10568:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10615:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10615:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10626:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10626:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10611:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10611:3:9"
																		},
																		"nativeSrc": "10611:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10611:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10634:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10634:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10640:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10640:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10630:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10630:3:9"
																		},
																		"nativeSrc": "10630:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10630:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10604:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10604:6:9"
																},
																"nativeSrc": "10604:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10604:47:9"
															},
															"nativeSrc": "10604:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10604:47:9"
														},
														{
															"nativeSrc": "10660:139:9",
															"nodeType": "YulAssignment",
															"src": "10660:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10794:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10794:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10668:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10668:124:9"
																},
																"nativeSrc": "10668:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10668:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10660:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10660:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10387:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10538:9:9",
														"nodeType": "YulTypedName",
														"src": "10538:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10553:4:9",
														"nodeType": "YulTypedName",
														"src": "10553:4:9",
														"type": ""
													}
												],
												"src": "10387:419:9"
											},
											{
												"body": {
													"nativeSrc": "10918:62:9",
													"nodeType": "YulBlock",
													"src": "10918:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10940:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10940:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10948:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10948:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10936:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10936:3:9"
																		},
																		"nativeSrc": "10936:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10936:14:9"
																	},
																	{
																		"hexValue": "4e6f2073616c65206973206163746976652e",
																		"kind": "string",
																		"nativeSrc": "10952:20:9",
																		"nodeType": "YulLiteral",
																		"src": "10952:20:9",
																		"type": "",
																		"value": "No sale is active."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10929:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10929:6:9"
																},
																"nativeSrc": "10929:44:9",
																"nodeType": "YulFunctionCall",
																"src": "10929:44:9"
															},
															"nativeSrc": "10929:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "10929:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f",
												"nativeSrc": "10812:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10910:6:9",
														"nodeType": "YulTypedName",
														"src": "10910:6:9",
														"type": ""
													}
												],
												"src": "10812:168:9"
											},
											{
												"body": {
													"nativeSrc": "11132:220:9",
													"nodeType": "YulBlock",
													"src": "11132:220:9",
													"statements": [
														{
															"nativeSrc": "11142:74:9",
															"nodeType": "YulAssignment",
															"src": "11142:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11208:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11208:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11213:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11213:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11149:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11149:58:9"
																},
																"nativeSrc": "11149:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11149:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11142:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11142:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11314:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11314:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f",
																	"nativeSrc": "11225:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11225:88:9"
																},
																"nativeSrc": "11225:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11225:93:9"
															},
															"nativeSrc": "11225:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11225:93:9"
														},
														{
															"nativeSrc": "11327:19:9",
															"nodeType": "YulAssignment",
															"src": "11327:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11338:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11338:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11343:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11343:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11334:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11334:3:9"
																},
																"nativeSrc": "11334:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11334:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11327:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11327:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10986:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11120:3:9",
														"nodeType": "YulTypedName",
														"src": "11120:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11128:3:9",
														"nodeType": "YulTypedName",
														"src": "11128:3:9",
														"type": ""
													}
												],
												"src": "10986:366:9"
											},
											{
												"body": {
													"nativeSrc": "11529:248:9",
													"nodeType": "YulBlock",
													"src": "11529:248:9",
													"statements": [
														{
															"nativeSrc": "11539:26:9",
															"nodeType": "YulAssignment",
															"src": "11539:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11551:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11551:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11562:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11562:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11547:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11547:3:9"
																},
																"nativeSrc": "11547:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11547:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11539:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11539:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11586:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11586:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11597:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11597:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11582:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11582:3:9"
																		},
																		"nativeSrc": "11582:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11582:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11605:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11605:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11611:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11611:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11601:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11601:3:9"
																		},
																		"nativeSrc": "11601:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11601:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11575:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11575:6:9"
																},
																"nativeSrc": "11575:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11575:47:9"
															},
															"nativeSrc": "11575:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11575:47:9"
														},
														{
															"nativeSrc": "11631:139:9",
															"nodeType": "YulAssignment",
															"src": "11631:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11765:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11765:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11639:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11639:124:9"
																},
																"nativeSrc": "11639:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11639:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11631:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11631:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11358:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11509:9:9",
														"nodeType": "YulTypedName",
														"src": "11509:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11524:4:9",
														"nodeType": "YulTypedName",
														"src": "11524:4:9",
														"type": ""
													}
												],
												"src": "11358:419:9"
											},
											{
												"body": {
													"nativeSrc": "11889:66:9",
													"nodeType": "YulBlock",
													"src": "11889:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11911:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11911:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11919:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11919:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11907:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11907:3:9"
																		},
																		"nativeSrc": "11907:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11907:14:9"
																	},
																	{
																		"hexValue": "507269766174652053616c6520736f6c64206f75742e",
																		"kind": "string",
																		"nativeSrc": "11923:24:9",
																		"nodeType": "YulLiteral",
																		"src": "11923:24:9",
																		"type": "",
																		"value": "Private Sale sold out."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11900:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11900:6:9"
																},
																"nativeSrc": "11900:48:9",
																"nodeType": "YulFunctionCall",
																"src": "11900:48:9"
															},
															"nativeSrc": "11900:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "11900:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb",
												"nativeSrc": "11783:172:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11881:6:9",
														"nodeType": "YulTypedName",
														"src": "11881:6:9",
														"type": ""
													}
												],
												"src": "11783:172:9"
											},
											{
												"body": {
													"nativeSrc": "12107:220:9",
													"nodeType": "YulBlock",
													"src": "12107:220:9",
													"statements": [
														{
															"nativeSrc": "12117:74:9",
															"nodeType": "YulAssignment",
															"src": "12117:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12183:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12183:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12188:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12188:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12124:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12124:58:9"
																},
																"nativeSrc": "12124:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12124:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12117:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12117:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12289:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12289:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb",
																	"nativeSrc": "12200:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12200:88:9"
																},
																"nativeSrc": "12200:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12200:93:9"
															},
															"nativeSrc": "12200:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12200:93:9"
														},
														{
															"nativeSrc": "12302:19:9",
															"nodeType": "YulAssignment",
															"src": "12302:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12313:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12313:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12318:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12318:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12309:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12309:3:9"
																},
																"nativeSrc": "12309:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12309:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12302:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12302:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11961:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12095:3:9",
														"nodeType": "YulTypedName",
														"src": "12095:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12103:3:9",
														"nodeType": "YulTypedName",
														"src": "12103:3:9",
														"type": ""
													}
												],
												"src": "11961:366:9"
											},
											{
												"body": {
													"nativeSrc": "12504:248:9",
													"nodeType": "YulBlock",
													"src": "12504:248:9",
													"statements": [
														{
															"nativeSrc": "12514:26:9",
															"nodeType": "YulAssignment",
															"src": "12514:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12526:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12526:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12537:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12537:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12522:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12522:3:9"
																},
																"nativeSrc": "12522:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12522:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12514:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12514:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12561:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12561:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12572:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12572:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12557:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12557:3:9"
																		},
																		"nativeSrc": "12557:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12557:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12580:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12580:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12586:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12586:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12576:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12576:3:9"
																		},
																		"nativeSrc": "12576:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12576:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12550:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12550:6:9"
																},
																"nativeSrc": "12550:47:9",
																"nodeType": "YulFunctionCall",
																"src": "12550:47:9"
															},
															"nativeSrc": "12550:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "12550:47:9"
														},
														{
															"nativeSrc": "12606:139:9",
															"nodeType": "YulAssignment",
															"src": "12606:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12740:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12740:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12614:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "12614:124:9"
																},
																"nativeSrc": "12614:131:9",
																"nodeType": "YulFunctionCall",
																"src": "12614:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12606:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12606:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12333:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12484:9:9",
														"nodeType": "YulTypedName",
														"src": "12484:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12499:4:9",
														"nodeType": "YulTypedName",
														"src": "12499:4:9",
														"type": ""
													}
												],
												"src": "12333:419:9"
											},
											{
												"body": {
													"nativeSrc": "12786:152:9",
													"nodeType": "YulBlock",
													"src": "12786:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12803:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12803:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12806:77:9",
																		"nodeType": "YulLiteral",
																		"src": "12806:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12796:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12796:6:9"
																},
																"nativeSrc": "12796:88:9",
																"nodeType": "YulFunctionCall",
																"src": "12796:88:9"
															},
															"nativeSrc": "12796:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "12796:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12900:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12900:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12903:4:9",
																		"nodeType": "YulLiteral",
																		"src": "12903:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12893:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12893:6:9"
																},
																"nativeSrc": "12893:15:9",
																"nodeType": "YulFunctionCall",
																"src": "12893:15:9"
															},
															"nativeSrc": "12893:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "12893:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12924:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12924:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12927:4:9",
																		"nodeType": "YulLiteral",
																		"src": "12927:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12917:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12917:6:9"
																},
																"nativeSrc": "12917:15:9",
																"nodeType": "YulFunctionCall",
																"src": "12917:15:9"
															},
															"nativeSrc": "12917:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "12917:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12758:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "12758:180:9"
											},
											{
												"body": {
													"nativeSrc": "12988:147:9",
													"nodeType": "YulBlock",
													"src": "12988:147:9",
													"statements": [
														{
															"nativeSrc": "12998:25:9",
															"nodeType": "YulAssignment",
															"src": "12998:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13021:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13021:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13003:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "13003:17:9"
																},
																"nativeSrc": "13003:20:9",
																"nodeType": "YulFunctionCall",
																"src": "13003:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12998:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12998:1:9"
																}
															]
														},
														{
															"nativeSrc": "13032:25:9",
															"nodeType": "YulAssignment",
															"src": "13032:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13055:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13055:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13037:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "13037:17:9"
																},
																"nativeSrc": "13037:20:9",
																"nodeType": "YulFunctionCall",
																"src": "13037:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13032:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "13032:1:9"
																}
															]
														},
														{
															"nativeSrc": "13066:16:9",
															"nodeType": "YulAssignment",
															"src": "13066:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13077:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13077:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13080:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13080:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13073:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13073:3:9"
																},
																"nativeSrc": "13073:9:9",
																"nodeType": "YulFunctionCall",
																"src": "13073:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13066:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13066:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13106:22:9",
																"nodeType": "YulBlock",
																"src": "13106:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13108:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "13108:16:9"
																			},
																			"nativeSrc": "13108:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13108:18:9"
																		},
																		"nativeSrc": "13108:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13108:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13098:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "13098:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13101:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13101:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13095:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "13095:2:9"
																},
																"nativeSrc": "13095:10:9",
																"nodeType": "YulFunctionCall",
																"src": "13095:10:9"
															},
															"nativeSrc": "13092:36:9",
															"nodeType": "YulIf",
															"src": "13092:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12944:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12975:1:9",
														"nodeType": "YulTypedName",
														"src": "12975:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12978:1:9",
														"nodeType": "YulTypedName",
														"src": "12978:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12984:3:9",
														"nodeType": "YulTypedName",
														"src": "12984:3:9",
														"type": ""
													}
												],
												"src": "12944:191:9"
											},
											{
												"body": {
													"nativeSrc": "13247:114:9",
													"nodeType": "YulBlock",
													"src": "13247:114:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13269:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13269:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13277:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13277:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13265:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13265:3:9"
																		},
																		"nativeSrc": "13265:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13265:14:9"
																	},
																	{
																		"hexValue": "4578636565647320507269766174652053616c6520746f6b656e206c696d6974",
																		"kind": "string",
																		"nativeSrc": "13281:34:9",
																		"nodeType": "YulLiteral",
																		"src": "13281:34:9",
																		"type": "",
																		"value": "Exceeds Private Sale token limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13258:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13258:6:9"
																},
																"nativeSrc": "13258:58:9",
																"nodeType": "YulFunctionCall",
																"src": "13258:58:9"
															},
															"nativeSrc": "13258:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "13258:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13337:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13337:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13345:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13345:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13333:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13333:3:9"
																		},
																		"nativeSrc": "13333:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13333:15:9"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "13350:3:9",
																		"nodeType": "YulLiteral",
																		"src": "13350:3:9",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13326:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13326:6:9"
																},
																"nativeSrc": "13326:28:9",
																"nodeType": "YulFunctionCall",
																"src": "13326:28:9"
															},
															"nativeSrc": "13326:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "13326:28:9"
														}
													]
												},
												"name": "store_literal_in_memory_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e",
												"nativeSrc": "13141:220:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13239:6:9",
														"nodeType": "YulTypedName",
														"src": "13239:6:9",
														"type": ""
													}
												],
												"src": "13141:220:9"
											},
											{
												"body": {
													"nativeSrc": "13513:220:9",
													"nodeType": "YulBlock",
													"src": "13513:220:9",
													"statements": [
														{
															"nativeSrc": "13523:74:9",
															"nodeType": "YulAssignment",
															"src": "13523:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13589:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13589:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13594:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13594:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13530:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13530:58:9"
																},
																"nativeSrc": "13530:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13530:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13523:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13523:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13695:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13695:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e",
																	"nativeSrc": "13606:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13606:88:9"
																},
																"nativeSrc": "13606:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13606:93:9"
															},
															"nativeSrc": "13606:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13606:93:9"
														},
														{
															"nativeSrc": "13708:19:9",
															"nodeType": "YulAssignment",
															"src": "13708:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13719:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13719:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13724:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13724:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13715:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13715:3:9"
																},
																"nativeSrc": "13715:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13715:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13708:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13708:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13367:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13501:3:9",
														"nodeType": "YulTypedName",
														"src": "13501:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13509:3:9",
														"nodeType": "YulTypedName",
														"src": "13509:3:9",
														"type": ""
													}
												],
												"src": "13367:366:9"
											},
											{
												"body": {
													"nativeSrc": "13910:248:9",
													"nodeType": "YulBlock",
													"src": "13910:248:9",
													"statements": [
														{
															"nativeSrc": "13920:26:9",
															"nodeType": "YulAssignment",
															"src": "13920:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13932:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13932:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13943:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13943:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13928:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13928:3:9"
																},
																"nativeSrc": "13928:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13928:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13920:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13920:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13967:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13967:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13978:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13978:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13963:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13963:3:9"
																		},
																		"nativeSrc": "13963:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13963:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13986:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13986:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13992:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13992:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13982:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13982:3:9"
																		},
																		"nativeSrc": "13982:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13982:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13956:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13956:6:9"
																},
																"nativeSrc": "13956:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13956:47:9"
															},
															"nativeSrc": "13956:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13956:47:9"
														},
														{
															"nativeSrc": "14012:139:9",
															"nodeType": "YulAssignment",
															"src": "14012:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14146:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14146:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14020:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14020:124:9"
																},
																"nativeSrc": "14020:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14020:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14012:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14012:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13739:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13890:9:9",
														"nodeType": "YulTypedName",
														"src": "13890:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13905:4:9",
														"nodeType": "YulTypedName",
														"src": "13905:4:9",
														"type": ""
													}
												],
												"src": "13739:419:9"
											},
											{
												"body": {
													"nativeSrc": "14270:62:9",
													"nodeType": "YulBlock",
													"src": "14270:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14292:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14292:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14300:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14300:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14288:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14288:3:9"
																		},
																		"nativeSrc": "14288:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14288:14:9"
																	},
																	{
																		"hexValue": "5072652d53616c6520736f6c64206f75742e",
																		"kind": "string",
																		"nativeSrc": "14304:20:9",
																		"nodeType": "YulLiteral",
																		"src": "14304:20:9",
																		"type": "",
																		"value": "Pre-Sale sold out."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14281:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14281:6:9"
																},
																"nativeSrc": "14281:44:9",
																"nodeType": "YulFunctionCall",
																"src": "14281:44:9"
															},
															"nativeSrc": "14281:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "14281:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513",
												"nativeSrc": "14164:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14262:6:9",
														"nodeType": "YulTypedName",
														"src": "14262:6:9",
														"type": ""
													}
												],
												"src": "14164:168:9"
											},
											{
												"body": {
													"nativeSrc": "14484:220:9",
													"nodeType": "YulBlock",
													"src": "14484:220:9",
													"statements": [
														{
															"nativeSrc": "14494:74:9",
															"nodeType": "YulAssignment",
															"src": "14494:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14560:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14560:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14565:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14565:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14501:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14501:58:9"
																},
																"nativeSrc": "14501:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14501:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14494:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14494:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14666:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14666:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513",
																	"nativeSrc": "14577:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14577:88:9"
																},
																"nativeSrc": "14577:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14577:93:9"
															},
															"nativeSrc": "14577:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14577:93:9"
														},
														{
															"nativeSrc": "14679:19:9",
															"nodeType": "YulAssignment",
															"src": "14679:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14690:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14690:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14695:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14695:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14686:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14686:3:9"
																},
																"nativeSrc": "14686:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14686:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14679:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14679:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14338:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14472:3:9",
														"nodeType": "YulTypedName",
														"src": "14472:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14480:3:9",
														"nodeType": "YulTypedName",
														"src": "14480:3:9",
														"type": ""
													}
												],
												"src": "14338:366:9"
											},
											{
												"body": {
													"nativeSrc": "14881:248:9",
													"nodeType": "YulBlock",
													"src": "14881:248:9",
													"statements": [
														{
															"nativeSrc": "14891:26:9",
															"nodeType": "YulAssignment",
															"src": "14891:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14903:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14903:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14914:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14914:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14899:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14899:3:9"
																},
																"nativeSrc": "14899:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14899:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14891:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14891:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14938:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14938:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14949:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14949:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14934:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14934:3:9"
																		},
																		"nativeSrc": "14934:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14934:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14957:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14957:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14963:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14963:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14953:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14953:3:9"
																		},
																		"nativeSrc": "14953:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14953:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14927:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14927:6:9"
																},
																"nativeSrc": "14927:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14927:47:9"
															},
															"nativeSrc": "14927:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14927:47:9"
														},
														{
															"nativeSrc": "14983:139:9",
															"nodeType": "YulAssignment",
															"src": "14983:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15117:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15117:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14991:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14991:124:9"
																},
																"nativeSrc": "14991:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14991:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14983:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14983:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14710:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14861:9:9",
														"nodeType": "YulTypedName",
														"src": "14861:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14876:4:9",
														"nodeType": "YulTypedName",
														"src": "14876:4:9",
														"type": ""
													}
												],
												"src": "14710:419:9"
											},
											{
												"body": {
													"nativeSrc": "15241:74:9",
													"nodeType": "YulBlock",
													"src": "15241:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15263:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15263:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15271:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15271:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15259:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15259:3:9"
																		},
																		"nativeSrc": "15259:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15259:14:9"
																	},
																	{
																		"hexValue": "507572636861736520616d6f756e74206f7574206f66206c696d6974732e",
																		"kind": "string",
																		"nativeSrc": "15275:32:9",
																		"nodeType": "YulLiteral",
																		"src": "15275:32:9",
																		"type": "",
																		"value": "Purchase amount out of limits."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15252:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15252:6:9"
																},
																"nativeSrc": "15252:56:9",
																"nodeType": "YulFunctionCall",
																"src": "15252:56:9"
															},
															"nativeSrc": "15252:56:9",
															"nodeType": "YulExpressionStatement",
															"src": "15252:56:9"
														}
													]
												},
												"name": "store_literal_in_memory_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec",
												"nativeSrc": "15135:180:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15233:6:9",
														"nodeType": "YulTypedName",
														"src": "15233:6:9",
														"type": ""
													}
												],
												"src": "15135:180:9"
											},
											{
												"body": {
													"nativeSrc": "15467:220:9",
													"nodeType": "YulBlock",
													"src": "15467:220:9",
													"statements": [
														{
															"nativeSrc": "15477:74:9",
															"nodeType": "YulAssignment",
															"src": "15477:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15543:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15543:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15548:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15548:2:9",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15484:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15484:58:9"
																},
																"nativeSrc": "15484:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15484:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15477:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15477:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15649:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15649:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec",
																	"nativeSrc": "15560:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15560:88:9"
																},
																"nativeSrc": "15560:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15560:93:9"
															},
															"nativeSrc": "15560:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15560:93:9"
														},
														{
															"nativeSrc": "15662:19:9",
															"nodeType": "YulAssignment",
															"src": "15662:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15673:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15673:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15678:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15678:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15669:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15669:3:9"
																},
																"nativeSrc": "15669:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15669:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15662:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15662:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15321:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15455:3:9",
														"nodeType": "YulTypedName",
														"src": "15455:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15463:3:9",
														"nodeType": "YulTypedName",
														"src": "15463:3:9",
														"type": ""
													}
												],
												"src": "15321:366:9"
											},
											{
												"body": {
													"nativeSrc": "15864:248:9",
													"nodeType": "YulBlock",
													"src": "15864:248:9",
													"statements": [
														{
															"nativeSrc": "15874:26:9",
															"nodeType": "YulAssignment",
															"src": "15874:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15886:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15886:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15897:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15897:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15882:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15882:3:9"
																},
																"nativeSrc": "15882:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15882:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15874:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15874:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15921:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15921:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15932:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15932:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15917:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15917:3:9"
																		},
																		"nativeSrc": "15917:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15917:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15940:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15940:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15946:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15946:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15936:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15936:3:9"
																		},
																		"nativeSrc": "15936:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15936:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15910:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15910:6:9"
																},
																"nativeSrc": "15910:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15910:47:9"
															},
															"nativeSrc": "15910:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15910:47:9"
														},
														{
															"nativeSrc": "15966:139:9",
															"nodeType": "YulAssignment",
															"src": "15966:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16100:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16100:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15974:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15974:124:9"
																},
																"nativeSrc": "15974:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15974:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15966:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15966:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15693:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15844:9:9",
														"nodeType": "YulTypedName",
														"src": "15844:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15859:4:9",
														"nodeType": "YulTypedName",
														"src": "15859:4:9",
														"type": ""
													}
												],
												"src": "15693:419:9"
											},
											{
												"body": {
													"nativeSrc": "16224:73:9",
													"nodeType": "YulBlock",
													"src": "16224:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16246:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16246:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16254:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16254:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16242:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16242:3:9"
																		},
																		"nativeSrc": "16242:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16242:14:9"
																	},
																	{
																		"hexValue": "45786365656473205072652d53616c6520746f6b656e206c696d69742e",
																		"kind": "string",
																		"nativeSrc": "16258:31:9",
																		"nodeType": "YulLiteral",
																		"src": "16258:31:9",
																		"type": "",
																		"value": "Exceeds Pre-Sale token limit."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16235:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16235:6:9"
																},
																"nativeSrc": "16235:55:9",
																"nodeType": "YulFunctionCall",
																"src": "16235:55:9"
															},
															"nativeSrc": "16235:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "16235:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67",
												"nativeSrc": "16118:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16216:6:9",
														"nodeType": "YulTypedName",
														"src": "16216:6:9",
														"type": ""
													}
												],
												"src": "16118:179:9"
											},
											{
												"body": {
													"nativeSrc": "16449:220:9",
													"nodeType": "YulBlock",
													"src": "16449:220:9",
													"statements": [
														{
															"nativeSrc": "16459:74:9",
															"nodeType": "YulAssignment",
															"src": "16459:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16525:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16525:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16530:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16530:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16466:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16466:58:9"
																},
																"nativeSrc": "16466:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16466:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16459:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16459:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16631:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16631:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67",
																	"nativeSrc": "16542:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "16542:88:9"
																},
																"nativeSrc": "16542:93:9",
																"nodeType": "YulFunctionCall",
																"src": "16542:93:9"
															},
															"nativeSrc": "16542:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "16542:93:9"
														},
														{
															"nativeSrc": "16644:19:9",
															"nodeType": "YulAssignment",
															"src": "16644:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16655:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16655:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16660:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16660:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16651:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16651:3:9"
																},
																"nativeSrc": "16651:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16651:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16644:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16644:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16303:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16437:3:9",
														"nodeType": "YulTypedName",
														"src": "16437:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16445:3:9",
														"nodeType": "YulTypedName",
														"src": "16445:3:9",
														"type": ""
													}
												],
												"src": "16303:366:9"
											},
											{
												"body": {
													"nativeSrc": "16846:248:9",
													"nodeType": "YulBlock",
													"src": "16846:248:9",
													"statements": [
														{
															"nativeSrc": "16856:26:9",
															"nodeType": "YulAssignment",
															"src": "16856:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16868:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16868:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16879:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16879:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16864:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16864:3:9"
																},
																"nativeSrc": "16864:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16864:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16856:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16856:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16903:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16903:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16914:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16914:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16899:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16899:3:9"
																		},
																		"nativeSrc": "16899:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16899:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16922:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "16922:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16928:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16928:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16918:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16918:3:9"
																		},
																		"nativeSrc": "16918:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16918:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16892:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16892:6:9"
																},
																"nativeSrc": "16892:47:9",
																"nodeType": "YulFunctionCall",
																"src": "16892:47:9"
															},
															"nativeSrc": "16892:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "16892:47:9"
														},
														{
															"nativeSrc": "16948:139:9",
															"nodeType": "YulAssignment",
															"src": "16948:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17082:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17082:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16956:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "16956:124:9"
																},
																"nativeSrc": "16956:131:9",
																"nodeType": "YulFunctionCall",
																"src": "16956:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16948:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16948:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16675:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16826:9:9",
														"nodeType": "YulTypedName",
														"src": "16826:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16841:4:9",
														"nodeType": "YulTypedName",
														"src": "16841:4:9",
														"type": ""
													}
												],
												"src": "16675:419:9"
											},
											{
												"body": {
													"nativeSrc": "17206:114:9",
													"nodeType": "YulBlock",
													"src": "17206:114:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17228:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "17228:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17236:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17236:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17224:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17224:3:9"
																		},
																		"nativeSrc": "17224:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17224:14:9"
																	},
																	{
																		"hexValue": "56657374696e6720706572696f64206e6f742079657420636f6d706c65746564",
																		"kind": "string",
																		"nativeSrc": "17240:34:9",
																		"nodeType": "YulLiteral",
																		"src": "17240:34:9",
																		"type": "",
																		"value": "Vesting period not yet completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17217:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17217:6:9"
																},
																"nativeSrc": "17217:58:9",
																"nodeType": "YulFunctionCall",
																"src": "17217:58:9"
															},
															"nativeSrc": "17217:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "17217:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17296:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "17296:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17304:2:9",
																				"nodeType": "YulLiteral",
																				"src": "17304:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17292:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17292:3:9"
																		},
																		"nativeSrc": "17292:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17292:15:9"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "17309:3:9",
																		"nodeType": "YulLiteral",
																		"src": "17309:3:9",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17285:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17285:6:9"
																},
																"nativeSrc": "17285:28:9",
																"nodeType": "YulFunctionCall",
																"src": "17285:28:9"
															},
															"nativeSrc": "17285:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "17285:28:9"
														}
													]
												},
												"name": "store_literal_in_memory_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d",
												"nativeSrc": "17100:220:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17198:6:9",
														"nodeType": "YulTypedName",
														"src": "17198:6:9",
														"type": ""
													}
												],
												"src": "17100:220:9"
											},
											{
												"body": {
													"nativeSrc": "17472:220:9",
													"nodeType": "YulBlock",
													"src": "17472:220:9",
													"statements": [
														{
															"nativeSrc": "17482:74:9",
															"nodeType": "YulAssignment",
															"src": "17482:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17548:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17548:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17553:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17553:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17489:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "17489:58:9"
																},
																"nativeSrc": "17489:67:9",
																"nodeType": "YulFunctionCall",
																"src": "17489:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17482:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17482:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17654:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17654:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d",
																	"nativeSrc": "17565:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "17565:88:9"
																},
																"nativeSrc": "17565:93:9",
																"nodeType": "YulFunctionCall",
																"src": "17565:93:9"
															},
															"nativeSrc": "17565:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "17565:93:9"
														},
														{
															"nativeSrc": "17667:19:9",
															"nodeType": "YulAssignment",
															"src": "17667:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17678:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17678:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17683:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17683:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17674:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17674:3:9"
																},
																"nativeSrc": "17674:12:9",
																"nodeType": "YulFunctionCall",
																"src": "17674:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17667:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17667:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17326:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17460:3:9",
														"nodeType": "YulTypedName",
														"src": "17460:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17468:3:9",
														"nodeType": "YulTypedName",
														"src": "17468:3:9",
														"type": ""
													}
												],
												"src": "17326:366:9"
											},
											{
												"body": {
													"nativeSrc": "17869:248:9",
													"nodeType": "YulBlock",
													"src": "17869:248:9",
													"statements": [
														{
															"nativeSrc": "17879:26:9",
															"nodeType": "YulAssignment",
															"src": "17879:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17891:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17891:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17902:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17902:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17887:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17887:3:9"
																},
																"nativeSrc": "17887:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17887:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17879:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17879:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17926:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17926:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17937:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17937:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17922:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17922:3:9"
																		},
																		"nativeSrc": "17922:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17922:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17945:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17945:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17951:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17951:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17941:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17941:3:9"
																		},
																		"nativeSrc": "17941:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17941:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17915:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17915:6:9"
																},
																"nativeSrc": "17915:47:9",
																"nodeType": "YulFunctionCall",
																"src": "17915:47:9"
															},
															"nativeSrc": "17915:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "17915:47:9"
														},
														{
															"nativeSrc": "17971:139:9",
															"nodeType": "YulAssignment",
															"src": "17971:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18105:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18105:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17979:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "17979:124:9"
																},
																"nativeSrc": "17979:131:9",
																"nodeType": "YulFunctionCall",
																"src": "17979:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17971:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17971:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17698:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17849:9:9",
														"nodeType": "YulTypedName",
														"src": "17849:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17864:4:9",
														"nodeType": "YulTypedName",
														"src": "17864:4:9",
														"type": ""
													}
												],
												"src": "17698:419:9"
											},
											{
												"body": {
													"nativeSrc": "18229:120:9",
													"nodeType": "YulBlock",
													"src": "18229:120:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18251:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18251:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18259:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18259:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18247:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18247:3:9"
																		},
																		"nativeSrc": "18247:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18247:14:9"
																	},
																	{
																		"hexValue": "507269766174652053616c652073686f756c6420626520636f6e636c75646564",
																		"kind": "string",
																		"nativeSrc": "18263:34:9",
																		"nodeType": "YulLiteral",
																		"src": "18263:34:9",
																		"type": "",
																		"value": "Private Sale should be concluded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18240:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18240:6:9"
																},
																"nativeSrc": "18240:58:9",
																"nodeType": "YulFunctionCall",
																"src": "18240:58:9"
															},
															"nativeSrc": "18240:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "18240:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18319:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18319:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18327:2:9",
																				"nodeType": "YulLiteral",
																				"src": "18327:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18315:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18315:3:9"
																		},
																		"nativeSrc": "18315:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18315:15:9"
																	},
																	{
																		"hexValue": "2066697273742e",
																		"kind": "string",
																		"nativeSrc": "18332:9:9",
																		"nodeType": "YulLiteral",
																		"src": "18332:9:9",
																		"type": "",
																		"value": " first."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18308:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18308:6:9"
																},
																"nativeSrc": "18308:34:9",
																"nodeType": "YulFunctionCall",
																"src": "18308:34:9"
															},
															"nativeSrc": "18308:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "18308:34:9"
														}
													]
												},
												"name": "store_literal_in_memory_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878",
												"nativeSrc": "18123:226:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18221:6:9",
														"nodeType": "YulTypedName",
														"src": "18221:6:9",
														"type": ""
													}
												],
												"src": "18123:226:9"
											},
											{
												"body": {
													"nativeSrc": "18501:220:9",
													"nodeType": "YulBlock",
													"src": "18501:220:9",
													"statements": [
														{
															"nativeSrc": "18511:74:9",
															"nodeType": "YulAssignment",
															"src": "18511:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18577:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18577:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18582:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18582:2:9",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18518:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "18518:58:9"
																},
																"nativeSrc": "18518:67:9",
																"nodeType": "YulFunctionCall",
																"src": "18518:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18511:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18511:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18683:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18683:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878",
																	"nativeSrc": "18594:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "18594:88:9"
																},
																"nativeSrc": "18594:93:9",
																"nodeType": "YulFunctionCall",
																"src": "18594:93:9"
															},
															"nativeSrc": "18594:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "18594:93:9"
														},
														{
															"nativeSrc": "18696:19:9",
															"nodeType": "YulAssignment",
															"src": "18696:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18707:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18707:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18712:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18712:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18703:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18703:3:9"
																},
																"nativeSrc": "18703:12:9",
																"nodeType": "YulFunctionCall",
																"src": "18703:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18696:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18696:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18355:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18489:3:9",
														"nodeType": "YulTypedName",
														"src": "18489:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18497:3:9",
														"nodeType": "YulTypedName",
														"src": "18497:3:9",
														"type": ""
													}
												],
												"src": "18355:366:9"
											},
											{
												"body": {
													"nativeSrc": "18898:248:9",
													"nodeType": "YulBlock",
													"src": "18898:248:9",
													"statements": [
														{
															"nativeSrc": "18908:26:9",
															"nodeType": "YulAssignment",
															"src": "18908:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18920:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18920:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18931:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18931:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18916:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18916:3:9"
																},
																"nativeSrc": "18916:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18916:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18908:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18908:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18955:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18955:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18966:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18966:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18951:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18951:3:9"
																		},
																		"nativeSrc": "18951:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18951:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18974:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "18974:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18980:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18980:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18970:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18970:3:9"
																		},
																		"nativeSrc": "18970:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18970:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18944:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18944:6:9"
																},
																"nativeSrc": "18944:47:9",
																"nodeType": "YulFunctionCall",
																"src": "18944:47:9"
															},
															"nativeSrc": "18944:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "18944:47:9"
														},
														{
															"nativeSrc": "19000:139:9",
															"nodeType": "YulAssignment",
															"src": "19000:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19134:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "19134:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19008:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "19008:124:9"
																},
																"nativeSrc": "19008:131:9",
																"nodeType": "YulFunctionCall",
																"src": "19008:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19000:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19000:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18727:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18878:9:9",
														"nodeType": "YulTypedName",
														"src": "18878:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18893:4:9",
														"nodeType": "YulTypedName",
														"src": "18893:4:9",
														"type": ""
													}
												],
												"src": "18727:419:9"
											},
											{
												"body": {
													"nativeSrc": "19258:76:9",
													"nodeType": "YulBlock",
													"src": "19258:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19280:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "19280:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19288:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19288:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19276:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19276:3:9"
																		},
																		"nativeSrc": "19276:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19276:14:9"
																	},
																	{
																		"hexValue": "507269766174652053616c6520746172676574206e6f7420726561636865642e",
																		"kind": "string",
																		"nativeSrc": "19292:34:9",
																		"nodeType": "YulLiteral",
																		"src": "19292:34:9",
																		"type": "",
																		"value": "Private Sale target not reached."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19269:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19269:6:9"
																},
																"nativeSrc": "19269:58:9",
																"nodeType": "YulFunctionCall",
																"src": "19269:58:9"
															},
															"nativeSrc": "19269:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "19269:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e",
												"nativeSrc": "19152:182:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19250:6:9",
														"nodeType": "YulTypedName",
														"src": "19250:6:9",
														"type": ""
													}
												],
												"src": "19152:182:9"
											},
											{
												"body": {
													"nativeSrc": "19486:220:9",
													"nodeType": "YulBlock",
													"src": "19486:220:9",
													"statements": [
														{
															"nativeSrc": "19496:74:9",
															"nodeType": "YulAssignment",
															"src": "19496:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19562:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19562:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19567:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19567:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19503:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "19503:58:9"
																},
																"nativeSrc": "19503:67:9",
																"nodeType": "YulFunctionCall",
																"src": "19503:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19496:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19496:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19668:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19668:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e",
																	"nativeSrc": "19579:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "19579:88:9"
																},
																"nativeSrc": "19579:93:9",
																"nodeType": "YulFunctionCall",
																"src": "19579:93:9"
															},
															"nativeSrc": "19579:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "19579:93:9"
														},
														{
															"nativeSrc": "19681:19:9",
															"nodeType": "YulAssignment",
															"src": "19681:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19692:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19692:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19697:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19697:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19688:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19688:3:9"
																},
																"nativeSrc": "19688:12:9",
																"nodeType": "YulFunctionCall",
																"src": "19688:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19681:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19681:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19340:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19474:3:9",
														"nodeType": "YulTypedName",
														"src": "19474:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19482:3:9",
														"nodeType": "YulTypedName",
														"src": "19482:3:9",
														"type": ""
													}
												],
												"src": "19340:366:9"
											},
											{
												"body": {
													"nativeSrc": "19883:248:9",
													"nodeType": "YulBlock",
													"src": "19883:248:9",
													"statements": [
														{
															"nativeSrc": "19893:26:9",
															"nodeType": "YulAssignment",
															"src": "19893:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19905:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "19905:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19916:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19916:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19901:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19901:3:9"
																},
																"nativeSrc": "19901:18:9",
																"nodeType": "YulFunctionCall",
																"src": "19901:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19893:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19893:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19940:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19940:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19951:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19951:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19936:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19936:3:9"
																		},
																		"nativeSrc": "19936:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19936:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19959:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "19959:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19965:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19965:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19955:3:9"
																		},
																		"nativeSrc": "19955:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19955:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19929:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19929:6:9"
																},
																"nativeSrc": "19929:47:9",
																"nodeType": "YulFunctionCall",
																"src": "19929:47:9"
															},
															"nativeSrc": "19929:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "19929:47:9"
														},
														{
															"nativeSrc": "19985:139:9",
															"nodeType": "YulAssignment",
															"src": "19985:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20119:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "20119:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19993:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "19993:124:9"
																},
																"nativeSrc": "19993:131:9",
																"nodeType": "YulFunctionCall",
																"src": "19993:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19985:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19985:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19712:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19863:9:9",
														"nodeType": "YulTypedName",
														"src": "19863:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19878:4:9",
														"nodeType": "YulTypedName",
														"src": "19878:4:9",
														"type": ""
													}
												],
												"src": "19712:419:9"
											},
											{
												"body": {
													"nativeSrc": "20291:288:9",
													"nodeType": "YulBlock",
													"src": "20291:288:9",
													"statements": [
														{
															"nativeSrc": "20301:26:9",
															"nodeType": "YulAssignment",
															"src": "20301:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20313:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "20313:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20324:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20324:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20309:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20309:3:9"
																},
																"nativeSrc": "20309:18:9",
																"nodeType": "YulFunctionCall",
																"src": "20309:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20301:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20301:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20381:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "20381:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20394:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20394:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20405:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20405:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20390:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20390:3:9"
																		},
																		"nativeSrc": "20390:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20390:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20337:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "20337:43:9"
																},
																"nativeSrc": "20337:71:9",
																"nodeType": "YulFunctionCall",
																"src": "20337:71:9"
															},
															"nativeSrc": "20337:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "20337:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20462:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "20462:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20475:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20475:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20486:2:9",
																				"nodeType": "YulLiteral",
																				"src": "20486:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20471:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20471:3:9"
																		},
																		"nativeSrc": "20471:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20471:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20418:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "20418:43:9"
																},
																"nativeSrc": "20418:72:9",
																"nodeType": "YulFunctionCall",
																"src": "20418:72:9"
															},
															"nativeSrc": "20418:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "20418:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20544:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "20544:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20557:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20557:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20568:2:9",
																				"nodeType": "YulLiteral",
																				"src": "20568:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20553:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20553:3:9"
																		},
																		"nativeSrc": "20553:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20553:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20500:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "20500:43:9"
																},
																"nativeSrc": "20500:72:9",
																"nodeType": "YulFunctionCall",
																"src": "20500:72:9"
															},
															"nativeSrc": "20500:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "20500:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20137:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20247:9:9",
														"nodeType": "YulTypedName",
														"src": "20247:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20259:6:9",
														"nodeType": "YulTypedName",
														"src": "20259:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20267:6:9",
														"nodeType": "YulTypedName",
														"src": "20267:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20275:6:9",
														"nodeType": "YulTypedName",
														"src": "20275:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20286:4:9",
														"nodeType": "YulTypedName",
														"src": "20286:4:9",
														"type": ""
													}
												],
												"src": "20137:442:9"
											},
											{
												"body": {
													"nativeSrc": "20691:75:9",
													"nodeType": "YulBlock",
													"src": "20691:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20713:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "20713:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20721:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20721:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20709:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20709:3:9"
																		},
																		"nativeSrc": "20709:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20709:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "20725:33:9",
																		"nodeType": "YulLiteral",
																		"src": "20725:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20702:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20702:6:9"
																},
																"nativeSrc": "20702:57:9",
																"nodeType": "YulFunctionCall",
																"src": "20702:57:9"
															},
															"nativeSrc": "20702:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "20702:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "20585:181:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20683:6:9",
														"nodeType": "YulTypedName",
														"src": "20683:6:9",
														"type": ""
													}
												],
												"src": "20585:181:9"
											},
											{
												"body": {
													"nativeSrc": "20918:220:9",
													"nodeType": "YulBlock",
													"src": "20918:220:9",
													"statements": [
														{
															"nativeSrc": "20928:74:9",
															"nodeType": "YulAssignment",
															"src": "20928:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20994:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20994:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20999:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20999:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20935:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "20935:58:9"
																},
																"nativeSrc": "20935:67:9",
																"nodeType": "YulFunctionCall",
																"src": "20935:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20928:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20928:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21100:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21100:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "21011:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "21011:88:9"
																},
																"nativeSrc": "21011:93:9",
																"nodeType": "YulFunctionCall",
																"src": "21011:93:9"
															},
															"nativeSrc": "21011:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "21011:93:9"
														},
														{
															"nativeSrc": "21113:19:9",
															"nodeType": "YulAssignment",
															"src": "21113:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21124:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21124:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21129:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21129:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21120:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21120:3:9"
																},
																"nativeSrc": "21120:12:9",
																"nodeType": "YulFunctionCall",
																"src": "21120:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21113:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21113:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20772:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20906:3:9",
														"nodeType": "YulTypedName",
														"src": "20906:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20914:3:9",
														"nodeType": "YulTypedName",
														"src": "20914:3:9",
														"type": ""
													}
												],
												"src": "20772:366:9"
											},
											{
												"body": {
													"nativeSrc": "21315:248:9",
													"nodeType": "YulBlock",
													"src": "21315:248:9",
													"statements": [
														{
															"nativeSrc": "21325:26:9",
															"nodeType": "YulAssignment",
															"src": "21325:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21337:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "21337:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21348:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21348:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21333:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21333:3:9"
																},
																"nativeSrc": "21333:18:9",
																"nodeType": "YulFunctionCall",
																"src": "21333:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21325:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21325:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21372:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21372:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21383:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21383:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21368:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21368:3:9"
																		},
																		"nativeSrc": "21368:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21368:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21391:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "21391:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21397:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21397:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21387:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21387:3:9"
																		},
																		"nativeSrc": "21387:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21387:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21361:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21361:6:9"
																},
																"nativeSrc": "21361:47:9",
																"nodeType": "YulFunctionCall",
																"src": "21361:47:9"
															},
															"nativeSrc": "21361:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "21361:47:9"
														},
														{
															"nativeSrc": "21417:139:9",
															"nodeType": "YulAssignment",
															"src": "21417:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21551:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "21551:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21425:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "21425:124:9"
																},
																"nativeSrc": "21425:131:9",
																"nodeType": "YulFunctionCall",
																"src": "21425:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21417:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21417:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21144:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21295:9:9",
														"nodeType": "YulTypedName",
														"src": "21295:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21310:4:9",
														"nodeType": "YulTypedName",
														"src": "21310:4:9",
														"type": ""
													}
												],
												"src": "21144:419:9"
											},
											{
												"body": {
													"nativeSrc": "21614:149:9",
													"nodeType": "YulBlock",
													"src": "21614:149:9",
													"statements": [
														{
															"nativeSrc": "21624:25:9",
															"nodeType": "YulAssignment",
															"src": "21624:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21647:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21647:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21629:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "21629:17:9"
																},
																"nativeSrc": "21629:20:9",
																"nodeType": "YulFunctionCall",
																"src": "21629:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21624:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "21624:1:9"
																}
															]
														},
														{
															"nativeSrc": "21658:25:9",
															"nodeType": "YulAssignment",
															"src": "21658:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21681:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21681:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21663:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "21663:17:9"
																},
																"nativeSrc": "21663:20:9",
																"nodeType": "YulFunctionCall",
																"src": "21663:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21658:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "21658:1:9"
																}
															]
														},
														{
															"nativeSrc": "21692:17:9",
															"nodeType": "YulAssignment",
															"src": "21692:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21704:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21704:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21707:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21707:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "21700:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21700:3:9"
																},
																"nativeSrc": "21700:9:9",
																"nodeType": "YulFunctionCall",
																"src": "21700:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "21692:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21692:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21734:22:9",
																"nodeType": "YulBlock",
																"src": "21734:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21736:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "21736:16:9"
																			},
																			"nativeSrc": "21736:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "21736:18:9"
																		},
																		"nativeSrc": "21736:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "21736:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "21725:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "21725:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "21731:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21731:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21722:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "21722:2:9"
																},
																"nativeSrc": "21722:11:9",
																"nodeType": "YulFunctionCall",
																"src": "21722:11:9"
															},
															"nativeSrc": "21719:37:9",
															"nodeType": "YulIf",
															"src": "21719:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "21569:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21600:1:9",
														"nodeType": "YulTypedName",
														"src": "21600:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21603:1:9",
														"nodeType": "YulTypedName",
														"src": "21603:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "21609:4:9",
														"nodeType": "YulTypedName",
														"src": "21609:4:9",
														"type": ""
													}
												],
												"src": "21569:194:9"
											},
											{
												"body": {
													"nativeSrc": "21817:362:9",
													"nodeType": "YulBlock",
													"src": "21817:362:9",
													"statements": [
														{
															"nativeSrc": "21827:25:9",
															"nodeType": "YulAssignment",
															"src": "21827:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21850:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21850:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21832:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "21832:17:9"
																},
																"nativeSrc": "21832:20:9",
																"nodeType": "YulFunctionCall",
																"src": "21832:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21827:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "21827:1:9"
																}
															]
														},
														{
															"nativeSrc": "21861:25:9",
															"nodeType": "YulAssignment",
															"src": "21861:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21884:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21884:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21866:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "21866:17:9"
																},
																"nativeSrc": "21866:20:9",
																"nodeType": "YulFunctionCall",
																"src": "21866:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21861:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "21861:1:9"
																}
															]
														},
														{
															"nativeSrc": "21895:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "21895:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21918:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21918:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21921:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "21921:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "21914:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21914:3:9"
																},
																"nativeSrc": "21914:9:9",
																"nodeType": "YulFunctionCall",
																"src": "21914:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "21899:11:9",
																	"nodeType": "YulTypedName",
																	"src": "21899:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21932:41:9",
															"nodeType": "YulAssignment",
															"src": "21932:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "21961:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "21961:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21943:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "21943:17:9"
																},
																"nativeSrc": "21943:30:9",
																"nodeType": "YulFunctionCall",
																"src": "21943:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "21932:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "21932:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22150:22:9",
																"nodeType": "YulBlock",
																"src": "22150:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "22152:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "22152:16:9"
																			},
																			"nativeSrc": "22152:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "22152:18:9"
																		},
																		"nativeSrc": "22152:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "22152:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "22083:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "22083:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "22076:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "22076:6:9"
																				},
																				"nativeSrc": "22076:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "22076:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "22106:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "22106:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "22113:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "22113:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "22122:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "22122:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "22109:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "22109:3:9"
																						},
																						"nativeSrc": "22109:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "22109:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "22103:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "22103:2:9"
																				},
																				"nativeSrc": "22103:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "22103:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "22056:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "22056:2:9"
																		},
																		"nativeSrc": "22056:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22056:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "22036:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22036:6:9"
																},
																"nativeSrc": "22036:113:9",
																"nodeType": "YulFunctionCall",
																"src": "22036:113:9"
															},
															"nativeSrc": "22033:139:9",
															"nodeType": "YulIf",
															"src": "22033:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "21769:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21800:1:9",
														"nodeType": "YulTypedName",
														"src": "21800:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21803:1:9",
														"nodeType": "YulTypedName",
														"src": "21803:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "21809:7:9",
														"nodeType": "YulTypedName",
														"src": "21809:7:9",
														"type": ""
													}
												],
												"src": "21769:410:9"
											},
											{
												"body": {
													"nativeSrc": "22213:152:9",
													"nodeType": "YulBlock",
													"src": "22213:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22230:1:9",
																		"nodeType": "YulLiteral",
																		"src": "22230:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22233:77:9",
																		"nodeType": "YulLiteral",
																		"src": "22233:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22223:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22223:6:9"
																},
																"nativeSrc": "22223:88:9",
																"nodeType": "YulFunctionCall",
																"src": "22223:88:9"
															},
															"nativeSrc": "22223:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "22223:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22327:1:9",
																		"nodeType": "YulLiteral",
																		"src": "22327:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22330:4:9",
																		"nodeType": "YulLiteral",
																		"src": "22330:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22320:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22320:6:9"
																},
																"nativeSrc": "22320:15:9",
																"nodeType": "YulFunctionCall",
																"src": "22320:15:9"
															},
															"nativeSrc": "22320:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "22320:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22351:1:9",
																		"nodeType": "YulLiteral",
																		"src": "22351:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22354:4:9",
																		"nodeType": "YulLiteral",
																		"src": "22354:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22344:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22344:6:9"
																},
																"nativeSrc": "22344:15:9",
																"nodeType": "YulFunctionCall",
																"src": "22344:15:9"
															},
															"nativeSrc": "22344:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "22344:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "22185:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "22185:180:9"
											},
											{
												"body": {
													"nativeSrc": "22413:143:9",
													"nodeType": "YulBlock",
													"src": "22413:143:9",
													"statements": [
														{
															"nativeSrc": "22423:25:9",
															"nodeType": "YulAssignment",
															"src": "22423:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22446:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "22446:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22428:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "22428:17:9"
																},
																"nativeSrc": "22428:20:9",
																"nodeType": "YulFunctionCall",
																"src": "22428:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "22423:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "22423:1:9"
																}
															]
														},
														{
															"nativeSrc": "22457:25:9",
															"nodeType": "YulAssignment",
															"src": "22457:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22480:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "22480:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22462:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "22462:17:9"
																},
																"nativeSrc": "22462:20:9",
																"nodeType": "YulFunctionCall",
																"src": "22462:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "22457:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "22457:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22504:22:9",
																"nodeType": "YulBlock",
																"src": "22504:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "22506:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "22506:16:9"
																			},
																			"nativeSrc": "22506:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "22506:18:9"
																		},
																		"nativeSrc": "22506:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "22506:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22501:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "22501:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "22494:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22494:6:9"
																},
																"nativeSrc": "22494:9:9",
																"nodeType": "YulFunctionCall",
																"src": "22494:9:9"
															},
															"nativeSrc": "22491:35:9",
															"nodeType": "YulIf",
															"src": "22491:35:9"
														},
														{
															"nativeSrc": "22536:14:9",
															"nodeType": "YulAssignment",
															"src": "22536:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22545:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "22545:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22548:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "22548:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "22541:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22541:3:9"
																},
																"nativeSrc": "22541:9:9",
																"nodeType": "YulFunctionCall",
																"src": "22541:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "22536:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "22536:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "22371:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "22402:1:9",
														"nodeType": "YulTypedName",
														"src": "22402:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "22405:1:9",
														"nodeType": "YulTypedName",
														"src": "22405:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "22411:1:9",
														"nodeType": "YulTypedName",
														"src": "22411:1:9",
														"type": ""
													}
												],
												"src": "22371:185:9"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Direct ETH transfers not allowed\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_SaleStage_$1398(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_SaleStage_$1398(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_SaleStage_$1398(value)\n    }\n\n    function convert_t_enum$_SaleStage_$1398_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_SaleStage_$1398(value)\n    }\n\n    function abi_encode_t_enum$_SaleStage_$1398_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_SaleStage_$1398_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_SaleStage_$1398__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_SaleStage_$1398_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sales targets not yet met.\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale has already started\")\n\n        mstore(add(memPtr, 32), \" or concluded.\")\n\n    }\n\n    function abi_encode_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f(memPtr) {\n\n        mstore(add(memPtr, 0), \"No sale is active.\")\n\n    }\n\n    function abi_encode_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale sold out.\")\n\n    }\n\n    function abi_encode_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds Private Sale token limit\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pre-Sale sold out.\")\n\n    }\n\n    function abi_encode_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec(memPtr) {\n\n        mstore(add(memPtr, 0), \"Purchase amount out of limits.\")\n\n    }\n\n    function abi_encode_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds Pre-Sale token limit.\")\n\n    }\n\n    function abi_encode_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting period not yet completed\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale should be concluded\")\n\n        mstore(add(memPtr, 32), \" first.\")\n\n    }\n\n    function abi_encode_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale target not reached.\")\n\n    }\n\n    function abi_encode_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101fc575f3560e01c806370a082311161010c578063b0e686301161009f578063c040e6b81161006e578063c040e6b81461071f578063c552e04b14610749578063dd62ed3e14610773578063e6bd92b9146107af578063f2fde38b146107d95761023c565b8063b0e6863014610677578063b68ed11f146106a1578063ba20cf4c146106cb578063bda95633146106f55761023c565b8063902d55a5116100db578063902d55a5146105bd578063920168b3146105e757806395d89b4114610611578063a9059cbb1461063b5761023c565b806370a0823114610517578063715018a6146105535780638da5cb5b146105695780638f7713ff146105935761023c565b80632b1cbc381161018f5780633610724e1161015e5780633610724e1461047b57806340f02ab61461049757806354dd1da4146104c157806355dd574c146104d75780635fb3b944146104ed5761023c565b80632b1cbc38146103e9578063313ce5671461042557806332c85ac01461044f578063338dbf59146104655761023c565b806318160ddd116101cb57806318160ddd14610331578063192399d11461035b57806323b872dd1461039757806324600fc3146103d35761023c565b806306fdde0314610277578063095ea7b3146102a15780630fe83bb8146102dd5780631514617e146103075761023c565b3661023c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023390611c01565b60405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026e90611c01565b60405180910390fd5b348015610282575f80fd5b5061028b610801565b6040516102989190611c7f565b60405180910390f35b3480156102ac575f80fd5b506102c760048036038101906102c29190611d30565b610891565b6040516102d49190611d88565b60405180910390f35b3480156102e8575f80fd5b506102f16108b3565b6040516102fe9190611db0565b60405180910390f35b348015610312575f80fd5b5061031b6108b9565b6040516103289190611db0565b60405180910390f35b34801561033c575f80fd5b506103456108bf565b6040516103529190611db0565b60405180910390f35b348015610366575f80fd5b50610381600480360381019061037c9190611dc9565b6108c8565b60405161038e9190611db0565b60405180910390f35b3480156103a2575f80fd5b506103bd60048036038101906103b89190611df4565b6108dd565b6040516103ca9190611d88565b60405180910390f35b3480156103de575f80fd5b506103e761090b565b005b3480156103f4575f80fd5b5061040f600480360381019061040a9190611dc9565b610970565b60405161041c9190611db0565b60405180910390f35b348015610430575f80fd5b50610439610985565b6040516104469190611e5f565b60405180910390f35b34801561045a575f80fd5b5061046361098d565b005b348015610470575f80fd5b50610479610a14565b005b61049560048036038101906104909190611e78565b610abc565b005b3480156104a2575f80fd5b506104ab610ed6565b6040516104b89190611db0565b60405180910390f35b3480156104cc575f80fd5b506104d5610edc565b005b3480156104e2575f80fd5b506104eb61103f565b005b3480156104f8575f80fd5b5061050161112e565b60405161050e9190611db0565b60405180910390f35b348015610522575f80fd5b5061053d60048036038101906105389190611dc9565b611134565b60405161054a9190611db0565b60405180910390f35b34801561055e575f80fd5b50610567611179565b005b348015610574575f80fd5b5061057d61118c565b60405161058a9190611eb2565b60405180910390f35b34801561059e575f80fd5b506105a76111b4565b6040516105b49190611db0565b60405180910390f35b3480156105c8575f80fd5b506105d16111ba565b6040516105de9190611db0565b60405180910390f35b3480156105f2575f80fd5b506105fb6111c9565b6040516106089190611db0565b60405180910390f35b34801561061c575f80fd5b506106256111cf565b6040516106329190611c7f565b60405180910390f35b348015610646575f80fd5b50610661600480360381019061065c9190611d30565b61125f565b60405161066e9190611d88565b60405180910390f35b348015610682575f80fd5b5061068b611281565b6040516106989190611db0565b60405180910390f35b3480156106ac575f80fd5b506106b5611287565b6040516106c29190611db0565b60405180910390f35b3480156106d6575f80fd5b506106df61128d565b6040516106ec9190611db0565b60405180910390f35b348015610700575f80fd5b50610709611293565b6040516107169190611db0565b60405180910390f35b34801561072a575f80fd5b50610733611299565b6040516107409190611f3e565b60405180910390f35b348015610754575f80fd5b5061075d6112ab565b60405161076a9190611db0565b60405180910390f35b34801561077e575f80fd5b5061079960048036038101906107949190611f57565b6112b1565b6040516107a69190611db0565b60405180910390f35b3480156107ba575f80fd5b506107c3611333565b6040516107d09190611db0565b60405180910390f35b3480156107e4575f80fd5b506107ff60048036038101906107fa9190611dc9565b611339565b005b60606003805461081090611fc2565b80601f016020809104026020016040519081016040528092919081815260200182805461083c90611fc2565b80156108875780601f1061085e57610100808354040283529160200191610887565b820191905f5260205f20905b81548152906001019060200180831161086a57829003601f168201915b5050505050905090565b5f8061089b6113bd565b90506108a88185856113c4565b600191505092915050565b600d5481565b60145481565b5f600254905090565b6012602052805f5260405f205f915090505481565b5f806108e76113bd565b90506108f48582856113d6565b6108ff858585611468565b60019150509392505050565b610913611558565b61091b6115df565b61092361118c565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610965573d5f803e3d5ffd5b5061096e61162e565b565b6013602052805f5260405f205f915090505481565b5f6012905090565b610995611558565b600854600b5414806109aa5750600d54601054145b6109e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e09061203c565b60405180910390fd5b5f60115f6101000a81548160ff02191690836002811115610a0d57610a0c611ecb565b5b0217905550565b610a1c611558565b5f6002811115610a2f57610a2e611ecb565b5b60115f9054906101000a900460ff166002811115610a5057610a4f611ecb565b5b14610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a87906120ca565b60405180910390fd5b600160115f6101000a81548160ff02191690836002811115610ab557610ab4611ecb565b5b0217905550565b610ac46115df565b5f6002811115610ad757610ad6611ecb565b5b60115f9054906101000a900460ff166002811115610af857610af7611ecb565b5b03610b38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2f90612132565b60405180910390fd5b5f60016002811115610b4d57610b4c611ecb565b5b60115f9054906101000a900460ff166002811115610b6e57610b6d611ecb565b5b03610d2557600854600b5410610bb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb09061219a565b60405180910390fd5b610bc282611638565b905080600b5f828254610bd591906121e5565b92505081905550600854600b541115610c23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1a90612288565b60405180910390fd5b8060125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c6f91906121e5565b9250508190555060145460155442610c8791906121e5565b610c9191906121e5565b60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167f8fa81bb0702332ea2a0aee44bb9e4d359cf4a2c5a820dd59d9129369bdbca73f82604051610d189190611db0565b60405180910390a2610eca565b600280811115610d3857610d37611ecb565b5b60115f9054906101000a900460ff166002811115610d5957610d58611ecb565b5b03610ec957600d5460105410610da4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9b906122f0565b60405180910390fd5b68056bc75e2d631000008210158015610dc6575068a2a15d09519be000008211155b610e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfc90612358565b60405180910390fd5b610e0e82611687565b90508060105f828254610e2191906121e5565b92505081905550600d546010541115610e6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e66906123c0565b60405180910390fd5b610e7a303383611468565b3373ffffffffffffffffffffffffffffffffffffffff167f550498dc565cc74203b9d14cba907c9f60ceefe26e82b37df98f6cb98529cf1982604051610ec09190611db0565b60405180910390a25b5b50610ed361162e565b50565b60155481565b610ee46115df565b60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054421015610f64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5b9061244e565b60405180910390fd5b5f60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611034303383611468565b5061103d61162e565b565b611047611558565b6001600281111561105b5761105a611ecb565b5b60115f9054906101000a900460ff16600281111561107c5761107b611ecb565b5b146110bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b3906124dc565b60405180910390fd5b600854600b5414611102576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f990612544565b60405180910390fd5b600260115f6101000a81548160ff0219169083600281111561112757611126611ecb565b5b0217905550565b600b5481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b611181611558565b61118a5f6116d6565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600f5481565b6aa56fa5b99019a5c800000081565b600e5481565b6060600480546111de90611fc2565b80601f016020809104026020016040519081016040528092919081815260200182805461120a90611fc2565b80156112555780601f1061122c57610100808354040283529160200191611255565b820191905f5260205f20905b81548152906001019060200180831161123857829003601f168201915b5050505050905090565b5f806112696113bd565b9050611276818585611468565b600191505092915050565b60095481565b60105481565b60075481565b600a5481565b60115f9054906101000a900460ff1681565b60085481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600c5481565b611341611558565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113b1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016113a89190611eb2565b60405180910390fd5b6113ba816116d6565b50565b5f33905090565b6113d18383836001611799565b505050565b5f6113e184846112b1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146114625781811015611453578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161144a93929190612562565b60405180910390fd5b61146184848484035f611799565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114d8575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114cf9190611eb2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611548575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161153f9190611eb2565b60405180910390fd5b611553838383611968565b505050565b6115606113bd565b73ffffffffffffffffffffffffffffffffffffffff1661157e61118c565b73ffffffffffffffffffffffffffffffffffffffff16146115dd576115a16113bd565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115d49190611eb2565b60405180910390fd5b565b600260065403611624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161b906125e1565b60405180910390fd5b6002600681905550565b6001600681905550565b5f80600854600b54600954600a5461165091906125ff565b61165a9190612632565b61166491906126a0565b60095461167191906121e5565b9050808361167f91906126a0565b915050919050565b5f80600d54601054600e54600f5461169f91906125ff565b6116a99190612632565b6116b391906126a0565b600e546116c091906121e5565b905080836116ce91906126a0565b915050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611809575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016118009190611eb2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611879575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016118709190611eb2565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611962578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516119599190611db0565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119b8578060025f8282546119ac91906121e5565b92505081905550611a86565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611a41578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611a3893929190612562565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611acd578060025f8282540392505081905550611b17565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b749190611db0565b60405180910390a3505050565b5f82825260208201905092915050565b7f44697265637420455448207472616e7366657273206e6f7420616c6c6f7765645f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f611beb602183611b81565b9150611bf682611b91565b604082019050919050565b5f6020820190508181035f830152611c1881611bdf565b9050919050565b5f81519050919050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611c5182611c1f565b611c5b8185611b81565b9350611c6b818560208601611c29565b611c7481611c37565b840191505092915050565b5f6020820190508181035f830152611c978184611c47565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ccc82611ca3565b9050919050565b611cdc81611cc2565b8114611ce6575f80fd5b50565b5f81359050611cf781611cd3565b92915050565b5f819050919050565b611d0f81611cfd565b8114611d19575f80fd5b50565b5f81359050611d2a81611d06565b92915050565b5f8060408385031215611d4657611d45611c9f565b5b5f611d5385828601611ce9565b9250506020611d6485828601611d1c565b9150509250929050565b5f8115159050919050565b611d8281611d6e565b82525050565b5f602082019050611d9b5f830184611d79565b92915050565b611daa81611cfd565b82525050565b5f602082019050611dc35f830184611da1565b92915050565b5f60208284031215611dde57611ddd611c9f565b5b5f611deb84828501611ce9565b91505092915050565b5f805f60608486031215611e0b57611e0a611c9f565b5b5f611e1886828701611ce9565b9350506020611e2986828701611ce9565b9250506040611e3a86828701611d1c565b9150509250925092565b5f60ff82169050919050565b611e5981611e44565b82525050565b5f602082019050611e725f830184611e50565b92915050565b5f60208284031215611e8d57611e8c611c9f565b5b5f611e9a84828501611d1c565b91505092915050565b611eac81611cc2565b82525050565b5f602082019050611ec55f830184611ea3565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60038110611f0957611f08611ecb565b5b50565b5f819050611f1982611ef8565b919050565b5f611f2882611f0c565b9050919050565b611f3881611f1e565b82525050565b5f602082019050611f515f830184611f2f565b92915050565b5f8060408385031215611f6d57611f6c611c9f565b5b5f611f7a85828601611ce9565b9250506020611f8b85828601611ce9565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611fd957607f821691505b602082108103611fec57611feb611f95565b5b50919050565b7f53616c65732074617267657473206e6f7420796574206d65742e0000000000005f82015250565b5f612026601a83611b81565b915061203182611ff2565b602082019050919050565b5f6020820190508181035f8301526120538161201a565b9050919050565b7f507269766174652053616c652068617320616c726561647920737461727465645f8201527f206f7220636f6e636c756465642e000000000000000000000000000000000000602082015250565b5f6120b4602e83611b81565b91506120bf8261205a565b604082019050919050565b5f6020820190508181035f8301526120e1816120a8565b9050919050565b7f4e6f2073616c65206973206163746976652e00000000000000000000000000005f82015250565b5f61211c601283611b81565b9150612127826120e8565b602082019050919050565b5f6020820190508181035f83015261214981612110565b9050919050565b7f507269766174652053616c6520736f6c64206f75742e000000000000000000005f82015250565b5f612184601683611b81565b915061218f82612150565b602082019050919050565b5f6020820190508181035f8301526121b181612178565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6121ef82611cfd565b91506121fa83611cfd565b9250828201905080821115612212576122116121b8565b5b92915050565b7f4578636565647320507269766174652053616c6520746f6b656e206c696d69745f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f612272602183611b81565b915061227d82612218565b604082019050919050565b5f6020820190508181035f83015261229f81612266565b9050919050565b7f5072652d53616c6520736f6c64206f75742e00000000000000000000000000005f82015250565b5f6122da601283611b81565b91506122e5826122a6565b602082019050919050565b5f6020820190508181035f830152612307816122ce565b9050919050565b7f507572636861736520616d6f756e74206f7574206f66206c696d6974732e00005f82015250565b5f612342601e83611b81565b915061234d8261230e565b602082019050919050565b5f6020820190508181035f83015261236f81612336565b9050919050565b7f45786365656473205072652d53616c6520746f6b656e206c696d69742e0000005f82015250565b5f6123aa601d83611b81565b91506123b582612376565b602082019050919050565b5f6020820190508181035f8301526123d78161239e565b9050919050565b7f56657374696e6720706572696f64206e6f742079657420636f6d706c657465645f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f612438602183611b81565b9150612443826123de565b604082019050919050565b5f6020820190508181035f8301526124658161242c565b9050919050565b7f507269766174652053616c652073686f756c6420626520636f6e636c756465645f8201527f2066697273742e00000000000000000000000000000000000000000000000000602082015250565b5f6124c6602783611b81565b91506124d18261246c565b604082019050919050565b5f6020820190508181035f8301526124f3816124ba565b9050919050565b7f507269766174652053616c6520746172676574206e6f7420726561636865642e5f82015250565b5f61252e602083611b81565b9150612539826124fa565b602082019050919050565b5f6020820190508181035f83015261255b81612522565b9050919050565b5f6060820190506125755f830186611ea3565b6125826020830185611da1565b61258f6040830184611da1565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6125cb601f83611b81565b91506125d682612597565b602082019050919050565b5f6020820190508181035f8301526125f8816125bf565b9050919050565b5f61260982611cfd565b915061261483611cfd565b925082820390508181111561262c5761262b6121b8565b5b92915050565b5f61263c82611cfd565b915061264783611cfd565b925082820261265581611cfd565b9150828204841483151761266c5761266b6121b8565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6126aa82611cfd565b91506126b583611cfd565b9250826126c5576126c4612673565b5b82820490509291505056fea2646970667358221220092d6ebf1ef9f3a25290c943b0061a2486924efb9bf38c01240c66534473fec364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10C JUMPI DUP1 PUSH4 0xB0E68630 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xC040E6B8 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x71F JUMPI DUP1 PUSH4 0xC552E04B EQ PUSH2 0x749 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x773 JUMPI DUP1 PUSH4 0xE6BD92B9 EQ PUSH2 0x7AF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7D9 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0xB0E68630 EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0xB68ED11F EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0xBA20CF4C EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0xBDA95633 EQ PUSH2 0x6F5 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x902D55A5 GT PUSH2 0xDB JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0x920168B3 EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x611 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x63B JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x8F7713FF EQ PUSH2 0x593 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x2B1CBC38 GT PUSH2 0x18F JUMPI DUP1 PUSH4 0x3610724E GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x40F02AB6 EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0x54DD1DA4 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x55DD574C EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x5FB3B944 EQ PUSH2 0x4ED JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x2B1CBC38 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x32C85AC0 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x338DBF59 EQ PUSH2 0x465 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1CB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x192399D1 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x3D3 JUMPI PUSH2 0x23C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xFE83BB8 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x1514617E EQ PUSH2 0x307 JUMPI PUSH2 0x23C JUMP JUMPDEST CALLDATASIZE PUSH2 0x23C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x233 SWAP1 PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26E SWAP1 PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x345 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x1DF4 JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0x90B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x439 PUSH2 0x985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x463 PUSH2 0x98D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x479 PUSH2 0xA14 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x1E78 JUMP JUMPDEST PUSH2 0xABC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AB PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D5 PUSH2 0xEDC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB PUSH2 0x103F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x501 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x522 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH2 0x1134 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x567 PUSH2 0x1179 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x574 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x57D PUSH2 0x118C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A7 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D1 PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FB PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x625 PUSH2 0x11CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x632 SWAP2 SWAP1 PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x646 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0x125F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x682 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x68B PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B5 PUSH2 0x1287 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DF PUSH2 0x128D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6EC SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x700 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x709 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x733 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x754 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x75D PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x799 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C3 PUSH2 0x1333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FA SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH2 0x1339 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x810 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x83C SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x887 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x85E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x887 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x86A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x89B PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH2 0x8A8 DUP2 DUP6 DUP6 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8E7 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH2 0x8F4 DUP6 DUP3 DUP6 PUSH2 0x13D6 JUMP JUMPDEST PUSH2 0x8FF DUP6 DUP6 DUP6 PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x913 PUSH2 0x1558 JUMP JUMPDEST PUSH2 0x91B PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x923 PUSH2 0x118C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x965 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x96E PUSH2 0x162E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x995 PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD EQ DUP1 PUSH2 0x9AA JUMPI POP PUSH1 0xD SLOAD PUSH1 0x10 SLOAD EQ JUMPDEST PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E0 SWAP1 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH2 0xA0C PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xA1C PUSH2 0x1558 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA2F JUMPI PUSH2 0xA2E PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA50 JUMPI PUSH2 0xA4F PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST EQ PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA87 SWAP1 PUSH2 0x20CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAB5 JUMPI PUSH2 0xAB4 PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xAC4 PUSH2 0x15DF JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAD7 JUMPI PUSH2 0xAD6 PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAF8 JUMPI PUSH2 0xAF7 PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST SUB PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2F SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB4D JUMPI PUSH2 0xB4C PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB6E JUMPI PUSH2 0xB6D PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST SUB PUSH2 0xD25 JUMPI PUSH1 0x8 SLOAD PUSH1 0xB SLOAD LT PUSH2 0xBB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB0 SWAP1 PUSH2 0x219A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBC2 DUP3 PUSH2 0x1638 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBD5 SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1A SWAP1 PUSH2 0x2288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC6F SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD TIMESTAMP PUSH2 0xC87 SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST PUSH2 0xC91 SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FA81BB0702332EA2A0AEE44BB9E4D359CF4A2C5A820DD59D9129369BDBCA73F DUP3 PUSH1 0x40 MLOAD PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xD38 JUMPI PUSH2 0xD37 PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD59 JUMPI PUSH2 0xD58 PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST SUB PUSH2 0xEC9 JUMPI PUSH1 0xD SLOAD PUSH1 0x10 SLOAD LT PUSH2 0xDA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9B SWAP1 PUSH2 0x22F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH9 0x56BC75E2D63100000 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xDC6 JUMPI POP PUSH9 0xA2A15D09519BE00000 DUP3 GT ISZERO JUMPDEST PUSH2 0xE05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFC SWAP1 PUSH2 0x2358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE0E DUP3 PUSH2 0x1687 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x10 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE21 SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xD SLOAD PUSH1 0x10 SLOAD GT ISZERO PUSH2 0xE6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE66 SWAP1 PUSH2 0x23C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE7A ADDRESS CALLER DUP4 PUSH2 0x1468 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x550498DC565CC74203B9D14CBA907C9F60CEEFE26E82B37DF98F6CB98529CF19 DUP3 PUSH1 0x40 MLOAD PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST JUMPDEST POP PUSH2 0xED3 PUSH2 0x162E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xEE4 PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5B SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1034 ADDRESS CALLER DUP4 PUSH2 0x1468 JUMP JUMPDEST POP PUSH2 0x103D PUSH2 0x162E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1047 PUSH2 0x1558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x105B JUMPI PUSH2 0x105A PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x107C JUMPI PUSH2 0x107B PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST EQ PUSH2 0x10BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B3 SWAP1 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD EQ PUSH2 0x1102 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F9 SWAP1 PUSH2 0x2544 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1127 JUMPI PUSH2 0x1126 PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1181 PUSH2 0x1558 JUMP JUMPDEST PUSH2 0x118A PUSH0 PUSH2 0x16D6 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH11 0xA56FA5B99019A5C8000000 DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x11DE SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x120A SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1255 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x122C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1255 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1238 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1269 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH2 0x1276 DUP2 DUP6 DUP6 PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1341 PUSH2 0x1558 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A8 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13BA DUP2 PUSH2 0x16D6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13D1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1799 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13E1 DUP5 DUP5 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1462 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1453 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2562 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1461 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1799 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14D8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CF SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1548 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153F SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1553 DUP4 DUP4 DUP4 PUSH2 0x1968 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1560 PUSH2 0x13BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x157E PUSH2 0x118C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15DD JUMPI PUSH2 0x15A1 PUSH2 0x13BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D4 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161B SWAP1 PUSH2 0x25E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x8 SLOAD PUSH1 0xB SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x1650 SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x165A SWAP2 SWAP1 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0x1664 SWAP2 SWAP1 PUSH2 0x26A0 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1671 SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH2 0x167F SWAP2 SWAP1 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xD SLOAD PUSH1 0x10 SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH2 0x169F SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH2 0x16A9 SWAP2 SWAP1 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0x16B3 SWAP2 SWAP1 PUSH2 0x26A0 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x16C0 SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH2 0x16CE SWAP2 SWAP1 PUSH2 0x26A0 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1809 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1800 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1879 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1870 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1962 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1959 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x19AC SWAP2 SWAP1 PUSH2 0x21E5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A86 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1A41 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A38 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2562 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ACD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B17 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B74 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x44697265637420455448207472616E7366657273206E6F7420616C6C6F776564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BEB PUSH1 0x21 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BF6 DUP3 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C18 DUP2 PUSH2 0x1BDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C51 DUP3 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1C5B DUP2 DUP6 PUSH2 0x1B81 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C6B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C29 JUMP JUMPDEST PUSH2 0x1C74 DUP2 PUSH2 0x1C37 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C97 DUP2 DUP5 PUSH2 0x1C47 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CCC DUP3 PUSH2 0x1CA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDC DUP2 PUSH2 0x1CC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CF7 DUP2 PUSH2 0x1CD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0F DUP2 PUSH2 0x1CFD JUMP JUMPDEST DUP2 EQ PUSH2 0x1D19 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D2A DUP2 PUSH2 0x1D06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D46 JUMPI PUSH2 0x1D45 PUSH2 0x1C9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D53 DUP6 DUP3 DUP7 ADD PUSH2 0x1CE9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D64 DUP6 DUP3 DUP7 ADD PUSH2 0x1D1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D82 DUP2 PUSH2 0x1D6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D9B PUSH0 DUP4 ADD DUP5 PUSH2 0x1D79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DAA DUP2 PUSH2 0x1CFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DDE JUMPI PUSH2 0x1DDD PUSH2 0x1C9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DEB DUP5 DUP3 DUP6 ADD PUSH2 0x1CE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E0B JUMPI PUSH2 0x1E0A PUSH2 0x1C9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E18 DUP7 DUP3 DUP8 ADD PUSH2 0x1CE9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E29 DUP7 DUP3 DUP8 ADD PUSH2 0x1CE9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E3A DUP7 DUP3 DUP8 ADD PUSH2 0x1D1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E59 DUP2 PUSH2 0x1E44 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E72 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E8D JUMPI PUSH2 0x1E8C PUSH2 0x1C9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E9A DUP5 DUP3 DUP6 ADD PUSH2 0x1D1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EAC DUP2 PUSH2 0x1CC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1F09 JUMPI PUSH2 0x1F08 PUSH2 0x1ECB JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x1F19 DUP3 PUSH2 0x1EF8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F28 DUP3 PUSH2 0x1F0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F38 DUP2 PUSH2 0x1F1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F51 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F6D JUMPI PUSH2 0x1F6C PUSH2 0x1C9F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F7A DUP6 DUP3 DUP7 ADD PUSH2 0x1CE9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F8B DUP6 DUP3 DUP7 ADD PUSH2 0x1CE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FD9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FEC JUMPI PUSH2 0x1FEB PUSH2 0x1F95 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616C65732074617267657473206E6F7420796574206D65742E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2026 PUSH1 0x1A DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x2031 DUP3 PUSH2 0x1FF2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2053 DUP2 PUSH2 0x201A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C652068617320616C72656164792073746172746564 PUSH0 DUP3 ADD MSTORE PUSH32 0x206F7220636F6E636C756465642E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20B4 PUSH1 0x2E DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x20BF DUP3 PUSH2 0x205A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20E1 DUP2 PUSH2 0x20A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2073616C65206973206163746976652E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x211C PUSH1 0x12 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x2127 DUP3 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2149 DUP2 PUSH2 0x2110 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520736F6C64206F75742E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2184 PUSH1 0x16 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x218F DUP3 PUSH2 0x2150 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21B1 DUP2 PUSH2 0x2178 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21EF DUP3 PUSH2 0x1CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x21FA DUP4 PUSH2 0x1CFD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2212 JUMPI PUSH2 0x2211 PUSH2 0x21B8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4578636565647320507269766174652053616C6520746F6B656E206C696D6974 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2272 PUSH1 0x21 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x227D DUP3 PUSH2 0x2218 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x229F DUP2 PUSH2 0x2266 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D53616C6520736F6C64206F75742E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22DA PUSH1 0x12 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E5 DUP3 PUSH2 0x22A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2307 DUP2 PUSH2 0x22CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507572636861736520616D6F756E74206F7574206F66206C696D6974732E0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2342 PUSH1 0x1E DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x234D DUP3 PUSH2 0x230E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x236F DUP2 PUSH2 0x2336 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473205072652D53616C6520746F6B656E206C696D69742E000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23AA PUSH1 0x1D DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B5 DUP3 PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23D7 DUP2 PUSH2 0x239E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E6720706572696F64206E6F742079657420636F6D706C65746564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2438 PUSH1 0x21 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x2443 DUP3 PUSH2 0x23DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2465 DUP2 PUSH2 0x242C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C652073686F756C6420626520636F6E636C75646564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2066697273742E00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24C6 PUSH1 0x27 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x24D1 DUP3 PUSH2 0x246C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24F3 DUP2 PUSH2 0x24BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520746172676574206E6F7420726561636865642E PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x252E PUSH1 0x20 DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x2539 DUP3 PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x255B DUP2 PUSH2 0x2522 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2575 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EA3 JUMP JUMPDEST PUSH2 0x2582 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DA1 JUMP JUMPDEST PUSH2 0x258F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DA1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25CB PUSH1 0x1F DUP4 PUSH2 0x1B81 JUMP JUMPDEST SWAP2 POP PUSH2 0x25D6 DUP3 PUSH2 0x2597 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25F8 DUP2 PUSH2 0x25BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2609 DUP3 PUSH2 0x1CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x2614 DUP4 PUSH2 0x1CFD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x262C JUMPI PUSH2 0x262B PUSH2 0x21B8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x263C DUP3 PUSH2 0x1CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x2647 DUP4 PUSH2 0x1CFD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2655 DUP2 PUSH2 0x1CFD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x266C JUMPI PUSH2 0x266B PUSH2 0x21B8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26AA DUP3 PUSH2 0x1CFD JUMP JUMPDEST SWAP2 POP PUSH2 0x26B5 DUP4 PUSH2 0x1CFD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x26C5 JUMPI PUSH2 0x26C4 PUSH2 0x2673 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x2D PUSH15 0xBF1EF9F3A25290C943B0061A248692 0x4E 0xFB SWAP12 RETURN DUP13 ADD 0x24 0xC PUSH7 0x534473FEC36473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "290:4877:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5115:43;;;;;;;;;;:::i;:::-;;;;;;;;290:4877;5022:43;;;;;;;;;;:::i;:::-;;;;;;;;2074:89:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1007:53:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1534:44;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1420:49:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4856:122:8;;;;;;;;;;;;;:::i;:::-;;1475:53;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4625:225:8;;;;;;;;;;;;;:::i;:::-;;1925:181;;;;;;;;;;;;;:::i;:::-;;2388:1289;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1606:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4263:356;;;;;;;;;;;;;:::i;:::-;;2112:270;;;;;;;;;;;;;:::i;:::-;;851:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1167:47:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;384:61;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1086:52;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;685:55:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1240:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;519:55;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;768:54;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1348:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;604:56;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;924:52:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:3;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;1007:53:8:-;;;;:::o;1534:44::-;;;;:::o;3144:97:3:-;3196:7;3222:12;;3215:19;;3144:97;:::o;1420:49:8:-;;;;;;;;;;;;;;;;;:::o;5039:244:3:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;4856:122:8:-;1531:13:0;:11;:13::i;:::-;2261:21:2::1;:19;:21::i;:::-;4931:7:8::2;:5;:7::i;:::-;4923:25;;:48;4949:21;4923:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;2303:20:2::1;:18;:20::i;:::-;4856:122:8:o:0;1475:53::-;;;;;;;;;;;;;;;;;:::o;3002:82:3:-;3051:5;3075:2;3068:9;;3002:82;:::o;4625:225:8:-;1531:13:0;:11;:13::i;:::-;4708:17:8::1;;4683:21;;:42;:80;;;;4750:13;;4729:17;;:34;4683:80;4675:136;;;;;;;;;;;;:::i;:::-;;;;;;;;;4829:14;4821:5;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4625:225::o:0;1925:181::-;1531:13:0;:11;:13::i;:::-;1999:14:8::1;1990:23;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;1982:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2082:17;2074:5;;:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1925:181::o:0;2388:1289::-;2261:21:2;:19;:21::i;:::-;2483:14:8::1;2474:23;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;::::0;2466:54:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2531:19;2573:17;2564:26;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;::::0;2560:1111:::1;;2638:17;;2614:21;;:41;2606:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2710:37;2737:9;2710:26;:37::i;:::-;2696:51;;2786:11;2761:21;;:36;;;;;;;:::i;:::-;;;;;;;;2844:17;;2819:21;;:42;;2811:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;2943:11;2913:14;:26;2928:10;2913:26;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;3035:15;;3019:13;;3001:15;:31;;;;:::i;:::-;:49;;;;:::i;:::-;2968:18;:30;2987:10;2968:30;;;;;;;;;;;;;;;:82;;;;3081:10;3069:36;;;3093:11;3069:36;;;;;;:::i;:::-;;;;;;;;2560:1111;;;3135:17;3126:26:::0;::::1;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;::::0;3122:549:::1;;3196:13;;3176:17;;:33;3168:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3267:14;3254:9;:27;;:60;;;;;3298:16;3285:9;:29;;3254:60;3246:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;3377:33;3400:9;3377:22;:33::i;:::-;3363:47;;3445:11;3424:17;;:32;;;;;;;:::i;:::-;;;;;;;;3499:13;;3478:17;;:34;;3470:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;3560:49;3578:4;3585:10;3597:11;3560:9;:49::i;:::-;3636:10;3628:32;;;3648:11;3628:32;;;;;;:::i;:::-;;;;;;;;3122:549;2560:1111;2456:1221;2303:20:2::0;:18;:20::i;:::-;2388:1289:8;:::o;1606:39::-;;;;:::o;4263:356::-;2261:21:2;:19;:21::i;:::-;4353:18:8::1;:30;4372:10;4353:30;;;;;;;;;;;;;;;;4334:15;:49;;4326:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;4431:14;4448;:26;4463:10;4448:26;;;;;;;;;;;;;;;;4431:43;;4513:1;4484:14;:26;4499:10;4484:26;;;;;;;;;;;;;;;:30;;;;4557:1;4524:18;:30;4543:10;4524:30;;;;;;;;;;;;;;;:34;;;;4568:44;4586:4;4593:10;4605:6;4568:9;:44::i;:::-;4316:303;2303:20:2::0;:18;:20::i;:::-;4263:356:8:o;2112:270::-;1531:13:0;:11;:13::i;:::-;2182:17:8::1;2173:26;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;2165:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2286:17;;2261:21;;:42;2253:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;2358:17;2350:5;;:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2112:270::o:0;851:40::-;;;;:::o;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1167:47:8:-;;;;:::o;384:61::-;423:22;384:61;:::o;1086:52::-;;;;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;685:55:8:-;;;;:::o;1240:36::-;;;;:::o;519:55::-;;;;:::o;768:54::-;;;;:::o;1348:39::-;;;;;;;;;;;;;:::o;604:56::-;;;;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;924:52:8:-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;3683:296:8:-;3761:7;3780:20;3913:17;;3889:21;;3864;;3842:19;;:43;;;;:::i;:::-;3841:69;;;;:::i;:::-;:89;;;;:::i;:::-;3803:21;;:128;;;;:::i;:::-;3780:151;;3960:12;3948:9;:24;;;;:::i;:::-;3941:31;;;3683:296;;;:::o;3985:272::-;4059:7;4078:20;4195:13;;4175:17;;4154;;4136:15;;:35;;;;:::i;:::-;4135:57;;;;:::i;:::-;:73;;;;:::i;:::-;4101:17;;:108;;;;:::i;:::-;4078:131;;4238:12;4226:9;:24;;;;:::i;:::-;4219:31;;;3985:272;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:3:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:169:9:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:220::-;322:34;318:1;310:6;306:14;299:58;391:3;386:2;378:6;374:15;367:28;182:220;:::o;408:366::-;550:3;571:67;635:2;630:3;571:67;:::i;:::-;564:74;;647:93;736:3;647:93;:::i;:::-;765:2;760:3;756:12;749:19;;408:366;;;:::o;780:419::-;946:4;984:2;973:9;969:18;961:26;;1033:9;1027:4;1023:20;1019:1;1008:9;1004:17;997:47;1061:131;1187:4;1061:131;:::i;:::-;1053:139;;780:419;;;:::o;1205:99::-;1257:6;1291:5;1285:12;1275:22;;1205:99;;;:::o;1310:139::-;1399:6;1394:3;1389;1383:23;1440:1;1431:6;1426:3;1422:16;1415:27;1310:139;;;:::o;1455:102::-;1496:6;1547:2;1543:7;1538:2;1531:5;1527:14;1523:28;1513:38;;1455:102;;;:::o;1563:377::-;1651:3;1679:39;1712:5;1679:39;:::i;:::-;1734:71;1798:6;1793:3;1734:71;:::i;:::-;1727:78;;1814:65;1872:6;1867:3;1860:4;1853:5;1849:16;1814:65;:::i;:::-;1904:29;1926:6;1904:29;:::i;:::-;1899:3;1895:39;1888:46;;1655:285;1563:377;;;;:::o;1946:313::-;2059:4;2097:2;2086:9;2082:18;2074:26;;2146:9;2140:4;2136:20;2132:1;2121:9;2117:17;2110:47;2174:78;2247:4;2238:6;2174:78;:::i;:::-;2166:86;;1946:313;;;;:::o;2346:117::-;2455:1;2452;2445:12;2592:126;2629:7;2669:42;2662:5;2658:54;2647:65;;2592:126;;;:::o;2724:96::-;2761:7;2790:24;2808:5;2790:24;:::i;:::-;2779:35;;2724:96;;;:::o;2826:122::-;2899:24;2917:5;2899:24;:::i;:::-;2892:5;2889:35;2879:63;;2938:1;2935;2928:12;2879:63;2826:122;:::o;2954:139::-;3000:5;3038:6;3025:20;3016:29;;3054:33;3081:5;3054:33;:::i;:::-;2954:139;;;;:::o;3099:77::-;3136:7;3165:5;3154:16;;3099:77;;;:::o;3182:122::-;3255:24;3273:5;3255:24;:::i;:::-;3248:5;3245:35;3235:63;;3294:1;3291;3284:12;3235:63;3182:122;:::o;3310:139::-;3356:5;3394:6;3381:20;3372:29;;3410:33;3437:5;3410:33;:::i;:::-;3310:139;;;;:::o;3455:474::-;3523:6;3531;3580:2;3568:9;3559:7;3555:23;3551:32;3548:119;;;3586:79;;:::i;:::-;3548:119;3706:1;3731:53;3776:7;3767:6;3756:9;3752:22;3731:53;:::i;:::-;3721:63;;3677:117;3833:2;3859:53;3904:7;3895:6;3884:9;3880:22;3859:53;:::i;:::-;3849:63;;3804:118;3455:474;;;;;:::o;3935:90::-;3969:7;4012:5;4005:13;3998:21;3987:32;;3935:90;;;:::o;4031:109::-;4112:21;4127:5;4112:21;:::i;:::-;4107:3;4100:34;4031:109;;:::o;4146:210::-;4233:4;4271:2;4260:9;4256:18;4248:26;;4284:65;4346:1;4335:9;4331:17;4322:6;4284:65;:::i;:::-;4146:210;;;;:::o;4362:118::-;4449:24;4467:5;4449:24;:::i;:::-;4444:3;4437:37;4362:118;;:::o;4486:222::-;4579:4;4617:2;4606:9;4602:18;4594:26;;4630:71;4698:1;4687:9;4683:17;4674:6;4630:71;:::i;:::-;4486:222;;;;:::o;4714:329::-;4773:6;4822:2;4810:9;4801:7;4797:23;4793:32;4790:119;;;4828:79;;:::i;:::-;4790:119;4948:1;4973:53;5018:7;5009:6;4998:9;4994:22;4973:53;:::i;:::-;4963:63;;4919:117;4714:329;;;;:::o;5049:619::-;5126:6;5134;5142;5191:2;5179:9;5170:7;5166:23;5162:32;5159:119;;;5197:79;;:::i;:::-;5159:119;5317:1;5342:53;5387:7;5378:6;5367:9;5363:22;5342:53;:::i;:::-;5332:63;;5288:117;5444:2;5470:53;5515:7;5506:6;5495:9;5491:22;5470:53;:::i;:::-;5460:63;;5415:118;5572:2;5598:53;5643:7;5634:6;5623:9;5619:22;5598:53;:::i;:::-;5588:63;;5543:118;5049:619;;;;;:::o;5674:86::-;5709:7;5749:4;5742:5;5738:16;5727:27;;5674:86;;;:::o;5766:112::-;5849:22;5865:5;5849:22;:::i;:::-;5844:3;5837:35;5766:112;;:::o;5884:214::-;5973:4;6011:2;6000:9;5996:18;5988:26;;6024:67;6088:1;6077:9;6073:17;6064:6;6024:67;:::i;:::-;5884:214;;;;:::o;6104:329::-;6163:6;6212:2;6200:9;6191:7;6187:23;6183:32;6180:119;;;6218:79;;:::i;:::-;6180:119;6338:1;6363:53;6408:7;6399:6;6388:9;6384:22;6363:53;:::i;:::-;6353:63;;6309:117;6104:329;;;;:::o;6439:118::-;6526:24;6544:5;6526:24;:::i;:::-;6521:3;6514:37;6439:118;;:::o;6563:222::-;6656:4;6694:2;6683:9;6679:18;6671:26;;6707:71;6775:1;6764:9;6760:17;6751:6;6707:71;:::i;:::-;6563:222;;;;:::o;6791:180::-;6839:77;6836:1;6829:88;6936:4;6933:1;6926:15;6960:4;6957:1;6950:15;6977:119;7064:1;7057:5;7054:12;7044:46;;7070:18;;:::i;:::-;7044:46;6977:119;:::o;7102:139::-;7153:7;7182:5;7171:16;;7188:47;7229:5;7188:47;:::i;:::-;7102:139;;;:::o;7247:::-;7309:9;7342:38;7374:5;7342:38;:::i;:::-;7329:51;;7247:139;;;:::o;7392:155::-;7491:49;7534:5;7491:49;:::i;:::-;7486:3;7479:62;7392:155;;:::o;7553:246::-;7658:4;7696:2;7685:9;7681:18;7673:26;;7709:83;7789:1;7778:9;7774:17;7765:6;7709:83;:::i;:::-;7553:246;;;;:::o;7805:474::-;7873:6;7881;7930:2;7918:9;7909:7;7905:23;7901:32;7898:119;;;7936:79;;:::i;:::-;7898:119;8056:1;8081:53;8126:7;8117:6;8106:9;8102:22;8081:53;:::i;:::-;8071:63;;8027:117;8183:2;8209:53;8254:7;8245:6;8234:9;8230:22;8209:53;:::i;:::-;8199:63;;8154:118;7805:474;;;;;:::o;8285:180::-;8333:77;8330:1;8323:88;8430:4;8427:1;8420:15;8454:4;8451:1;8444:15;8471:320;8515:6;8552:1;8546:4;8542:12;8532:22;;8599:1;8593:4;8589:12;8620:18;8610:81;;8676:4;8668:6;8664:17;8654:27;;8610:81;8738:2;8730:6;8727:14;8707:18;8704:38;8701:84;;8757:18;;:::i;:::-;8701:84;8522:269;8471:320;;;:::o;8797:176::-;8937:28;8933:1;8925:6;8921:14;8914:52;8797:176;:::o;8979:366::-;9121:3;9142:67;9206:2;9201:3;9142:67;:::i;:::-;9135:74;;9218:93;9307:3;9218:93;:::i;:::-;9336:2;9331:3;9327:12;9320:19;;8979:366;;;:::o;9351:419::-;9517:4;9555:2;9544:9;9540:18;9532:26;;9604:9;9598:4;9594:20;9590:1;9579:9;9575:17;9568:47;9632:131;9758:4;9632:131;:::i;:::-;9624:139;;9351:419;;;:::o;9776:233::-;9916:34;9912:1;9904:6;9900:14;9893:58;9985:16;9980:2;9972:6;9968:15;9961:41;9776:233;:::o;10015:366::-;10157:3;10178:67;10242:2;10237:3;10178:67;:::i;:::-;10171:74;;10254:93;10343:3;10254:93;:::i;:::-;10372:2;10367:3;10363:12;10356:19;;10015:366;;;:::o;10387:419::-;10553:4;10591:2;10580:9;10576:18;10568:26;;10640:9;10634:4;10630:20;10626:1;10615:9;10611:17;10604:47;10668:131;10794:4;10668:131;:::i;:::-;10660:139;;10387:419;;;:::o;10812:168::-;10952:20;10948:1;10940:6;10936:14;10929:44;10812:168;:::o;10986:366::-;11128:3;11149:67;11213:2;11208:3;11149:67;:::i;:::-;11142:74;;11225:93;11314:3;11225:93;:::i;:::-;11343:2;11338:3;11334:12;11327:19;;10986:366;;;:::o;11358:419::-;11524:4;11562:2;11551:9;11547:18;11539:26;;11611:9;11605:4;11601:20;11597:1;11586:9;11582:17;11575:47;11639:131;11765:4;11639:131;:::i;:::-;11631:139;;11358:419;;;:::o;11783:172::-;11923:24;11919:1;11911:6;11907:14;11900:48;11783:172;:::o;11961:366::-;12103:3;12124:67;12188:2;12183:3;12124:67;:::i;:::-;12117:74;;12200:93;12289:3;12200:93;:::i;:::-;12318:2;12313:3;12309:12;12302:19;;11961:366;;;:::o;12333:419::-;12499:4;12537:2;12526:9;12522:18;12514:26;;12586:9;12580:4;12576:20;12572:1;12561:9;12557:17;12550:47;12614:131;12740:4;12614:131;:::i;:::-;12606:139;;12333:419;;;:::o;12758:180::-;12806:77;12803:1;12796:88;12903:4;12900:1;12893:15;12927:4;12924:1;12917:15;12944:191;12984:3;13003:20;13021:1;13003:20;:::i;:::-;12998:25;;13037:20;13055:1;13037:20;:::i;:::-;13032:25;;13080:1;13077;13073:9;13066:16;;13101:3;13098:1;13095:10;13092:36;;;13108:18;;:::i;:::-;13092:36;12944:191;;;;:::o;13141:220::-;13281:34;13277:1;13269:6;13265:14;13258:58;13350:3;13345:2;13337:6;13333:15;13326:28;13141:220;:::o;13367:366::-;13509:3;13530:67;13594:2;13589:3;13530:67;:::i;:::-;13523:74;;13606:93;13695:3;13606:93;:::i;:::-;13724:2;13719:3;13715:12;13708:19;;13367:366;;;:::o;13739:419::-;13905:4;13943:2;13932:9;13928:18;13920:26;;13992:9;13986:4;13982:20;13978:1;13967:9;13963:17;13956:47;14020:131;14146:4;14020:131;:::i;:::-;14012:139;;13739:419;;;:::o;14164:168::-;14304:20;14300:1;14292:6;14288:14;14281:44;14164:168;:::o;14338:366::-;14480:3;14501:67;14565:2;14560:3;14501:67;:::i;:::-;14494:74;;14577:93;14666:3;14577:93;:::i;:::-;14695:2;14690:3;14686:12;14679:19;;14338:366;;;:::o;14710:419::-;14876:4;14914:2;14903:9;14899:18;14891:26;;14963:9;14957:4;14953:20;14949:1;14938:9;14934:17;14927:47;14991:131;15117:4;14991:131;:::i;:::-;14983:139;;14710:419;;;:::o;15135:180::-;15275:32;15271:1;15263:6;15259:14;15252:56;15135:180;:::o;15321:366::-;15463:3;15484:67;15548:2;15543:3;15484:67;:::i;:::-;15477:74;;15560:93;15649:3;15560:93;:::i;:::-;15678:2;15673:3;15669:12;15662:19;;15321:366;;;:::o;15693:419::-;15859:4;15897:2;15886:9;15882:18;15874:26;;15946:9;15940:4;15936:20;15932:1;15921:9;15917:17;15910:47;15974:131;16100:4;15974:131;:::i;:::-;15966:139;;15693:419;;;:::o;16118:179::-;16258:31;16254:1;16246:6;16242:14;16235:55;16118:179;:::o;16303:366::-;16445:3;16466:67;16530:2;16525:3;16466:67;:::i;:::-;16459:74;;16542:93;16631:3;16542:93;:::i;:::-;16660:2;16655:3;16651:12;16644:19;;16303:366;;;:::o;16675:419::-;16841:4;16879:2;16868:9;16864:18;16856:26;;16928:9;16922:4;16918:20;16914:1;16903:9;16899:17;16892:47;16956:131;17082:4;16956:131;:::i;:::-;16948:139;;16675:419;;;:::o;17100:220::-;17240:34;17236:1;17228:6;17224:14;17217:58;17309:3;17304:2;17296:6;17292:15;17285:28;17100:220;:::o;17326:366::-;17468:3;17489:67;17553:2;17548:3;17489:67;:::i;:::-;17482:74;;17565:93;17654:3;17565:93;:::i;:::-;17683:2;17678:3;17674:12;17667:19;;17326:366;;;:::o;17698:419::-;17864:4;17902:2;17891:9;17887:18;17879:26;;17951:9;17945:4;17941:20;17937:1;17926:9;17922:17;17915:47;17979:131;18105:4;17979:131;:::i;:::-;17971:139;;17698:419;;;:::o;18123:226::-;18263:34;18259:1;18251:6;18247:14;18240:58;18332:9;18327:2;18319:6;18315:15;18308:34;18123:226;:::o;18355:366::-;18497:3;18518:67;18582:2;18577:3;18518:67;:::i;:::-;18511:74;;18594:93;18683:3;18594:93;:::i;:::-;18712:2;18707:3;18703:12;18696:19;;18355:366;;;:::o;18727:419::-;18893:4;18931:2;18920:9;18916:18;18908:26;;18980:9;18974:4;18970:20;18966:1;18955:9;18951:17;18944:47;19008:131;19134:4;19008:131;:::i;:::-;19000:139;;18727:419;;;:::o;19152:182::-;19292:34;19288:1;19280:6;19276:14;19269:58;19152:182;:::o;19340:366::-;19482:3;19503:67;19567:2;19562:3;19503:67;:::i;:::-;19496:74;;19579:93;19668:3;19579:93;:::i;:::-;19697:2;19692:3;19688:12;19681:19;;19340:366;;;:::o;19712:419::-;19878:4;19916:2;19905:9;19901:18;19893:26;;19965:9;19959:4;19955:20;19951:1;19940:9;19936:17;19929:47;19993:131;20119:4;19993:131;:::i;:::-;19985:139;;19712:419;;;:::o;20137:442::-;20286:4;20324:2;20313:9;20309:18;20301:26;;20337:71;20405:1;20394:9;20390:17;20381:6;20337:71;:::i;:::-;20418:72;20486:2;20475:9;20471:18;20462:6;20418:72;:::i;:::-;20500;20568:2;20557:9;20553:18;20544:6;20500:72;:::i;:::-;20137:442;;;;;;:::o;20585:181::-;20725:33;20721:1;20713:6;20709:14;20702:57;20585:181;:::o;20772:366::-;20914:3;20935:67;20999:2;20994:3;20935:67;:::i;:::-;20928:74;;21011:93;21100:3;21011:93;:::i;:::-;21129:2;21124:3;21120:12;21113:19;;20772:366;;;:::o;21144:419::-;21310:4;21348:2;21337:9;21333:18;21325:26;;21397:9;21391:4;21387:20;21383:1;21372:9;21368:17;21361:47;21425:131;21551:4;21425:131;:::i;:::-;21417:139;;21144:419;;;:::o;21569:194::-;21609:4;21629:20;21647:1;21629:20;:::i;:::-;21624:25;;21663:20;21681:1;21663:20;:::i;:::-;21658:25;;21707:1;21704;21700:9;21692:17;;21731:1;21725:4;21722:11;21719:37;;;21736:18;;:::i;:::-;21719:37;21569:194;;;;:::o;21769:410::-;21809:7;21832:20;21850:1;21832:20;:::i;:::-;21827:25;;21866:20;21884:1;21866:20;:::i;:::-;21861:25;;21921:1;21918;21914:9;21943:30;21961:11;21943:30;:::i;:::-;21932:41;;22122:1;22113:7;22109:15;22106:1;22103:22;22083:1;22076:9;22056:83;22033:139;;22152:18;;:::i;:::-;22033:139;21817:362;21769:410;;;;:::o;22185:180::-;22233:77;22230:1;22223:88;22330:4;22327:1;22320:15;22354:4;22351:1;22344:15;22371:185;22411:1;22428:20;22446:1;22428:20;:::i;:::-;22423:25;;22462:20;22480:1;22462:20;:::i;:::-;22457:25;;22501:1;22491:35;;22506:18;;:::i;:::-;22491:35;22548:1;22545;22541:9;22536:14;;22371:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1998000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "531",
								"TOTAL_SUPPLY()": "370",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2875",
								"buyTokens(uint256)": "infinite",
								"decimals()": "406",
								"haltSales()": "infinite",
								"name()": "infinite",
								"owner()": "2605",
								"preSaleEndPrice()": "2537",
								"preSaleSoldTokens()": "2492",
								"preSaleStartPrice()": "2492",
								"preSaleTarget()": "2535",
								"preSaleTokens()": "2516",
								"privateSaleEndPrice()": "2536",
								"privateSaleSoldTokens()": "2558",
								"privateSaleStartPrice()": "2470",
								"privateSaleTarget()": "2514",
								"privateSaleTokens()": "2491",
								"releaseVestedTokens()": "infinite",
								"renounceOwnership()": "infinite",
								"stage()": "2598",
								"stakeDuration()": "2492",
								"startPreSale()": "infinite",
								"startPrivateSale()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2478",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"vestingBalance(address)": "2870",
								"vestingDuration()": "2538",
								"vestingReleaseTime(address)": "2848",
								"withdrawFunds()": "infinite"
							},
							"internal": {
								"calculatePreSaleTokens(uint256)": "infinite",
								"calculatePrivateSaleTokens(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 290,
									"end": 5167,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 290,
									"end": 5167,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 290,
									"end": 5167,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 554,
									"end": 574,
									"name": "PUSH",
									"source": 8,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 519,
									"end": 574,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 519,
									"end": 574,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 639,
									"end": 660,
									"name": "PUSH",
									"source": 8,
									"value": "201FCAFC2577D298500000"
								},
								{
									"begin": 604,
									"end": 660,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 604,
									"end": 660,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 724,
									"end": 740,
									"name": "PUSH",
									"source": 8,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 685,
									"end": 740,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 685,
									"end": 740,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 805,
									"end": 822,
									"name": "PUSH",
									"source": 8,
									"value": "B3697B81284000"
								},
								{
									"begin": 768,
									"end": 822,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 768,
									"end": 822,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 851,
									"end": 891,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 851,
									"end": 891,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 955,
									"end": 976,
									"name": "PUSH",
									"source": 8,
									"value": "FB768105935A2F3000000"
								},
								{
									"begin": 924,
									"end": 976,
									"name": "PUSH",
									"source": 8,
									"value": "C"
								},
								{
									"begin": 924,
									"end": 976,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1038,
									"end": 1060,
									"name": "PUSH",
									"source": 8,
									"value": "854FDABD6AA1D32FB00000"
								},
								{
									"begin": 1007,
									"end": 1060,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 1007,
									"end": 1060,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1121,
									"end": 1138,
									"name": "PUSH",
									"source": 8,
									"value": "B3697B81284000"
								},
								{
									"begin": 1086,
									"end": 1138,
									"name": "PUSH",
									"source": 8,
									"value": "E"
								},
								{
									"begin": 1086,
									"end": 1138,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1200,
									"end": 1214,
									"name": "PUSH",
									"source": 8,
									"value": "16345785D8A0000"
								},
								{
									"begin": 1167,
									"end": 1214,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1167,
									"end": 1214,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1275,
									"end": 1276,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1240,
									"end": 1276,
									"name": "PUSH",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 1240,
									"end": 1276,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1373,
									"end": 1387,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1348,
									"end": 1387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1387,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1567,
									"end": 1578,
									"name": "PUSH",
									"source": 8,
									"value": "ED4E00"
								},
								{
									"begin": 1534,
									"end": 1578,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1534,
									"end": 1578,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1637,
									"end": 1645,
									"name": "PUSH",
									"source": 8,
									"value": "1E13380"
								},
								{
									"begin": 1606,
									"end": 1645,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 1606,
									"end": 1645,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1808,
									"end": 1919,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1808,
									"end": 1919,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1808,
									"end": 1919,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1808,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1808,
									"end": 1919,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1808,
									"end": 1919,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1808,
									"end": 1919,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1808,
									"end": 1919,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1808,
									"end": 1919,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1808,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1808,
									"end": 1919,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1856,
									"end": 1866,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "426574746F6B656E000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "4245545400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1878,
									"end": 1912,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1892,
									"end": 1896,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 423,
									"end": 445,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "A56FA5B99019A5C8000000"
								},
								{
									"begin": 1878,
									"end": 1883,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1878,
									"end": 1883,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1878,
									"end": 1883,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1878,
									"end": 1912,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1878,
									"end": 1912,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1878,
									"end": 1912,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1878,
									"end": 1912,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1878,
									"end": 1912,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 290,
									"end": 5167,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 290,
									"end": 5167,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 193,
									"end": 292,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 193,
									"end": 292,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 245,
									"end": 251,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 284,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 273,
									"end": 285,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 263,
									"end": 285,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 263,
									"end": 285,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 193,
									"end": 292,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 193,
									"end": 292,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 193,
									"end": 292,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 193,
									"end": 292,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 484,
									"end": 664,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 484,
									"end": 664,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 532,
									"end": 609,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 522,
									"end": 610,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 629,
									"end": 633,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 626,
									"end": 627,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 619,
									"end": 634,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 653,
									"end": 657,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 650,
									"end": 651,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 643,
									"end": 658,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 670,
									"end": 990,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 670,
									"end": 990,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 714,
									"end": 720,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 752,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 745,
									"end": 749,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 741,
									"end": 753,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 731,
									"end": 753,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 731,
									"end": 753,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 798,
									"end": 799,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 792,
									"end": 796,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 788,
									"end": 800,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 819,
									"end": 837,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 809,
									"end": 890,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 809,
									"end": 890,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 875,
									"end": 879,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 867,
									"end": 873,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 863,
									"end": 880,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 853,
									"end": 880,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 853,
									"end": 880,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 809,
									"end": 890,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 809,
									"end": 890,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 937,
									"end": 939,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 929,
									"end": 935,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 926,
									"end": 940,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 906,
									"end": 924,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 903,
									"end": 941,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 900,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 900,
									"end": 984,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 956,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 956,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 956,
									"end": 974,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 956,
									"end": 974,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 956,
									"end": 974,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 900,
									"end": 984,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 900,
									"end": 984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 721,
									"end": 990,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 670,
									"end": 990,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 670,
									"end": 990,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 990,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 670,
									"end": 990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 996,
									"end": 1137,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 996,
									"end": 1137,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1045,
									"end": 1049,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1068,
									"end": 1071,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1060,
									"end": 1071,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1060,
									"end": 1071,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1091,
									"end": 1094,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1088,
									"end": 1089,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1081,
									"end": 1095,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1125,
									"end": 1129,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1112,
									"end": 1130,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1130,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1130,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 996,
									"end": 1137,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 996,
									"end": 1137,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 996,
									"end": 1137,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 996,
									"end": 1137,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1143,
									"end": 1236,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1143,
									"end": 1236,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1180,
									"end": 1186,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1227,
									"end": 1229,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1222,
									"end": 1224,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1215,
									"end": 1220,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1211,
									"end": 1225,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1207,
									"end": 1230,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1197,
									"end": 1230,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1197,
									"end": 1230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1143,
									"end": 1236,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1143,
									"end": 1236,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1143,
									"end": 1236,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1143,
									"end": 1236,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1349,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1242,
									"end": 1349,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1286,
									"end": 1294,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1336,
									"end": 1341,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1330,
									"end": 1334,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1326,
									"end": 1342,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1342,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1305,
									"end": 1342,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1349,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1349,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1349,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1349,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1242,
									"end": 1349,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1748,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1355,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1424,
									"end": 1430,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1474,
									"end": 1475,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1462,
									"end": 1472,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1476,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1594,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1527,
									"end": 1593,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1516,
									"end": 1525,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1594,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1497,
									"end": 1594,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1594,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1497,
									"end": 1594,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1654,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 1645,
									"end": 1653,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1634,
									"end": 1643,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1654,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1615,
									"end": 1654,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1615,
									"end": 1654,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 1615,
									"end": 1654,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1603,
									"end": 1654,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 1603,
									"end": 1654,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1687,
									"end": 1691,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1676,
									"end": 1681,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1672,
									"end": 1693,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1663,
									"end": 1693,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1663,
									"end": 1693,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1736,
									"end": 1740,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1726,
									"end": 1734,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1722,
									"end": 1741,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1720,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1712,
									"end": 1742,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1702,
									"end": 1742,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1702,
									"end": 1742,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1431,
									"end": 1748,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1431,
									"end": 1748,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1748,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1748,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1748,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1748,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1748,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1754,
									"end": 1831,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1754,
									"end": 1831,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1791,
									"end": 1798,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1825,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1809,
									"end": 1825,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1809,
									"end": 1825,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1754,
									"end": 1831,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1754,
									"end": 1831,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1754,
									"end": 1831,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1754,
									"end": 1831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1837,
									"end": 1897,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1837,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1868,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1886,
									"end": 1891,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1891,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1891,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1837,
									"end": 1897,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1837,
									"end": 1897,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1837,
									"end": 1897,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1837,
									"end": 1897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1903,
									"end": 2045,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1903,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1953,
									"end": 1962,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1986,
									"end": 2039,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 2004,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 2013,
									"end": 2037,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 2031,
									"end": 2036,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2013,
									"end": 2037,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 2013,
									"end": 2037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2013,
									"end": 2037,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 2013,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2004,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2004,
									"end": 2038,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2004,
									"end": 2038,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 2004,
									"end": 2038,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1986,
									"end": 2039,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1986,
									"end": 2039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1986,
									"end": 2039,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 1986,
									"end": 2039,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1973,
									"end": 2039,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1973,
									"end": 2039,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1903,
									"end": 2045,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1903,
									"end": 2045,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1903,
									"end": 2045,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1903,
									"end": 2045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2051,
									"end": 2126,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2051,
									"end": 2126,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2094,
									"end": 2097,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2115,
									"end": 2120,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2108,
									"end": 2120,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2108,
									"end": 2120,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2051,
									"end": 2126,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2051,
									"end": 2126,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2051,
									"end": 2126,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2051,
									"end": 2126,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2401,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2132,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2242,
									"end": 2281,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 2273,
									"end": 2280,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2242,
									"end": 2281,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 2242,
									"end": 2281,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2242,
									"end": 2281,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 2242,
									"end": 2281,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2303,
									"end": 2394,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 2352,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 2376,
									"end": 2392,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2352,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2352,
									"end": 2393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2352,
									"end": 2393,
									"name": "tag",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 2352,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2344,
									"end": 2350,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2337,
									"end": 2341,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2342,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2303,
									"end": 2394,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 2303,
									"end": 2394,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2303,
									"end": 2394,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 2303,
									"end": 2394,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2297,
									"end": 2301,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2290,
									"end": 2395,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2208,
									"end": 2401,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2401,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2401,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2401,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2407,
									"end": 2480,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2407,
									"end": 2480,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2455,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2407,
									"end": 2480,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2407,
									"end": 2480,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2486,
									"end": 2675,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2486,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2563,
									"end": 2595,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 2563,
									"end": 2595,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2563,
									"end": 2595,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2563,
									"end": 2595,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 2563,
									"end": 2595,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2604,
									"end": 2669,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 2662,
									"end": 2668,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2654,
									"end": 2660,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2648,
									"end": 2652,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2604,
									"end": 2669,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2604,
									"end": 2669,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2604,
									"end": 2669,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 2604,
									"end": 2669,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2539,
									"end": 2675,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2486,
									"end": 2675,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2486,
									"end": 2675,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2486,
									"end": 2675,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2681,
									"end": 2867,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2681,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2741,
									"end": 2861,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 2741,
									"end": 2861,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2758,
									"end": 2761,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2751,
									"end": 2756,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2762,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2741,
									"end": 2861,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2741,
									"end": 2861,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2741,
									"end": 2861,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2812,
									"end": 2851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 2849,
									"end": 2850,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2842,
									"end": 2847,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2812,
									"end": 2851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2812,
									"end": 2851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2812,
									"end": 2851,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 2812,
									"end": 2851,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2785,
									"end": 2786,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2778,
									"end": 2783,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2774,
									"end": 2787,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2765,
									"end": 2787,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2765,
									"end": 2787,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2741,
									"end": 2861,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 2741,
									"end": 2861,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2741,
									"end": 2861,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2741,
									"end": 2861,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2681,
									"end": 2867,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2681,
									"end": 2867,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2681,
									"end": 2867,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2873,
									"end": 3416,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2873,
									"end": 3416,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2974,
									"end": 2976,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2969,
									"end": 2972,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2966,
									"end": 2977,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2963,
									"end": 3409,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2963,
									"end": 3409,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 2963,
									"end": 3409,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3008,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3008,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 3008,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3008,
									"end": 3046,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 3008,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3092,
									"end": 3121,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 3110,
									"end": 3120,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3092,
									"end": 3121,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 3092,
									"end": 3121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3092,
									"end": 3121,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 3092,
									"end": 3121,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3082,
									"end": 3090,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3078,
									"end": 3122,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3275,
									"end": 3277,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3263,
									"end": 3273,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3260,
									"end": 3278,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3257,
									"end": 3306,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3257,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 3257,
									"end": 3306,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3296,
									"end": 3304,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3281,
									"end": 3304,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3281,
									"end": 3304,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3257,
									"end": 3306,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 3257,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3319,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3375,
									"end": 3397,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 3393,
									"end": 3396,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3375,
									"end": 3397,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 3375,
									"end": 3397,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3375,
									"end": 3397,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 3375,
									"end": 3397,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3365,
									"end": 3373,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3361,
									"end": 3398,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3348,
									"end": 3359,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3319,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 3319,
									"end": 3399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3319,
									"end": 3399,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3319,
									"end": 3399,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2978,
									"end": 3409,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2978,
									"end": 3409,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2963,
									"end": 3409,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 2963,
									"end": 3409,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2873,
									"end": 3416,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2873,
									"end": 3416,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2873,
									"end": 3416,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2873,
									"end": 3416,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3422,
									"end": 3539,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 3422,
									"end": 3539,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3476,
									"end": 3484,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3526,
									"end": 3531,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3520,
									"end": 3524,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3516,
									"end": 3532,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3495,
									"end": 3532,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3495,
									"end": 3532,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3422,
									"end": 3539,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3422,
									"end": 3539,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3422,
									"end": 3539,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3422,
									"end": 3539,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3422,
									"end": 3539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3545,
									"end": 3714,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3545,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3589,
									"end": 3595,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3673,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 3670,
									"end": 3671,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3666,
									"end": 3672,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3658,
									"end": 3663,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3655,
									"end": 3656,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3651,
									"end": 3664,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3622,
									"end": 3673,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 3622,
									"end": 3673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3622,
									"end": 3673,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 3622,
									"end": 3673,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3618,
									"end": 3674,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3697,
									"end": 3701,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3693,
									"end": 3708,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3683,
									"end": 3708,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3683,
									"end": 3708,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3596,
									"end": 3714,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3545,
									"end": 3714,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3545,
									"end": 3714,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3545,
									"end": 3714,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3545,
									"end": 3714,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3545,
									"end": 3714,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3719,
									"end": 4014,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3719,
									"end": 4014,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3795,
									"end": 3799,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3941,
									"end": 3970,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 3966,
									"end": 3969,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3960,
									"end": 3964,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3941,
									"end": 3970,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3941,
									"end": 3970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3941,
									"end": 3970,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 3941,
									"end": 3970,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3933,
									"end": 3970,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3933,
									"end": 3970,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4003,
									"end": 4006,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4000,
									"end": 4001,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3996,
									"end": 4007,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3990,
									"end": 3994,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3987,
									"end": 4008,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3979,
									"end": 4008,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3979,
									"end": 4008,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3719,
									"end": 4014,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3719,
									"end": 4014,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3719,
									"end": 4014,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3719,
									"end": 4014,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3719,
									"end": 4014,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4019,
									"end": 5414,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 4019,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 4169,
									"end": 4172,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 4136,
									"end": 4173,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "tag",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4238,
									"end": 4256,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4230,
									"end": 4236,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4227,
									"end": 4257,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4224,
									"end": 4280,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4224,
									"end": 4280,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 4224,
									"end": 4280,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4260,
									"end": 4278,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 4260,
									"end": 4278,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 4260,
									"end": 4278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4260,
									"end": 4278,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 4260,
									"end": 4278,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4224,
									"end": 4280,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 4224,
									"end": 4280,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4304,
									"end": 4342,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 4336,
									"end": 4340,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4330,
									"end": 4341,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4304,
									"end": 4342,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 4304,
									"end": 4342,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4304,
									"end": 4342,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 4304,
									"end": 4342,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4389,
									"end": 4456,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 4449,
									"end": 4455,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4441,
									"end": 4447,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4435,
									"end": 4439,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4389,
									"end": 4456,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 4389,
									"end": 4456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4389,
									"end": 4456,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 4389,
									"end": 4456,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4483,
									"end": 4484,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4507,
									"end": 4511,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4494,
									"end": 4511,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4494,
									"end": 4511,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4539,
									"end": 4541,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4531,
									"end": 4537,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4528,
									"end": 4542,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4556,
									"end": 4557,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4551,
									"end": 5169,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4551,
									"end": 5169,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 4551,
									"end": 5169,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 4551,
									"end": 5169,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5213,
									"end": 5214,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5230,
									"end": 5236,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5227,
									"end": 5304,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5227,
									"end": 5304,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 5227,
									"end": 5304,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5279,
									"end": 5288,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5274,
									"end": 5277,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 5270,
									"end": 5289,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5264,
									"end": 5290,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5255,
									"end": 5290,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5255,
									"end": 5290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5227,
									"end": 5304,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 5227,
									"end": 5304,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5330,
									"end": 5397,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 5390,
									"end": 5396,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5383,
									"end": 5388,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5330,
									"end": 5397,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 5330,
									"end": 5397,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5330,
									"end": 5397,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 5330,
									"end": 5397,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5324,
									"end": 5328,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5317,
									"end": 5398,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5186,
									"end": 5408,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4521,
									"end": 5408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 4521,
									"end": 5408,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4551,
									"end": 5169,
									"name": "tag",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 4551,
									"end": 5169,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4603,
									"end": 4607,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4599,
									"end": 4608,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4591,
									"end": 4597,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4609,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4637,
									"end": 4674,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 4669,
									"end": 4673,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4637,
									"end": 4674,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 4637,
									"end": 4674,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4637,
									"end": 4674,
									"name": "tag",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 4637,
									"end": 4674,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4696,
									"end": 4697,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4710,
									"end": 4918,
									"name": "tag",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 4710,
									"end": 4918,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4724,
									"end": 4731,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4721,
									"end": 4722,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4718,
									"end": 4732,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4918,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4918,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 4710,
									"end": 4918,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4803,
									"end": 4812,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4798,
									"end": 4801,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4794,
									"end": 4813,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4788,
									"end": 4814,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4780,
									"end": 4786,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4773,
									"end": 4815,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4854,
									"end": 4855,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4846,
									"end": 4852,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4842,
									"end": 4856,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4832,
									"end": 4856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4901,
									"end": 4903,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4890,
									"end": 4899,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4886,
									"end": 4904,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4873,
									"end": 4904,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 4873,
									"end": 4904,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4747,
									"end": 4751,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4744,
									"end": 4745,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4740,
									"end": 4752,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4735,
									"end": 4752,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4735,
									"end": 4752,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4918,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 4710,
									"end": 4918,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4710,
									"end": 4918,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 4710,
									"end": 4918,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4946,
									"end": 4952,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4937,
									"end": 4944,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4934,
									"end": 4953,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4931,
									"end": 5110,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4931,
									"end": 5110,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 4931,
									"end": 5110,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5004,
									"end": 5013,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4999,
									"end": 5002,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4995,
									"end": 5014,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4989,
									"end": 5015,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5047,
									"end": 5095,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 5089,
									"end": 5093,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5081,
									"end": 5087,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 5077,
									"end": 5094,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5066,
									"end": 5075,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5047,
									"end": 5095,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 5047,
									"end": 5095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5047,
									"end": 5095,
									"name": "tag",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 5047,
									"end": 5095,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5039,
									"end": 5045,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5032,
									"end": 5096,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4954,
									"end": 5110,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4931,
									"end": 5110,
									"name": "tag",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 4931,
									"end": 5110,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5156,
									"end": 5157,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5152,
									"end": 5153,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 5144,
									"end": 5150,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 5140,
									"end": 5154,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5136,
									"end": 5158,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5130,
									"end": 5134,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 5123,
									"end": 5159,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4558,
									"end": 5169,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4558,
									"end": 5169,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4558,
									"end": 5169,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4521,
									"end": 5408,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 4521,
									"end": 5408,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4521,
									"end": 5408,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4111,
									"end": 5414,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4111,
									"end": 5414,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4111,
									"end": 5414,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4019,
									"end": 5414,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4019,
									"end": 5414,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4019,
									"end": 5414,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5420,
									"end": 5546,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 5420,
									"end": 5546,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5457,
									"end": 5464,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5497,
									"end": 5539,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5490,
									"end": 5495,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5486,
									"end": 5540,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5475,
									"end": 5540,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5475,
									"end": 5540,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5420,
									"end": 5546,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5420,
									"end": 5546,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5420,
									"end": 5546,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5420,
									"end": 5546,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5552,
									"end": 5648,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 5552,
									"end": 5648,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5589,
									"end": 5596,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5618,
									"end": 5642,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 5636,
									"end": 5641,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5618,
									"end": 5642,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 5618,
									"end": 5642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5618,
									"end": 5642,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 5618,
									"end": 5642,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5607,
									"end": 5642,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5607,
									"end": 5642,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5552,
									"end": 5648,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5552,
									"end": 5648,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5552,
									"end": 5648,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5552,
									"end": 5648,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5654,
									"end": 5772,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5654,
									"end": 5772,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5741,
									"end": 5765,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 5759,
									"end": 5764,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5741,
									"end": 5765,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 5741,
									"end": 5765,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5741,
									"end": 5765,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 5741,
									"end": 5765,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5736,
									"end": 5739,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5729,
									"end": 5766,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5654,
									"end": 5772,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5654,
									"end": 5772,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5654,
									"end": 5772,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5778,
									"end": 6000,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 5778,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5871,
									"end": 5875,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5909,
									"end": 5911,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5898,
									"end": 5907,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5894,
									"end": 5912,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5886,
									"end": 5912,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5886,
									"end": 5912,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5922,
									"end": 5993,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 5990,
									"end": 5991,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5988,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5975,
									"end": 5992,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5966,
									"end": 5972,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5922,
									"end": 5993,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5922,
									"end": 5993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5922,
									"end": 5993,
									"name": "tag",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 5922,
									"end": 5993,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5778,
									"end": 6000,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5778,
									"end": 6000,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5778,
									"end": 6000,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5778,
									"end": 6000,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5778,
									"end": 6000,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6186,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 6006,
									"end": 6186,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6054,
									"end": 6131,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6051,
									"end": 6052,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6044,
									"end": 6132,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6151,
									"end": 6155,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 6148,
									"end": 6149,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 6141,
									"end": 6156,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6175,
									"end": 6179,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 6172,
									"end": 6173,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6165,
									"end": 6180,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 6192,
									"end": 6383,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 6192,
									"end": 6383,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6232,
									"end": 6235,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6251,
									"end": 6271,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 6269,
									"end": 6270,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6251,
									"end": 6271,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 6251,
									"end": 6271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6251,
									"end": 6271,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 6251,
									"end": 6271,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6246,
									"end": 6271,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6246,
									"end": 6271,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6285,
									"end": 6305,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 6303,
									"end": 6304,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6285,
									"end": 6305,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 6285,
									"end": 6305,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6285,
									"end": 6305,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 6285,
									"end": 6305,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6280,
									"end": 6305,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6280,
									"end": 6305,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6328,
									"end": 6329,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6325,
									"end": 6326,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6321,
									"end": 6330,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6314,
									"end": 6330,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6314,
									"end": 6330,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6349,
									"end": 6352,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6346,
									"end": 6347,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6343,
									"end": 6353,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 6340,
									"end": 6376,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6340,
									"end": 6376,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 6340,
									"end": 6376,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6356,
									"end": 6374,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 6356,
									"end": 6374,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 6356,
									"end": 6374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6356,
									"end": 6374,
									"name": "tag",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 6356,
									"end": 6374,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6340,
									"end": 6376,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 6340,
									"end": 6376,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6192,
									"end": 6383,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6192,
									"end": 6383,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6192,
									"end": 6383,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6192,
									"end": 6383,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6192,
									"end": 6383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6389,
									"end": 6507,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 6389,
									"end": 6507,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6476,
									"end": 6500,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 6494,
									"end": 6499,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6476,
									"end": 6500,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 6476,
									"end": 6500,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6476,
									"end": 6500,
									"name": "tag",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 6476,
									"end": 6500,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6471,
									"end": 6474,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6464,
									"end": 6501,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6389,
									"end": 6507,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6389,
									"end": 6507,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6389,
									"end": 6507,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6513,
									"end": 6955,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 6513,
									"end": 6955,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6662,
									"end": 6666,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6700,
									"end": 6702,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 6689,
									"end": 6698,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6685,
									"end": 6703,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6677,
									"end": 6703,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6677,
									"end": 6703,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6713,
									"end": 6784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 6781,
									"end": 6782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6770,
									"end": 6779,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6766,
									"end": 6783,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6757,
									"end": 6763,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6713,
									"end": 6784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 6713,
									"end": 6784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6713,
									"end": 6784,
									"name": "tag",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 6713,
									"end": 6784,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6794,
									"end": 6866,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 6862,
									"end": 6864,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6851,
									"end": 6860,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6847,
									"end": 6865,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6838,
									"end": 6844,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6794,
									"end": 6866,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 6794,
									"end": 6866,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6794,
									"end": 6866,
									"name": "tag",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 6794,
									"end": 6866,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 6948,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 6944,
									"end": 6946,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 6933,
									"end": 6942,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6929,
									"end": 6947,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6920,
									"end": 6926,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 6948,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 6876,
									"end": 6948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 6948,
									"name": "tag",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 6876,
									"end": 6948,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6513,
									"end": 6955,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 6513,
									"end": 6955,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 6513,
									"end": 6955,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6513,
									"end": 6955,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6513,
									"end": 6955,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6513,
									"end": 6955,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6513,
									"end": 6955,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6961,
									"end": 7183,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 6961,
									"end": 7183,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7054,
									"end": 7058,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7092,
									"end": 7094,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7081,
									"end": 7090,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7077,
									"end": 7095,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7069,
									"end": 7095,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7069,
									"end": 7095,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7105,
									"end": 7176,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 7173,
									"end": 7174,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7162,
									"end": 7171,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7158,
									"end": 7175,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7149,
									"end": 7155,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7105,
									"end": 7176,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 7105,
									"end": 7176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7105,
									"end": 7176,
									"name": "tag",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 7105,
									"end": 7176,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6961,
									"end": 7183,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6961,
									"end": 7183,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6961,
									"end": 7183,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6961,
									"end": 7183,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6961,
									"end": 7183,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 290,
									"end": 5167,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 290,
									"end": 5167,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 290,
									"end": 5167,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 290,
									"end": 5167,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 290,
									"end": 5167,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 290,
									"end": 5167,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 5167,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 290,
									"end": 5167,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 5167,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220092d6ebf1ef9f3a25290c943b0061a2486924efb9bf38c01240c66534473fec364736f6c634300081a0033",
									".code": [
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "B0E68630"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "C040E6B8"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "C040E6B8"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "C552E04B"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "E6BD92B9"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "B0E68630"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "B68ED11F"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "BA20CF4C"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "BDA95633"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "902D55A5"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "902D55A5"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "920168B3"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "8F7713FF"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "2B1CBC38"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "3610724E"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "3610724E"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "40F02AB6"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "54DD1DA4"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "55DD574C"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "5FB3B944"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "2B1CBC38"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "32C85AC0"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "338DBF59"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "192399D1"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "24600FC3"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "FE83BB8"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "1514617E"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 5115,
											"end": 5158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5158,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 5022,
											"end": 5065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5065,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1007,
											"end": 1060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1007,
											"end": 1060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1534,
											"end": 1578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1534,
											"end": 1578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1420,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1420,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1420,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4856,
											"end": 4978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1475,
											"end": 1528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1475,
											"end": 1528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1475,
											"end": 1528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 4625,
											"end": 4850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1925,
											"end": 2106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2388,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2388,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1606,
											"end": 1645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1606,
											"end": 1645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4263,
											"end": 4619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 2112,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 851,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 851,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1167,
											"end": 1214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1167,
											"end": 1214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 384,
											"end": 445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 384,
											"end": 445,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 384,
											"end": 445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 384,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 384,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 384,
											"end": 445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 445,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 384,
											"end": 445,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 384,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 384,
											"end": 445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 445,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 1086,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1086,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 685,
											"end": 740,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 685,
											"end": 740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 685,
											"end": 740,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 740,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 685,
											"end": 740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 685,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 685,
											"end": 740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 685,
											"end": 740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 740,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 685,
											"end": 740,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 685,
											"end": 740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 685,
											"end": 740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 740,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1240,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 519,
											"end": 574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 519,
											"end": 574,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 574,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 519,
											"end": 574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 519,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 519,
											"end": 574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 519,
											"end": 574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 574,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 519,
											"end": 574,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 519,
											"end": 574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 519,
											"end": 574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 574,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 768,
											"end": 822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 768,
											"end": 822,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 822,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 768,
											"end": 822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 768,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 768,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 768,
											"end": 822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 768,
											"end": 822,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 768,
											"end": 822,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 768,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 768,
											"end": 822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 768,
											"end": 822,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 1348,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 1348,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 604,
											"end": 660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 604,
											"end": 660,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 660,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 604,
											"end": 660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 604,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 604,
											"end": 660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 604,
											"end": 660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 660,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 604,
											"end": 660,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 604,
											"end": 660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 604,
											"end": 660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 660,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 924,
											"end": 976,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 924,
											"end": 976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 924,
											"end": 976,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 924,
											"end": 976,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 924,
											"end": 976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 924,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 924,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 924,
											"end": 976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 924,
											"end": 976,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 924,
											"end": 976,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 924,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 924,
											"end": 976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 924,
											"end": 976,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1007,
											"end": 1060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4856,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4938,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 4931,
											"end": 4936,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 4931,
											"end": 4938,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 4938,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 4931,
											"end": 4938,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4948,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4948,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8FC"
										},
										{
											"begin": 4949,
											"end": 4970,
											"modifierDepth": 2,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4971,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4923,
											"end": 4971,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4856,
											"end": 4978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 4625,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4708,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4708,
											"end": 4725,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4683,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 4683,
											"end": 4704,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4683,
											"end": 4725,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4683,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4683,
											"end": 4763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 4683,
											"end": 4763,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4683,
											"end": 4763,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4750,
											"end": 4763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 4750,
											"end": 4763,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4729,
											"end": 4746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 4729,
											"end": 4746,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4729,
											"end": 4763,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4683,
											"end": 4763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 4683,
											"end": 4763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 4675,
											"end": 4811,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 4675,
											"end": 4811,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4829,
											"end": 4843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 4821,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 4821,
											"end": 4843,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4843,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1925,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1990,
											"end": 2013,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 1995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1990,
											"end": 1995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 1995,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 1995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 1995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1990,
											"end": 1995,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 1995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 1995,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 1995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1990,
											"end": 1995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1990,
											"end": 2013,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2013,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 1982,
											"end": 2064,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 1982,
											"end": 2064,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2082,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2074,
											"end": 2079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2074,
											"end": 2079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2074,
											"end": 2099,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1925,
											"end": 2106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2483,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2474,
											"end": 2497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2474,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2479,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2474,
											"end": 2479,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2474,
											"end": 2479,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2474,
											"end": 2497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2474,
											"end": 2497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2497,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2466,
											"end": 2520,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2466,
											"end": 2520,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2564,
											"end": 2590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2564,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2569,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2564,
											"end": 2569,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2569,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2564,
											"end": 2569,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2564,
											"end": 2590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 2564,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2564,
											"end": 2590,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 2560,
											"end": 3671,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2638,
											"end": 2655,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2614,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2614,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2614,
											"end": 2655,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2606,
											"end": 2682,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 2606,
											"end": 2682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2710,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 2737,
											"end": 2746,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2710,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 2710,
											"end": 2747,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2710,
											"end": 2747,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 2710,
											"end": 2747,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2747,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2747,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 2797,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2761,
											"end": 2782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2761,
											"end": 2797,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2844,
											"end": 2861,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2819,
											"end": 2840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2819,
											"end": 2840,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2819,
											"end": 2861,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2819,
											"end": 2861,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2811,
											"end": 2899,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2811,
											"end": 2899,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2954,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2938,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2913,
											"end": 2954,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2954,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3035,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3035,
											"end": 3050,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3019,
											"end": 3032,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3016,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 3001,
											"end": 3032,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 3001,
											"end": 3032,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 3001,
											"end": 3032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 3001,
											"end": 3050,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 3001,
											"end": 3050,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 3001,
											"end": 3050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2997,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2998,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3050,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3050,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3081,
											"end": 3091,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8FA81BB0702332EA2A0AEE44BB9E4D359CF4A2C5A820DD59D9129369BDBCA73F"
										},
										{
											"begin": 3093,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 3069,
											"end": 3105,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3105,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2560,
											"end": 3671,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 3671,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 2560,
											"end": 3671,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3135,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3126,
											"end": 3152,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3126,
											"end": 3152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3126,
											"end": 3131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3131,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3126,
											"end": 3131,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3131,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3126,
											"end": 3131,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3126,
											"end": 3152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 3126,
											"end": 3152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3126,
											"end": 3152,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 3122,
											"end": 3671,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3196,
											"end": 3209,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3176,
											"end": 3193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3176,
											"end": 3193,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3176,
											"end": 3209,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 3168,
											"end": 3232,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3168,
											"end": 3232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3267,
											"end": 3281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 3254,
											"end": 3263,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3281,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3281,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3314,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3314,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 3254,
											"end": 3314,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3314,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3298,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A2A15D09519BE00000"
										},
										{
											"begin": 3285,
											"end": 3294,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3314,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3285,
											"end": 3314,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3314,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 3254,
											"end": 3314,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3246,
											"end": 3349,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3246,
											"end": 3349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3377,
											"end": 3410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 3400,
											"end": 3409,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3377,
											"end": 3399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 3377,
											"end": 3410,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3377,
											"end": 3410,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 3377,
											"end": 3410,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3363,
											"end": 3410,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3363,
											"end": 3410,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3445,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3424,
											"end": 3441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 3424,
											"end": 3456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3499,
											"end": 3512,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3478,
											"end": 3495,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3512,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3512,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3470,
											"end": 3546,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3470,
											"end": 3546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3560,
											"end": 3609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3578,
											"end": 3582,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3595,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3597,
											"end": 3608,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3560,
											"end": 3569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3560,
											"end": 3609,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3560,
											"end": 3609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3560,
											"end": 3609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3646,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "550498DC565CC74203B9D14CBA907C9F60CEEFE26E82B37DF98F6CB98529CF19"
										},
										{
											"begin": 3648,
											"end": 3659,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 3628,
											"end": 3660,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3660,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3671,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 3122,
											"end": 3671,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 3671,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2560,
											"end": 3671,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2456,
											"end": 3677,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 3677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4263,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4353,
											"end": 4371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4382,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4383,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4334,
											"end": 4349,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4334,
											"end": 4383,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4334,
											"end": 4383,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4326,
											"end": 4421,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4326,
											"end": 4421,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4431,
											"end": 4445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4473,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4474,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4431,
											"end": 4474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4431,
											"end": 4474,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4484,
											"end": 4498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4509,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4484,
											"end": 4510,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4514,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4514,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4514,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4514,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4557,
											"end": 4558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4524,
											"end": 4542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4543,
											"end": 4553,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4524,
											"end": 4554,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4558,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4558,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4558,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4568,
											"end": 4612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 4586,
											"end": 4590,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4593,
											"end": 4603,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 4611,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4568,
											"end": 4577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 4568,
											"end": 4612,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4568,
											"end": 4612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 4568,
											"end": 4612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4619,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 2112,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2173,
											"end": 2199,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2173,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2173,
											"end": 2178,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2178,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2173,
											"end": 2178,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2173,
											"end": 2199,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2199,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 2165,
											"end": 2243,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 2165,
											"end": 2243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2286,
											"end": 2303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2286,
											"end": 2303,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2303,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 2253,
											"end": 2340,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 2253,
											"end": 2340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2350,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2350,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2350,
											"end": 2375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2112,
											"end": 2382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 851,
											"end": 891,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 384,
											"end": 445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 423,
											"end": 445,
											"name": "PUSH",
											"source": 8,
											"value": "A56FA5B99019A5C8000000"
										},
										{
											"begin": 384,
											"end": 445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 384,
											"end": 445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 685,
											"end": 740,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 685,
											"end": 740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 685,
											"end": 740,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 685,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 519,
											"end": 574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 519,
											"end": 574,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 519,
											"end": 574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 768,
											"end": 822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 768,
											"end": 822,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 768,
											"end": 822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1348,
											"end": 1387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 604,
											"end": 660,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 604,
											"end": 660,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 604,
											"end": 660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 976,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 924,
											"end": 976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 924,
											"end": 976,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 924,
											"end": 976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3979,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 3683,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3768,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3913,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3913,
											"end": 3930,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3889,
											"end": 3910,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3889,
											"end": 3910,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3864,
											"end": 3885,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3864,
											"end": 3885,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3842,
											"end": 3861,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 3842,
											"end": 3885,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 3842,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3885,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 3842,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3841,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3841,
											"end": 3910,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3841,
											"end": 3910,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3841,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 3841,
											"end": 3910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3841,
											"end": 3910,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3841,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3841,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 3841,
											"end": 3930,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3841,
											"end": 3930,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3841,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 3841,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3841,
											"end": 3930,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 3841,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3824,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3803,
											"end": 3824,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 3803,
											"end": 3931,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3931,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 3803,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3931,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 3803,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3931,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3972,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 3957,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 3948,
											"end": 3972,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 3972,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 3948,
											"end": 3972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 3972,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 3948,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3941,
											"end": 3972,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3941,
											"end": 3972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3941,
											"end": 3972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3683,
											"end": 3979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3985,
											"end": 4257,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 3985,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4059,
											"end": 4066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4078,
											"end": 4098,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4195,
											"end": 4208,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 4195,
											"end": 4208,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4175,
											"end": 4192,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 4175,
											"end": 4192,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4154,
											"end": 4171,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 4154,
											"end": 4171,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4151,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 4136,
											"end": 4151,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 4136,
											"end": 4171,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4171,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 4136,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4171,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 4136,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 4135,
											"end": 4192,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 4135,
											"end": 4192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4192,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 4135,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 4135,
											"end": 4208,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 4135,
											"end": 4208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4135,
											"end": 4208,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 4135,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4101,
											"end": 4118,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 4101,
											"end": 4118,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4101,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 4101,
											"end": 4209,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4101,
											"end": 4209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4101,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 4101,
											"end": 4209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4101,
											"end": 4209,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 4101,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4078,
											"end": 4209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4238,
											"end": 4250,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4235,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4226,
											"end": 4250,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 4226,
											"end": 4250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4250,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4226,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4250,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3985,
											"end": 4257,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3985,
											"end": 4257,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3985,
											"end": 4257,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3985,
											"end": 4257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 182,
											"end": 402,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 182,
											"end": 402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 322,
											"end": 356,
											"name": "PUSH",
											"source": 9,
											"value": "44697265637420455448207472616E7366657273206E6F7420616C6C6F776564"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 299,
											"end": 357,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 391,
											"end": 394,
											"name": "PUSH",
											"source": 9,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 386,
											"end": 388,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 374,
											"end": 389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 367,
											"end": 395,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 182,
											"end": 402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 182,
											"end": 402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 408,
											"end": 774,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 408,
											"end": 774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 550,
											"end": 553,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 635,
											"end": 637,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 571,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 571,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 571,
											"end": 638,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 571,
											"end": 638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 564,
											"end": 638,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 564,
											"end": 638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 647,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 647,
											"end": 740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 740,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 647,
											"end": 740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 765,
											"end": 767,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 763,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 756,
											"end": 768,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 749,
											"end": 768,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 749,
											"end": 768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 408,
											"end": 774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 408,
											"end": 774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 408,
											"end": 774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 408,
											"end": 774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 780,
											"end": 1199,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 780,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 946,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 969,
											"end": 987,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 961,
											"end": 987,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 961,
											"end": 987,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 1042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1023,
											"end": 1043,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1004,
											"end": 1021,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1044,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1061,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1061,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 1061,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1061,
											"end": 1192,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 1061,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1053,
											"end": 1192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1053,
											"end": 1192,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 780,
											"end": 1199,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 780,
											"end": 1199,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 780,
											"end": 1199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 780,
											"end": 1199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1304,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 1205,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1297,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1297,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1304,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1310,
											"end": 1449,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 1310,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1394,
											"end": 1397,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1406,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1441,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1437,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1426,
											"end": 1429,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1415,
											"end": 1442,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1310,
											"end": 1449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1310,
											"end": 1449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1310,
											"end": 1449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1310,
											"end": 1449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1557,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 1455,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1549,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1543,
											"end": 1550,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1540,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1541,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1523,
											"end": 1551,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1557,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1557,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1651,
											"end": 1654,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 1712,
											"end": 1717,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1679,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 1679,
											"end": 1718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1679,
											"end": 1718,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 1679,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1734,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 1798,
											"end": 1804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 1796,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1734,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 1734,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1734,
											"end": 1805,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 1734,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1805,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 1870,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1864,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1853,
											"end": 1858,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1849,
											"end": 1865,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 1814,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 1879,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 1814,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 1904,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1933,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 1904,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1934,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1888,
											"end": 1934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1888,
											"end": 1934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2099,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2146,
											"end": 2155,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2144,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2156,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2132,
											"end": 2133,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2134,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2157,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2174,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 2247,
											"end": 2251,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2174,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 2174,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2174,
											"end": 2252,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 2174,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2252,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 2259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2346,
											"end": 2463,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 2346,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2453,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2718,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 2592,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2636,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2711,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2662,
											"end": 2667,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2658,
											"end": 2712,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2647,
											"end": 2712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2647,
											"end": 2712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2718,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2820,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 2724,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2761,
											"end": 2768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 2808,
											"end": 2813,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 2790,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2814,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 2790,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2948,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 2826,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 2917,
											"end": 2922,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 2899,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2892,
											"end": 2897,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2924,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 2879,
											"end": 2942,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2936,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2928,
											"end": 2940,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2942,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 2879,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2948,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3000,
											"end": 3005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 3081,
											"end": 3086,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 3054,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3136,
											"end": 3143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3304,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 3182,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 3273,
											"end": 3278,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 3255,
											"end": 3279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3279,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 3255,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3248,
											"end": 3253,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 3280,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3235,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 3235,
											"end": 3298,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3292,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3296,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3235,
											"end": 3298,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 3235,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3400,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3401,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 3437,
											"end": 3442,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 3410,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 3443,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 3410,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3529,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3580,
											"end": 3582,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3568,
											"end": 3577,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3559,
											"end": 3566,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3555,
											"end": 3578,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3583,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3667,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 3548,
											"end": 3667,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 3586,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 3586,
											"end": 3665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3665,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 3586,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3667,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 3548,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3706,
											"end": 3707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 3776,
											"end": 3783,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3773,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 3765,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3752,
											"end": 3774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 3731,
											"end": 3784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 3784,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 3731,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3784,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3784,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3859,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 3904,
											"end": 3911,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3901,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3884,
											"end": 3893,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3880,
											"end": 3902,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3859,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 3859,
											"end": 3912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3859,
											"end": 3912,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 3859,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3849,
											"end": 3912,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3849,
											"end": 3912,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3935,
											"end": 4025,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 3935,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3969,
											"end": 3976,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3998,
											"end": 4019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 4019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 4019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3935,
											"end": 4025,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3935,
											"end": 4025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3935,
											"end": 4025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3935,
											"end": 4025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4140,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 4031,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 4127,
											"end": 4132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 4112,
											"end": 4133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4133,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 4112,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4107,
											"end": 4110,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4271,
											"end": 4273,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4260,
											"end": 4269,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4256,
											"end": 4274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4248,
											"end": 4274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4248,
											"end": 4274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 4346,
											"end": 4347,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4344,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4331,
											"end": 4348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 4284,
											"end": 4349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4349,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 4284,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4480,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 4362,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4449,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 4467,
											"end": 4472,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4449,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 4449,
											"end": 4473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4449,
											"end": 4473,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 4449,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4444,
											"end": 4447,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4474,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4579,
											"end": 4583,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4606,
											"end": 4615,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 4698,
											"end": 4699,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4687,
											"end": 4696,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4700,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 4630,
											"end": 4701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4701,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 4630,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4824,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4810,
											"end": 4819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4801,
											"end": 4808,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4797,
											"end": 4820,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 4825,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4909,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 4790,
											"end": 4909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 4828,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 4828,
											"end": 4907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4907,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 4828,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4909,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 4790,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4948,
											"end": 4949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 5018,
											"end": 5025,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5007,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4994,
											"end": 5016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 4973,
											"end": 5026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5026,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4919,
											"end": 5036,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 5043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5142,
											"end": 5148,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5179,
											"end": 5188,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5170,
											"end": 5177,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5162,
											"end": 5194,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5159,
											"end": 5278,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5159,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 5159,
											"end": 5278,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 5197,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 5197,
											"end": 5276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5276,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 5197,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5159,
											"end": 5278,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 5159,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5317,
											"end": 5318,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 5387,
											"end": 5394,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5378,
											"end": 5384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5367,
											"end": 5376,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5363,
											"end": 5385,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 5342,
											"end": 5395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5395,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 5342,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5395,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5288,
											"end": 5405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5446,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5470,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 5515,
											"end": 5522,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5506,
											"end": 5512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5495,
											"end": 5504,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5513,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 5470,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5523,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 5470,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5523,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5572,
											"end": 5574,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5634,
											"end": 5640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5623,
											"end": 5632,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5619,
											"end": 5641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 5598,
											"end": 5651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5588,
											"end": 5651,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5588,
											"end": 5651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5543,
											"end": 5661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5760,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 5674,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5709,
											"end": 5716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5753,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5742,
											"end": 5747,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5738,
											"end": 5754,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5727,
											"end": 5754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5727,
											"end": 5754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5878,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 5766,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5849,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 5865,
											"end": 5870,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5849,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 5849,
											"end": 5871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5849,
											"end": 5871,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 5849,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5844,
											"end": 5847,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5837,
											"end": 5872,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5884,
											"end": 6098,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5884,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5973,
											"end": 5977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6011,
											"end": 6013,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6000,
											"end": 6009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5996,
											"end": 6014,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5988,
											"end": 6014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5988,
											"end": 6014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6024,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 6088,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6086,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6073,
											"end": 6090,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6070,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6024,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 6024,
											"end": 6091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6024,
											"end": 6091,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 6024,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5884,
											"end": 6098,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5884,
											"end": 6098,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5884,
											"end": 6098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5884,
											"end": 6098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5884,
											"end": 6098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6433,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 6104,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6163,
											"end": 6169,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6212,
											"end": 6214,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6200,
											"end": 6209,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6198,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6187,
											"end": 6210,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6183,
											"end": 6215,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6299,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 6180,
											"end": 6299,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6218,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 6218,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 6218,
											"end": 6297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6218,
											"end": 6297,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 6218,
											"end": 6297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6180,
											"end": 6299,
											"name": "tag",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 6180,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6339,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 6408,
											"end": 6415,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6388,
											"end": 6397,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6384,
											"end": 6406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 6363,
											"end": 6416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 6363,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6433,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6433,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6104,
											"end": 6433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6439,
											"end": 6557,
											"name": "tag",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 6439,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 6544,
											"end": 6549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 6526,
											"end": 6550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6550,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 6526,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6521,
											"end": 6524,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6514,
											"end": 6551,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6439,
											"end": 6557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6439,
											"end": 6557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6439,
											"end": 6557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6785,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 6563,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6656,
											"end": 6660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6694,
											"end": 6696,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6683,
											"end": 6692,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6679,
											"end": 6697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6671,
											"end": 6697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6707,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 6775,
											"end": 6776,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6764,
											"end": 6773,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6760,
											"end": 6777,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6757,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6707,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 6707,
											"end": 6778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6707,
											"end": 6778,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 6707,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6785,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6785,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6785,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6785,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6791,
											"end": 6971,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 6791,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 6916,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6836,
											"end": 6837,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6829,
											"end": 6917,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 6933,
											"end": 6934,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6926,
											"end": 6941,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6960,
											"end": 6964,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6957,
											"end": 6958,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6950,
											"end": 6965,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6977,
											"end": 7096,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 6977,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7064,
											"end": 7065,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7057,
											"end": 7062,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7054,
											"end": 7066,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 7044,
											"end": 7090,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7070,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 7070,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 7070,
											"end": 7088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7070,
											"end": 7088,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 7070,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7044,
											"end": 7090,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 7044,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6977,
											"end": 7096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6977,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7241,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 7102,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7153,
											"end": 7160,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7182,
											"end": 7187,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7188,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 7229,
											"end": 7234,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7188,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 7188,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7188,
											"end": 7235,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 7188,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7241,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7241,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7241,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7102,
											"end": 7241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7247,
											"end": 7386,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 7247,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7309,
											"end": 7318,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 7374,
											"end": 7379,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7342,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 7342,
											"end": 7380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7342,
											"end": 7380,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 7342,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7247,
											"end": 7386,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7247,
											"end": 7386,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7247,
											"end": 7386,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7247,
											"end": 7386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7547,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 7392,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 7534,
											"end": 7539,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 7491,
											"end": 7540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 7540,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 7491,
											"end": 7540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7486,
											"end": 7489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7479,
											"end": 7541,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7553,
											"end": 7799,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 7553,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7696,
											"end": 7698,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7685,
											"end": 7694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7681,
											"end": 7699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7673,
											"end": 7699,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7673,
											"end": 7699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7709,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 7789,
											"end": 7790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7778,
											"end": 7787,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7774,
											"end": 7791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7765,
											"end": 7771,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7709,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 7709,
											"end": 7792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7709,
											"end": 7792,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 7709,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7553,
											"end": 7799,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7553,
											"end": 7799,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7553,
											"end": 7799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7553,
											"end": 7799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7553,
											"end": 7799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7805,
											"end": 8279,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 7805,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7873,
											"end": 7879,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7881,
											"end": 7887,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7932,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7918,
											"end": 7927,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7916,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7905,
											"end": 7928,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7901,
											"end": 7933,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7898,
											"end": 8017,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7898,
											"end": 8017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 7898,
											"end": 8017,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7936,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 7936,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 7936,
											"end": 8015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7936,
											"end": 8015,
											"name": "tag",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 7936,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7898,
											"end": 8017,
											"name": "tag",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 7898,
											"end": 8017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8057,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 8126,
											"end": 8133,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8117,
											"end": 8123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8115,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8102,
											"end": 8124,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8081,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 8081,
											"end": 8134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8081,
											"end": 8134,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 8081,
											"end": 8134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8071,
											"end": 8134,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8071,
											"end": 8134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8027,
											"end": 8144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8183,
											"end": 8185,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8209,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 8254,
											"end": 8261,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8234,
											"end": 8243,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8230,
											"end": 8252,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8209,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 8209,
											"end": 8262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8209,
											"end": 8262,
											"name": "tag",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 8209,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8199,
											"end": 8262,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8199,
											"end": 8262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8154,
											"end": 8272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7805,
											"end": 8279,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7805,
											"end": 8279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7805,
											"end": 8279,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7805,
											"end": 8279,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7805,
											"end": 8279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7805,
											"end": 8279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8285,
											"end": 8465,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 8285,
											"end": 8465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8333,
											"end": 8410,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8330,
											"end": 8331,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8323,
											"end": 8411,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8434,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 8427,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8420,
											"end": 8435,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8454,
											"end": 8458,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8451,
											"end": 8452,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8444,
											"end": 8459,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8471,
											"end": 8791,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 8471,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8515,
											"end": 8521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8552,
											"end": 8553,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8546,
											"end": 8550,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8554,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8532,
											"end": 8554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8532,
											"end": 8554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8599,
											"end": 8600,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8589,
											"end": 8601,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8620,
											"end": 8638,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8610,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 8610,
											"end": 8691,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8676,
											"end": 8680,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 8668,
											"end": 8674,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8664,
											"end": 8681,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8654,
											"end": 8681,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8654,
											"end": 8681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8610,
											"end": 8691,
											"name": "tag",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 8610,
											"end": 8691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8738,
											"end": 8740,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8730,
											"end": 8736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8727,
											"end": 8741,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8707,
											"end": 8725,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8704,
											"end": 8742,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 8701,
											"end": 8785,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 8757,
											"end": 8775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8785,
											"name": "tag",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 8701,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8522,
											"end": 8791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8471,
											"end": 8791,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8471,
											"end": 8791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8471,
											"end": 8791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8471,
											"end": 8791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8797,
											"end": 8973,
											"name": "tag",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 8797,
											"end": 8973,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8937,
											"end": 8965,
											"name": "PUSH",
											"source": 9,
											"value": "53616C65732074617267657473206E6F7420796574206D65742E000000000000"
										},
										{
											"begin": 8933,
											"end": 8934,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8925,
											"end": 8931,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8921,
											"end": 8935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8914,
											"end": 8966,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8797,
											"end": 8973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8797,
											"end": 8973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8979,
											"end": 9345,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 8979,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9121,
											"end": 9124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9142,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 9206,
											"end": 9208,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 9201,
											"end": 9204,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 9142,
											"end": 9209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9142,
											"end": 9209,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 9142,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9135,
											"end": 9209,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9135,
											"end": 9209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 9307,
											"end": 9310,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "438"
										},
										{
											"begin": 9218,
											"end": 9311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9218,
											"end": 9311,
											"name": "tag",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 9218,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9336,
											"end": 9338,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9331,
											"end": 9334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9327,
											"end": 9339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9320,
											"end": 9339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9320,
											"end": 9339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8979,
											"end": 9345,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8979,
											"end": 9345,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8979,
											"end": 9345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8979,
											"end": 9345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9351,
											"end": 9770,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 9351,
											"end": 9770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9517,
											"end": 9521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9555,
											"end": 9557,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9544,
											"end": 9553,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9540,
											"end": 9558,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9532,
											"end": 9558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9532,
											"end": 9558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9604,
											"end": 9613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9598,
											"end": 9602,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9594,
											"end": 9614,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9590,
											"end": 9591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9579,
											"end": 9588,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9575,
											"end": 9592,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9568,
											"end": 9615,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9632,
											"end": 9763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 9758,
											"end": 9762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9632,
											"end": 9763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 9632,
											"end": 9763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9632,
											"end": 9763,
											"name": "tag",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 9632,
											"end": 9763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9624,
											"end": 9763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9624,
											"end": 9763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9351,
											"end": 9770,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9351,
											"end": 9770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9351,
											"end": 9770,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9351,
											"end": 9770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9776,
											"end": 10009,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 9776,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 9950,
											"name": "PUSH",
											"source": 9,
											"value": "507269766174652053616C652068617320616C72656164792073746172746564"
										},
										{
											"begin": 9912,
											"end": 9913,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9904,
											"end": 9910,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9900,
											"end": 9914,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9951,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9985,
											"end": 10001,
											"name": "PUSH",
											"source": 9,
											"value": "206F7220636F6E636C756465642E000000000000000000000000000000000000"
										},
										{
											"begin": 9980,
											"end": 9982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9972,
											"end": 9978,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9968,
											"end": 9983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9961,
											"end": 10002,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9776,
											"end": 10009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9776,
											"end": 10009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10015,
											"end": 10381,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 10015,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10160,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10178,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 10242,
											"end": 10244,
											"name": "PUSH",
											"source": 9,
											"value": "2E"
										},
										{
											"begin": 10237,
											"end": 10240,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10178,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 10178,
											"end": 10245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10178,
											"end": 10245,
											"name": "tag",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 10178,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10245,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10254,
											"end": 10347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 10343,
											"end": 10346,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10254,
											"end": 10347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 10254,
											"end": 10347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10254,
											"end": 10347,
											"name": "tag",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 10254,
											"end": 10347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10372,
											"end": 10374,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10367,
											"end": 10370,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10363,
											"end": 10375,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10356,
											"end": 10375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10356,
											"end": 10375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10015,
											"end": 10381,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10015,
											"end": 10381,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10015,
											"end": 10381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10015,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10387,
											"end": 10806,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 10387,
											"end": 10806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10553,
											"end": 10557,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10591,
											"end": 10593,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10580,
											"end": 10589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10576,
											"end": 10594,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10568,
											"end": 10594,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10568,
											"end": 10594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10640,
											"end": 10649,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10634,
											"end": 10638,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10630,
											"end": 10650,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10626,
											"end": 10627,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10615,
											"end": 10624,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 10628,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10604,
											"end": 10651,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10668,
											"end": 10799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 10794,
											"end": 10798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10668,
											"end": 10799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 10668,
											"end": 10799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10668,
											"end": 10799,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 10668,
											"end": 10799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10660,
											"end": 10799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10660,
											"end": 10799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10387,
											"end": 10806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10387,
											"end": 10806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10387,
											"end": 10806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10387,
											"end": 10806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10812,
											"end": 10980,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 10812,
											"end": 10980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10952,
											"end": 10972,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F2073616C65206973206163746976652E0000000000000000000000000000"
										},
										{
											"begin": 10948,
											"end": 10949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10940,
											"end": 10946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10936,
											"end": 10950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10929,
											"end": 10973,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10812,
											"end": 10980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10812,
											"end": 10980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10986,
											"end": 11352,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 10986,
											"end": 11352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11128,
											"end": 11131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11149,
											"end": 11216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 11213,
											"end": 11215,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 11208,
											"end": 11211,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 11149,
											"end": 11216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11149,
											"end": 11216,
											"name": "tag",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 11149,
											"end": 11216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11142,
											"end": 11216,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11142,
											"end": 11216,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11225,
											"end": 11318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 11314,
											"end": 11317,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11225,
											"end": 11318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 11225,
											"end": 11318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11225,
											"end": 11318,
											"name": "tag",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 11225,
											"end": 11318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11343,
											"end": 11345,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11338,
											"end": 11341,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11334,
											"end": 11346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11327,
											"end": 11346,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11327,
											"end": 11346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10986,
											"end": 11352,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10986,
											"end": 11352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10986,
											"end": 11352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10986,
											"end": 11352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11358,
											"end": 11777,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 11358,
											"end": 11777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11524,
											"end": 11528,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11562,
											"end": 11564,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11551,
											"end": 11560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11547,
											"end": 11565,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11539,
											"end": 11565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11539,
											"end": 11565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11611,
											"end": 11620,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11605,
											"end": 11609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11601,
											"end": 11621,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11597,
											"end": 11598,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11586,
											"end": 11595,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11582,
											"end": 11599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11575,
											"end": 11622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11639,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 11765,
											"end": 11769,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11639,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 11639,
											"end": 11770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11639,
											"end": 11770,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 11639,
											"end": 11770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11631,
											"end": 11770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11631,
											"end": 11770,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11358,
											"end": 11777,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11358,
											"end": 11777,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11358,
											"end": 11777,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11358,
											"end": 11777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11783,
											"end": 11955,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 11783,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11923,
											"end": 11947,
											"name": "PUSH",
											"source": 9,
											"value": "507269766174652053616C6520736F6C64206F75742E00000000000000000000"
										},
										{
											"begin": 11919,
											"end": 11920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11911,
											"end": 11917,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11907,
											"end": 11921,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11900,
											"end": 11948,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11783,
											"end": 11955,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11783,
											"end": 11955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11961,
											"end": 12327,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 11961,
											"end": 12327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12103,
											"end": 12106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12124,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 12188,
											"end": 12190,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 12183,
											"end": 12186,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12124,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 12124,
											"end": 12191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12124,
											"end": 12191,
											"name": "tag",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 12124,
											"end": 12191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12117,
											"end": 12191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12117,
											"end": 12191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12200,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 12289,
											"end": 12292,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12200,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 12200,
											"end": 12293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12200,
											"end": 12293,
											"name": "tag",
											"source": 9,
											"value": "579"
										},
										{
											"begin": 12200,
											"end": 12293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12318,
											"end": 12320,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12313,
											"end": 12316,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12309,
											"end": 12321,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12321,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11961,
											"end": 12327,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11961,
											"end": 12327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11961,
											"end": 12327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11961,
											"end": 12327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12333,
											"end": 12752,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 12333,
											"end": 12752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12499,
											"end": 12503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12537,
											"end": 12539,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12526,
											"end": 12535,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12522,
											"end": 12540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12514,
											"end": 12540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12586,
											"end": 12595,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12580,
											"end": 12584,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12596,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12572,
											"end": 12573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12561,
											"end": 12570,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12557,
											"end": 12574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12550,
											"end": 12597,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12614,
											"end": 12745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 12740,
											"end": 12744,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12614,
											"end": 12745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 12614,
											"end": 12745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12614,
											"end": 12745,
											"name": "tag",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 12614,
											"end": 12745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12606,
											"end": 12745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12606,
											"end": 12745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12333,
											"end": 12752,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12333,
											"end": 12752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12333,
											"end": 12752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12333,
											"end": 12752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12758,
											"end": 12938,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 12758,
											"end": 12938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12806,
											"end": 12883,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12803,
											"end": 12804,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12796,
											"end": 12884,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12903,
											"end": 12907,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 12900,
											"end": 12901,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12893,
											"end": 12908,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12927,
											"end": 12931,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12924,
											"end": 12925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12917,
											"end": 12932,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12944,
											"end": 13135,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 12944,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12984,
											"end": 12987,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13003,
											"end": 13023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 13021,
											"end": 13022,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13003,
											"end": 13023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 13003,
											"end": 13023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13003,
											"end": 13023,
											"name": "tag",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 13003,
											"end": 13023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12998,
											"end": 13023,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12998,
											"end": 13023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13037,
											"end": 13057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 13055,
											"end": 13056,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13037,
											"end": 13057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 13037,
											"end": 13057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13037,
											"end": 13057,
											"name": "tag",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 13037,
											"end": 13057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13032,
											"end": 13057,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13032,
											"end": 13057,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13080,
											"end": 13081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13077,
											"end": 13078,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13073,
											"end": 13082,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13066,
											"end": 13082,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13066,
											"end": 13082,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13101,
											"end": 13104,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13098,
											"end": 13099,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13095,
											"end": 13105,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 13092,
											"end": 13128,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13092,
											"end": 13128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 13092,
											"end": 13128,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13108,
											"end": 13126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 13108,
											"end": 13126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 13108,
											"end": 13126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13108,
											"end": 13126,
											"name": "tag",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 13108,
											"end": 13126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13092,
											"end": 13128,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 13092,
											"end": 13128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12944,
											"end": 13135,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12944,
											"end": 13135,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12944,
											"end": 13135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12944,
											"end": 13135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12944,
											"end": 13135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13141,
											"end": 13361,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 13141,
											"end": 13361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13281,
											"end": 13315,
											"name": "PUSH",
											"source": 9,
											"value": "4578636565647320507269766174652053616C6520746F6B656E206C696D6974"
										},
										{
											"begin": 13277,
											"end": 13278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13269,
											"end": 13275,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13265,
											"end": 13279,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13258,
											"end": 13316,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13350,
											"end": 13353,
											"name": "PUSH",
											"source": 9,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13345,
											"end": 13347,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13337,
											"end": 13343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13333,
											"end": 13348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13326,
											"end": 13354,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13141,
											"end": 13361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13141,
											"end": 13361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13367,
											"end": 13733,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 13367,
											"end": 13733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13509,
											"end": 13512,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13530,
											"end": 13597,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 13594,
											"end": 13596,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 13589,
											"end": 13592,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13597,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 13530,
											"end": 13597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13597,
											"name": "tag",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 13530,
											"end": 13597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13523,
											"end": 13597,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13523,
											"end": 13597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13606,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 13695,
											"end": 13698,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13606,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 13606,
											"end": 13699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13606,
											"end": 13699,
											"name": "tag",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 13606,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13724,
											"end": 13726,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13719,
											"end": 13722,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13715,
											"end": 13727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13708,
											"end": 13727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13708,
											"end": 13727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13367,
											"end": 13733,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13367,
											"end": 13733,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13367,
											"end": 13733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13367,
											"end": 13733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13739,
											"end": 14158,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 13739,
											"end": 14158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13943,
											"end": 13945,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13932,
											"end": 13941,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13928,
											"end": 13946,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13920,
											"end": 13946,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13920,
											"end": 13946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13992,
											"end": 14001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13986,
											"end": 13990,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13982,
											"end": 14002,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13978,
											"end": 13979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13976,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13963,
											"end": 13980,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13956,
											"end": 14003,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14020,
											"end": 14151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 14146,
											"end": 14150,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14020,
											"end": 14151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 14020,
											"end": 14151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14020,
											"end": 14151,
											"name": "tag",
											"source": 9,
											"value": "593"
										},
										{
											"begin": 14020,
											"end": 14151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14012,
											"end": 14151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14012,
											"end": 14151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13739,
											"end": 14158,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13739,
											"end": 14158,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13739,
											"end": 14158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13739,
											"end": 14158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14164,
											"end": 14332,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 14164,
											"end": 14332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14304,
											"end": 14324,
											"name": "PUSH",
											"source": 9,
											"value": "5072652D53616C6520736F6C64206F75742E0000000000000000000000000000"
										},
										{
											"begin": 14300,
											"end": 14301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14292,
											"end": 14298,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14288,
											"end": 14302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14281,
											"end": 14325,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14164,
											"end": 14332,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14164,
											"end": 14332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14338,
											"end": 14704,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 14338,
											"end": 14704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14480,
											"end": 14483,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14501,
											"end": 14568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 14565,
											"end": 14567,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 14560,
											"end": 14563,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14501,
											"end": 14568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 14501,
											"end": 14568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14501,
											"end": 14568,
											"name": "tag",
											"source": 9,
											"value": "596"
										},
										{
											"begin": 14501,
											"end": 14568,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14494,
											"end": 14568,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14494,
											"end": 14568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14577,
											"end": 14670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 14666,
											"end": 14669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14577,
											"end": 14670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 14577,
											"end": 14670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14577,
											"end": 14670,
											"name": "tag",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 14577,
											"end": 14670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14695,
											"end": 14697,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14690,
											"end": 14693,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14686,
											"end": 14698,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14679,
											"end": 14698,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14679,
											"end": 14698,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14338,
											"end": 14704,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14338,
											"end": 14704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14338,
											"end": 14704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14338,
											"end": 14704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14710,
											"end": 15129,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 14710,
											"end": 15129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14876,
											"end": 14880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14914,
											"end": 14916,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14903,
											"end": 14912,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14899,
											"end": 14917,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14891,
											"end": 14917,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14891,
											"end": 14917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 14972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14957,
											"end": 14961,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14953,
											"end": 14973,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14949,
											"end": 14950,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14938,
											"end": 14947,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14934,
											"end": 14951,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14927,
											"end": 14974,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14991,
											"end": 15122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 15117,
											"end": 15121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14991,
											"end": 15122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 14991,
											"end": 15122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14991,
											"end": 15122,
											"name": "tag",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 14991,
											"end": 15122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14983,
											"end": 15122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14983,
											"end": 15122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14710,
											"end": 15129,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14710,
											"end": 15129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14710,
											"end": 15129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14710,
											"end": 15129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15135,
											"end": 15315,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 15135,
											"end": 15315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15275,
											"end": 15307,
											"name": "PUSH",
											"source": 9,
											"value": "507572636861736520616D6F756E74206F7574206F66206C696D6974732E0000"
										},
										{
											"begin": 15271,
											"end": 15272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15263,
											"end": 15269,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15259,
											"end": 15273,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15252,
											"end": 15308,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15135,
											"end": 15315,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15135,
											"end": 15315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15321,
											"end": 15687,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 15321,
											"end": 15687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15463,
											"end": 15466,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15484,
											"end": 15551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 15548,
											"end": 15550,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 15543,
											"end": 15546,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15484,
											"end": 15551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 15484,
											"end": 15551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15484,
											"end": 15551,
											"name": "tag",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 15484,
											"end": 15551,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15477,
											"end": 15551,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15477,
											"end": 15551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15560,
											"end": 15653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 15649,
											"end": 15652,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15560,
											"end": 15653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 15560,
											"end": 15653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15560,
											"end": 15653,
											"name": "tag",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 15560,
											"end": 15653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15678,
											"end": 15680,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15673,
											"end": 15676,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15669,
											"end": 15681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15662,
											"end": 15681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15662,
											"end": 15681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15321,
											"end": 15687,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15321,
											"end": 15687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15321,
											"end": 15687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15321,
											"end": 15687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15693,
											"end": 16112,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 15693,
											"end": 16112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15859,
											"end": 15863,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15897,
											"end": 15899,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15886,
											"end": 15895,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15882,
											"end": 15900,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15874,
											"end": 15900,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15874,
											"end": 15900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15946,
											"end": 15955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15940,
											"end": 15944,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15936,
											"end": 15956,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15932,
											"end": 15933,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15921,
											"end": 15930,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15917,
											"end": 15934,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15910,
											"end": 15957,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15974,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 16100,
											"end": 16104,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15974,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 15974,
											"end": 16105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15974,
											"end": 16105,
											"name": "tag",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 15974,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15966,
											"end": 16105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15966,
											"end": 16105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15693,
											"end": 16112,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15693,
											"end": 16112,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15693,
											"end": 16112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15693,
											"end": 16112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16118,
											"end": 16297,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 16118,
											"end": 16297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16258,
											"end": 16289,
											"name": "PUSH",
											"source": 9,
											"value": "45786365656473205072652D53616C6520746F6B656E206C696D69742E000000"
										},
										{
											"begin": 16254,
											"end": 16255,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16246,
											"end": 16252,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16242,
											"end": 16256,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16235,
											"end": 16290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16118,
											"end": 16297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16118,
											"end": 16297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16669,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 16303,
											"end": 16669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16445,
											"end": 16448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16466,
											"end": 16533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 16530,
											"end": 16532,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 16525,
											"end": 16528,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16466,
											"end": 16533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 16466,
											"end": 16533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16466,
											"end": 16533,
											"name": "tag",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 16466,
											"end": 16533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16459,
											"end": 16533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16459,
											"end": 16533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16542,
											"end": 16635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 16631,
											"end": 16634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16542,
											"end": 16635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 16542,
											"end": 16635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16542,
											"end": 16635,
											"name": "tag",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 16542,
											"end": 16635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16660,
											"end": 16662,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16655,
											"end": 16658,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16651,
											"end": 16663,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16644,
											"end": 16663,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16644,
											"end": 16663,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16669,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16303,
											"end": 16669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16675,
											"end": 17094,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 16675,
											"end": 17094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16841,
											"end": 16845,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16879,
											"end": 16881,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16868,
											"end": 16877,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16864,
											"end": 16882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16856,
											"end": 16882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16856,
											"end": 16882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16928,
											"end": 16937,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16922,
											"end": 16926,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16918,
											"end": 16938,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16914,
											"end": 16915,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16903,
											"end": 16912,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16899,
											"end": 16916,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16892,
											"end": 16939,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16956,
											"end": 17087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "611"
										},
										{
											"begin": 17082,
											"end": 17086,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16956,
											"end": 17087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 16956,
											"end": 17087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16956,
											"end": 17087,
											"name": "tag",
											"source": 9,
											"value": "611"
										},
										{
											"begin": 16956,
											"end": 17087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16948,
											"end": 17087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16948,
											"end": 17087,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16675,
											"end": 17094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16675,
											"end": 17094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16675,
											"end": 17094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16675,
											"end": 17094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17100,
											"end": 17320,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 17100,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17240,
											"end": 17274,
											"name": "PUSH",
											"source": 9,
											"value": "56657374696E6720706572696F64206E6F742079657420636F6D706C65746564"
										},
										{
											"begin": 17236,
											"end": 17237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17228,
											"end": 17234,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17224,
											"end": 17238,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17217,
											"end": 17275,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17309,
											"end": 17312,
											"name": "PUSH",
											"source": 9,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17304,
											"end": 17306,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17296,
											"end": 17302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17292,
											"end": 17307,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17285,
											"end": 17313,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17100,
											"end": 17320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17100,
											"end": 17320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17326,
											"end": 17692,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 17326,
											"end": 17692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17468,
											"end": 17471,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17489,
											"end": 17556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 17553,
											"end": 17555,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 17548,
											"end": 17551,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17489,
											"end": 17556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 17489,
											"end": 17556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17489,
											"end": 17556,
											"name": "tag",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 17489,
											"end": 17556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17482,
											"end": 17556,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17482,
											"end": 17556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17565,
											"end": 17658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 17654,
											"end": 17657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17565,
											"end": 17658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 17565,
											"end": 17658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17565,
											"end": 17658,
											"name": "tag",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 17565,
											"end": 17658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17683,
											"end": 17685,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17678,
											"end": 17681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17674,
											"end": 17686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17667,
											"end": 17686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17667,
											"end": 17686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17326,
											"end": 17692,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17326,
											"end": 17692,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17326,
											"end": 17692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17326,
											"end": 17692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17698,
											"end": 18117,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 17698,
											"end": 18117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17864,
											"end": 17868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17902,
											"end": 17904,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17891,
											"end": 17900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17887,
											"end": 17905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17879,
											"end": 17905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17879,
											"end": 17905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17951,
											"end": 17960,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17945,
											"end": 17949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17941,
											"end": 17961,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17937,
											"end": 17938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17926,
											"end": 17935,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17922,
											"end": 17939,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17915,
											"end": 17962,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17979,
											"end": 18110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "617"
										},
										{
											"begin": 18105,
											"end": 18109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17979,
											"end": 18110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 17979,
											"end": 18110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17979,
											"end": 18110,
											"name": "tag",
											"source": 9,
											"value": "617"
										},
										{
											"begin": 17979,
											"end": 18110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17971,
											"end": 18110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17971,
											"end": 18110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17698,
											"end": 18117,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17698,
											"end": 18117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17698,
											"end": 18117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17698,
											"end": 18117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18123,
											"end": 18349,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 18123,
											"end": 18349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18263,
											"end": 18297,
											"name": "PUSH",
											"source": 9,
											"value": "507269766174652053616C652073686F756C6420626520636F6E636C75646564"
										},
										{
											"begin": 18259,
											"end": 18260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18251,
											"end": 18257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18247,
											"end": 18261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18240,
											"end": 18298,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18332,
											"end": 18341,
											"name": "PUSH",
											"source": 9,
											"value": "2066697273742E00000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18327,
											"end": 18329,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18319,
											"end": 18325,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18315,
											"end": 18330,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18308,
											"end": 18342,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18123,
											"end": 18349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18123,
											"end": 18349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18355,
											"end": 18721,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 18355,
											"end": 18721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18497,
											"end": 18500,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18518,
											"end": 18585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "620"
										},
										{
											"begin": 18582,
											"end": 18584,
											"name": "PUSH",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 18577,
											"end": 18580,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18518,
											"end": 18585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 18518,
											"end": 18585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18518,
											"end": 18585,
											"name": "tag",
											"source": 9,
											"value": "620"
										},
										{
											"begin": 18518,
											"end": 18585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18511,
											"end": 18585,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18511,
											"end": 18585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18594,
											"end": 18687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 18683,
											"end": 18686,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18594,
											"end": 18687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 18594,
											"end": 18687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18594,
											"end": 18687,
											"name": "tag",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 18594,
											"end": 18687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18712,
											"end": 18714,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18707,
											"end": 18710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18703,
											"end": 18715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18696,
											"end": 18715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18696,
											"end": 18715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18355,
											"end": 18721,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18355,
											"end": 18721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18355,
											"end": 18721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18355,
											"end": 18721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18727,
											"end": 19146,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 18727,
											"end": 19146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18893,
											"end": 18897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18931,
											"end": 18933,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18920,
											"end": 18929,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18916,
											"end": 18934,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18908,
											"end": 18934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18908,
											"end": 18934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18980,
											"end": 18989,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18974,
											"end": 18978,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18970,
											"end": 18990,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18966,
											"end": 18967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18955,
											"end": 18964,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18951,
											"end": 18968,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18944,
											"end": 18991,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19008,
											"end": 19139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "623"
										},
										{
											"begin": 19134,
											"end": 19138,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19008,
											"end": 19139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 19008,
											"end": 19139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19008,
											"end": 19139,
											"name": "tag",
											"source": 9,
											"value": "623"
										},
										{
											"begin": 19008,
											"end": 19139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19000,
											"end": 19139,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19000,
											"end": 19139,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18727,
											"end": 19146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18727,
											"end": 19146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18727,
											"end": 19146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18727,
											"end": 19146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19152,
											"end": 19334,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 19152,
											"end": 19334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19292,
											"end": 19326,
											"name": "PUSH",
											"source": 9,
											"value": "507269766174652053616C6520746172676574206E6F7420726561636865642E"
										},
										{
											"begin": 19288,
											"end": 19289,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19280,
											"end": 19286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19276,
											"end": 19290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19269,
											"end": 19327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19152,
											"end": 19334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19152,
											"end": 19334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19340,
											"end": 19706,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 19340,
											"end": 19706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19482,
											"end": 19485,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19503,
											"end": 19570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "626"
										},
										{
											"begin": 19567,
											"end": 19569,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19562,
											"end": 19565,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19503,
											"end": 19570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 19503,
											"end": 19570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19503,
											"end": 19570,
											"name": "tag",
											"source": 9,
											"value": "626"
										},
										{
											"begin": 19503,
											"end": 19570,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19496,
											"end": 19570,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19496,
											"end": 19570,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19579,
											"end": 19672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "627"
										},
										{
											"begin": 19668,
											"end": 19671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19579,
											"end": 19672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 19579,
											"end": 19672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19579,
											"end": 19672,
											"name": "tag",
											"source": 9,
											"value": "627"
										},
										{
											"begin": 19579,
											"end": 19672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19697,
											"end": 19699,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19692,
											"end": 19695,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19688,
											"end": 19700,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19681,
											"end": 19700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19681,
											"end": 19700,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19340,
											"end": 19706,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19340,
											"end": 19706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19340,
											"end": 19706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19340,
											"end": 19706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19712,
											"end": 20131,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 19712,
											"end": 20131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19878,
											"end": 19882,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19916,
											"end": 19918,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19905,
											"end": 19914,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19901,
											"end": 19919,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19893,
											"end": 19919,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19893,
											"end": 19919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19965,
											"end": 19974,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19959,
											"end": 19963,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19955,
											"end": 19975,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19951,
											"end": 19952,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19940,
											"end": 19949,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19936,
											"end": 19953,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19929,
											"end": 19976,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19993,
											"end": 20124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "629"
										},
										{
											"begin": 20119,
											"end": 20123,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19993,
											"end": 20124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 19993,
											"end": 20124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19993,
											"end": 20124,
											"name": "tag",
											"source": 9,
											"value": "629"
										},
										{
											"begin": 19993,
											"end": 20124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19985,
											"end": 20124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19985,
											"end": 20124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19712,
											"end": 20131,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19712,
											"end": 20131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19712,
											"end": 20131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19712,
											"end": 20131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20137,
											"end": 20579,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 20137,
											"end": 20579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20286,
											"end": 20290,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20324,
											"end": 20326,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 20313,
											"end": 20322,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20309,
											"end": 20327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20301,
											"end": 20327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20301,
											"end": 20327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20337,
											"end": 20408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "631"
										},
										{
											"begin": 20405,
											"end": 20406,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20394,
											"end": 20403,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20390,
											"end": 20407,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20381,
											"end": 20387,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 20337,
											"end": 20408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "432"
										},
										{
											"begin": 20337,
											"end": 20408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20337,
											"end": 20408,
											"name": "tag",
											"source": 9,
											"value": "631"
										},
										{
											"begin": 20337,
											"end": 20408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20418,
											"end": 20490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 20486,
											"end": 20488,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20475,
											"end": 20484,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20471,
											"end": 20489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20462,
											"end": 20468,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 20418,
											"end": 20490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 20418,
											"end": 20490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20418,
											"end": 20490,
											"name": "tag",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 20418,
											"end": 20490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20500,
											"end": 20572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "633"
										},
										{
											"begin": 20568,
											"end": 20570,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20557,
											"end": 20566,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20553,
											"end": 20571,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20544,
											"end": 20550,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 20500,
											"end": 20572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 20500,
											"end": 20572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20500,
											"end": 20572,
											"name": "tag",
											"source": 9,
											"value": "633"
										},
										{
											"begin": 20500,
											"end": 20572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20137,
											"end": 20579,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 20137,
											"end": 20579,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 20137,
											"end": 20579,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20137,
											"end": 20579,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20137,
											"end": 20579,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20137,
											"end": 20579,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20137,
											"end": 20579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20585,
											"end": 20766,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 20585,
											"end": 20766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20725,
											"end": 20758,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 20721,
											"end": 20722,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20713,
											"end": 20719,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20709,
											"end": 20723,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20702,
											"end": 20759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20585,
											"end": 20766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20585,
											"end": 20766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20772,
											"end": 21138,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 20772,
											"end": 21138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20914,
											"end": 20917,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20935,
											"end": 21002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "636"
										},
										{
											"begin": 20999,
											"end": 21001,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 20994,
											"end": 20997,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20935,
											"end": 21002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 20935,
											"end": 21002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20935,
											"end": 21002,
											"name": "tag",
											"source": 9,
											"value": "636"
										},
										{
											"begin": 20935,
											"end": 21002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20928,
											"end": 21002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20928,
											"end": 21002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21011,
											"end": 21104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "637"
										},
										{
											"begin": 21100,
											"end": 21103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21011,
											"end": 21104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 21011,
											"end": 21104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21011,
											"end": 21104,
											"name": "tag",
											"source": 9,
											"value": "637"
										},
										{
											"begin": 21011,
											"end": 21104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21129,
											"end": 21131,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21124,
											"end": 21127,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21120,
											"end": 21132,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21113,
											"end": 21132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21113,
											"end": 21132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20772,
											"end": 21138,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20772,
											"end": 21138,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20772,
											"end": 21138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20772,
											"end": 21138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21144,
											"end": 21563,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 21144,
											"end": 21563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21310,
											"end": 21314,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21348,
											"end": 21350,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21337,
											"end": 21346,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21333,
											"end": 21351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21325,
											"end": 21351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21325,
											"end": 21351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21397,
											"end": 21406,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21391,
											"end": 21395,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21387,
											"end": 21407,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21383,
											"end": 21384,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21372,
											"end": 21381,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21368,
											"end": 21385,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21361,
											"end": 21408,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21425,
											"end": 21556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "639"
										},
										{
											"begin": 21551,
											"end": 21555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21425,
											"end": 21556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 21425,
											"end": 21556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21425,
											"end": 21556,
											"name": "tag",
											"source": 9,
											"value": "639"
										},
										{
											"begin": 21425,
											"end": 21556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21417,
											"end": 21556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21417,
											"end": 21556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21144,
											"end": 21563,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21144,
											"end": 21563,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21144,
											"end": 21563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21144,
											"end": 21563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21569,
											"end": 21763,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 21569,
											"end": 21763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21609,
											"end": 21613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21629,
											"end": 21649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "641"
										},
										{
											"begin": 21647,
											"end": 21648,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21629,
											"end": 21649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 21629,
											"end": 21649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21629,
											"end": 21649,
											"name": "tag",
											"source": 9,
											"value": "641"
										},
										{
											"begin": 21629,
											"end": 21649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21624,
											"end": 21649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21624,
											"end": 21649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21663,
											"end": 21683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "642"
										},
										{
											"begin": 21681,
											"end": 21682,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21663,
											"end": 21683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 21663,
											"end": 21683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21663,
											"end": 21683,
											"name": "tag",
											"source": 9,
											"value": "642"
										},
										{
											"begin": 21663,
											"end": 21683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21658,
											"end": 21683,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 21658,
											"end": 21683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21707,
											"end": 21708,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21704,
											"end": 21705,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21700,
											"end": 21709,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21692,
											"end": 21709,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21692,
											"end": 21709,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21731,
											"end": 21732,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21725,
											"end": 21729,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21722,
											"end": 21733,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 21719,
											"end": 21756,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 21719,
											"end": 21756,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "643"
										},
										{
											"begin": 21719,
											"end": 21756,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 21736,
											"end": 21754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "644"
										},
										{
											"begin": 21736,
											"end": 21754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 21736,
											"end": 21754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21736,
											"end": 21754,
											"name": "tag",
											"source": 9,
											"value": "644"
										},
										{
											"begin": 21736,
											"end": 21754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21719,
											"end": 21756,
											"name": "tag",
											"source": 9,
											"value": "643"
										},
										{
											"begin": 21719,
											"end": 21756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21569,
											"end": 21763,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 21569,
											"end": 21763,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21569,
											"end": 21763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21569,
											"end": 21763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21569,
											"end": 21763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21769,
											"end": 22179,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 21769,
											"end": 22179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21809,
											"end": 21816,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21832,
											"end": 21852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "646"
										},
										{
											"begin": 21850,
											"end": 21851,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21832,
											"end": 21852,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 21832,
											"end": 21852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21832,
											"end": 21852,
											"name": "tag",
											"source": 9,
											"value": "646"
										},
										{
											"begin": 21832,
											"end": 21852,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21827,
											"end": 21852,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21827,
											"end": 21852,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21866,
											"end": 21886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "647"
										},
										{
											"begin": 21884,
											"end": 21885,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21866,
											"end": 21886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 21866,
											"end": 21886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21866,
											"end": 21886,
											"name": "tag",
											"source": 9,
											"value": "647"
										},
										{
											"begin": 21866,
											"end": 21886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21861,
											"end": 21886,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 21861,
											"end": 21886,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21921,
											"end": 21922,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21918,
											"end": 21919,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21914,
											"end": 21923,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 21943,
											"end": 21973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "648"
										},
										{
											"begin": 21961,
											"end": 21972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21943,
											"end": 21973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 21943,
											"end": 21973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21943,
											"end": 21973,
											"name": "tag",
											"source": 9,
											"value": "648"
										},
										{
											"begin": 21943,
											"end": 21973,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21932,
											"end": 21973,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21932,
											"end": 21973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22122,
											"end": 22123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22113,
											"end": 22120,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22109,
											"end": 22124,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 22106,
											"end": 22107,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 22103,
											"end": 22125,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 22083,
											"end": 22084,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22076,
											"end": 22085,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 22056,
											"end": 22139,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 22033,
											"end": 22172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "649"
										},
										{
											"begin": 22033,
											"end": 22172,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22152,
											"end": 22170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "650"
										},
										{
											"begin": 22152,
											"end": 22170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 22152,
											"end": 22170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22152,
											"end": 22170,
											"name": "tag",
											"source": 9,
											"value": "650"
										},
										{
											"begin": 22152,
											"end": 22170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22033,
											"end": 22172,
											"name": "tag",
											"source": 9,
											"value": "649"
										},
										{
											"begin": 22033,
											"end": 22172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21817,
											"end": 22179,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21769,
											"end": 22179,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 21769,
											"end": 22179,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21769,
											"end": 22179,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21769,
											"end": 22179,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21769,
											"end": 22179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22185,
											"end": 22365,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 22185,
											"end": 22365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22233,
											"end": 22310,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22230,
											"end": 22231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22223,
											"end": 22311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22330,
											"end": 22334,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 22327,
											"end": 22328,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 22320,
											"end": 22335,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22354,
											"end": 22358,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 22351,
											"end": 22352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22344,
											"end": 22359,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 22371,
											"end": 22556,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 22371,
											"end": 22556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22411,
											"end": 22412,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22428,
											"end": 22448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "653"
										},
										{
											"begin": 22446,
											"end": 22447,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22428,
											"end": 22448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 22428,
											"end": 22448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22428,
											"end": 22448,
											"name": "tag",
											"source": 9,
											"value": "653"
										},
										{
											"begin": 22428,
											"end": 22448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22423,
											"end": 22448,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22423,
											"end": 22448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22462,
											"end": 22482,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "654"
										},
										{
											"begin": 22480,
											"end": 22481,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22462,
											"end": 22482,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 22462,
											"end": 22482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22462,
											"end": 22482,
											"name": "tag",
											"source": 9,
											"value": "654"
										},
										{
											"begin": 22462,
											"end": 22482,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22457,
											"end": 22482,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22457,
											"end": 22482,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22501,
											"end": 22502,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22491,
											"end": 22526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 22491,
											"end": 22526,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22506,
											"end": 22524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "656"
										},
										{
											"begin": 22506,
											"end": 22524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 22506,
											"end": 22524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22506,
											"end": 22524,
											"name": "tag",
											"source": 9,
											"value": "656"
										},
										{
											"begin": 22506,
											"end": 22524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22491,
											"end": 22526,
											"name": "tag",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 22491,
											"end": 22526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22548,
											"end": 22549,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22545,
											"end": 22546,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22541,
											"end": 22550,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 22536,
											"end": 22550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22536,
											"end": 22550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22371,
											"end": 22556,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 22371,
											"end": 22556,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22371,
											"end": 22556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22371,
											"end": 22556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22371,
											"end": 22556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/bettoken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TOTAL_SUPPLY()": "902d55a5",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyTokens(uint256)": "3610724e",
							"decimals()": "313ce567",
							"haltSales()": "32c85ac0",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"preSaleEndPrice()": "8f7713ff",
							"preSaleSoldTokens()": "b68ed11f",
							"preSaleStartPrice()": "920168b3",
							"preSaleTarget()": "e6bd92b9",
							"preSaleTokens()": "0fe83bb8",
							"privateSaleEndPrice()": "bda95633",
							"privateSaleSoldTokens()": "5fb3b944",
							"privateSaleStartPrice()": "b0e68630",
							"privateSaleTarget()": "ba20cf4c",
							"privateSaleTokens()": "c552e04b",
							"releaseVestedTokens()": "54dd1da4",
							"renounceOwnership()": "715018a6",
							"stage()": "c040e6b8",
							"stakeDuration()": "40f02ab6",
							"startPreSale()": "55dd574c",
							"startPrivateSale()": "338dbf59",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"vestingBalance(address)": "192399d1",
							"vestingDuration()": "1514617e",
							"vestingReleaseTime(address)": "2b1cbc38",
							"withdrawFunds()": "24600fc3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PreSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrivateSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"haltSales\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleEndPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleSoldTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleStartPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleTarget\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleEndPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleSoldTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleStartPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleTarget\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseVestedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"internalType\":\"enum Bettoken.SaleStage\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPreSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPrivateSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingReleaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bettoken.sol\":\"Bettoken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/bettoken.sol\":{\"keccak256\":\"0x2f7961c4ec13e611d3ca65db4ec82a73d2f387e11bb7900c3a31d364bf26f958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b04814a669ea34e528702f71bc9089be3b2c85d4878ffc27743aaa8689665fa\",\"dweb:/ipfs/QmUvBCds51QFwy5HtHjPxLHBHnjgFRfrNoa47L3d38VKBY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1339,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "privateSaleTarget",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1346,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "privateSaleTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1353,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "privateSaleStartPrice",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1360,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "privateSaleEndPrice",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1363,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "privateSaleSoldTokens",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1370,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "preSaleTarget",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1377,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "preSaleTokens",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1384,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "preSaleStartPrice",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1391,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "preSaleEndPrice",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 1394,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "preSaleSoldTokens",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 1403,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "stage",
								"offset": 0,
								"slot": "17",
								"type": "t_enum(SaleStage)1398"
							},
							{
								"astId": 1407,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "vestingBalance",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1411,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "vestingReleaseTime",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1416,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "vestingDuration",
								"offset": 0,
								"slot": "20",
								"type": "t_uint256"
							},
							{
								"astId": 1419,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "stakeDuration",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_enum(SaleStage)1398": {
								"encoding": "inplace",
								"label": "enum Bettoken.SaleStage",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 999,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								998
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 969,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 968,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 999,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "1428:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1437:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 968,
										"src": "1445:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								968,
								942,
								998
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 864,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 864,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										961
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 864,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										967
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 864,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 864,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 864,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 864,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 864,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 864,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 864,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 864,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 864,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 864,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 864,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 864,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 864,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 864,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1401:9741:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 942,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 942,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 942,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 942,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 942,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 942,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 969,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 943,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 948,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "305:6:5"
									},
									"id": 949,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 968,
							"linearizedBaseContracts": [
								968,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 968,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 968,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 964,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 968,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 969,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 970,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 971,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 976,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 975,
												"id": 978,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 998,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 985,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 984,
												"id": 987,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 998,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 993,
												"id": 995,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 998,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1310
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1001,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1310,
							"linearizedBaseContracts": [
								1310
							],
							"name": "SafeMath",
							"nameLocation": "490:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "717:140:7",
										"statements": [
											{
												"id": 1031,
												"nodeType": "UncheckedBlock",
												"src": "727:124:7",
												"statements": [
													{
														"assignments": [
															1014
														],
														"declarations": [
															{
																"constant": false,
																"id": 1014,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1031,
																"src": "751:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1013,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1018,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1015,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "763:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1016,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "767:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1019,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "786:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1020,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "790:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1026,
														"nodeType": "IfStatement",
														"src": "782:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1024,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1012,
															"id": 1025,
															"nodeType": "Return",
															"src": "793:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1028,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "838:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1029,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1012,
														"id": 1030,
														"nodeType": "Return",
														"src": "824:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:7"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "702:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1008,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "708:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:7"
									},
									"scope": 1310,
									"src": "641:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "1078:113:7",
										"statements": [
											{
												"id": 1059,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1045,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "1116:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1046,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "1120:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1052,
														"nodeType": "IfStatement",
														"src": "1112:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1050,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1044,
															"id": 1051,
															"nodeType": "Return",
															"src": "1123:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1054,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "1168:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1055,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "1172:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1057,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1044,
														"id": 1058,
														"nodeType": "Return",
														"src": "1154:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1018:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1029:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:7"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1063:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1040,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:7"
									},
									"scope": 1310,
									"src": "1002:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "1415:417:7",
										"statements": [
											{
												"id": 1101,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1073,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "1683:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1080,
														"nodeType": "IfStatement",
														"src": "1679:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1078,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1072,
															"id": 1079,
															"nodeType": "Return",
															"src": "1691:16:7"
														}
													},
													{
														"assignments": [
															1082
														],
														"declarations": [
															{
																"constant": false,
																"id": 1082,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1101,
																"src": "1721:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1081,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1086,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1083,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1084,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "1737:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1087,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "1756:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1088,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "1760:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1090,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "1765:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1096,
														"nodeType": "IfStatement",
														"src": "1752:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1094,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1072,
															"id": 1095,
															"nodeType": "Return",
															"src": "1768:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1098,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "1813:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1099,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1072,
														"id": 1100,
														"nodeType": "Return",
														"src": "1799:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1355:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:7"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1400:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1068,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1406:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:7"
									},
									"scope": 1310,
									"src": "1339:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "2057:114:7",
										"statements": [
											{
												"id": 1129,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1115,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "2095:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1122,
														"nodeType": "IfStatement",
														"src": "2091:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1120,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1114,
															"id": 1121,
															"nodeType": "Return",
															"src": "2103:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1124,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "2148:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1125,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "2152:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1127,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1114,
														"id": 1128,
														"nodeType": "Return",
														"src": "2134:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:7"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2042:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2048:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:7"
									},
									"scope": 1310,
									"src": "1981:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "2406:114:7",
										"statements": [
											{
												"id": 1157,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1143,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "2444:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1150,
														"nodeType": "IfStatement",
														"src": "2440:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1148,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1142,
															"id": 1149,
															"nodeType": "Return",
															"src": "2452:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1152,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "2497:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1153,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1136,
																		"src": "2501:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1155,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1142,
														"id": 1156,
														"nodeType": "Return",
														"src": "2483:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2346:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2357:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:7"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2391:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:7"
									},
									"scope": 1310,
									"src": "2330:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "2822:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1169,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "2839:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1170,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "2843:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1172,
												"nodeType": "Return",
												"src": "2832:12:7"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2779:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:7"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2813:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:7"
									},
									"scope": 1310,
									"src": "2755:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "3189:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1184,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "3206:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1185,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "3210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1183,
												"id": 1187,
												"nodeType": "Return",
												"src": "3199:12:7"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3135:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3146:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:7"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3180:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:7"
									},
									"scope": 1310,
									"src": "3122:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "3532:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "3549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "3553:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1198,
												"id": 1202,
												"nodeType": "Return",
												"src": "3542:12:7"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3478:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3489:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:7"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3523:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:7"
									},
									"scope": 1310,
									"src": "3465:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "3917:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1214,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "3934:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1215,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "3938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1213,
												"id": 1217,
												"nodeType": "Return",
												"src": "3927:12:7"
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3863:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3874:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:7"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3908:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:7"
									},
									"scope": 1310,
									"src": "3850:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "4466:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1229,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "4483:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1230,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "4487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1232,
												"nodeType": "Return",
												"src": "4476:12:7"
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4412:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4423:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:7"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4457:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:7"
									},
									"scope": 1310,
									"src": "4399:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "5054:106:7",
										"statements": [
											{
												"id": 1257,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1247,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "5096:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1248,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "5101:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1250,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "5104:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1246,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1252,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1253,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "5138:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1254,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "5142:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1245,
														"id": 1256,
														"nodeType": "Return",
														"src": "5131:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "4972:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "4983:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "4994:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:7"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5045:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:7"
									},
									"scope": 1310,
									"src": "4959:201:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "5739:105:7",
										"statements": [
											{
												"id": 1282,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1272,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1264,
																		"src": "5781:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1275,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "5788:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1271,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1277,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1278,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "5822:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1279,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "5826:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1270,
														"id": 1281,
														"nodeType": "Return",
														"src": "5815:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5679:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1265,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:7"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5730:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:7"
									},
									"scope": 1310,
									"src": "5644:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "6585:105:7",
										"statements": [
											{
												"id": 1307,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1297,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1289,
																		"src": "6627:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1300,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "6634:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1296,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1302,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1303,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "6668:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1304,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "6672:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1295,
														"id": 1306,
														"nodeType": "Return",
														"src": "6661:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6503:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6514:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6525:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:7"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6576:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:7"
									},
									"scope": 1310,
									"src": "6490:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1311,
							"src": "482:6210:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:7"
				},
				"id": 7
			},
			"contracts/bettoken.sol": {
				"ast": {
					"absolutePath": "contracts/bettoken.sol",
					"exportedSymbols": {
						"Bettoken": [
							1795
						],
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							349
						],
						"SafeMath": [
							1310
						]
					},
					"id": 1796,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1313,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1796,
							"sourceUnit": 865,
							"src": "57:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1796,
							"sourceUnit": 148,
							"src": "113:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1315,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1796,
							"sourceUnit": 350,
							"src": "166:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1796,
							"sourceUnit": 1311,
							"src": "229:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1317,
										"name": "ERC20",
										"nameLocations": [
											"311:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "311:5:8"
									},
									"id": 1318,
									"nodeType": "InheritanceSpecifier",
									"src": "311:5:8"
								},
								{
									"baseName": {
										"id": 1319,
										"name": "Ownable",
										"nameLocations": [
											"318:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "318:7:8"
									},
									"id": 1320,
									"nodeType": "InheritanceSpecifier",
									"src": "318:7:8"
								},
								{
									"baseName": {
										"id": 1321,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"327:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "327:15:8"
									},
									"id": 1322,
									"nodeType": "InheritanceSpecifier",
									"src": "327:15:8"
								}
							],
							"canonicalName": "Bettoken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1795,
							"linearizedBaseContracts": [
								1795,
								349,
								147,
								864,
								189,
								968,
								942,
								998
							],
							"name": "Bettoken",
							"nameLocation": "299:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1325,
									"libraryName": {
										"id": 1323,
										"name": "SafeMath",
										"nameLocations": [
											"357:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "357:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "350:28:8",
									"typeName": {
										"id": 1324,
										"name": "uint216",
										"nodeType": "ElementaryTypeName",
										"src": "370:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint216",
											"typeString": "uint216"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 1332,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "408:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "384:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1326,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "384:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000000000"
										},
										"id": 1331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3230305f3030305f303030",
											"id": 1327,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "423:11:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_200000000_by_1",
												"typeString": "int_const 200000000"
											},
											"value": "200_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1330,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1328,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "437:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1329,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "443:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "437:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "423:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ba20cf4c",
									"id": 1339,
									"mutability": "mutable",
									"name": "privateSaleTarget",
									"nameLocation": "534:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "519:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1333,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "519:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 1338,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f303030",
											"id": 1334,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "554:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1337,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1335,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "566:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1336,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "572:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "566:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "554:20:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c552e04b",
									"id": 1346,
									"mutability": "mutable",
									"name": "privateSaleTokens",
									"nameLocation": "619:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "604:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1340,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "604:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_38835764000000000000000000_by_1",
											"typeString": "int_const 38835764000000000000000000"
										},
										"id": 1345,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "33385f3833355f373634",
											"id": 1341,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "639:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_38835764_by_1",
												"typeString": "int_const 38835764"
											},
											"value": "38_835_764"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1344,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1342,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "652:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1343,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "658:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "652:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "639:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_38835764000000000000000000_by_1",
											"typeString": "int_const 38835764000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b0e68630",
									"id": 1353,
									"mutability": "mutable",
									"name": "privateSaleStartPrice",
									"nameLocation": "700:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "685:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1347,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "685:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										},
										"id": 1352,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e303031",
											"id": 1348,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "724:5:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1000",
												"typeString": "rational_const 1 / 1000"
											},
											"value": "0.001"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1351,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1349,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "732:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1350,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "738:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "732:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "724:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bda95633",
									"id": 1360,
									"mutability": "mutable",
									"name": "privateSaleEndPrice",
									"nameLocation": "783:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "768:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1354,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "768:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										},
										"id": 1359,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e30353035",
											"id": 1355,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "805:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_101_by_2000",
												"typeString": "rational_const 101 / 2000"
											},
											"value": "0.0505"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1358,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1356,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "814:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1357,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "820:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "814:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "805:17:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5fb3b944",
									"id": 1363,
									"mutability": "mutable",
									"name": "privateSaleSoldTokens",
									"nameLocation": "866:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "851:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1361,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "851:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1362,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "890:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6bd92b9",
									"id": 1370,
									"mutability": "mutable",
									"name": "preSaleTarget",
									"nameLocation": "939:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "924:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1364,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "924:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_19000000000000000000000000_by_1",
											"typeString": "int_const 19000000000000000000000000"
										},
										"id": 1369,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31395f3030305f303030",
											"id": 1365,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "955:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_19000000_by_1",
												"typeString": "int_const 19000000"
											},
											"value": "19_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1368,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1366,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "968:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1367,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "974:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "968:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "955:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_19000000000000000000000000_by_1",
											"typeString": "int_const 19000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fe83bb8",
									"id": 1377,
									"mutability": "mutable",
									"name": "preSaleTokens",
									"nameLocation": "1022:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1007:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1371,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1007:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_161164236000000000000000000_by_1",
											"typeString": "int_const 161164236000000000000000000"
										},
										"id": 1376,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3136315f3136345f323336",
											"id": 1372,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1038:11:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_161164236_by_1",
												"typeString": "int_const 161164236"
											},
											"value": "161_164_236"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1375,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1373,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1052:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1374,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1058:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1052:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1038:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_161164236000000000000000000_by_1",
											"typeString": "int_const 161164236000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "920168b3",
									"id": 1384,
									"mutability": "mutable",
									"name": "preSaleStartPrice",
									"nameLocation": "1101:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1086:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1086:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										},
										"id": 1383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e30353035",
											"id": 1379,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1121:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_101_by_2000",
												"typeString": "rational_const 101 / 2000"
											},
											"value": "0.0505"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1382,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1380,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1130:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1381,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1136:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1130:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1121:17:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f7713ff",
									"id": 1391,
									"mutability": "mutable",
									"name": "preSaleEndPrice",
									"nameLocation": "1182:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1167:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1385,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1167:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000_by_1",
											"typeString": "int_const 100000000000000000"
										},
										"id": 1390,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e31",
											"id": 1386,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1200:3:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_10",
												"typeString": "rational_const 1 / 10"
											},
											"value": "0.1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1389,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1387,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1206:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1388,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1212:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1206:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1200:14:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000_by_1",
											"typeString": "int_const 100000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b68ed11f",
									"id": 1394,
									"mutability": "mutable",
									"name": "preSaleSoldTokens",
									"nameLocation": "1255:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1240:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1392,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1240:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1393,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1275:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Bettoken.SaleStage",
									"id": 1398,
									"members": [
										{
											"id": 1395,
											"name": "NONE",
											"nameLocation": "1319:4:8",
											"nodeType": "EnumValue",
											"src": "1319:4:8"
										},
										{
											"id": 1396,
											"name": "PRIVATE",
											"nameLocation": "1325:7:8",
											"nodeType": "EnumValue",
											"src": "1325:7:8"
										},
										{
											"id": 1397,
											"name": "PRESALE",
											"nameLocation": "1334:7:8",
											"nodeType": "EnumValue",
											"src": "1334:7:8"
										}
									],
									"name": "SaleStage",
									"nameLocation": "1307:9:8",
									"nodeType": "EnumDefinition",
									"src": "1302:41:8"
								},
								{
									"constant": false,
									"functionSelector": "c040e6b8",
									"id": 1403,
									"mutability": "mutable",
									"name": "stage",
									"nameLocation": "1365:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1348:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_SaleStage_$1398",
										"typeString": "enum Bettoken.SaleStage"
									},
									"typeName": {
										"id": 1400,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1399,
											"name": "SaleStage",
											"nameLocations": [
												"1348:9:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1398,
											"src": "1348:9:8"
										},
										"referencedDeclaration": 1398,
										"src": "1348:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_SaleStage_$1398",
											"typeString": "enum Bettoken.SaleStage"
										}
									},
									"value": {
										"expression": {
											"id": 1401,
											"name": "SaleStage",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1398,
											"src": "1373:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_SaleStage_$1398_$",
												"typeString": "type(enum Bettoken.SaleStage)"
											}
										},
										"id": 1402,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberLocation": "1383:4:8",
										"memberName": "NONE",
										"nodeType": "MemberAccess",
										"referencedDeclaration": 1395,
										"src": "1373:14:8",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_SaleStage_$1398",
											"typeString": "enum Bettoken.SaleStage"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "192399d1",
									"id": 1407,
									"mutability": "mutable",
									"name": "vestingBalance",
									"nameLocation": "1455:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1420:49:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1406,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1404,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1428:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1420:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1405,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1439:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2b1cbc38",
									"id": 1411,
									"mutability": "mutable",
									"name": "vestingReleaseTime",
									"nameLocation": "1510:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1475:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1410,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1408,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1483:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1475:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1409,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1494:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1514617e",
									"id": 1416,
									"mutability": "mutable",
									"name": "vestingDuration",
									"nameLocation": "1549:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1534:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1534:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_15552000_by_1",
											"typeString": "int_const 15552000"
										},
										"id": 1415,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "36",
											"id": 1413,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1567:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6_by_1",
												"typeString": "int_const 6"
											},
											"value": "6"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "3330",
											"id": 1414,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1571:7:8",
											"subdenomination": "days",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2592000_by_1",
												"typeString": "int_const 2592000"
											},
											"value": "30"
										},
										"src": "1567:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15552000_by_1",
											"typeString": "int_const 15552000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "40f02ab6",
									"id": 1419,
									"mutability": "mutable",
									"name": "stakeDuration",
									"nameLocation": "1621:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1606:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1417,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1606:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 1418,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1637:8:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8fa81bb0702332ea2a0aee44bb9e4d359cf4a2c5a820dd59d9129369bdbca73f",
									"id": 1425,
									"name": "PrivateSale",
									"nameLocation": "1693:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1721:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "1705:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1736:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "1728:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1704:39:8"
									},
									"src": "1687:57:8"
								},
								{
									"anonymous": false,
									"eventSelector": "550498dc565cc74203b9d14cba907c9f60ceefe26e82b37df98f6cb98529cf19",
									"id": 1431,
									"name": "PreSale",
									"nameLocation": "1755:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1779:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "1763:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1794:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "1786:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:39:8"
									},
									"src": "1749:53:8"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "1868:51:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1445,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1892:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Bettoken_$1795",
																		"typeString": "contract Bettoken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Bettoken_$1795",
																		"typeString": "contract Bettoken"
																	}
																],
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1884:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1443,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1884:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1884:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1447,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "1899:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1442,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "1878:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1878:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "1878:34:8"
											}
										]
									},
									"id": 1451,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "426574746f6b656e",
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1828:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_50252e7dcf80edd4c485aa3c52d8ff1d489c68f4538c7d0c90fd6f79a8bdf23d",
														"typeString": "literal_string \"Bettoken\""
													},
													"value": "Bettoken"
												},
												{
													"hexValue": "42455454",
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1840:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ec659342723f951f23b427400907d3b03293f1ce4abc0899fe27c23f6997c8e2",
														"typeString": "literal_string \"BETT\""
													},
													"value": "BETT"
												}
											],
											"id": 1436,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1433,
												"name": "ERC20",
												"nameLocations": [
													"1822:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "1822:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1822:25:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1438,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1856:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1860:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1856:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1440,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1437,
												"name": "Ownable",
												"nameLocations": [
													"1848:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1848:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1848:19:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:2:8"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1868:0:8"
									},
									"scope": 1795,
									"src": "1808:111:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "1972:134:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_SaleStage_$1398",
																"typeString": "enum Bettoken.SaleStage"
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1457,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "1990:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1398",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1458,
																	"name": "SaleStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "1999:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_SaleStage_$1398_$",
																		"typeString": "type(enum Bettoken.SaleStage)"
																	}
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2009:4:8",
																"memberName": "NONE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1395,
																"src": "1999:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1398",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"src": "1990:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c652068617320616c72656164792073746172746564206f7220636f6e636c756465642e",
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2015:48:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804",
																"typeString": "literal_string \"Private Sale has already started or concluded.\""
															},
															"value": "Private Sale has already started or concluded."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804",
																"typeString": "literal_string \"Private Sale has already started or concluded.\""
															}
														],
														"id": 1456,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1982:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1982:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "1982:82:8"
											},
											{
												"expression": {
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1464,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "2074:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1398",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1465,
															"name": "SaleStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "2082:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SaleStage_$1398_$",
																"typeString": "type(enum Bettoken.SaleStage)"
															}
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2092:7:8",
														"memberName": "PRIVATE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1396,
														"src": "2082:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1398",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"src": "2074:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SaleStage_$1398",
														"typeString": "enum Bettoken.SaleStage"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "2074:25:8"
											}
										]
									},
									"functionSelector": "338dbf59",
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1454,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1453,
												"name": "onlyOwner",
												"nameLocations": [
													"1962:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1962:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1962:9:8"
										}
									],
									"name": "startPrivateSale",
									"nameLocation": "1934:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1950:2:8"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:0:8"
									},
									"scope": 1795,
									"src": "1925:181:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1495,
										"nodeType": "Block",
										"src": "2155:227:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_SaleStage_$1398",
																"typeString": "enum Bettoken.SaleStage"
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1476,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "2173:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1398",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1477,
																	"name": "SaleStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "2182:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_SaleStage_$1398_$",
																		"typeString": "type(enum Bettoken.SaleStage)"
																	}
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2192:7:8",
																"memberName": "PRIVATE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1396,
																"src": "2182:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1398",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"src": "2173:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c652073686f756c6420626520636f6e636c756465642066697273742e",
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2201:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878",
																"typeString": "literal_string \"Private Sale should be concluded first.\""
															},
															"value": "Private Sale should be concluded first."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878",
																"typeString": "literal_string \"Private Sale should be concluded first.\""
															}
														],
														"id": 1475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2165:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2165:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "2165:78:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1484,
																"name": "privateSaleSoldTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "2261:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1485,
																"name": "privateSaleTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "2286:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2261:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c6520746172676574206e6f7420726561636865642e",
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2305:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e",
																"typeString": "literal_string \"Private Sale target not reached.\""
															},
															"value": "Private Sale target not reached."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e",
																"typeString": "literal_string \"Private Sale target not reached.\""
															}
														],
														"id": 1483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2253:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2253:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "2253:87:8"
											},
											{
												"expression": {
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1490,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "2350:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1398",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1491,
															"name": "SaleStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "2358:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SaleStage_$1398_$",
																"typeString": "type(enum Bettoken.SaleStage)"
															}
														},
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2368:7:8",
														"memberName": "PRESALE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1397,
														"src": "2358:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1398",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"src": "2350:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SaleStage_$1398",
														"typeString": "enum Bettoken.SaleStage"
													}
												},
												"id": 1494,
												"nodeType": "ExpressionStatement",
												"src": "2350:25:8"
											}
										]
									},
									"functionSelector": "55dd574c",
									"id": 1496,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1473,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1472,
												"name": "onlyOwner",
												"nameLocations": [
													"2145:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2145:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2145:9:8"
										}
									],
									"name": "startPreSale",
									"nameLocation": "2121:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2133:2:8"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2155:0:8"
									},
									"scope": 1795,
									"src": "2112:270:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "2456:1221:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_SaleStage_$1398",
																"typeString": "enum Bettoken.SaleStage"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1504,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "2474:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1398",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 1505,
																	"name": "SaleStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "2483:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_SaleStage_$1398_$",
																		"typeString": "type(enum Bettoken.SaleStage)"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2493:4:8",
																"memberName": "NONE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1395,
																"src": "2483:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1398",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"src": "2474:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2073616c65206973206163746976652e",
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2499:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f",
																"typeString": "literal_string \"No sale is active.\""
															},
															"value": "No sale is active."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f",
																"typeString": "literal_string \"No sale is active.\""
															}
														],
														"id": 1503,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2466:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2466:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "2466:54:8"
											},
											{
												"assignments": [
													1512
												],
												"declarations": [
													{
														"constant": false,
														"id": 1512,
														"mutability": "mutable",
														"name": "tokensToBuy",
														"nameLocation": "2539:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "2531:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1511,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2531:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1513,
												"nodeType": "VariableDeclarationStatement",
												"src": "2531:19:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_SaleStage_$1398",
														"typeString": "enum Bettoken.SaleStage"
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1514,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "2564:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1398",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1515,
															"name": "SaleStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "2573:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SaleStage_$1398_$",
																"typeString": "type(enum Bettoken.SaleStage)"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2583:7:8",
														"memberName": "PRIVATE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1396,
														"src": "2573:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1398",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"src": "2564:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_SaleStage_$1398",
															"typeString": "enum Bettoken.SaleStage"
														},
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1568,
															"name": "stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "3126:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_SaleStage_$1398",
																"typeString": "enum Bettoken.SaleStage"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1569,
																"name": "SaleStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "3135:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_SaleStage_$1398_$",
																	"typeString": "type(enum Bettoken.SaleStage)"
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3145:7:8",
															"memberName": "PRESALE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1397,
															"src": "3135:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_SaleStage_$1398",
																"typeString": "enum Bettoken.SaleStage"
															}
														},
														"src": "3126:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1632,
													"nodeType": "IfStatement",
													"src": "3122:549:8",
													"trueBody": {
														"id": 1631,
														"nodeType": "Block",
														"src": "3154:517:8",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1573,
																				"name": "preSaleSoldTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1394,
																				"src": "3176:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1574,
																				"name": "preSaleTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1377,
																				"src": "3196:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3176:33:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "5072652d53616c6520736f6c64206f75742e",
																			"id": 1576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3211:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513",
																				"typeString": "literal_string \"Pre-Sale sold out.\""
																			},
																			"value": "Pre-Sale sold out."
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513",
																				"typeString": "literal_string \"Pre-Sale sold out.\""
																			}
																		],
																		"id": 1572,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "3168:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3168:64:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1578,
																"nodeType": "ExpressionStatement",
																"src": "3168:64:8"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1580,
																					"name": "usdAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1498,
																					"src": "3254:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_rational_100000000000000000000_by_1",
																						"typeString": "int_const 100000000000000000000"
																					},
																					"id": 1585,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "313030",
																						"id": 1581,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3267:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"id": 1584,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3130",
																							"id": 1582,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3273:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"hexValue": "3138",
																							"id": 1583,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3279:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18_by_1",
																								"typeString": "int_const 18"
																							},
																							"value": "18"
																						},
																						"src": "3273:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					},
																					"src": "3267:14:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000000000000000000_by_1",
																						"typeString": "int_const 100000000000000000000"
																					}
																				},
																				"src": "3254:27:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1587,
																					"name": "usdAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1498,
																					"src": "3285:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_rational_3000000000000000000000_by_1",
																						"typeString": "int_const 3000000000000000000000"
																					},
																					"id": 1592,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "335f303030",
																						"id": 1588,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3298:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3000_by_1",
																							"typeString": "int_const 3000"
																						},
																						"value": "3_000"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"id": 1591,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3130",
																							"id": 1589,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3306:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"hexValue": "3138",
																							"id": 1590,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3312:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18_by_1",
																								"typeString": "int_const 18"
																							},
																							"value": "18"
																						},
																						"src": "3306:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					},
																					"src": "3298:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3000000000000000000000_by_1",
																						"typeString": "int_const 3000000000000000000000"
																					}
																				},
																				"src": "3285:29:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "3254:60:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "507572636861736520616d6f756e74206f7574206f66206c696d6974732e",
																			"id": 1595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3316:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec",
																				"typeString": "literal_string \"Purchase amount out of limits.\""
																			},
																			"value": "Purchase amount out of limits."
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec",
																				"typeString": "literal_string \"Purchase amount out of limits.\""
																			}
																		],
																		"id": 1579,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "3246:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3246:103:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1597,
																"nodeType": "ExpressionStatement",
																"src": "3246:103:8"
															},
															{
																"expression": {
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1598,
																		"name": "tokensToBuy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1512,
																		"src": "3363:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1600,
																				"name": "usdAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1498,
																				"src": "3400:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1599,
																			"name": "calculatePreSaleTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1687,
																			"src": "3377:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) view returns (uint256)"
																			}
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3377:33:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3363:47:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1603,
																"nodeType": "ExpressionStatement",
																"src": "3363:47:8"
															},
															{
																"expression": {
																	"id": 1606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1604,
																		"name": "preSaleSoldTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "3424:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 1605,
																		"name": "tokensToBuy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1512,
																		"src": "3445:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3424:32:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1607,
																"nodeType": "ExpressionStatement",
																"src": "3424:32:8"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1609,
																				"name": "preSaleSoldTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1394,
																				"src": "3478:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 1610,
																				"name": "preSaleTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1377,
																				"src": "3499:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3478:34:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "45786365656473205072652d53616c6520746f6b656e206c696d69742e",
																			"id": 1612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3514:31:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67",
																				"typeString": "literal_string \"Exceeds Pre-Sale token limit.\""
																			},
																			"value": "Exceeds Pre-Sale token limit."
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67",
																				"typeString": "literal_string \"Exceeds Pre-Sale token limit.\""
																			}
																		],
																		"id": 1608,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "3470:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3470:76:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1614,
																"nodeType": "ExpressionStatement",
																"src": "3470:76:8"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1618,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3578:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Bettoken_$1795",
																						"typeString": "contract Bettoken"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Bettoken_$1795",
																						"typeString": "contract Bettoken"
																					}
																				],
																				"id": 1617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3570:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1616,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3570:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3570:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"expression": {
																				"id": 1620,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3585:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3589:6:8",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3585:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1622,
																			"name": "tokensToBuy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1512,
																			"src": "3597:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1615,
																		"name": "_transfer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "3560:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3560:49:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1624,
																"nodeType": "ExpressionStatement",
																"src": "3560:49:8"
															},
															{
																"eventCall": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1626,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3636:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3640:6:8",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3636:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1628,
																			"name": "tokensToBuy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1512,
																			"src": "3648:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1625,
																		"name": "PreSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "3628:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3628:32:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1630,
																"nodeType": "EmitStatement",
																"src": "3623:37:8"
															}
														]
													}
												},
												"id": 1633,
												"nodeType": "IfStatement",
												"src": "2560:1111:8",
												"trueBody": {
													"id": 1567,
													"nodeType": "Block",
													"src": "2592:524:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1519,
																			"name": "privateSaleSoldTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "2614:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1520,
																			"name": "privateSaleTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1346,
																			"src": "2638:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2614:41:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "507269766174652053616c6520736f6c64206f75742e",
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2657:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb",
																			"typeString": "literal_string \"Private Sale sold out.\""
																		},
																		"value": "Private Sale sold out."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb",
																			"typeString": "literal_string \"Private Sale sold out.\""
																		}
																	],
																	"id": 1518,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2606:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2606:76:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1524,
															"nodeType": "ExpressionStatement",
															"src": "2606:76:8"
														},
														{
															"expression": {
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1525,
																	"name": "tokensToBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "2696:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1527,
																			"name": "usdAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "2737:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1526,
																		"name": "calculatePrivateSaleTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1661,
																		"src": "2710:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2710:37:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2696:51:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1530,
															"nodeType": "ExpressionStatement",
															"src": "2696:51:8"
														},
														{
															"expression": {
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1531,
																	"name": "privateSaleSoldTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1363,
																	"src": "2761:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1532,
																	"name": "tokensToBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "2786:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2761:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1534,
															"nodeType": "ExpressionStatement",
															"src": "2761:36:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1536,
																			"name": "privateSaleSoldTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "2819:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1537,
																			"name": "privateSaleTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1346,
																			"src": "2844:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2819:42:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4578636565647320507269766174652053616c6520746f6b656e206c696d69742e",
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2863:35:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e",
																			"typeString": "literal_string \"Exceeds Private Sale token limit.\""
																		},
																		"value": "Exceeds Private Sale token limit."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e",
																			"typeString": "literal_string \"Exceeds Private Sale token limit.\""
																		}
																	],
																	"id": 1535,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2811:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2811:88:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1541,
															"nodeType": "ExpressionStatement",
															"src": "2811:88:8"
														},
														{
															"expression": {
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1542,
																		"name": "vestingBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "2913:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1545,
																	"indexExpression": {
																		"expression": {
																			"id": 1543,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2928:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2932:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2928:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2913:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1546,
																	"name": "tokensToBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "2943:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2913:41:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1548,
															"nodeType": "ExpressionStatement",
															"src": "2913:41:8"
														},
														{
															"expression": {
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1549,
																		"name": "vestingReleaseTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "2968:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1552,
																	"indexExpression": {
																		"expression": {
																			"id": 1550,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2987:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2991:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2987:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2968:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1553,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3001:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3007:9:8",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "3001:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1555,
																			"name": "stakeDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "3019:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3001:31:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1557,
																		"name": "vestingDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1416,
																		"src": "3035:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3001:49:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2968:82:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1560,
															"nodeType": "ExpressionStatement",
															"src": "2968:82:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1562,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3081:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3085:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3081:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1564,
																		"name": "tokensToBuy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1512,
																		"src": "3093:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1561,
																	"name": "PrivateSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "3069:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3069:36:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1566,
															"nodeType": "EmitStatement",
															"src": "3064:41:8"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3610724e",
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1501,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1500,
												"name": "nonReentrant",
												"nameLocations": [
													"2443:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "2443:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2443:12:8"
										}
									],
									"name": "buyTokens",
									"nameLocation": "2397:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "2415:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "2407:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:19:8"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2456:0:8"
									},
									"scope": 1795,
									"src": "2388:1289:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "3770:209:8",
										"statements": [
											{
												"assignments": [
													1643
												],
												"declarations": [
													{
														"constant": false,
														"id": 1643,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "3788:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1660,
														"src": "3780:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3780:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1655,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1644,
														"name": "privateSaleStartPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "3803:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1645,
																					"name": "privateSaleEndPrice",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1360,
																					"src": "3842:19:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1646,
																					"name": "privateSaleStartPrice",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1353,
																					"src": "3864:21:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3842:43:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1648,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3841:45:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1649,
																		"name": "privateSaleSoldTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "3889:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3841:69:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1651,
																	"name": "privateSaleTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "3913:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3841:89:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1653,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3840:91:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3803:128:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3780:151:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1656,
														"name": "usdAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "3948:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1657,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "3960:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3948:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1641,
												"id": 1659,
												"nodeType": "Return",
												"src": "3941:31:8"
											}
										]
									},
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePrivateSaleTokens",
									"nameLocation": "3692:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "3727:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "3719:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:19:8"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "3761:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3761:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3760:9:8"
									},
									"scope": 1795,
									"src": "3683:296:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "4068:189:8",
										"statements": [
											{
												"assignments": [
													1669
												],
												"declarations": [
													{
														"constant": false,
														"id": 1669,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "4086:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1686,
														"src": "4078:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4078:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1670,
														"name": "preSaleStartPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "4101:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1671,
																					"name": "preSaleEndPrice",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1391,
																					"src": "4136:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1672,
																					"name": "preSaleStartPrice",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1384,
																					"src": "4154:17:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4136:35:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1674,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4135:37:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1675,
																		"name": "preSaleSoldTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "4175:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4135:57:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1677,
																	"name": "preSaleTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "4195:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4135:73:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1679,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4134:75:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4101:108:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4078:131:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1682,
														"name": "usdAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "4226:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1683,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "4238:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4226:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1667,
												"id": 1685,
												"nodeType": "Return",
												"src": "4219:31:8"
											}
										]
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePreSaleTokens",
									"nameLocation": "3994:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "4025:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "4017:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4016:19:8"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "4059:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4059:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4058:9:8"
									},
									"scope": 1795,
									"src": "3985:272:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "4316:303:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1693,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4334:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4340:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4334:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"baseExpression": {
																	"id": 1695,
																	"name": "vestingReleaseTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1411,
																	"src": "4353:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1698,
																"indexExpression": {
																	"expression": {
																		"id": 1696,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4372:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4376:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4372:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4353:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4334:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e6720706572696f64206e6f742079657420636f6d706c657465642e",
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4385:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d",
																"typeString": "literal_string \"Vesting period not yet completed.\""
															},
															"value": "Vesting period not yet completed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d",
																"typeString": "literal_string \"Vesting period not yet completed.\""
															}
														],
														"id": 1692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4326:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4326:95:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "4326:95:8"
											},
											{
												"assignments": [
													1704
												],
												"declarations": [
													{
														"constant": false,
														"id": 1704,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4439:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1734,
														"src": "4431:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1703,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4431:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1709,
												"initialValue": {
													"baseExpression": {
														"id": 1705,
														"name": "vestingBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "4448:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1708,
													"indexExpression": {
														"expression": {
															"id": 1706,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4463:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4467:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4463:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4448:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4431:43:8"
											},
											{
												"expression": {
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1710,
															"name": "vestingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "4484:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1713,
														"indexExpression": {
															"expression": {
																"id": 1711,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4499:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4503:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4499:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4484:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4513:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4484:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "4484:30:8"
											},
											{
												"expression": {
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1717,
															"name": "vestingReleaseTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "4524:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1720,
														"indexExpression": {
															"expression": {
																"id": 1718,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4543:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4547:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4543:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4524:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4557:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4524:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "4524:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1727,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4586:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Bettoken_$1795",
																		"typeString": "contract Bettoken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Bettoken_$1795",
																		"typeString": "contract Bettoken"
																	}
																],
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4578:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1725,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4578:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1729,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4593:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4597:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4593:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1731,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "4605:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1724,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4568:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4568:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1733,
												"nodeType": "ExpressionStatement",
												"src": "4568:44:8"
											}
										]
									},
									"functionSelector": "54dd1da4",
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1690,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1689,
												"name": "nonReentrant",
												"nameLocations": [
													"4303:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "4303:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4303:12:8"
										}
									],
									"name": "releaseVestedTokens",
									"nameLocation": "4272:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4291:2:8"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4316:0:8"
									},
									"scope": 1795,
									"src": "4263:356:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "4665:185:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1741,
																	"name": "privateSaleSoldTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1363,
																	"src": "4683:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1742,
																	"name": "privateSaleTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "4708:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4683:42:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1744,
																	"name": "preSaleSoldTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1394,
																	"src": "4729:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1745,
																	"name": "preSaleTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "4750:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4729:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4683:80:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65732074617267657473206e6f7420796574206d65742e",
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4782:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef",
																"typeString": "literal_string \"Sales targets not yet met.\""
															},
															"value": "Sales targets not yet met."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef",
																"typeString": "literal_string \"Sales targets not yet met.\""
															}
														],
														"id": 1740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4675:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4675:136:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1750,
												"nodeType": "ExpressionStatement",
												"src": "4675:136:8"
											},
											{
												"expression": {
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1751,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "4821:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1398",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1752,
															"name": "SaleStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "4829:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SaleStage_$1398_$",
																"typeString": "type(enum Bettoken.SaleStage)"
															}
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4839:4:8",
														"memberName": "NONE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1395,
														"src": "4829:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1398",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"src": "4821:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SaleStage_$1398",
														"typeString": "enum Bettoken.SaleStage"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "4821:22:8"
											}
										]
									},
									"functionSelector": "32c85ac0",
									"id": 1757,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1738,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1737,
												"name": "onlyOwner",
												"nameLocations": [
													"4655:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4655:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4655:9:8"
										}
									],
									"name": "haltSales",
									"nameLocation": "4634:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4643:2:8"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4665:0:8"
									},
									"scope": 1795,
									"src": "4625:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "4913:65:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1772,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4957:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Bettoken_$1795",
																			"typeString": "contract Bettoken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Bettoken_$1795",
																			"typeString": "contract Bettoken"
																		}
																	],
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4949:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1770,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4949:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4949:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4963:7:8",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "4949:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1766,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "4931:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4931:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4923:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1764,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4923:8:8",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4923:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4940:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4923:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4923:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1776,
												"nodeType": "ExpressionStatement",
												"src": "4923:48:8"
											}
										]
									},
									"functionSelector": "24600fc3",
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1760,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1759,
												"name": "onlyOwner",
												"nameLocations": [
													"4890:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4890:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4890:9:8"
										},
										{
											"id": 1762,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1761,
												"name": "nonReentrant",
												"nameLocations": [
													"4900:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "4900:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4900:12:8"
										}
									],
									"name": "withdrawFunds",
									"nameLocation": "4865:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4878:2:8"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4913:0:8"
									},
									"scope": 1795,
									"src": "4856:122:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1785,
										"nodeType": "Block",
										"src": "5012:60:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "44697265637420455448207472616e7366657273206e6f7420616c6c6f7765642e",
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5029:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
																"typeString": "literal_string \"Direct ETH transfers not allowed.\""
															},
															"value": "Direct ETH transfers not allowed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
																"typeString": "literal_string \"Direct ETH transfers not allowed.\""
															}
														],
														"id": 1781,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "5022:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1784,
												"nodeType": "ExpressionStatement",
												"src": "5022:43:8"
											}
										]
									},
									"id": 1786,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4992:2:8"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5012:0:8"
									},
									"scope": 1795,
									"src": "4984:88:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "5105:60:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "44697265637420455448207472616e7366657273206e6f7420616c6c6f7765642e",
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5122:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
																"typeString": "literal_string \"Direct ETH transfers not allowed.\""
															},
															"value": "Direct ETH transfers not allowed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
																"typeString": "literal_string \"Direct ETH transfers not allowed.\""
															}
														],
														"id": 1789,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "5115:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5115:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "5115:43:8"
											}
										]
									},
									"id": 1794,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5085:2:8"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5105:0:8"
									},
									"scope": 1795,
									"src": "5078:87:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1796,
							"src": "290:4877:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								876,
								885,
								1425,
								1431
							]
						}
					],
					"src": "32:5135:8"
				},
				"id": 8
			}
		}
	}
}