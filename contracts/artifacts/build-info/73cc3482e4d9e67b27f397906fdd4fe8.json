{
	"id": "73cc3482e4d9e67b27f397906fdd4fe8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/bettoken.sol": {
				"content": "\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\ncontract Bettoken is ERC20, Ownable, ReentrancyGuard {\n    using SafeMath for uint256;\n\n    uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18; // 200 million BETT with 18 decimals\n\n    // Private Sale variables\n    uint256 public privateSaleTarget = 1_000_000 * 10 ** 18; // 1 million USD target\n    uint256 public privateSaleTokens = 38_835_764 * 10 ** 18; // 38,835,764 BETT\n    uint256 public privateSaleStartPrice = 0.001 * 10 ** 18; // 0.001 USD per BETT\n    uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18; // 0.0505 USD per BETT\n    uint256 public privateSaleSoldTokens = 0;\n\n    // Pre-Sale variables\n    uint256 public preSaleTarget = 19_000_000 * 10 ** 18; // 19 million USD target\n    uint256 public preSaleTokens = 161_164_236 * 10 ** 18; // 161,164,236 BETT\n    uint256 public preSaleStartPrice = 0.0505 * 10 ** 18; // 0.0505 USD per BETT\n    uint256 public preSaleEndPrice = 0.1 * 10 ** 18; // 0.1 USD per BETT\n    uint256 public preSaleSoldTokens = 0;\n\n    // Sale States\n    enum SaleStage { NONE, PRIVATE, PRESALE }\n    SaleStage public stage = SaleStage.NONE;\n\n    // Vesting Parameters\n    mapping(address => uint256) public vestingBalance;\n    mapping(address => uint256) public vestingReleaseTime;\n    uint256 public vestingDuration = 180 days; // 6 ay\n    uint256 public stakeDuration = 365 days; // 1 yıl\n\n    AggregatorV3Interface[] public priceFeeds; // Birden fazla Chainlink Price Oracle\n\n    // Event Definitions\n    event PrivateSale(address indexed buyer, uint256 amount);\n    event PreSale(address indexed buyer, uint256 amount);\n    event TokensStaked(address indexed staker, uint256 amount, uint256 releaseTime);\n    event VestedTokensReleased(address indexed beneficiary, uint256 amount);\n    event StageChanged(SaleStage newStage);\n    event FundsWithdrawn(address indexed owner, uint256 amount);\n\n    constructor(address[] memory _priceFeeds) ERC20(\"Bettoken\", \"BETT\") Ownable(msg.sender) {\n        _mint(address(this), TOTAL_SUPPLY);\n        for (uint256 i = 0; i < _priceFeeds.length; i++) {\n            priceFeeds.push(AggregatorV3Interface(_priceFeeds[i]));\n        }\n    }\n\n    // Birden fazla oracle'dan fiyat ortalamasını alır\n    function getLatestPrice() public view returns (uint256) {\n        uint256 totalPrice = 0;\n        for (uint256 i = 0; i < priceFeeds.length; i++) {\n            (\n                ,\n                int price,\n                ,\n                ,\n            ) = priceFeeds[i].latestRoundData();\n            require(price > 0, \"Invalid price data from oracle\");\n            totalPrice = totalPrice.add(uint256(price));\n        }\n        return totalPrice.div(priceFeeds.length).mul(10 ** 10); // Ölçeklendirme\n    }\n\n    function startPrivateSale() external onlyOwner {\n        require(stage == SaleStage.NONE, \"Private Sale can only start from NONE stage.\");\n        require(privateSaleSoldTokens == 0, \"Private Sale tokens should be unsold at start.\");\n        require(preSaleSoldTokens == 0, \"Pre-Sale should not have started before Private Sale.\");\n\n        stage = SaleStage.PRIVATE;\n        emit StageChanged(stage);\n    }\n\n    function startPreSale() external onlyOwner {\n        require(stage == SaleStage.PRIVATE, \"Pre-Sale can only start after Private Sale.\");\n        require(privateSaleSoldTokens == privateSaleTokens, \"Private Sale must be completed before starting Pre-Sale.\");\n        \n        stage = SaleStage.PRESALE;\n        emit StageChanged(stage);\n    }\n\n    function buyTokens(uint256 usdAmount) external payable nonReentrant {\n        require(stage != SaleStage.NONE, \"No sale is active.\");\n\n        uint256 latestPrice = getLatestPrice();\n        require(latestPrice > 0, \"Invalid price from oracle\");\n\n        uint256 tokensToBuy;\n        if (stage == SaleStage.PRIVATE) {\n            require(privateSaleSoldTokens < privateSaleTokens, \"Private Sale sold out.\");\n            tokensToBuy = calculatePrivateSaleTokens(usdAmount.mul(latestPrice).div(1 ether));\n            privateSaleSoldTokens = privateSaleSoldTokens.add(tokensToBuy);\n            require(privateSaleSoldTokens <= privateSaleTokens, \"Exceeds Private Sale token limit.\");\n            vestingBalance[msg.sender] = vestingBalance[msg.sender].add(tokensToBuy);\n            vestingReleaseTime[msg.sender] = block.timestamp.add(stakeDuration).add(vestingDuration);\n            emit PrivateSale(msg.sender, tokensToBuy);\n        } else if (stage == SaleStage.PRESALE) {\n            require(preSaleSoldTokens < preSaleTokens, \"Pre-Sale sold out.\");\n            require(usdAmount >= 100 * 10 ** 18 && usdAmount <= 3_000 * 10 ** 18, \"Purchase amount out of limits.\");\n            tokensToBuy = calculatePreSaleTokens(usdAmount.mul(latestPrice).div(1 ether));\n            preSaleSoldTokens = preSaleSoldTokens.add(tokensToBuy);\n            require(preSaleSoldTokens <= preSaleTokens, \"Exceeds Pre-Sale token limit.\");\n            _transfer(address(this), msg.sender, tokensToBuy);\n            emit PreSale(msg.sender, tokensToBuy);\n        }\n    }\n\n    function calculatePrivateSaleTokens(uint256 usdAmount) internal view returns (uint256) {\n        require(usdAmount > 0, \"USD amount must be greater than 0\");\n        require(privateSaleTokens > 0, \"Private Sale tokens must be greater than 0\");\n        require(privateSaleSoldTokens <= privateSaleTokens, \"Private Sale sold tokens exceed available tokens\");\n\n        uint256 tokenRange = privateSaleEndPrice.sub(privateSaleStartPrice);\n        uint256 currentPrice = privateSaleStartPrice.add(\n            tokenRange.mul(privateSaleSoldTokens).div(privateSaleTokens)\n        );\n\n        require(currentPrice >= privateSaleStartPrice && currentPrice <= privateSaleEndPrice, \"Invalid token price calculated\");\n\n        uint256 tokens = usdAmount.div(currentPrice);\n        require(tokens > 0, \"Calculated tokens must be greater than 0\");\n\n        return tokens;\n    }\n\n    function calculatePreSaleTokens(uint256 usdAmount) internal view returns (uint256) {\n        uint256 currentPrice = preSaleStartPrice.add(\n            (preSaleEndPrice.sub(preSaleStartPrice)).mul(preSaleSoldTokens).div(preSaleTokens)\n        );\n        require(currentPrice >= preSaleStartPrice && currentPrice <= preSaleEndPrice, \"Invalid token price calculated\");\n\n        uint256 tokens = usdAmount.div(currentPrice);\n        require(tokens > 0, \"Calculated tokens must be greater than 0\");\n\n        return tokens;\n    }\n\n    function stakeTokens(uint256 amount) external onlyOwner nonReentrant {\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance to stake\");\n\n        _transfer(msg.sender, address(this), amount);\n\n        vestingBalance[msg.sender] = vestingBalance[msg.sender].add(amount);\n        vestingReleaseTime[msg.sender] = block.timestamp.add(stakeDuration);\n\n        emit TokensStaked(msg.sender, amount, vestingReleaseTime[msg.sender]);\n    }\n\n    function releaseVestedTokens() external nonReentrant {\n        require(block.timestamp >= vestingReleaseTime[msg.sender], \"Vesting period not yet completed.\");\n        uint256 amount = vestingBalance[msg.sender];\n        require(amount > 0, \"No vested tokens to release\");\n\n        vestingBalance[msg.sender] = 0;\n        vestingReleaseTime[msg.sender] = 0;\n\n        _transfer(address(this), msg.sender, amount);\n\n        emit VestedTokensReleased(msg.sender, amount);\n    }\n\n    function haltSales() external onlyOwner {\n        require(privateSaleSoldTokens == privateSaleTokens || preSaleSoldTokens == preSaleTokens, \n                \"Sales targets not yet met.\");\n        stage = SaleStage.NONE;\n        emit StageChanged(stage);\n    }\n\n    function emergencyWithdraw(address tokenAddress, uint256 amount) external onlyOwner nonReentrant {\n        IERC20(tokenAddress).transfer(owner(), amount);\n        emit FundsWithdrawn(owner(), amount);\n    }\n\n    function withdrawFunds() external onlyOwner nonReentrant {\n        uint256 amount = address(this).balance;\n        payable(owner()).transfer(amount);\n        emit FundsWithdrawn(owner(), amount);\n    }\n\n    fallback() external payable {\n        revert(\"Direct ETH transfers not allowed.\");\n    }\n\n    receive() external payable {\n        revert(\"Direct ETH transfers not allowed.\");\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 341,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 418,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 424,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 426,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 428,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 430,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xC4 MSTORE8 PUSH29 0x112E7DFD362FBBC3109DCD7EFAD1E9F705B895D9C42D83F61DD9CEDB64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "482:6210:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xC4 MSTORE8 PUSH29 0x112E7DFD362FBBC3109DCD7EFAD1E9F705B895D9C42D83F61DD9CEDB64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "482:6210:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/bettoken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/bettoken.sol": {
				"Bettoken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_priceFeeds",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "FundsWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PreSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PrivateSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "enum Bettoken.SaleStage",
									"name": "newStage",
									"type": "uint8"
								}
							],
							"name": "StageChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "TokensStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "VestedTokensReleased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdAmount",
									"type": "uint256"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLatestPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "haltSales",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleEndPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleSoldTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleStartPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleTarget",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "priceFeeds",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleEndPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleSoldTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleStartPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleTarget",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releaseVestedTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"internalType": "enum Bettoken.SaleStage",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPreSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPrivateSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vestingBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestingDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vestingReleaseTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/bettoken.sol\":367:8658  contract Bettoken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/bettoken.sol\":629:649  1_000_000 * 10 ** 18 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/bettoken.sol\":594:649  uint256 public privateSaleTarget = 1_000_000 * 10 ** 18 */\n  0x07\n  sstore\n    /* \"contracts/bettoken.sol\":714:735  38_835_764 * 10 ** 18 */\n  0x201fcafc2577d298500000\n    /* \"contracts/bettoken.sol\":679:735  uint256 public privateSaleTokens = 38_835_764 * 10 ** 18 */\n  0x08\n  sstore\n    /* \"contracts/bettoken.sol\":799:815  0.001 * 10 ** 18 */\n  0x038d7ea4c68000\n    /* \"contracts/bettoken.sol\":760:815  uint256 public privateSaleStartPrice = 0.001 * 10 ** 18 */\n  0x09\n  sstore\n    /* \"contracts/bettoken.sol\":880:897  0.0505 * 10 ** 18 */\n  0xb3697b81284000\n    /* \"contracts/bettoken.sol\":843:897  uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18 */\n  0x0a\n  sstore\n    /* \"contracts/bettoken.sol\":965:966  0 */\n  0x00\n    /* \"contracts/bettoken.sol\":926:966  uint256 public privateSaleSoldTokens = 0 */\n  0x0b\n  sstore\n    /* \"contracts/bettoken.sol\":1030:1051  19_000_000 * 10 ** 18 */\n  0x0fb768105935a2f3000000\n    /* \"contracts/bettoken.sol\":999:1051  uint256 public preSaleTarget = 19_000_000 * 10 ** 18 */\n  0x0c\n  sstore\n    /* \"contracts/bettoken.sol\":1113:1135  161_164_236 * 10 ** 18 */\n  0x854fdabd6aa1d32fb00000\n    /* \"contracts/bettoken.sol\":1082:1135  uint256 public preSaleTokens = 161_164_236 * 10 ** 18 */\n  0x0d\n  sstore\n    /* \"contracts/bettoken.sol\":1196:1213  0.0505 * 10 ** 18 */\n  0xb3697b81284000\n    /* \"contracts/bettoken.sol\":1161:1213  uint256 public preSaleStartPrice = 0.0505 * 10 ** 18 */\n  0x0e\n  sstore\n    /* \"contracts/bettoken.sol\":1275:1289  0.1 * 10 ** 18 */\n  0x016345785d8a0000\n    /* \"contracts/bettoken.sol\":1242:1289  uint256 public preSaleEndPrice = 0.1 * 10 ** 18 */\n  0x0f\n  sstore\n    /* \"contracts/bettoken.sol\":1350:1351  0 */\n  0x00\n    /* \"contracts/bettoken.sol\":1315:1351  uint256 public preSaleSoldTokens = 0 */\n  0x10\n  sstore\n    /* \"contracts/bettoken.sol\":1448:1462  SaleStage.NONE */\n  0x00\n    /* \"contracts/bettoken.sol\":1423:1462  SaleStage public stage = SaleStage.NONE */\n  0x11\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x02\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  tag_2\n  tag_3\n  jump\t// in\ntag_2:\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/bettoken.sol\":1642:1650  180 days */\n  0xed4e00\n    /* \"contracts/bettoken.sol\":1609:1650  uint256 public vestingDuration = 180 days */\n  0x14\n  sstore\n    /* \"contracts/bettoken.sol\":1695:1703  365 days */\n  0x01e13380\n    /* \"contracts/bettoken.sol\":1664:1703  uint256 public stakeDuration = 365 days */\n  0x15\n  sstore\n    /* \"contracts/bettoken.sol\":2224:2500  constructor(address[] memory _priceFeeds) ERC20(\"Bettoken\", \"BETT\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"contracts/bettoken.sol\":2300:2310  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x426574746f6b656e000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4245545400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_14\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_16\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_19\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/bettoken.sol\":2322:2356  _mint(address(this), TOTAL_SUPPLY) */\n  tag_23\n    /* \"contracts/bettoken.sol\":2336:2340  this */\n  address\n    /* \"contracts/bettoken.sol\":498:520  200_000_000 * 10 ** 18 */\n  0xa56fa5b99019a5c8000000\n    /* \"contracts/bettoken.sol\":2322:2327  _mint */\n  shl(0x20, tag_24)\n    /* \"contracts/bettoken.sol\":2322:2356  _mint(address(this), TOTAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"contracts/bettoken.sol\":2371:2380  uint256 i */\n  0x00\n    /* \"contracts/bettoken.sol\":2366:2494  for (uint256 i = 0; i < _priceFeeds.length; i++) {... */\ntag_25:\n    /* \"contracts/bettoken.sol\":2390:2401  _priceFeeds */\n  dup2\n    /* \"contracts/bettoken.sol\":2390:2408  _priceFeeds.length */\n  mload\n    /* \"contracts/bettoken.sol\":2386:2387  i */\n  dup2\n    /* \"contracts/bettoken.sol\":2386:2408  i < _priceFeeds.length */\n  lt\n    /* \"contracts/bettoken.sol\":2366:2494  for (uint256 i = 0; i < _priceFeeds.length; i++) {... */\n  iszero\n  tag_26\n  jumpi\n    /* \"contracts/bettoken.sol\":2429:2439  priceFeeds */\n  0x16\n    /* \"contracts/bettoken.sol\":2467:2478  _priceFeeds */\n  dup3\n    /* \"contracts/bettoken.sol\":2479:2480  i */\n  dup3\n    /* \"contracts/bettoken.sol\":2467:2481  _priceFeeds[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_28\n  jumpi\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\ntag_28:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"contracts/bettoken.sol\":2429:2483  priceFeeds.push(AggregatorV3Interface(_priceFeeds[i])) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/bettoken.sol\":2410:2413  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"contracts/bettoken.sol\":2366:2494  for (uint256 i = 0; i < _priceFeeds.length; i++) {... */\n  jump(tag_25)\ntag_26:\n  pop\n    /* \"contracts/bettoken.sol\":2224:2500  constructor(address[] memory _priceFeeds) ERC20(\"Bettoken\", \"BETT\") Ownable(msg.sender) {... */\n  pop\n    /* \"contracts/bettoken.sol\":367:8658  contract Bettoken is ERC20, Ownable, ReentrancyGuard {... */\n  jump(tag_32)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_20:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_36\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_37\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_41\n  swap2\n  swap1\n  tag_42\n  jump\t// in\ntag_41:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_43)\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_45\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_47\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_48)\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_49\n  swap2\n  swap1\n  tag_50\n  jump\t// in\ntag_49:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:187   */\ntag_3:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x21\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"#utility.yul\":193:268   */\ntag_51:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":259:261   */\n  0x40\n    /* \"#utility.yul\":253:262   */\n  mload\n    /* \"#utility.yul\":243:262   */\n  swap1\n  pop\n    /* \"#utility.yul\":193:268   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":274:391   */\ntag_52:\n    /* \"#utility.yul\":383:384   */\n  0x00\n    /* \"#utility.yul\":380:381   */\n  dup1\n    /* \"#utility.yul\":373:385   */\n  revert\n    /* \"#utility.yul\":397:514   */\ntag_53:\n    /* \"#utility.yul\":506:507   */\n  0x00\n    /* \"#utility.yul\":503:504   */\n  dup1\n    /* \"#utility.yul\":496:508   */\n  revert\n    /* \"#utility.yul\":520:637   */\ntag_54:\n    /* \"#utility.yul\":629:630   */\n  0x00\n    /* \"#utility.yul\":626:627   */\n  dup1\n    /* \"#utility.yul\":619:631   */\n  revert\n    /* \"#utility.yul\":643:745   */\ntag_55:\n    /* \"#utility.yul\":684:690   */\n  0x00\n    /* \"#utility.yul\":735:737   */\n  0x1f\n    /* \"#utility.yul\":731:738   */\n  not\n    /* \"#utility.yul\":726:728   */\n  0x1f\n    /* \"#utility.yul\":719:724   */\n  dup4\n    /* \"#utility.yul\":715:729   */\n  add\n    /* \"#utility.yul\":711:739   */\n  and\n    /* \"#utility.yul\":701:739   */\n  swap1\n  pop\n    /* \"#utility.yul\":643:745   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":751:931   */\ntag_56:\n    /* \"#utility.yul\":799:876   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":796:797   */\n  0x00\n    /* \"#utility.yul\":789:877   */\n  mstore\n    /* \"#utility.yul\":896:900   */\n  0x41\n    /* \"#utility.yul\":893:894   */\n  0x04\n    /* \"#utility.yul\":886:901   */\n  mstore\n    /* \"#utility.yul\":920:924   */\n  0x24\n    /* \"#utility.yul\":917:918   */\n  0x00\n    /* \"#utility.yul\":910:925   */\n  revert\n    /* \"#utility.yul\":937:1218   */\ntag_57:\n    /* \"#utility.yul\":1020:1047   */\n  tag_98\n    /* \"#utility.yul\":1042:1046   */\n  dup3\n    /* \"#utility.yul\":1020:1047   */\n  tag_55\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1012:1018   */\n  dup2\n    /* \"#utility.yul\":1008:1048   */\n  add\n    /* \"#utility.yul\":1150:1156   */\n  dup2\n    /* \"#utility.yul\":1138:1148   */\n  dup2\n    /* \"#utility.yul\":1135:1157   */\n  lt\n    /* \"#utility.yul\":1114:1132   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1102:1112   */\n  dup3\n    /* \"#utility.yul\":1099:1133   */\n  gt\n    /* \"#utility.yul\":1096:1158   */\n  or\n    /* \"#utility.yul\":1093:1181   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":1161:1179   */\n  tag_100\n  tag_56\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1093:1181   */\ntag_99:\n    /* \"#utility.yul\":1201:1211   */\n  dup1\n    /* \"#utility.yul\":1197:1199   */\n  0x40\n    /* \"#utility.yul\":1190:1212   */\n  mstore\n    /* \"#utility.yul\":980:1218   */\n  pop\n    /* \"#utility.yul\":937:1218   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1224:1353   */\ntag_58:\n    /* \"#utility.yul\":1258:1264   */\n  0x00\n    /* \"#utility.yul\":1285:1305   */\n  tag_102\n  tag_51\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1275:1305   */\n  swap1\n  pop\n    /* \"#utility.yul\":1314:1347   */\n  tag_103\n    /* \"#utility.yul\":1342:1346   */\n  dup3\n    /* \"#utility.yul\":1334:1340   */\n  dup3\n    /* \"#utility.yul\":1314:1347   */\n  tag_57\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1224:1353   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1359:1670   */\ntag_59:\n    /* \"#utility.yul\":1436:1440   */\n  0x00\n    /* \"#utility.yul\":1526:1544   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1518:1524   */\n  dup3\n    /* \"#utility.yul\":1515:1545   */\n  gt\n    /* \"#utility.yul\":1512:1568   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":1548:1566   */\n  tag_106\n  tag_56\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1512:1568   */\ntag_105:\n    /* \"#utility.yul\":1598:1602   */\n  0x20\n    /* \"#utility.yul\":1590:1596   */\n  dup3\n    /* \"#utility.yul\":1586:1603   */\n  mul\n    /* \"#utility.yul\":1578:1603   */\n  swap1\n  pop\n    /* \"#utility.yul\":1658:1662   */\n  0x20\n    /* \"#utility.yul\":1652:1656   */\n  dup2\n    /* \"#utility.yul\":1648:1663   */\n  add\n    /* \"#utility.yul\":1640:1663   */\n  swap1\n  pop\n    /* \"#utility.yul\":1359:1670   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1676:1793   */\ntag_60:\n    /* \"#utility.yul\":1785:1786   */\n  0x00\n    /* \"#utility.yul\":1782:1783   */\n  dup1\n    /* \"#utility.yul\":1775:1787   */\n  revert\n    /* \"#utility.yul\":1799:1925   */\ntag_61:\n    /* \"#utility.yul\":1836:1843   */\n  0x00\n    /* \"#utility.yul\":1876:1918   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1869:1874   */\n  dup3\n    /* \"#utility.yul\":1865:1919   */\n  and\n    /* \"#utility.yul\":1854:1919   */\n  swap1\n  pop\n    /* \"#utility.yul\":1799:1925   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1931:2027   */\ntag_62:\n    /* \"#utility.yul\":1968:1975   */\n  0x00\n    /* \"#utility.yul\":1997:2021   */\n  tag_110\n    /* \"#utility.yul\":2015:2020   */\n  dup3\n    /* \"#utility.yul\":1997:2021   */\n  tag_61\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":1986:2021   */\n  swap1\n  pop\n    /* \"#utility.yul\":1931:2027   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2033:2155   */\ntag_63:\n    /* \"#utility.yul\":2106:2130   */\n  tag_112\n    /* \"#utility.yul\":2124:2129   */\n  dup2\n    /* \"#utility.yul\":2106:2130   */\n  tag_62\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2099:2104   */\n  dup2\n    /* \"#utility.yul\":2096:2131   */\n  eq\n    /* \"#utility.yul\":2086:2149   */\n  tag_113\n  jumpi\n    /* \"#utility.yul\":2145:2146   */\n  0x00\n    /* \"#utility.yul\":2142:2143   */\n  dup1\n    /* \"#utility.yul\":2135:2147   */\n  revert\n    /* \"#utility.yul\":2086:2149   */\ntag_113:\n    /* \"#utility.yul\":2033:2155   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2161:2304   */\ntag_64:\n    /* \"#utility.yul\":2218:2223   */\n  0x00\n    /* \"#utility.yul\":2249:2255   */\n  dup2\n    /* \"#utility.yul\":2243:2256   */\n  mload\n    /* \"#utility.yul\":2234:2256   */\n  swap1\n  pop\n    /* \"#utility.yul\":2265:2298   */\n  tag_115\n    /* \"#utility.yul\":2292:2297   */\n  dup2\n    /* \"#utility.yul\":2265:2298   */\n  tag_63\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2161:2304   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2327:3059   */\ntag_65:\n    /* \"#utility.yul\":2434:2439   */\n  0x00\n    /* \"#utility.yul\":2459:2540   */\n  tag_117\n    /* \"#utility.yul\":2475:2539   */\n  tag_118\n    /* \"#utility.yul\":2532:2538   */\n  dup5\n    /* \"#utility.yul\":2475:2539   */\n  tag_59\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2459:2540   */\n  tag_58\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2450:2540   */\n  swap1\n  pop\n    /* \"#utility.yul\":2560:2565   */\n  dup1\n    /* \"#utility.yul\":2589:2595   */\n  dup4\n    /* \"#utility.yul\":2582:2587   */\n  dup3\n    /* \"#utility.yul\":2575:2596   */\n  mstore\n    /* \"#utility.yul\":2623:2627   */\n  0x20\n    /* \"#utility.yul\":2616:2621   */\n  dup3\n    /* \"#utility.yul\":2612:2628   */\n  add\n    /* \"#utility.yul\":2605:2628   */\n  swap1\n  pop\n    /* \"#utility.yul\":2676:2680   */\n  0x20\n    /* \"#utility.yul\":2668:2674   */\n  dup5\n    /* \"#utility.yul\":2664:2681   */\n  mul\n    /* \"#utility.yul\":2656:2662   */\n  dup4\n    /* \"#utility.yul\":2652:2682   */\n  add\n    /* \"#utility.yul\":2705:2708   */\n  dup6\n    /* \"#utility.yul\":2697:2703   */\n  dup2\n    /* \"#utility.yul\":2694:2709   */\n  gt\n    /* \"#utility.yul\":2691:2813   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":2724:2803   */\n  tag_120\n  tag_60\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":2691:2813   */\ntag_119:\n    /* \"#utility.yul\":2839:2845   */\n  dup4\n    /* \"#utility.yul\":2822:3053   */\ntag_121:\n    /* \"#utility.yul\":2856:2862   */\n  dup2\n    /* \"#utility.yul\":2851:2854   */\n  dup2\n    /* \"#utility.yul\":2848:2863   */\n  lt\n    /* \"#utility.yul\":2822:3053   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":2931:2934   */\n  dup1\n    /* \"#utility.yul\":2960:3008   */\n  tag_124\n    /* \"#utility.yul\":3004:3007   */\n  dup9\n    /* \"#utility.yul\":2992:3002   */\n  dup3\n    /* \"#utility.yul\":2960:3008   */\n  tag_64\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":2955:2958   */\n  dup5\n    /* \"#utility.yul\":2948:3009   */\n  mstore\n    /* \"#utility.yul\":3038:3042   */\n  0x20\n    /* \"#utility.yul\":3033:3036   */\n  dup5\n    /* \"#utility.yul\":3029:3043   */\n  add\n    /* \"#utility.yul\":3022:3043   */\n  swap4\n  pop\n    /* \"#utility.yul\":2898:3053   */\n  pop\n    /* \"#utility.yul\":2882:2886   */\n  0x20\n    /* \"#utility.yul\":2877:2880   */\n  dup2\n    /* \"#utility.yul\":2873:2887   */\n  add\n    /* \"#utility.yul\":2866:2887   */\n  swap1\n  pop\n    /* \"#utility.yul\":2822:3053   */\n  jump(tag_121)\ntag_123:\n    /* \"#utility.yul\":2826:2847   */\n  pop\n    /* \"#utility.yul\":2440:3059   */\n  pop\n  pop\n    /* \"#utility.yul\":2327:3059   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3082:3467   */\ntag_66:\n    /* \"#utility.yul\":3164:3169   */\n  0x00\n    /* \"#utility.yul\":3213:3216   */\n  dup3\n    /* \"#utility.yul\":3206:3210   */\n  0x1f\n    /* \"#utility.yul\":3198:3204   */\n  dup4\n    /* \"#utility.yul\":3194:3211   */\n  add\n    /* \"#utility.yul\":3190:3217   */\n  slt\n    /* \"#utility.yul\":3180:3302   */\n  tag_126\n  jumpi\n    /* \"#utility.yul\":3221:3300   */\n  tag_127\n  tag_54\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3180:3302   */\ntag_126:\n    /* \"#utility.yul\":3331:3337   */\n  dup2\n    /* \"#utility.yul\":3325:3338   */\n  mload\n    /* \"#utility.yul\":3356:3461   */\n  tag_128\n    /* \"#utility.yul\":3457:3460   */\n  dup5\n    /* \"#utility.yul\":3449:3455   */\n  dup3\n    /* \"#utility.yul\":3442:3446   */\n  0x20\n    /* \"#utility.yul\":3434:3440   */\n  dup7\n    /* \"#utility.yul\":3430:3447   */\n  add\n    /* \"#utility.yul\":3356:3461   */\n  tag_65\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":3347:3461   */\n  swap2\n  pop\n    /* \"#utility.yul\":3170:3467   */\n  pop\n    /* \"#utility.yul\":3082:3467   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3473:4027   */\ntag_6:\n    /* \"#utility.yul\":3568:3574   */\n  0x00\n    /* \"#utility.yul\":3617:3619   */\n  0x20\n    /* \"#utility.yul\":3605:3614   */\n  dup3\n    /* \"#utility.yul\":3596:3603   */\n  dup5\n    /* \"#utility.yul\":3592:3615   */\n  sub\n    /* \"#utility.yul\":3588:3620   */\n  slt\n    /* \"#utility.yul\":3585:3704   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":3623:3702   */\n  tag_131\n  tag_52\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3585:3704   */\ntag_130:\n    /* \"#utility.yul\":3764:3765   */\n  0x00\n    /* \"#utility.yul\":3753:3762   */\n  dup3\n    /* \"#utility.yul\":3749:3766   */\n  add\n    /* \"#utility.yul\":3743:3767   */\n  mload\n    /* \"#utility.yul\":3794:3812   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3786:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3813   */\n  gt\n    /* \"#utility.yul\":3780:3897   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":3816:3895   */\n  tag_133\n  tag_53\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3780:3897   */\ntag_132:\n    /* \"#utility.yul\":3921:4010   */\n  tag_134\n    /* \"#utility.yul\":4002:4009   */\n  dup5\n    /* \"#utility.yul\":3993:3999   */\n  dup3\n    /* \"#utility.yul\":3982:3991   */\n  dup6\n    /* \"#utility.yul\":3978:4000   */\n  add\n    /* \"#utility.yul\":3921:4010   */\n  tag_66\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":3911:4010   */\n  swap2\n  pop\n    /* \"#utility.yul\":3714:4020   */\n  pop\n    /* \"#utility.yul\":3473:4027   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4033:4132   */\ntag_67:\n    /* \"#utility.yul\":4085:4091   */\n  0x00\n    /* \"#utility.yul\":4119:4124   */\n  dup2\n    /* \"#utility.yul\":4113:4125   */\n  mload\n    /* \"#utility.yul\":4103:4125   */\n  swap1\n  pop\n    /* \"#utility.yul\":4033:4132   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4138:4318   */\ntag_68:\n    /* \"#utility.yul\":4186:4263   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4183:4184   */\n  0x00\n    /* \"#utility.yul\":4176:4264   */\n  mstore\n    /* \"#utility.yul\":4283:4287   */\n  0x22\n    /* \"#utility.yul\":4280:4281   */\n  0x04\n    /* \"#utility.yul\":4273:4288   */\n  mstore\n    /* \"#utility.yul\":4307:4311   */\n  0x24\n    /* \"#utility.yul\":4304:4305   */\n  0x00\n    /* \"#utility.yul\":4297:4312   */\n  revert\n    /* \"#utility.yul\":4324:4644   */\ntag_69:\n    /* \"#utility.yul\":4368:4374   */\n  0x00\n    /* \"#utility.yul\":4405:4406   */\n  0x02\n    /* \"#utility.yul\":4399:4403   */\n  dup3\n    /* \"#utility.yul\":4395:4407   */\n  div\n    /* \"#utility.yul\":4385:4407   */\n  swap1\n  pop\n    /* \"#utility.yul\":4452:4453   */\n  0x01\n    /* \"#utility.yul\":4446:4450   */\n  dup3\n    /* \"#utility.yul\":4442:4454   */\n  and\n    /* \"#utility.yul\":4473:4491   */\n  dup1\n    /* \"#utility.yul\":4463:4544   */\n  tag_138\n  jumpi\n    /* \"#utility.yul\":4529:4533   */\n  0x7f\n    /* \"#utility.yul\":4521:4527   */\n  dup3\n    /* \"#utility.yul\":4517:4534   */\n  and\n    /* \"#utility.yul\":4507:4534   */\n  swap2\n  pop\n    /* \"#utility.yul\":4463:4544   */\ntag_138:\n    /* \"#utility.yul\":4591:4593   */\n  0x20\n    /* \"#utility.yul\":4583:4589   */\n  dup3\n    /* \"#utility.yul\":4580:4594   */\n  lt\n    /* \"#utility.yul\":4560:4578   */\n  dup2\n    /* \"#utility.yul\":4557:4595   */\n  sub\n    /* \"#utility.yul\":4554:4638   */\n  tag_139\n  jumpi\n    /* \"#utility.yul\":4610:4628   */\n  tag_140\n  tag_68\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4554:4638   */\ntag_139:\n    /* \"#utility.yul\":4375:4644   */\n  pop\n    /* \"#utility.yul\":4324:4644   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4650:4791   */\ntag_70:\n    /* \"#utility.yul\":4699:4703   */\n  0x00\n    /* \"#utility.yul\":4722:4725   */\n  dup2\n    /* \"#utility.yul\":4714:4725   */\n  swap1\n  pop\n    /* \"#utility.yul\":4745:4748   */\n  dup2\n    /* \"#utility.yul\":4742:4743   */\n  0x00\n    /* \"#utility.yul\":4735:4749   */\n  mstore\n    /* \"#utility.yul\":4779:4783   */\n  0x20\n    /* \"#utility.yul\":4776:4777   */\n  0x00\n    /* \"#utility.yul\":4766:4784   */\n  keccak256\n    /* \"#utility.yul\":4758:4784   */\n  swap1\n  pop\n    /* \"#utility.yul\":4650:4791   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4797:4890   */\ntag_71:\n    /* \"#utility.yul\":4834:4840   */\n  0x00\n    /* \"#utility.yul\":4881:4883   */\n  0x20\n    /* \"#utility.yul\":4876:4878   */\n  0x1f\n    /* \"#utility.yul\":4869:4874   */\n  dup4\n    /* \"#utility.yul\":4865:4879   */\n  add\n    /* \"#utility.yul\":4861:4884   */\n  div\n    /* \"#utility.yul\":4851:4884   */\n  swap1\n  pop\n    /* \"#utility.yul\":4797:4890   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4896:5003   */\ntag_72:\n    /* \"#utility.yul\":4940:4948   */\n  0x00\n    /* \"#utility.yul\":4990:4995   */\n  dup3\n    /* \"#utility.yul\":4984:4988   */\n  dup3\n    /* \"#utility.yul\":4980:4996   */\n  shl\n    /* \"#utility.yul\":4959:4996   */\n  swap1\n  pop\n    /* \"#utility.yul\":4896:5003   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5009:5402   */\ntag_73:\n    /* \"#utility.yul\":5078:5084   */\n  0x00\n    /* \"#utility.yul\":5128:5129   */\n  0x08\n    /* \"#utility.yul\":5116:5126   */\n  dup4\n    /* \"#utility.yul\":5112:5130   */\n  mul\n    /* \"#utility.yul\":5151:5248   */\n  tag_145\n    /* \"#utility.yul\":5181:5247   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5170:5179   */\n  dup3\n    /* \"#utility.yul\":5151:5248   */\n  tag_72\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5269:5308   */\n  tag_146\n    /* \"#utility.yul\":5299:5307   */\n  dup7\n    /* \"#utility.yul\":5288:5297   */\n  dup4\n    /* \"#utility.yul\":5269:5308   */\n  tag_72\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5257:5308   */\n  swap6\n  pop\n    /* \"#utility.yul\":5341:5345   */\n  dup1\n    /* \"#utility.yul\":5337:5346   */\n  not\n    /* \"#utility.yul\":5330:5335   */\n  dup5\n    /* \"#utility.yul\":5326:5347   */\n  and\n    /* \"#utility.yul\":5317:5347   */\n  swap4\n  pop\n    /* \"#utility.yul\":5390:5394   */\n  dup1\n    /* \"#utility.yul\":5380:5388   */\n  dup7\n    /* \"#utility.yul\":5376:5395   */\n  and\n    /* \"#utility.yul\":5369:5374   */\n  dup5\n    /* \"#utility.yul\":5366:5396   */\n  or\n    /* \"#utility.yul\":5356:5396   */\n  swap3\n  pop\n    /* \"#utility.yul\":5085:5402   */\n  pop\n  pop\n    /* \"#utility.yul\":5009:5402   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5408:5485   */\ntag_74:\n    /* \"#utility.yul\":5445:5452   */\n  0x00\n    /* \"#utility.yul\":5474:5479   */\n  dup2\n    /* \"#utility.yul\":5463:5479   */\n  swap1\n  pop\n    /* \"#utility.yul\":5408:5485   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5491:5551   */\ntag_75:\n    /* \"#utility.yul\":5519:5522   */\n  0x00\n    /* \"#utility.yul\":5540:5545   */\n  dup2\n    /* \"#utility.yul\":5533:5545   */\n  swap1\n  pop\n    /* \"#utility.yul\":5491:5551   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5557:5699   */\ntag_76:\n    /* \"#utility.yul\":5607:5616   */\n  0x00\n    /* \"#utility.yul\":5640:5693   */\n  tag_150\n    /* \"#utility.yul\":5658:5692   */\n  tag_151\n    /* \"#utility.yul\":5667:5691   */\n  tag_152\n    /* \"#utility.yul\":5685:5690   */\n  dup5\n    /* \"#utility.yul\":5667:5691   */\n  tag_74\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5658:5692   */\n  tag_75\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5640:5693   */\n  tag_74\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":5627:5693   */\n  swap1\n  pop\n    /* \"#utility.yul\":5557:5699   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5705:5780   */\ntag_77:\n    /* \"#utility.yul\":5748:5751   */\n  0x00\n    /* \"#utility.yul\":5769:5774   */\n  dup2\n    /* \"#utility.yul\":5762:5774   */\n  swap1\n  pop\n    /* \"#utility.yul\":5705:5780   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5786:6055   */\ntag_78:\n    /* \"#utility.yul\":5896:5935   */\n  tag_155\n    /* \"#utility.yul\":5927:5934   */\n  dup4\n    /* \"#utility.yul\":5896:5935   */\n  tag_76\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":5957:6048   */\n  tag_156\n    /* \"#utility.yul\":6006:6047   */\n  tag_157\n    /* \"#utility.yul\":6030:6046   */\n  dup3\n    /* \"#utility.yul\":6006:6047   */\n  tag_77\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":5998:6004   */\n  dup5\n    /* \"#utility.yul\":5991:5995   */\n  dup5\n    /* \"#utility.yul\":5985:5996   */\n  sload\n    /* \"#utility.yul\":5957:6048   */\n  tag_73\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":5951:5955   */\n  dup3\n    /* \"#utility.yul\":5944:6049   */\n  sstore\n    /* \"#utility.yul\":5862:6055   */\n  pop\n    /* \"#utility.yul\":5786:6055   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6061:6134   */\ntag_79:\n    /* \"#utility.yul\":6106:6109   */\n  0x00\n    /* \"#utility.yul\":6061:6134   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6140:6329   */\ntag_80:\n    /* \"#utility.yul\":6217:6249   */\n  tag_160\n  tag_79\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6258:6323   */\n  tag_161\n    /* \"#utility.yul\":6316:6322   */\n  dup2\n    /* \"#utility.yul\":6308:6314   */\n  dup5\n    /* \"#utility.yul\":6302:6306   */\n  dup5\n    /* \"#utility.yul\":6258:6323   */\n  tag_78\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6193:6329   */\n  pop\n    /* \"#utility.yul\":6140:6329   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6335:6521   */\ntag_81:\n    /* \"#utility.yul\":6395:6515   */\ntag_163:\n    /* \"#utility.yul\":6412:6415   */\n  dup2\n    /* \"#utility.yul\":6405:6410   */\n  dup2\n    /* \"#utility.yul\":6402:6416   */\n  lt\n    /* \"#utility.yul\":6395:6515   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":6466:6505   */\n  tag_166\n    /* \"#utility.yul\":6503:6504   */\n  0x00\n    /* \"#utility.yul\":6496:6501   */\n  dup3\n    /* \"#utility.yul\":6466:6505   */\n  tag_80\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6439:6440   */\n  0x01\n    /* \"#utility.yul\":6432:6437   */\n  dup2\n    /* \"#utility.yul\":6428:6441   */\n  add\n    /* \"#utility.yul\":6419:6441   */\n  swap1\n  pop\n    /* \"#utility.yul\":6395:6515   */\n  jump(tag_163)\ntag_165:\n    /* \"#utility.yul\":6335:6521   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6527:7070   */\ntag_82:\n    /* \"#utility.yul\":6628:6630   */\n  0x1f\n    /* \"#utility.yul\":6623:6626   */\n  dup3\n    /* \"#utility.yul\":6620:6631   */\n  gt\n    /* \"#utility.yul\":6617:7063   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":6662:6700   */\n  tag_169\n    /* \"#utility.yul\":6694:6699   */\n  dup2\n    /* \"#utility.yul\":6662:6700   */\n  tag_70\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6746:6775   */\n  tag_170\n    /* \"#utility.yul\":6764:6774   */\n  dup5\n    /* \"#utility.yul\":6746:6775   */\n  tag_71\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":6736:6744   */\n  dup2\n    /* \"#utility.yul\":6732:6776   */\n  add\n    /* \"#utility.yul\":6929:6931   */\n  0x20\n    /* \"#utility.yul\":6917:6927   */\n  dup6\n    /* \"#utility.yul\":6914:6932   */\n  lt\n    /* \"#utility.yul\":6911:6960   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":6950:6958   */\n  dup2\n    /* \"#utility.yul\":6935:6958   */\n  swap1\n  pop\n    /* \"#utility.yul\":6911:6960   */\ntag_171:\n    /* \"#utility.yul\":6973:7053   */\n  tag_172\n    /* \"#utility.yul\":7029:7051   */\n  tag_173\n    /* \"#utility.yul\":7047:7050   */\n  dup6\n    /* \"#utility.yul\":7029:7051   */\n  tag_71\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":7019:7027   */\n  dup4\n    /* \"#utility.yul\":7015:7052   */\n  add\n    /* \"#utility.yul\":7002:7013   */\n  dup3\n    /* \"#utility.yul\":6973:7053   */\n  tag_81\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":6632:7063   */\n  pop\n  pop\n    /* \"#utility.yul\":6617:7063   */\ntag_168:\n    /* \"#utility.yul\":6527:7070   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7076:7193   */\ntag_83:\n    /* \"#utility.yul\":7130:7138   */\n  0x00\n    /* \"#utility.yul\":7180:7185   */\n  dup3\n    /* \"#utility.yul\":7174:7178   */\n  dup3\n    /* \"#utility.yul\":7170:7186   */\n  shr\n    /* \"#utility.yul\":7149:7186   */\n  swap1\n  pop\n    /* \"#utility.yul\":7076:7193   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7199:7368   */\ntag_84:\n    /* \"#utility.yul\":7243:7249   */\n  0x00\n    /* \"#utility.yul\":7276:7327   */\n  tag_176\n    /* \"#utility.yul\":7324:7325   */\n  0x00\n    /* \"#utility.yul\":7320:7326   */\n  not\n    /* \"#utility.yul\":7312:7317   */\n  dup5\n    /* \"#utility.yul\":7309:7310   */\n  0x08\n    /* \"#utility.yul\":7305:7318   */\n  mul\n    /* \"#utility.yul\":7276:7327   */\n  tag_83\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":7272:7328   */\n  not\n    /* \"#utility.yul\":7357:7361   */\n  dup1\n    /* \"#utility.yul\":7351:7355   */\n  dup4\n    /* \"#utility.yul\":7347:7362   */\n  and\n    /* \"#utility.yul\":7337:7362   */\n  swap2\n  pop\n    /* \"#utility.yul\":7250:7368   */\n  pop\n    /* \"#utility.yul\":7199:7368   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7373:7668   */\ntag_85:\n    /* \"#utility.yul\":7449:7453   */\n  0x00\n    /* \"#utility.yul\":7595:7624   */\n  tag_178\n    /* \"#utility.yul\":7620:7623   */\n  dup4\n    /* \"#utility.yul\":7614:7618   */\n  dup4\n    /* \"#utility.yul\":7595:7624   */\n  tag_84\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":7587:7624   */\n  swap2\n  pop\n    /* \"#utility.yul\":7657:7660   */\n  dup3\n    /* \"#utility.yul\":7654:7655   */\n  0x02\n    /* \"#utility.yul\":7650:7661   */\n  mul\n    /* \"#utility.yul\":7644:7648   */\n  dup3\n    /* \"#utility.yul\":7641:7662   */\n  or\n    /* \"#utility.yul\":7633:7662   */\n  swap1\n  pop\n    /* \"#utility.yul\":7373:7668   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7673:9068   */\ntag_13:\n    /* \"#utility.yul\":7790:7827   */\n  tag_180\n    /* \"#utility.yul\":7823:7826   */\n  dup3\n    /* \"#utility.yul\":7790:7827   */\n  tag_67\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":7892:7910   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7884:7890   */\n  dup2\n    /* \"#utility.yul\":7881:7911   */\n  gt\n    /* \"#utility.yul\":7878:7934   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":7914:7932   */\n  tag_182\n  tag_56\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7878:7934   */\ntag_181:\n    /* \"#utility.yul\":7958:7996   */\n  tag_183\n    /* \"#utility.yul\":7990:7994   */\n  dup3\n    /* \"#utility.yul\":7984:7995   */\n  sload\n    /* \"#utility.yul\":7958:7996   */\n  tag_69\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":8043:8110   */\n  tag_184\n    /* \"#utility.yul\":8103:8109   */\n  dup3\n    /* \"#utility.yul\":8095:8101   */\n  dup3\n    /* \"#utility.yul\":8089:8093   */\n  dup6\n    /* \"#utility.yul\":8043:8110   */\n  tag_82\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8137:8138   */\n  0x00\n    /* \"#utility.yul\":8161:8165   */\n  0x20\n    /* \"#utility.yul\":8148:8165   */\n  swap1\n  pop\n    /* \"#utility.yul\":8193:8195   */\n  0x1f\n    /* \"#utility.yul\":8185:8191   */\n  dup4\n    /* \"#utility.yul\":8182:8196   */\n  gt\n    /* \"#utility.yul\":8210:8211   */\n  0x01\n    /* \"#utility.yul\":8205:8823   */\n  dup2\n  eq\n  tag_186\n  jumpi\n    /* \"#utility.yul\":8867:8868   */\n  0x00\n    /* \"#utility.yul\":8884:8890   */\n  dup5\n    /* \"#utility.yul\":8881:8958   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":8933:8942   */\n  dup3\n    /* \"#utility.yul\":8928:8931   */\n  dup8\n    /* \"#utility.yul\":8924:8943   */\n  add\n    /* \"#utility.yul\":8918:8944   */\n  mload\n    /* \"#utility.yul\":8909:8944   */\n  swap1\n  pop\n    /* \"#utility.yul\":8881:8958   */\ntag_187:\n    /* \"#utility.yul\":8984:9051   */\n  tag_188\n    /* \"#utility.yul\":9044:9050   */\n  dup6\n    /* \"#utility.yul\":9037:9042   */\n  dup3\n    /* \"#utility.yul\":8984:9051   */\n  tag_85\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":8978:8982   */\n  dup7\n    /* \"#utility.yul\":8971:9052   */\n  sstore\n    /* \"#utility.yul\":8840:9062   */\n  pop\n    /* \"#utility.yul\":8175:9062   */\n  jump(tag_185)\n    /* \"#utility.yul\":8205:8823   */\ntag_186:\n    /* \"#utility.yul\":8257:8261   */\n  0x1f\n    /* \"#utility.yul\":8253:8262   */\n  not\n    /* \"#utility.yul\":8245:8251   */\n  dup5\n    /* \"#utility.yul\":8241:8263   */\n  and\n    /* \"#utility.yul\":8291:8328   */\n  tag_189\n    /* \"#utility.yul\":8323:8327   */\n  dup7\n    /* \"#utility.yul\":8291:8328   */\n  tag_70\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8350:8351   */\n  0x00\n    /* \"#utility.yul\":8364:8572   */\ntag_190:\n    /* \"#utility.yul\":8378:8385   */\n  dup3\n    /* \"#utility.yul\":8375:8376   */\n  dup2\n    /* \"#utility.yul\":8372:8386   */\n  lt\n    /* \"#utility.yul\":8364:8572   */\n  iszero\n  tag_192\n  jumpi\n    /* \"#utility.yul\":8457:8466   */\n  dup5\n    /* \"#utility.yul\":8452:8455   */\n  dup10\n    /* \"#utility.yul\":8448:8467   */\n  add\n    /* \"#utility.yul\":8442:8468   */\n  mload\n    /* \"#utility.yul\":8434:8440   */\n  dup3\n    /* \"#utility.yul\":8427:8469   */\n  sstore\n    /* \"#utility.yul\":8508:8509   */\n  0x01\n    /* \"#utility.yul\":8500:8506   */\n  dup3\n    /* \"#utility.yul\":8496:8510   */\n  add\n    /* \"#utility.yul\":8486:8510   */\n  swap2\n  pop\n    /* \"#utility.yul\":8555:8557   */\n  0x20\n    /* \"#utility.yul\":8544:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8558   */\n  add\n    /* \"#utility.yul\":8527:8558   */\n  swap5\n  pop\n    /* \"#utility.yul\":8401:8405   */\n  0x20\n    /* \"#utility.yul\":8398:8399   */\n  dup2\n    /* \"#utility.yul\":8394:8406   */\n  add\n    /* \"#utility.yul\":8389:8406   */\n  swap1\n  pop\n    /* \"#utility.yul\":8364:8572   */\n  jump(tag_190)\ntag_192:\n    /* \"#utility.yul\":8600:8606   */\n  dup7\n    /* \"#utility.yul\":8591:8598   */\n  dup4\n    /* \"#utility.yul\":8588:8607   */\n  lt\n    /* \"#utility.yul\":8585:8764   */\n  iszero\n  tag_193\n  jumpi\n    /* \"#utility.yul\":8658:8667   */\n  dup5\n    /* \"#utility.yul\":8653:8656   */\n  dup10\n    /* \"#utility.yul\":8649:8668   */\n  add\n    /* \"#utility.yul\":8643:8669   */\n  mload\n    /* \"#utility.yul\":8701:8749   */\n  tag_194\n    /* \"#utility.yul\":8743:8747   */\n  0x1f\n    /* \"#utility.yul\":8735:8741   */\n  dup10\n    /* \"#utility.yul\":8731:8748   */\n  and\n    /* \"#utility.yul\":8720:8729   */\n  dup3\n    /* \"#utility.yul\":8701:8749   */\n  tag_84\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":8693:8699   */\n  dup4\n    /* \"#utility.yul\":8686:8750   */\n  sstore\n    /* \"#utility.yul\":8608:8764   */\n  pop\n    /* \"#utility.yul\":8585:8764   */\ntag_193:\n    /* \"#utility.yul\":8810:8811   */\n  0x01\n    /* \"#utility.yul\":8806:8807   */\n  0x02\n    /* \"#utility.yul\":8798:8804   */\n  dup9\n    /* \"#utility.yul\":8794:8808   */\n  mul\n    /* \"#utility.yul\":8790:8812   */\n  add\n    /* \"#utility.yul\":8784:8788   */\n  dup9\n    /* \"#utility.yul\":8777:8813   */\n  sstore\n    /* \"#utility.yul\":8212:8823   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8175:9062   */\ntag_185:\n  pop\n    /* \"#utility.yul\":7765:9068   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7673:9068   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9074:9192   */\ntag_86:\n    /* \"#utility.yul\":9161:9185   */\n  tag_196\n    /* \"#utility.yul\":9179:9184   */\n  dup2\n    /* \"#utility.yul\":9161:9185   */\n  tag_62\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9156:9159   */\n  dup3\n    /* \"#utility.yul\":9149:9186   */\n  mstore\n    /* \"#utility.yul\":9074:9192   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9198:9420   */\ntag_18:\n    /* \"#utility.yul\":9291:9295   */\n  0x00\n    /* \"#utility.yul\":9329:9331   */\n  0x20\n    /* \"#utility.yul\":9318:9327   */\n  dup3\n    /* \"#utility.yul\":9314:9332   */\n  add\n    /* \"#utility.yul\":9306:9332   */\n  swap1\n  pop\n    /* \"#utility.yul\":9342:9413   */\n  tag_198\n    /* \"#utility.yul\":9410:9411   */\n  0x00\n    /* \"#utility.yul\":9399:9408   */\n  dup4\n    /* \"#utility.yul\":9395:9412   */\n  add\n    /* \"#utility.yul\":9386:9392   */\n  dup5\n    /* \"#utility.yul\":9342:9413   */\n  tag_86\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9198:9420   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9426:9606   */\ntag_30:\n    /* \"#utility.yul\":9474:9551   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9471:9472   */\n  0x00\n    /* \"#utility.yul\":9464:9552   */\n  mstore\n    /* \"#utility.yul\":9571:9575   */\n  0x32\n    /* \"#utility.yul\":9568:9569   */\n  0x04\n    /* \"#utility.yul\":9561:9576   */\n  mstore\n    /* \"#utility.yul\":9595:9599   */\n  0x24\n    /* \"#utility.yul\":9592:9593   */\n  0x00\n    /* \"#utility.yul\":9585:9600   */\n  revert\n    /* \"#utility.yul\":9612:9792   */\ntag_87:\n    /* \"#utility.yul\":9660:9737   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9657:9658   */\n  0x00\n    /* \"#utility.yul\":9650:9738   */\n  mstore\n    /* \"#utility.yul\":9757:9761   */\n  0x11\n    /* \"#utility.yul\":9754:9755   */\n  0x04\n    /* \"#utility.yul\":9747:9762   */\n  mstore\n    /* \"#utility.yul\":9781:9785   */\n  0x24\n    /* \"#utility.yul\":9778:9779   */\n  0x00\n    /* \"#utility.yul\":9771:9786   */\n  revert\n    /* \"#utility.yul\":9798:9989   */\ntag_42:\n    /* \"#utility.yul\":9838:9841   */\n  0x00\n    /* \"#utility.yul\":9857:9877   */\n  tag_202\n    /* \"#utility.yul\":9875:9876   */\n  dup3\n    /* \"#utility.yul\":9857:9877   */\n  tag_74\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":9852:9877   */\n  swap2\n  pop\n    /* \"#utility.yul\":9891:9911   */\n  tag_203\n    /* \"#utility.yul\":9909:9910   */\n  dup4\n    /* \"#utility.yul\":9891:9911   */\n  tag_74\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":9886:9911   */\n  swap3\n  pop\n    /* \"#utility.yul\":9934:9935   */\n  dup3\n    /* \"#utility.yul\":9931:9932   */\n  dup3\n    /* \"#utility.yul\":9927:9936   */\n  add\n    /* \"#utility.yul\":9920:9936   */\n  swap1\n  pop\n    /* \"#utility.yul\":9955:9958   */\n  dup1\n    /* \"#utility.yul\":9952:9953   */\n  dup3\n    /* \"#utility.yul\":9949:9959   */\n  gt\n    /* \"#utility.yul\":9946:9982   */\n  iszero\n  tag_204\n  jumpi\n    /* \"#utility.yul\":9962:9980   */\n  tag_205\n  tag_87\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":9946:9982   */\ntag_204:\n    /* \"#utility.yul\":9798:9989   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9995:10113   */\ntag_88:\n    /* \"#utility.yul\":10082:10106   */\n  tag_207\n    /* \"#utility.yul\":10100:10105   */\n  dup2\n    /* \"#utility.yul\":10082:10106   */\n  tag_74\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":10077:10080   */\n  dup3\n    /* \"#utility.yul\":10070:10107   */\n  mstore\n    /* \"#utility.yul\":9995:10113   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10119:10561   */\ntag_46:\n    /* \"#utility.yul\":10268:10272   */\n  0x00\n    /* \"#utility.yul\":10306:10308   */\n  0x60\n    /* \"#utility.yul\":10295:10304   */\n  dup3\n    /* \"#utility.yul\":10291:10309   */\n  add\n    /* \"#utility.yul\":10283:10309   */\n  swap1\n  pop\n    /* \"#utility.yul\":10319:10390   */\n  tag_209\n    /* \"#utility.yul\":10387:10388   */\n  0x00\n    /* \"#utility.yul\":10376:10385   */\n  dup4\n    /* \"#utility.yul\":10372:10389   */\n  add\n    /* \"#utility.yul\":10363:10369   */\n  dup7\n    /* \"#utility.yul\":10319:10390   */\n  tag_86\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10400:10472   */\n  tag_210\n    /* \"#utility.yul\":10468:10470   */\n  0x20\n    /* \"#utility.yul\":10457:10466   */\n  dup4\n    /* \"#utility.yul\":10453:10471   */\n  add\n    /* \"#utility.yul\":10444:10450   */\n  dup6\n    /* \"#utility.yul\":10400:10472   */\n  tag_88\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":10482:10554   */\n  tag_211\n    /* \"#utility.yul\":10550:10552   */\n  0x40\n    /* \"#utility.yul\":10539:10548   */\n  dup4\n    /* \"#utility.yul\":10535:10553   */\n  add\n    /* \"#utility.yul\":10526:10532   */\n  dup5\n    /* \"#utility.yul\":10482:10554   */\n  tag_88\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":10119:10561   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10567:10789   */\ntag_50:\n    /* \"#utility.yul\":10660:10664   */\n  0x00\n    /* \"#utility.yul\":10698:10700   */\n  0x20\n    /* \"#utility.yul\":10687:10696   */\n  dup3\n    /* \"#utility.yul\":10683:10701   */\n  add\n    /* \"#utility.yul\":10675:10701   */\n  swap1\n  pop\n    /* \"#utility.yul\":10711:10782   */\n  tag_213\n    /* \"#utility.yul\":10779:10780   */\n  0x00\n    /* \"#utility.yul\":10768:10777   */\n  dup4\n    /* \"#utility.yul\":10764:10781   */\n  add\n    /* \"#utility.yul\":10755:10761   */\n  dup5\n    /* \"#utility.yul\":10711:10782   */\n  tag_88\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":10567:10789   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/bettoken.sol\":367:8658  contract Bettoken is ERC20, Ownable, ReentrancyGuard {... */\ntag_32:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/bettoken.sol\":367:8658  contract Bettoken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xc040e6b8\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xc552e04b\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xe6bd92b9\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_40\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0xa9059cbb\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xb0e68630\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xb68ed11f\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xba20cf4c\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xbda95633\n      eq\n      tag_35\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x8f7713ff\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x8f7713ff\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x920168b3\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x95ccea67\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x715018a6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x7547c7a3\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8e15f473\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x2b1cbc38\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x40f02ab6\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x40f02ab6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x54dd1da4\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x55dd574c\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x5fb3b944\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x2b1cbc38\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x32c85ac0\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x338dbf59\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x3610724e\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x1514617e\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x1514617e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x192399d1\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x24600fc3\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0fe83bb8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x10c7f0b9\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/bettoken.sol\":8606:8649  revert(\"Direct ETH transfers not allowed.\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/bettoken.sol\":367:8658  contract Bettoken is ERC20, Ownable, ReentrancyGuard {... */\n    tag_2:\n        /* \"contracts/bettoken.sol\":8513:8556  revert(\"Direct ETH transfers not allowed.\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_51\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1082:1135  uint256 public preSaleTokens = 161_164_236 * 10 ** 18 */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1720:1761  AggregatorV3Interface[] public priceFeeds */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1609:1650  uint256 public vestingDuration = 180 days */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1495:1544  mapping(address => uint256) public vestingBalance */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":8268:8469  function withdrawFunds() external onlyOwner nonReentrant {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      stop\n        /* \"contracts/bettoken.sol\":1550:1603  mapping(address => uint256) public vestingReleaseTime */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":7791:8050  function haltSales() external onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      stop\n        /* \"contracts/bettoken.sol\":3083:3490  function startPrivateSale() external onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      stop\n        /* \"contracts/bettoken.sol\":3843:5389  function buyTokens(uint256 usdAmount) external payable nonReentrant {... */\n    tag_16:\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      stop\n        /* \"contracts/bettoken.sol\":1664:1703  uint256 public stakeDuration = 365 days */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":7311:7785  function releaseVestedTokens() external nonReentrant {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      stop\n        /* \"contracts/bettoken.sol\":3496:3837  function startPreSale() external onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      stop\n        /* \"contracts/bettoken.sol\":926:966  uint256 public privateSaleSoldTokens = 0 */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      stop\n        /* \"contracts/bettoken.sol\":6794:7305  function stakeTokens(uint256 amount) external onlyOwner nonReentrant {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n    tag_144:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":2564:3077  function getLatestPrice() public view returns (uint256) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1242:1289  uint256 public preSaleEndPrice = 0.1 * 10 ** 18 */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":459:520  uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18 */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_161\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1161:1213  uint256 public preSaleStartPrice = 0.0505 * 10 ** 18 */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      tag_167\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":8056:8262  function emergencyWithdraw(address tokenAddress, uint256 amount) external onlyOwner nonReentrant {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      tag_169\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_170:\n      tag_171\n      jump\t// in\n    tag_169:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      tag_173\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      tag_175\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      pop\n      tag_177\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_178\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_178:\n      tag_179\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      tag_180\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":760:815  uint256 public privateSaleStartPrice = 0.001 * 10 ** 18 */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      tag_182\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      tag_184\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1315:1351  uint256 public preSaleSoldTokens = 0 */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      tag_186\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      tag_188\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":594:649  uint256 public privateSaleTarget = 1_000_000 * 10 ** 18 */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      tag_190\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      tag_192\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":843:897  uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18 */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      tag_194\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      tag_196\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1423:1462  SaleStage public stage = SaleStage.NONE */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      tag_198\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":679:735  uint256 public privateSaleTokens = 38_835_764 * 10 ** 18 */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_202\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_202:\n      pop\n      tag_203\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      tag_205\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      tag_207\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      tag_210\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":999:1051  uint256 public preSaleTarget = 19_000_000 * 10 ** 18 */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_212\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_212:\n      pop\n      tag_213\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      tag_215\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      tag_217\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_218\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_218:\n      tag_219\n      jump\t// in\n    tag_217:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_221\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_223\n      swap1\n      tag_222\n      jump\t// in\n    tag_223:\n      dup1\n      iszero\n      tag_224\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_225\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_224)\n    tag_225:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_226:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_226\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1082:1135  uint256 public preSaleTokens = 161_164_236 * 10 ** 18 */\n    tag_69:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1720:1761  AggregatorV3Interface[] public priceFeeds */\n    tag_76:\n      0x16\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_232\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_232:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1609:1650  uint256 public vestingDuration = 180 days */\n    tag_81:\n      sload(0x14)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1495:1544  mapping(address => uint256) public vestingBalance */\n    tag_91:\n      mstore(0x20, 0x12)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":8268:8469  function withdrawFunds() external onlyOwner nonReentrant {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_245\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_246\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_245:\n        /* \"contracts/bettoken.sol\":8335:8349  uint256 amount */\n      0x00\n        /* \"contracts/bettoken.sol\":8352:8373  address(this).balance */\n      selfbalance\n        /* \"contracts/bettoken.sol\":8335:8373  uint256 amount = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":8391:8398  owner() */\n      tag_248\n        /* \"contracts/bettoken.sol\":8391:8396  owner */\n      tag_149\n        /* \"contracts/bettoken.sol\":8391:8398  owner() */\n      jump\t// in\n    tag_248:\n        /* \"contracts/bettoken.sol\":8383:8408  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/bettoken.sol\":8383:8416  payable(owner()).transfer(amount) */\n      0x08fc\n        /* \"contracts/bettoken.sol\":8409:8415  amount */\n      dup3\n        /* \"contracts/bettoken.sol\":8383:8416  payable(owner()).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_250\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_250:\n      pop\n        /* \"contracts/bettoken.sol\":8446:8453  owner() */\n      tag_251\n        /* \"contracts/bettoken.sol\":8446:8451  owner */\n      tag_149\n        /* \"contracts/bettoken.sol\":8446:8453  owner() */\n      jump\t// in\n    tag_251:\n        /* \"contracts/bettoken.sol\":8431:8462  FundsWithdrawn(owner(), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xeaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d\n        /* \"contracts/bettoken.sol\":8455:8461  amount */\n      dup3\n        /* \"contracts/bettoken.sol\":8431:8462  FundsWithdrawn(owner(), amount) */\n      mload(0x40)\n      tag_252\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/bettoken.sol\":8325:8469  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_253\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_254\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_253:\n        /* \"contracts/bettoken.sol\":8268:8469  function withdrawFunds() external onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1550:1603  mapping(address => uint256) public vestingReleaseTime */\n    tag_105:\n      mstore(0x20, 0x13)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bettoken.sol\":7791:8050  function haltSales() external onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_257:\n        /* \"contracts/bettoken.sol\":7874:7891  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":7849:7870  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":7849:7891  privateSaleSoldTokens == privateSaleTokens */\n      eq\n        /* \"contracts/bettoken.sol\":7849:7929  privateSaleSoldTokens == privateSaleTokens || preSaleSoldTokens == preSaleTokens */\n      dup1\n      tag_259\n      jumpi\n      pop\n        /* \"contracts/bettoken.sol\":7916:7929  preSaleTokens */\n      sload(0x0d)\n        /* \"contracts/bettoken.sol\":7895:7912  preSaleSoldTokens */\n      sload(0x10)\n        /* \"contracts/bettoken.sol\":7895:7929  preSaleSoldTokens == preSaleTokens */\n      eq\n        /* \"contracts/bettoken.sol\":7849:7929  privateSaleSoldTokens == privateSaleTokens || preSaleSoldTokens == preSaleTokens */\n    tag_259:\n        /* \"contracts/bettoken.sol\":7841:7977  require(privateSaleSoldTokens == privateSaleTokens || preSaleSoldTokens == preSaleTokens, ... */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_260:\n        /* \"contracts/bettoken.sol\":7995:8009  SaleStage.NONE */\n      0x00\n        /* \"contracts/bettoken.sol\":7987:7992  stage */\n      0x11\n      0x00\n        /* \"contracts/bettoken.sol\":7987:8009  stage = SaleStage.NONE */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_263\n      jumpi\n      tag_264\n      tag_265\n      jump\t// in\n    tag_264:\n    tag_263:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":8024:8043  StageChanged(stage) */\n      0x273467821f33675618854603ef917ebcec8a1a39f95c43d5564ed1aefab870b3\n        /* \"contracts/bettoken.sol\":8037:8042  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":8024:8043  StageChanged(stage) */\n      mload(0x40)\n      tag_266\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/bettoken.sol\":7791:8050  function haltSales() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":3083:3490  function startPrivateSale() external onlyOwner {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_268:\n        /* \"contracts/bettoken.sol\":3157:3171  SaleStage.NONE */\n      0x00\n        /* \"contracts/bettoken.sol\":3148:3171  stage == SaleStage.NONE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_270\n      jumpi\n      tag_271\n      tag_265\n      jump\t// in\n    tag_271:\n    tag_270:\n        /* \"contracts/bettoken.sol\":3148:3153  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":3148:3171  stage == SaleStage.NONE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_272\n      jumpi\n      tag_273\n      tag_265\n      jump\t// in\n    tag_273:\n    tag_272:\n      eq\n        /* \"contracts/bettoken.sol\":3140:3220  require(stage == SaleStage.NONE, \"Private Sale can only start from NONE stage.\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"contracts/bettoken.sol\":3263:3264  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":3238:3259  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":3238:3264  privateSaleSoldTokens == 0 */\n      eq\n        /* \"contracts/bettoken.sol\":3230:3315  require(privateSaleSoldTokens == 0, \"Private Sale tokens should be unsold at start.\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"contracts/bettoken.sol\":3354:3355  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":3333:3350  preSaleSoldTokens */\n      sload(0x10)\n        /* \"contracts/bettoken.sol\":3333:3355  preSaleSoldTokens == 0 */\n      eq\n        /* \"contracts/bettoken.sol\":3325:3413  require(preSaleSoldTokens == 0, \"Pre-Sale should not have started before Private Sale.\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"contracts/bettoken.sol\":3432:3449  SaleStage.PRIVATE */\n      0x01\n        /* \"contracts/bettoken.sol\":3424:3429  stage */\n      0x11\n      0x00\n        /* \"contracts/bettoken.sol\":3424:3449  stage = SaleStage.PRIVATE */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_283\n      jumpi\n      tag_284\n      tag_265\n      jump\t// in\n    tag_284:\n    tag_283:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":3464:3483  StageChanged(stage) */\n      0x273467821f33675618854603ef917ebcec8a1a39f95c43d5564ed1aefab870b3\n        /* \"contracts/bettoken.sol\":3477:3482  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":3464:3483  StageChanged(stage) */\n      mload(0x40)\n      tag_285\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/bettoken.sol\":3083:3490  function startPrivateSale() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":3843:5389  function buyTokens(uint256 usdAmount) external payable nonReentrant {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_287\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_246\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_287:\n        /* \"contracts/bettoken.sol\":3938:3952  SaleStage.NONE */\n      0x00\n        /* \"contracts/bettoken.sol\":3929:3952  stage != SaleStage.NONE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_289\n      jumpi\n      tag_290\n      tag_265\n      jump\t// in\n    tag_290:\n    tag_289:\n        /* \"contracts/bettoken.sol\":3929:3934  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":3929:3952  stage != SaleStage.NONE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_291\n      jumpi\n      tag_292\n      tag_265\n      jump\t// in\n    tag_292:\n    tag_291:\n      sub\n        /* \"contracts/bettoken.sol\":3921:3975  require(stage != SaleStage.NONE, \"No sale is active.\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_293:\n        /* \"contracts/bettoken.sol\":3986:4005  uint256 latestPrice */\n      0x00\n        /* \"contracts/bettoken.sol\":4008:4024  getLatestPrice() */\n      tag_296\n        /* \"contracts/bettoken.sol\":4008:4022  getLatestPrice */\n      tag_154\n        /* \"contracts/bettoken.sol\":4008:4024  getLatestPrice() */\n      jump\t// in\n    tag_296:\n        /* \"contracts/bettoken.sol\":3986:4024  uint256 latestPrice = getLatestPrice() */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":4056:4057  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":4042:4053  latestPrice */\n      dup2\n        /* \"contracts/bettoken.sol\":4042:4057  latestPrice > 0 */\n      gt\n        /* \"contracts/bettoken.sol\":4034:4087  require(latestPrice > 0, \"Invalid price from oracle\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_297:\n        /* \"contracts/bettoken.sol\":4098:4117  uint256 tokensToBuy */\n      0x00\n        /* \"contracts/bettoken.sol\":4140:4157  SaleStage.PRIVATE */\n      0x01\n        /* \"contracts/bettoken.sol\":4131:4157  stage == SaleStage.PRIVATE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_300\n      jumpi\n      tag_301\n      tag_265\n      jump\t// in\n    tag_301:\n    tag_300:\n        /* \"contracts/bettoken.sol\":4131:4136  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":4131:4157  stage == SaleStage.PRIVATE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_302\n      jumpi\n      tag_303\n      tag_265\n      jump\t// in\n    tag_303:\n    tag_302:\n      sub\n        /* \"contracts/bettoken.sol\":4127:5383  if (stage == SaleStage.PRIVATE) {... */\n      tag_304\n      jumpi\n        /* \"contracts/bettoken.sol\":4205:4222  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":4181:4202  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":4181:4222  privateSaleSoldTokens < privateSaleTokens */\n      lt\n        /* \"contracts/bettoken.sol\":4173:4249  require(privateSaleSoldTokens < privateSaleTokens, \"Private Sale sold out.\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap1\n      tag_307\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_305:\n        /* \"contracts/bettoken.sol\":4277:4344  calculatePrivateSaleTokens(usdAmount.mul(latestPrice).div(1 ether)) */\n      tag_308\n        /* \"contracts/bettoken.sol\":4304:4343  usdAmount.mul(latestPrice).div(1 ether) */\n      tag_309\n        /* \"contracts/bettoken.sol\":4335:4342  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/bettoken.sol\":4304:4330  usdAmount.mul(latestPrice) */\n      tag_310\n        /* \"contracts/bettoken.sol\":4318:4329  latestPrice */\n      dup6\n        /* \"contracts/bettoken.sol\":4304:4313  usdAmount */\n      dup8\n        /* \"contracts/bettoken.sol\":4304:4317  usdAmount.mul */\n      tag_311\n      swap1\n        /* \"contracts/bettoken.sol\":4304:4330  usdAmount.mul(latestPrice) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_310:\n        /* \"contracts/bettoken.sol\":4304:4334  usdAmount.mul(latestPrice).div */\n      tag_312\n      swap1\n        /* \"contracts/bettoken.sol\":4304:4343  usdAmount.mul(latestPrice).div(1 ether) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_309:\n        /* \"contracts/bettoken.sol\":4277:4303  calculatePrivateSaleTokens */\n      tag_313\n        /* \"contracts/bettoken.sol\":4277:4344  calculatePrivateSaleTokens(usdAmount.mul(latestPrice).div(1 ether)) */\n      jump\t// in\n    tag_308:\n        /* \"contracts/bettoken.sol\":4263:4344  tokensToBuy = calculatePrivateSaleTokens(usdAmount.mul(latestPrice).div(1 ether)) */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":4382:4420  privateSaleSoldTokens.add(tokensToBuy) */\n      tag_314\n        /* \"contracts/bettoken.sol\":4408:4419  tokensToBuy */\n      dup2\n        /* \"contracts/bettoken.sol\":4382:4403  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":4382:4407  privateSaleSoldTokens.add */\n      tag_315\n      swap1\n        /* \"contracts/bettoken.sol\":4382:4420  privateSaleSoldTokens.add(tokensToBuy) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_314:\n        /* \"contracts/bettoken.sol\":4358:4379  privateSaleSoldTokens */\n      0x0b\n        /* \"contracts/bettoken.sol\":4358:4420  privateSaleSoldTokens = privateSaleSoldTokens.add(tokensToBuy) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":4467:4484  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":4442:4463  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":4442:4484  privateSaleSoldTokens <= privateSaleTokens */\n      gt\n      iszero\n        /* \"contracts/bettoken.sol\":4434:4522  require(privateSaleSoldTokens <= privateSaleTokens, \"Exceeds Private Sale token limit.\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap1\n      tag_318\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_316:\n        /* \"contracts/bettoken.sol\":4565:4608  vestingBalance[msg.sender].add(tokensToBuy) */\n      tag_319\n        /* \"contracts/bettoken.sol\":4596:4607  tokensToBuy */\n      dup2\n        /* \"contracts/bettoken.sol\":4565:4579  vestingBalance */\n      0x12\n        /* \"contracts/bettoken.sol\":4565:4591  vestingBalance[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":4580:4590  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":4565:4591  vestingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/bettoken.sol\":4565:4595  vestingBalance[msg.sender].add */\n      tag_315\n      swap1\n        /* \"contracts/bettoken.sol\":4565:4608  vestingBalance[msg.sender].add(tokensToBuy) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_319:\n        /* \"contracts/bettoken.sol\":4536:4550  vestingBalance */\n      0x12\n        /* \"contracts/bettoken.sol\":4536:4562  vestingBalance[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":4551:4561  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":4536:4562  vestingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bettoken.sol\":4536:4608  vestingBalance[msg.sender] = vestingBalance[msg.sender].add(tokensToBuy) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":4655:4710  block.timestamp.add(stakeDuration).add(vestingDuration) */\n      tag_320\n        /* \"contracts/bettoken.sol\":4694:4709  vestingDuration */\n      sload(0x14)\n        /* \"contracts/bettoken.sol\":4655:4689  block.timestamp.add(stakeDuration) */\n      tag_321\n        /* \"contracts/bettoken.sol\":4675:4688  stakeDuration */\n      sload(0x15)\n        /* \"contracts/bettoken.sol\":4655:4670  block.timestamp */\n      timestamp\n        /* \"contracts/bettoken.sol\":4655:4674  block.timestamp.add */\n      tag_315\n      swap1\n        /* \"contracts/bettoken.sol\":4655:4689  block.timestamp.add(stakeDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_321:\n        /* \"contracts/bettoken.sol\":4655:4693  block.timestamp.add(stakeDuration).add */\n      tag_315\n      swap1\n        /* \"contracts/bettoken.sol\":4655:4710  block.timestamp.add(stakeDuration).add(vestingDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_320:\n        /* \"contracts/bettoken.sol\":4622:4640  vestingReleaseTime */\n      0x13\n        /* \"contracts/bettoken.sol\":4622:4652  vestingReleaseTime[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":4641:4651  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":4622:4652  vestingReleaseTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bettoken.sol\":4622:4710  vestingReleaseTime[msg.sender] = block.timestamp.add(stakeDuration).add(vestingDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":4741:4751  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":4729:4765  PrivateSale(msg.sender, tokensToBuy) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8fa81bb0702332ea2a0aee44bb9e4d359cf4a2c5a820dd59d9129369bdbca73f\n        /* \"contracts/bettoken.sol\":4753:4764  tokensToBuy */\n      dup3\n        /* \"contracts/bettoken.sol\":4729:4765  PrivateSale(msg.sender, tokensToBuy) */\n      mload(0x40)\n      tag_322\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/bettoken.sol\":4127:5383  if (stage == SaleStage.PRIVATE) {... */\n      jump(tag_323)\n    tag_304:\n        /* \"contracts/bettoken.sol\":4795:4812  SaleStage.PRESALE */\n      0x02\n        /* \"contracts/bettoken.sol\":4786:4812  stage == SaleStage.PRESALE */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_324\n      jumpi\n      tag_325\n      tag_265\n      jump\t// in\n    tag_325:\n    tag_324:\n        /* \"contracts/bettoken.sol\":4786:4791  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":4786:4812  stage == SaleStage.PRESALE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_326\n      jumpi\n      tag_327\n      tag_265\n      jump\t// in\n    tag_327:\n    tag_326:\n      sub\n        /* \"contracts/bettoken.sol\":4782:5383  if (stage == SaleStage.PRESALE) {... */\n      tag_328\n      jumpi\n        /* \"contracts/bettoken.sol\":4856:4869  preSaleTokens */\n      sload(0x0d)\n        /* \"contracts/bettoken.sol\":4836:4853  preSaleSoldTokens */\n      sload(0x10)\n        /* \"contracts/bettoken.sol\":4836:4869  preSaleSoldTokens < preSaleTokens */\n      lt\n        /* \"contracts/bettoken.sol\":4828:4892  require(preSaleSoldTokens < preSaleTokens, \"Pre-Sale sold out.\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_330\n      swap1\n      tag_331\n      jump\t// in\n    tag_330:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_329:\n        /* \"contracts/bettoken.sol\":4927:4941  100 * 10 ** 18 */\n      0x056bc75e2d63100000\n        /* \"contracts/bettoken.sol\":4914:4923  usdAmount */\n      dup4\n        /* \"contracts/bettoken.sol\":4914:4941  usdAmount >= 100 * 10 ** 18 */\n      lt\n      iszero\n        /* \"contracts/bettoken.sol\":4914:4974  usdAmount >= 100 * 10 ** 18 && usdAmount <= 3_000 * 10 ** 18 */\n      dup1\n      iszero\n      tag_332\n      jumpi\n      pop\n        /* \"contracts/bettoken.sol\":4958:4974  3_000 * 10 ** 18 */\n      0xa2a15d09519be00000\n        /* \"contracts/bettoken.sol\":4945:4954  usdAmount */\n      dup4\n        /* \"contracts/bettoken.sol\":4945:4974  usdAmount <= 3_000 * 10 ** 18 */\n      gt\n      iszero\n        /* \"contracts/bettoken.sol\":4914:4974  usdAmount >= 100 * 10 ** 18 && usdAmount <= 3_000 * 10 ** 18 */\n    tag_332:\n        /* \"contracts/bettoken.sol\":4906:5009  require(usdAmount >= 100 * 10 ** 18 && usdAmount <= 3_000 * 10 ** 18, \"Purchase amount out of limits.\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap1\n      tag_335\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_333:\n        /* \"contracts/bettoken.sol\":5037:5100  calculatePreSaleTokens(usdAmount.mul(latestPrice).div(1 ether)) */\n      tag_336\n        /* \"contracts/bettoken.sol\":5060:5099  usdAmount.mul(latestPrice).div(1 ether) */\n      tag_337\n        /* \"contracts/bettoken.sol\":5091:5098  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/bettoken.sol\":5060:5086  usdAmount.mul(latestPrice) */\n      tag_338\n        /* \"contracts/bettoken.sol\":5074:5085  latestPrice */\n      dup6\n        /* \"contracts/bettoken.sol\":5060:5069  usdAmount */\n      dup8\n        /* \"contracts/bettoken.sol\":5060:5073  usdAmount.mul */\n      tag_311\n      swap1\n        /* \"contracts/bettoken.sol\":5060:5086  usdAmount.mul(latestPrice) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_338:\n        /* \"contracts/bettoken.sol\":5060:5090  usdAmount.mul(latestPrice).div */\n      tag_312\n      swap1\n        /* \"contracts/bettoken.sol\":5060:5099  usdAmount.mul(latestPrice).div(1 ether) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_337:\n        /* \"contracts/bettoken.sol\":5037:5059  calculatePreSaleTokens */\n      tag_339\n        /* \"contracts/bettoken.sol\":5037:5100  calculatePreSaleTokens(usdAmount.mul(latestPrice).div(1 ether)) */\n      jump\t// in\n    tag_336:\n        /* \"contracts/bettoken.sol\":5023:5100  tokensToBuy = calculatePreSaleTokens(usdAmount.mul(latestPrice).div(1 ether)) */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":5134:5168  preSaleSoldTokens.add(tokensToBuy) */\n      tag_340\n        /* \"contracts/bettoken.sol\":5156:5167  tokensToBuy */\n      dup2\n        /* \"contracts/bettoken.sol\":5134:5151  preSaleSoldTokens */\n      sload(0x10)\n        /* \"contracts/bettoken.sol\":5134:5155  preSaleSoldTokens.add */\n      tag_315\n      swap1\n        /* \"contracts/bettoken.sol\":5134:5168  preSaleSoldTokens.add(tokensToBuy) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_340:\n        /* \"contracts/bettoken.sol\":5114:5131  preSaleSoldTokens */\n      0x10\n        /* \"contracts/bettoken.sol\":5114:5168  preSaleSoldTokens = preSaleSoldTokens.add(tokensToBuy) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":5211:5224  preSaleTokens */\n      sload(0x0d)\n        /* \"contracts/bettoken.sol\":5190:5207  preSaleSoldTokens */\n      sload(0x10)\n        /* \"contracts/bettoken.sol\":5190:5224  preSaleSoldTokens <= preSaleTokens */\n      gt\n      iszero\n        /* \"contracts/bettoken.sol\":5182:5258  require(preSaleSoldTokens <= preSaleTokens, \"Exceeds Pre-Sale token limit.\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_342\n      swap1\n      tag_343\n      jump\t// in\n    tag_342:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_341:\n        /* \"contracts/bettoken.sol\":5272:5321  _transfer(address(this), msg.sender, tokensToBuy) */\n      tag_344\n        /* \"contracts/bettoken.sol\":5290:5294  this */\n      address\n        /* \"contracts/bettoken.sol\":5297:5307  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":5309:5320  tokensToBuy */\n      dup4\n        /* \"contracts/bettoken.sol\":5272:5281  _transfer */\n      tag_240\n        /* \"contracts/bettoken.sol\":5272:5321  _transfer(address(this), msg.sender, tokensToBuy) */\n      jump\t// in\n    tag_344:\n        /* \"contracts/bettoken.sol\":5348:5358  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":5340:5372  PreSale(msg.sender, tokensToBuy) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x550498dc565cc74203b9d14cba907c9f60ceefe26e82b37df98f6cb98529cf19\n        /* \"contracts/bettoken.sol\":5360:5371  tokensToBuy */\n      dup3\n        /* \"contracts/bettoken.sol\":5340:5372  PreSale(msg.sender, tokensToBuy) */\n      mload(0x40)\n      tag_345\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_345:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/bettoken.sol\":4782:5383  if (stage == SaleStage.PRESALE) {... */\n    tag_328:\n        /* \"contracts/bettoken.sol\":4127:5383  if (stage == SaleStage.PRIVATE) {... */\n    tag_323:\n        /* \"contracts/bettoken.sol\":3911:5389  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_346\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_254\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_346:\n        /* \"contracts/bettoken.sol\":3843:5389  function buyTokens(uint256 usdAmount) external payable nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1664:1703  uint256 public stakeDuration = 365 days */\n    tag_123:\n      sload(0x15)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":7311:7785  function releaseVestedTokens() external nonReentrant {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_348\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_246\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_348:\n        /* \"contracts/bettoken.sol\":7401:7419  vestingReleaseTime */\n      0x13\n        /* \"contracts/bettoken.sol\":7401:7431  vestingReleaseTime[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":7420:7430  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":7401:7431  vestingReleaseTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/bettoken.sol\":7382:7397  block.timestamp */\n      timestamp\n        /* \"contracts/bettoken.sol\":7382:7431  block.timestamp >= vestingReleaseTime[msg.sender] */\n      lt\n      iszero\n        /* \"contracts/bettoken.sol\":7374:7469  require(block.timestamp >= vestingReleaseTime[msg.sender], \"Vesting period not yet completed.\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_350:\n        /* \"contracts/bettoken.sol\":7479:7493  uint256 amount */\n      0x00\n        /* \"contracts/bettoken.sol\":7496:7510  vestingBalance */\n      0x12\n        /* \"contracts/bettoken.sol\":7496:7522  vestingBalance[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":7511:7521  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":7496:7522  vestingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/bettoken.sol\":7479:7522  uint256 amount = vestingBalance[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":7549:7550  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":7540:7546  amount */\n      dup2\n        /* \"contracts/bettoken.sol\":7540:7550  amount > 0 */\n      gt\n        /* \"contracts/bettoken.sol\":7532:7582  require(amount > 0, \"No vested tokens to release\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap1\n      tag_355\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_353:\n        /* \"contracts/bettoken.sol\":7622:7623  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":7593:7607  vestingBalance */\n      0x12\n        /* \"contracts/bettoken.sol\":7593:7619  vestingBalance[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":7608:7618  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":7593:7619  vestingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bettoken.sol\":7593:7623  vestingBalance[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":7666:7667  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":7633:7651  vestingReleaseTime */\n      0x13\n        /* \"contracts/bettoken.sol\":7633:7663  vestingReleaseTime[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":7652:7662  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":7633:7663  vestingReleaseTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bettoken.sol\":7633:7667  vestingReleaseTime[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":7678:7722  _transfer(address(this), msg.sender, amount) */\n      tag_356\n        /* \"contracts/bettoken.sol\":7696:7700  this */\n      address\n        /* \"contracts/bettoken.sol\":7703:7713  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":7715:7721  amount */\n      dup4\n        /* \"contracts/bettoken.sol\":7678:7687  _transfer */\n      tag_240\n        /* \"contracts/bettoken.sol\":7678:7722  _transfer(address(this), msg.sender, amount) */\n      jump\t// in\n    tag_356:\n        /* \"contracts/bettoken.sol\":7759:7769  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":7738:7778  VestedTokensReleased(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6bc5063c7239b75c8bf325a2a2238f726fada322163996bb6c93d5594fb119f0\n        /* \"contracts/bettoken.sol\":7771:7777  amount */\n      dup3\n        /* \"contracts/bettoken.sol\":7738:7778  VestedTokensReleased(msg.sender, amount) */\n      mload(0x40)\n      tag_357\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_357:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/bettoken.sol\":7364:7785  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_358\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_254\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_358:\n        /* \"contracts/bettoken.sol\":7311:7785  function releaseVestedTokens() external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":3496:3837  function startPreSale() external onlyOwner {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_360\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_360:\n        /* \"contracts/bettoken.sol\":3566:3583  SaleStage.PRIVATE */\n      0x01\n        /* \"contracts/bettoken.sol\":3557:3583  stage == SaleStage.PRIVATE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_362\n      jumpi\n      tag_363\n      tag_265\n      jump\t// in\n    tag_363:\n    tag_362:\n        /* \"contracts/bettoken.sol\":3557:3562  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":3557:3583  stage == SaleStage.PRIVATE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_364\n      jumpi\n      tag_365\n      tag_265\n      jump\t// in\n    tag_365:\n    tag_364:\n      eq\n        /* \"contracts/bettoken.sol\":3549:3631  require(stage == SaleStage.PRIVATE, \"Pre-Sale can only start after Private Sale.\") */\n      tag_366\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_367\n      swap1\n      tag_368\n      jump\t// in\n    tag_367:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_366:\n        /* \"contracts/bettoken.sol\":3674:3691  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":3649:3670  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":3649:3691  privateSaleSoldTokens == privateSaleTokens */\n      eq\n        /* \"contracts/bettoken.sol\":3641:3752  require(privateSaleSoldTokens == privateSaleTokens, \"Private Sale must be completed before starting Pre-Sale.\") */\n      tag_369\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_370\n      swap1\n      tag_371\n      jump\t// in\n    tag_370:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_369:\n        /* \"contracts/bettoken.sol\":3779:3796  SaleStage.PRESALE */\n      0x02\n        /* \"contracts/bettoken.sol\":3771:3776  stage */\n      0x11\n      0x00\n        /* \"contracts/bettoken.sol\":3771:3796  stage = SaleStage.PRESALE */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_372\n      jumpi\n      tag_373\n      tag_265\n      jump\t// in\n    tag_373:\n    tag_372:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":3811:3830  StageChanged(stage) */\n      0x273467821f33675618854603ef917ebcec8a1a39f95c43d5564ed1aefab870b3\n        /* \"contracts/bettoken.sol\":3824:3829  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":3811:3830  StageChanged(stage) */\n      mload(0x40)\n      tag_374\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_374:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/bettoken.sol\":3496:3837  function startPreSale() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":926:966  uint256 public privateSaleSoldTokens = 0 */\n    tag_133:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_377\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_377:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_379\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_380\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_379:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":6794:7305  function stakeTokens(uint256 amount) external onlyOwner nonReentrant {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_382\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_384\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_246\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_384:\n        /* \"contracts/bettoken.sol\":6890:6891  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":6881:6887  amount */\n      dup2\n        /* \"contracts/bettoken.sol\":6881:6891  amount > 0 */\n      gt\n        /* \"contracts/bettoken.sol\":6873:6925  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_386\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_387\n      swap1\n      tag_388\n      jump\t// in\n    tag_387:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_386:\n        /* \"contracts/bettoken.sol\":6968:6974  amount */\n      dup1\n        /* \"contracts/bettoken.sol\":6943:6964  balanceOf(msg.sender) */\n      tag_389\n        /* \"contracts/bettoken.sol\":6953:6963  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":6943:6952  balanceOf */\n      tag_138\n        /* \"contracts/bettoken.sol\":6943:6964  balanceOf(msg.sender) */\n      jump\t// in\n    tag_389:\n        /* \"contracts/bettoken.sol\":6943:6974  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/bettoken.sol\":6935:7008  require(balanceOf(msg.sender) >= amount, \"Insufficient balance to stake\") */\n      tag_390\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_391\n      swap1\n      tag_392\n      jump\t// in\n    tag_391:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_390:\n        /* \"contracts/bettoken.sol\":7019:7063  _transfer(msg.sender, address(this), amount) */\n      tag_393\n        /* \"contracts/bettoken.sol\":7029:7039  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":7049:7053  this */\n      address\n        /* \"contracts/bettoken.sol\":7056:7062  amount */\n      dup4\n        /* \"contracts/bettoken.sol\":7019:7028  _transfer */\n      tag_240\n        /* \"contracts/bettoken.sol\":7019:7063  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_393:\n        /* \"contracts/bettoken.sol\":7103:7141  vestingBalance[msg.sender].add(amount) */\n      tag_394\n        /* \"contracts/bettoken.sol\":7134:7140  amount */\n      dup2\n        /* \"contracts/bettoken.sol\":7103:7117  vestingBalance */\n      0x12\n        /* \"contracts/bettoken.sol\":7103:7129  vestingBalance[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":7118:7128  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":7103:7129  vestingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/bettoken.sol\":7103:7133  vestingBalance[msg.sender].add */\n      tag_315\n      swap1\n        /* \"contracts/bettoken.sol\":7103:7141  vestingBalance[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_394:\n        /* \"contracts/bettoken.sol\":7074:7088  vestingBalance */\n      0x12\n        /* \"contracts/bettoken.sol\":7074:7100  vestingBalance[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":7089:7099  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":7074:7100  vestingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bettoken.sol\":7074:7141  vestingBalance[msg.sender] = vestingBalance[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":7184:7218  block.timestamp.add(stakeDuration) */\n      tag_395\n        /* \"contracts/bettoken.sol\":7204:7217  stakeDuration */\n      sload(0x15)\n        /* \"contracts/bettoken.sol\":7184:7199  block.timestamp */\n      timestamp\n        /* \"contracts/bettoken.sol\":7184:7203  block.timestamp.add */\n      tag_315\n      swap1\n        /* \"contracts/bettoken.sol\":7184:7218  block.timestamp.add(stakeDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_395:\n        /* \"contracts/bettoken.sol\":7151:7169  vestingReleaseTime */\n      0x13\n        /* \"contracts/bettoken.sol\":7151:7181  vestingReleaseTime[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":7170:7180  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":7151:7181  vestingReleaseTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bettoken.sol\":7151:7218  vestingReleaseTime[msg.sender] = block.timestamp.add(stakeDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":7247:7257  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":7234:7298  TokensStaked(msg.sender, amount, vestingReleaseTime[msg.sender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc\n        /* \"contracts/bettoken.sol\":7259:7265  amount */\n      dup3\n        /* \"contracts/bettoken.sol\":7267:7285  vestingReleaseTime */\n      0x13\n        /* \"contracts/bettoken.sol\":7267:7297  vestingReleaseTime[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":7286:7296  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":7267:7297  vestingReleaseTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/bettoken.sol\":7234:7298  TokensStaked(msg.sender, amount, vestingReleaseTime[msg.sender]) */\n      mload(0x40)\n      tag_396\n      swap3\n      swap2\n      swap1\n      tag_397\n      jump\t// in\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_398\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_254\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_398:\n        /* \"contracts/bettoken.sol\":6794:7305  function stakeTokens(uint256 amount) external onlyOwner nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bettoken.sol\":2564:3077  function getLatestPrice() public view returns (uint256) {... */\n    tag_154:\n        /* \"contracts/bettoken.sol\":2611:2618  uint256 */\n      0x00\n        /* \"contracts/bettoken.sol\":2630:2648  uint256 totalPrice */\n      dup1\n        /* \"contracts/bettoken.sol\":2651:2652  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":2630:2652  uint256 totalPrice = 0 */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":2667:2676  uint256 i */\n      0x00\n        /* \"contracts/bettoken.sol\":2662:2988  for (uint256 i = 0; i < priceFeeds.length; i++) {... */\n    tag_401:\n        /* \"contracts/bettoken.sol\":2686:2696  priceFeeds */\n      0x16\n        /* \"contracts/bettoken.sol\":2686:2703  priceFeeds.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":2682:2683  i */\n      dup2\n        /* \"contracts/bettoken.sol\":2682:2703  i < priceFeeds.length */\n      lt\n        /* \"contracts/bettoken.sol\":2662:2988  for (uint256 i = 0; i < priceFeeds.length; i++) {... */\n      iszero\n      tag_402\n      jumpi\n        /* \"contracts/bettoken.sol\":2760:2769  int price */\n      0x00\n        /* \"contracts/bettoken.sol\":2823:2833  priceFeeds */\n      0x16\n        /* \"contracts/bettoken.sol\":2834:2835  i */\n      dup3\n        /* \"contracts/bettoken.sol\":2823:2836  priceFeeds[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_404\n      jumpi\n      tag_405\n      tag_406\n      jump\t// in\n    tag_405:\n    tag_404:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/bettoken.sol\":2823:2852  priceFeeds[i].latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/bettoken.sol\":2823:2854  priceFeeds[i].latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_409\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_409:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_410\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_410:\n        /* \"contracts/bettoken.sol\":2724:2854  (... */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/bettoken.sol\":2884:2885  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":2876:2881  price */\n      dup2\n        /* \"contracts/bettoken.sol\":2876:2885  price > 0 */\n      sgt\n        /* \"contracts/bettoken.sol\":2868:2920  require(price > 0, \"Invalid price data from oracle\") */\n      tag_412\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_413\n      swap1\n      tag_414\n      jump\t// in\n    tag_413:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_412:\n        /* \"contracts/bettoken.sol\":2947:2977  totalPrice.add(uint256(price)) */\n      tag_415\n        /* \"contracts/bettoken.sol\":2970:2975  price */\n      dup2\n        /* \"contracts/bettoken.sol\":2947:2957  totalPrice */\n      dup5\n        /* \"contracts/bettoken.sol\":2947:2961  totalPrice.add */\n      tag_315\n      swap1\n        /* \"contracts/bettoken.sol\":2947:2977  totalPrice.add(uint256(price)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_415:\n        /* \"contracts/bettoken.sol\":2934:2977  totalPrice = totalPrice.add(uint256(price)) */\n      swap3\n      pop\n        /* \"contracts/bettoken.sol\":2710:2988  {... */\n      pop\n        /* \"contracts/bettoken.sol\":2705:2708  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/bettoken.sol\":2662:2988  for (uint256 i = 0; i < priceFeeds.length; i++) {... */\n      jump(tag_401)\n    tag_402:\n      pop\n        /* \"contracts/bettoken.sol\":3004:3051  totalPrice.div(priceFeeds.length).mul(10 ** 10) */\n      tag_416\n        /* \"contracts/bettoken.sol\":3042:3050  10 ** 10 */\n      0x02540be400\n        /* \"contracts/bettoken.sol\":3004:3037  totalPrice.div(priceFeeds.length) */\n      tag_417\n        /* \"contracts/bettoken.sol\":3019:3029  priceFeeds */\n      0x16\n        /* \"contracts/bettoken.sol\":3019:3036  priceFeeds.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":3004:3014  totalPrice */\n      dup5\n        /* \"contracts/bettoken.sol\":3004:3018  totalPrice.div */\n      tag_312\n      swap1\n        /* \"contracts/bettoken.sol\":3004:3037  totalPrice.div(priceFeeds.length) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_417:\n        /* \"contracts/bettoken.sol\":3004:3041  totalPrice.div(priceFeeds.length).mul */\n      tag_311\n      swap1\n        /* \"contracts/bettoken.sol\":3004:3051  totalPrice.div(priceFeeds.length).mul(10 ** 10) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_416:\n        /* \"contracts/bettoken.sol\":2997:3051  return totalPrice.div(priceFeeds.length).mul(10 ** 10) */\n      swap2\n      pop\n      pop\n        /* \"contracts/bettoken.sol\":2564:3077  function getLatestPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1242:1289  uint256 public preSaleEndPrice = 0.1 * 10 ** 18 */\n    tag_158:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":459:520  uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18 */\n    tag_162:\n        /* \"contracts/bettoken.sol\":498:520  200_000_000 * 10 ** 18 */\n      0xa56fa5b99019a5c8000000\n        /* \"contracts/bettoken.sol\":459:520  uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1161:1213  uint256 public preSaleStartPrice = 0.0505 * 10 ** 18 */\n    tag_166:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":8056:8262  function emergencyWithdraw(address tokenAddress, uint256 amount) external onlyOwner nonReentrant {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_419\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_419:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_421\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_246\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_421:\n        /* \"contracts/bettoken.sol\":8170:8182  tokenAddress */\n      dup2\n        /* \"contracts/bettoken.sol\":8163:8192  IERC20(tokenAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/bettoken.sol\":8193:8200  owner() */\n      tag_423\n        /* \"contracts/bettoken.sol\":8193:8198  owner */\n      tag_149\n        /* \"contracts/bettoken.sol\":8193:8200  owner() */\n      jump\t// in\n    tag_423:\n        /* \"contracts/bettoken.sol\":8202:8208  amount */\n      dup4\n        /* \"contracts/bettoken.sol\":8163:8209  IERC20(tokenAddress).transfer(owner(), amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_424\n      swap3\n      swap2\n      swap1\n      tag_425\n      jump\t// in\n    tag_424:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_427\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_427:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_428\n      swap2\n      swap1\n      tag_429\n      jump\t// in\n    tag_428:\n      pop\n        /* \"contracts/bettoken.sol\":8239:8246  owner() */\n      tag_430\n        /* \"contracts/bettoken.sol\":8239:8244  owner */\n      tag_149\n        /* \"contracts/bettoken.sol\":8239:8246  owner() */\n      jump\t// in\n    tag_430:\n        /* \"contracts/bettoken.sol\":8224:8255  FundsWithdrawn(owner(), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xeaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d\n        /* \"contracts/bettoken.sol\":8248:8254  amount */\n      dup3\n        /* \"contracts/bettoken.sol\":8224:8255  FundsWithdrawn(owner(), amount) */\n      mload(0x40)\n      tag_431\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_431:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_432\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_254\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_432:\n        /* \"contracts/bettoken.sol\":8056:8262  function emergencyWithdraw(address tokenAddress, uint256 amount) external onlyOwner nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_434\n      swap1\n      tag_222\n      jump\t// in\n    tag_434:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_435\n      swap1\n      tag_222\n      jump\t// in\n    tag_435:\n      dup1\n      iszero\n      tag_436\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_437\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_436)\n    tag_437:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_438:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_438\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_436:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_440\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_440:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_441\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_441:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":760:815  uint256 public privateSaleStartPrice = 0.001 * 10 ** 18 */\n    tag_183:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1315:1351  uint256 public preSaleSoldTokens = 0 */\n    tag_187:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":594:649  uint256 public privateSaleTarget = 1_000_000 * 10 ** 18 */\n    tag_191:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":843:897  uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18 */\n    tag_195:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1423:1462  SaleStage public stage = SaleStage.NONE */\n    tag_199:\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":679:735  uint256 public privateSaleTokens = 38_835_764 * 10 ** 18 */\n    tag_204:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":999:1051  uint256 public preSaleTarget = 19_000_000 * 10 ** 18 */\n    tag_214:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_444\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_444:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_446\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_447\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_447:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_446:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_448\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_380\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_448:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_451\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_452\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_451:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_454\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_454:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_455\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_456\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_457\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_458\n      jump\t// in\n    tag_457:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_456:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_459\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_452\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_459:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_455:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_461\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_462\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_462:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_461:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_463\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_464\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_464:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_463:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_465\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_466\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_465:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_468\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_468:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_469\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_469:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_470\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_471\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_471:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_472\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_472:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_470:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_474\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_475\n      swap1\n      tag_476\n      jump\t// in\n    tag_475:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_474:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_479\n      swap2\n      swap1\n      tag_480\n      jump\t// in\n    tag_479:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_482\n      swap2\n      swap1\n      tag_483\n      jump\t// in\n    tag_482:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":5395:6259  function calculatePrivateSaleTokens(uint256 usdAmount) internal view returns (uint256) {... */\n    tag_313:\n        /* \"contracts/bettoken.sol\":5473:5480  uint256 */\n      0x00\n        /* \"contracts/bettoken.sol\":5512:5513  0 */\n      dup1\n        /* \"contracts/bettoken.sol\":5500:5509  usdAmount */\n      dup3\n        /* \"contracts/bettoken.sol\":5500:5513  usdAmount > 0 */\n      gt\n        /* \"contracts/bettoken.sol\":5492:5551  require(usdAmount > 0, \"USD amount must be greater than 0\") */\n      tag_485\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_486\n      swap1\n      tag_487\n      jump\t// in\n    tag_486:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_485:\n        /* \"contracts/bettoken.sol\":5589:5590  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":5569:5586  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":5569:5590  privateSaleTokens > 0 */\n      gt\n        /* \"contracts/bettoken.sol\":5561:5637  require(privateSaleTokens > 0, \"Private Sale tokens must be greater than 0\") */\n      tag_488\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_489\n      swap1\n      tag_490\n      jump\t// in\n    tag_489:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_488:\n        /* \"contracts/bettoken.sol\":5680:5697  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":5655:5676  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":5655:5697  privateSaleSoldTokens <= privateSaleTokens */\n      gt\n      iszero\n        /* \"contracts/bettoken.sol\":5647:5750  require(privateSaleSoldTokens <= privateSaleTokens, \"Private Sale sold tokens exceed available tokens\") */\n      tag_491\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_492\n      swap1\n      tag_493\n      jump\t// in\n    tag_492:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_491:\n        /* \"contracts/bettoken.sol\":5761:5779  uint256 tokenRange */\n      0x00\n        /* \"contracts/bettoken.sol\":5782:5828  privateSaleEndPrice.sub(privateSaleStartPrice) */\n      tag_494\n        /* \"contracts/bettoken.sol\":5806:5827  privateSaleStartPrice */\n      sload(0x09)\n        /* \"contracts/bettoken.sol\":5782:5801  privateSaleEndPrice */\n      sload(0x0a)\n        /* \"contracts/bettoken.sol\":5782:5805  privateSaleEndPrice.sub */\n      tag_495\n      swap1\n        /* \"contracts/bettoken.sol\":5782:5828  privateSaleEndPrice.sub(privateSaleStartPrice) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_494:\n        /* \"contracts/bettoken.sol\":5761:5828  uint256 tokenRange = privateSaleEndPrice.sub(privateSaleStartPrice) */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":5838:5858  uint256 currentPrice */\n      0x00\n        /* \"contracts/bettoken.sol\":5861:5970  privateSaleStartPrice.add(... */\n      tag_496\n        /* \"contracts/bettoken.sol\":5900:5960  tokenRange.mul(privateSaleSoldTokens).div(privateSaleTokens) */\n      tag_497\n        /* \"contracts/bettoken.sol\":5942:5959  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":5900:5937  tokenRange.mul(privateSaleSoldTokens) */\n      tag_498\n        /* \"contracts/bettoken.sol\":5915:5936  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":5900:5910  tokenRange */\n      dup7\n        /* \"contracts/bettoken.sol\":5900:5914  tokenRange.mul */\n      tag_311\n      swap1\n        /* \"contracts/bettoken.sol\":5900:5937  tokenRange.mul(privateSaleSoldTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_498:\n        /* \"contracts/bettoken.sol\":5900:5941  tokenRange.mul(privateSaleSoldTokens).div */\n      tag_312\n      swap1\n        /* \"contracts/bettoken.sol\":5900:5960  tokenRange.mul(privateSaleSoldTokens).div(privateSaleTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_497:\n        /* \"contracts/bettoken.sol\":5861:5882  privateSaleStartPrice */\n      sload(0x09)\n        /* \"contracts/bettoken.sol\":5861:5886  privateSaleStartPrice.add */\n      tag_315\n      swap1\n        /* \"contracts/bettoken.sol\":5861:5970  privateSaleStartPrice.add(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_496:\n        /* \"contracts/bettoken.sol\":5838:5970  uint256 currentPrice = privateSaleStartPrice.add(... */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":6005:6026  privateSaleStartPrice */\n      sload(0x09)\n        /* \"contracts/bettoken.sol\":5989:6001  currentPrice */\n      dup2\n        /* \"contracts/bettoken.sol\":5989:6026  currentPrice >= privateSaleStartPrice */\n      lt\n      iszero\n        /* \"contracts/bettoken.sol\":5989:6065  currentPrice >= privateSaleStartPrice && currentPrice <= privateSaleEndPrice */\n      dup1\n      iszero\n      tag_499\n      jumpi\n      pop\n        /* \"contracts/bettoken.sol\":6046:6065  privateSaleEndPrice */\n      sload(0x0a)\n        /* \"contracts/bettoken.sol\":6030:6042  currentPrice */\n      dup2\n        /* \"contracts/bettoken.sol\":6030:6065  currentPrice <= privateSaleEndPrice */\n      gt\n      iszero\n        /* \"contracts/bettoken.sol\":5989:6065  currentPrice >= privateSaleStartPrice && currentPrice <= privateSaleEndPrice */\n    tag_499:\n        /* \"contracts/bettoken.sol\":5981:6100  require(currentPrice >= privateSaleStartPrice && currentPrice <= privateSaleEndPrice, \"Invalid token price calculated\") */\n      tag_500\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_501\n      swap1\n      tag_502\n      jump\t// in\n    tag_501:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_500:\n        /* \"contracts/bettoken.sol\":6111:6125  uint256 tokens */\n      0x00\n        /* \"contracts/bettoken.sol\":6128:6155  usdAmount.div(currentPrice) */\n      tag_503\n        /* \"contracts/bettoken.sol\":6142:6154  currentPrice */\n      dup3\n        /* \"contracts/bettoken.sol\":6128:6137  usdAmount */\n      dup7\n        /* \"contracts/bettoken.sol\":6128:6141  usdAmount.div */\n      tag_312\n      swap1\n        /* \"contracts/bettoken.sol\":6128:6155  usdAmount.div(currentPrice) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_503:\n        /* \"contracts/bettoken.sol\":6111:6155  uint256 tokens = usdAmount.div(currentPrice) */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":6182:6183  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":6173:6179  tokens */\n      dup2\n        /* \"contracts/bettoken.sol\":6173:6183  tokens > 0 */\n      gt\n        /* \"contracts/bettoken.sol\":6165:6228  require(tokens > 0, \"Calculated tokens must be greater than 0\") */\n      tag_504\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_505\n      swap1\n      tag_506\n      jump\t// in\n    tag_505:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_504:\n        /* \"contracts/bettoken.sol\":6246:6252  tokens */\n      dup1\n        /* \"contracts/bettoken.sol\":6239:6252  return tokens */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/bettoken.sol\":5395:6259  function calculatePrivateSaleTokens(uint256 usdAmount) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_508\n      swap2\n      swap1\n      tag_509\n      jump\t// in\n    tag_508:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":6265:6788  function calculatePreSaleTokens(uint256 usdAmount) internal view returns (uint256) {... */\n    tag_339:\n        /* \"contracts/bettoken.sol\":6339:6346  uint256 */\n      0x00\n        /* \"contracts/bettoken.sol\":6358:6378  uint256 currentPrice */\n      dup1\n        /* \"contracts/bettoken.sol\":6381:6508  preSaleStartPrice.add(... */\n      tag_511\n        /* \"contracts/bettoken.sol\":6416:6498  (preSaleEndPrice.sub(preSaleStartPrice)).mul(preSaleSoldTokens).div(preSaleTokens) */\n      tag_512\n        /* \"contracts/bettoken.sol\":6484:6497  preSaleTokens */\n      sload(0x0d)\n        /* \"contracts/bettoken.sol\":6416:6479  (preSaleEndPrice.sub(preSaleStartPrice)).mul(preSaleSoldTokens) */\n      tag_513\n        /* \"contracts/bettoken.sol\":6461:6478  preSaleSoldTokens */\n      sload(0x10)\n        /* \"contracts/bettoken.sol\":6417:6455  preSaleEndPrice.sub(preSaleStartPrice) */\n      tag_514\n        /* \"contracts/bettoken.sol\":6437:6454  preSaleStartPrice */\n      sload(0x0e)\n        /* \"contracts/bettoken.sol\":6417:6432  preSaleEndPrice */\n      sload(0x0f)\n        /* \"contracts/bettoken.sol\":6417:6436  preSaleEndPrice.sub */\n      tag_495\n      swap1\n        /* \"contracts/bettoken.sol\":6417:6455  preSaleEndPrice.sub(preSaleStartPrice) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_514:\n        /* \"contracts/bettoken.sol\":6416:6460  (preSaleEndPrice.sub(preSaleStartPrice)).mul */\n      tag_311\n      swap1\n        /* \"contracts/bettoken.sol\":6416:6479  (preSaleEndPrice.sub(preSaleStartPrice)).mul(preSaleSoldTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_513:\n        /* \"contracts/bettoken.sol\":6416:6483  (preSaleEndPrice.sub(preSaleStartPrice)).mul(preSaleSoldTokens).div */\n      tag_312\n      swap1\n        /* \"contracts/bettoken.sol\":6416:6498  (preSaleEndPrice.sub(preSaleStartPrice)).mul(preSaleSoldTokens).div(preSaleTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_512:\n        /* \"contracts/bettoken.sol\":6381:6398  preSaleStartPrice */\n      sload(0x0e)\n        /* \"contracts/bettoken.sol\":6381:6402  preSaleStartPrice.add */\n      tag_315\n      swap1\n        /* \"contracts/bettoken.sol\":6381:6508  preSaleStartPrice.add(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_511:\n        /* \"contracts/bettoken.sol\":6358:6508  uint256 currentPrice = preSaleStartPrice.add(... */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":6542:6559  preSaleStartPrice */\n      sload(0x0e)\n        /* \"contracts/bettoken.sol\":6526:6538  currentPrice */\n      dup2\n        /* \"contracts/bettoken.sol\":6526:6559  currentPrice >= preSaleStartPrice */\n      lt\n      iszero\n        /* \"contracts/bettoken.sol\":6526:6594  currentPrice >= preSaleStartPrice && currentPrice <= preSaleEndPrice */\n      dup1\n      iszero\n      tag_515\n      jumpi\n      pop\n        /* \"contracts/bettoken.sol\":6579:6594  preSaleEndPrice */\n      sload(0x0f)\n        /* \"contracts/bettoken.sol\":6563:6575  currentPrice */\n      dup2\n        /* \"contracts/bettoken.sol\":6563:6594  currentPrice <= preSaleEndPrice */\n      gt\n      iszero\n        /* \"contracts/bettoken.sol\":6526:6594  currentPrice >= preSaleStartPrice && currentPrice <= preSaleEndPrice */\n    tag_515:\n        /* \"contracts/bettoken.sol\":6518:6629  require(currentPrice >= preSaleStartPrice && currentPrice <= preSaleEndPrice, \"Invalid token price calculated\") */\n      tag_516\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_517\n      swap1\n      tag_502\n      jump\t// in\n    tag_517:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_516:\n        /* \"contracts/bettoken.sol\":6640:6654  uint256 tokens */\n      0x00\n        /* \"contracts/bettoken.sol\":6657:6684  usdAmount.div(currentPrice) */\n      tag_518\n        /* \"contracts/bettoken.sol\":6671:6683  currentPrice */\n      dup3\n        /* \"contracts/bettoken.sol\":6657:6666  usdAmount */\n      dup6\n        /* \"contracts/bettoken.sol\":6657:6670  usdAmount.div */\n      tag_312\n      swap1\n        /* \"contracts/bettoken.sol\":6657:6684  usdAmount.div(currentPrice) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_518:\n        /* \"contracts/bettoken.sol\":6640:6684  uint256 tokens = usdAmount.div(currentPrice) */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":6711:6712  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":6702:6708  tokens */\n      dup2\n        /* \"contracts/bettoken.sol\":6702:6712  tokens > 0 */\n      gt\n        /* \"contracts/bettoken.sol\":6694:6757  require(tokens > 0, \"Calculated tokens must be greater than 0\") */\n      tag_519\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_520\n      swap1\n      tag_506\n      jump\t// in\n    tag_520:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_519:\n        /* \"contracts/bettoken.sol\":6775:6781  tokens */\n      dup1\n        /* \"contracts/bettoken.sol\":6768:6781  return tokens */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/bettoken.sol\":6265:6788  function calculatePreSaleTokens(uint256 usdAmount) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_380:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_452:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_523\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_524\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_524:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_523:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_525\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_526\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_526:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_525:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_527\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_528\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_528:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_527:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_466:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_530\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_531\n      swap2\n      swap1\n      tag_509\n      jump\t// in\n    tag_531:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_532)\n    tag_530:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_533\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_534\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_458\n      jump\t// in\n    tag_534:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_533:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_532:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_535\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_536)\n    tag_535:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_536:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_537\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_537:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_495:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_539\n      swap2\n      swap1\n      tag_540\n      jump\t// in\n    tag_539:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_541:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:402   */\n    tag_542:\n        /* \"#utility.yul\":322:356   */\n      0x44697265637420455448207472616e7366657273206e6f7420616c6c6f776564\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:357   */\n      mstore\n        /* \"#utility.yul\":391:394   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":386:388   */\n      0x20\n        /* \"#utility.yul\":378:384   */\n      dup3\n        /* \"#utility.yul\":374:389   */\n      add\n        /* \"#utility.yul\":367:395   */\n      mstore\n        /* \"#utility.yul\":182:402   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":408:774   */\n    tag_543:\n        /* \"#utility.yul\":550:553   */\n      0x00\n        /* \"#utility.yul\":571:638   */\n      tag_637\n        /* \"#utility.yul\":635:637   */\n      0x21\n        /* \"#utility.yul\":630:633   */\n      dup4\n        /* \"#utility.yul\":571:638   */\n      tag_541\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":564:638   */\n      swap2\n      pop\n        /* \"#utility.yul\":647:740   */\n      tag_638\n        /* \"#utility.yul\":736:739   */\n      dup3\n        /* \"#utility.yul\":647:740   */\n      tag_542\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":765:767   */\n      0x40\n        /* \"#utility.yul\":760:763   */\n      dup3\n        /* \"#utility.yul\":756:768   */\n      add\n        /* \"#utility.yul\":749:768   */\n      swap1\n      pop\n        /* \"#utility.yul\":408:774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":780:1199   */\n    tag_51:\n        /* \"#utility.yul\":946:950   */\n      0x00\n        /* \"#utility.yul\":984:986   */\n      0x20\n        /* \"#utility.yul\":973:982   */\n      dup3\n        /* \"#utility.yul\":969:987   */\n      add\n        /* \"#utility.yul\":961:987   */\n      swap1\n      pop\n        /* \"#utility.yul\":1033:1042   */\n      dup2\n        /* \"#utility.yul\":1027:1031   */\n      dup2\n        /* \"#utility.yul\":1023:1043   */\n      sub\n        /* \"#utility.yul\":1019:1020   */\n      0x00\n        /* \"#utility.yul\":1008:1017   */\n      dup4\n        /* \"#utility.yul\":1004:1021   */\n      add\n        /* \"#utility.yul\":997:1044   */\n      mstore\n        /* \"#utility.yul\":1061:1192   */\n      tag_640\n        /* \"#utility.yul\":1187:1191   */\n      dup2\n        /* \"#utility.yul\":1061:1192   */\n      tag_543\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":1053:1192   */\n      swap1\n      pop\n        /* \"#utility.yul\":780:1199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1205:1304   */\n    tag_544:\n        /* \"#utility.yul\":1257:1263   */\n      0x00\n        /* \"#utility.yul\":1291:1296   */\n      dup2\n        /* \"#utility.yul\":1285:1297   */\n      mload\n        /* \"#utility.yul\":1275:1297   */\n      swap1\n      pop\n        /* \"#utility.yul\":1205:1304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1310:1449   */\n    tag_545:\n        /* \"#utility.yul\":1399:1405   */\n      dup3\n        /* \"#utility.yul\":1394:1397   */\n      dup2\n        /* \"#utility.yul\":1389:1392   */\n      dup4\n        /* \"#utility.yul\":1383:1406   */\n      mcopy\n        /* \"#utility.yul\":1440:1441   */\n      0x00\n        /* \"#utility.yul\":1431:1437   */\n      dup4\n        /* \"#utility.yul\":1426:1429   */\n      dup4\n        /* \"#utility.yul\":1422:1438   */\n      add\n        /* \"#utility.yul\":1415:1442   */\n      mstore\n        /* \"#utility.yul\":1310:1449   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1455:1557   */\n    tag_546:\n        /* \"#utility.yul\":1496:1502   */\n      0x00\n        /* \"#utility.yul\":1547:1549   */\n      0x1f\n        /* \"#utility.yul\":1543:1550   */\n      not\n        /* \"#utility.yul\":1538:1540   */\n      0x1f\n        /* \"#utility.yul\":1531:1536   */\n      dup4\n        /* \"#utility.yul\":1527:1541   */\n      add\n        /* \"#utility.yul\":1523:1551   */\n      and\n        /* \"#utility.yul\":1513:1551   */\n      swap1\n      pop\n        /* \"#utility.yul\":1455:1557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1563:1940   */\n    tag_547:\n        /* \"#utility.yul\":1651:1654   */\n      0x00\n        /* \"#utility.yul\":1679:1718   */\n      tag_645\n        /* \"#utility.yul\":1712:1717   */\n      dup3\n        /* \"#utility.yul\":1679:1718   */\n      tag_544\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":1734:1805   */\n      tag_646\n        /* \"#utility.yul\":1798:1804   */\n      dup2\n        /* \"#utility.yul\":1793:1796   */\n      dup6\n        /* \"#utility.yul\":1734:1805   */\n      tag_541\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":1727:1805   */\n      swap4\n      pop\n        /* \"#utility.yul\":1814:1879   */\n      tag_647\n        /* \"#utility.yul\":1872:1878   */\n      dup2\n        /* \"#utility.yul\":1867:1870   */\n      dup6\n        /* \"#utility.yul\":1860:1864   */\n      0x20\n        /* \"#utility.yul\":1853:1858   */\n      dup7\n        /* \"#utility.yul\":1849:1865   */\n      add\n        /* \"#utility.yul\":1814:1879   */\n      tag_545\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":1904:1933   */\n      tag_648\n        /* \"#utility.yul\":1926:1932   */\n      dup2\n        /* \"#utility.yul\":1904:1933   */\n      tag_546\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":1899:1902   */\n      dup5\n        /* \"#utility.yul\":1895:1934   */\n      add\n        /* \"#utility.yul\":1888:1934   */\n      swap2\n      pop\n        /* \"#utility.yul\":1655:1940   */\n      pop\n        /* \"#utility.yul\":1563:1940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1946:2259   */\n    tag_59:\n        /* \"#utility.yul\":2059:2063   */\n      0x00\n        /* \"#utility.yul\":2097:2099   */\n      0x20\n        /* \"#utility.yul\":2086:2095   */\n      dup3\n        /* \"#utility.yul\":2082:2100   */\n      add\n        /* \"#utility.yul\":2074:2100   */\n      swap1\n      pop\n        /* \"#utility.yul\":2146:2155   */\n      dup2\n        /* \"#utility.yul\":2140:2144   */\n      dup2\n        /* \"#utility.yul\":2136:2156   */\n      sub\n        /* \"#utility.yul\":2132:2133   */\n      0x00\n        /* \"#utility.yul\":2121:2130   */\n      dup4\n        /* \"#utility.yul\":2117:2134   */\n      add\n        /* \"#utility.yul\":2110:2157   */\n      mstore\n        /* \"#utility.yul\":2174:2252   */\n      tag_650\n        /* \"#utility.yul\":2247:2251   */\n      dup2\n        /* \"#utility.yul\":2238:2244   */\n      dup5\n        /* \"#utility.yul\":2174:2252   */\n      tag_547\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":2166:2252   */\n      swap1\n      pop\n        /* \"#utility.yul\":1946:2259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2346:2463   */\n    tag_549:\n        /* \"#utility.yul\":2455:2456   */\n      0x00\n        /* \"#utility.yul\":2452:2453   */\n      dup1\n        /* \"#utility.yul\":2445:2457   */\n      revert\n        /* \"#utility.yul\":2592:2718   */\n    tag_551:\n        /* \"#utility.yul\":2629:2636   */\n      0x00\n        /* \"#utility.yul\":2669:2711   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2662:2667   */\n      dup3\n        /* \"#utility.yul\":2658:2712   */\n      and\n        /* \"#utility.yul\":2647:2712   */\n      swap1\n      pop\n        /* \"#utility.yul\":2592:2718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2724:2820   */\n    tag_552:\n        /* \"#utility.yul\":2761:2768   */\n      0x00\n        /* \"#utility.yul\":2790:2814   */\n      tag_656\n        /* \"#utility.yul\":2808:2813   */\n      dup3\n        /* \"#utility.yul\":2790:2814   */\n      tag_551\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":2779:2814   */\n      swap1\n      pop\n        /* \"#utility.yul\":2724:2820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2826:2948   */\n    tag_553:\n        /* \"#utility.yul\":2899:2923   */\n      tag_658\n        /* \"#utility.yul\":2917:2922   */\n      dup2\n        /* \"#utility.yul\":2899:2923   */\n      tag_552\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":2892:2897   */\n      dup2\n        /* \"#utility.yul\":2889:2924   */\n      eq\n        /* \"#utility.yul\":2879:2942   */\n      tag_659\n      jumpi\n        /* \"#utility.yul\":2938:2939   */\n      0x00\n        /* \"#utility.yul\":2935:2936   */\n      dup1\n        /* \"#utility.yul\":2928:2940   */\n      revert\n        /* \"#utility.yul\":2879:2942   */\n    tag_659:\n        /* \"#utility.yul\":2826:2948   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2954:3093   */\n    tag_554:\n        /* \"#utility.yul\":3000:3005   */\n      0x00\n        /* \"#utility.yul\":3038:3044   */\n      dup2\n        /* \"#utility.yul\":3025:3045   */\n      calldataload\n        /* \"#utility.yul\":3016:3045   */\n      swap1\n      pop\n        /* \"#utility.yul\":3054:3087   */\n      tag_661\n        /* \"#utility.yul\":3081:3086   */\n      dup2\n        /* \"#utility.yul\":3054:3087   */\n      tag_553\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":2954:3093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3099:3176   */\n    tag_555:\n        /* \"#utility.yul\":3136:3143   */\n      0x00\n        /* \"#utility.yul\":3165:3170   */\n      dup2\n        /* \"#utility.yul\":3154:3170   */\n      swap1\n      pop\n        /* \"#utility.yul\":3099:3176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3182:3304   */\n    tag_556:\n        /* \"#utility.yul\":3255:3279   */\n      tag_664\n        /* \"#utility.yul\":3273:3278   */\n      dup2\n        /* \"#utility.yul\":3255:3279   */\n      tag_555\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":3248:3253   */\n      dup2\n        /* \"#utility.yul\":3245:3280   */\n      eq\n        /* \"#utility.yul\":3235:3298   */\n      tag_665\n      jumpi\n        /* \"#utility.yul\":3294:3295   */\n      0x00\n        /* \"#utility.yul\":3291:3292   */\n      dup1\n        /* \"#utility.yul\":3284:3296   */\n      revert\n        /* \"#utility.yul\":3235:3298   */\n    tag_665:\n        /* \"#utility.yul\":3182:3304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3310:3449   */\n    tag_557:\n        /* \"#utility.yul\":3356:3361   */\n      0x00\n        /* \"#utility.yul\":3394:3400   */\n      dup2\n        /* \"#utility.yul\":3381:3401   */\n      calldataload\n        /* \"#utility.yul\":3372:3401   */\n      swap1\n      pop\n        /* \"#utility.yul\":3410:3443   */\n      tag_667\n        /* \"#utility.yul\":3437:3442   */\n      dup2\n        /* \"#utility.yul\":3410:3443   */\n      tag_556\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":3310:3449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3455:3929   */\n    tag_63:\n        /* \"#utility.yul\":3523:3529   */\n      0x00\n        /* \"#utility.yul\":3531:3537   */\n      dup1\n        /* \"#utility.yul\":3580:3582   */\n      0x40\n        /* \"#utility.yul\":3568:3577   */\n      dup4\n        /* \"#utility.yul\":3559:3566   */\n      dup6\n        /* \"#utility.yul\":3555:3578   */\n      sub\n        /* \"#utility.yul\":3551:3583   */\n      slt\n        /* \"#utility.yul\":3548:3667   */\n      iszero\n      tag_669\n      jumpi\n        /* \"#utility.yul\":3586:3665   */\n      tag_670\n      tag_549\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":3548:3667   */\n    tag_669:\n        /* \"#utility.yul\":3706:3707   */\n      0x00\n        /* \"#utility.yul\":3731:3784   */\n      tag_671\n        /* \"#utility.yul\":3776:3783   */\n      dup6\n        /* \"#utility.yul\":3767:3773   */\n      dup3\n        /* \"#utility.yul\":3756:3765   */\n      dup7\n        /* \"#utility.yul\":3752:3774   */\n      add\n        /* \"#utility.yul\":3731:3784   */\n      tag_554\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":3721:3784   */\n      swap3\n      pop\n        /* \"#utility.yul\":3677:3794   */\n      pop\n        /* \"#utility.yul\":3833:3835   */\n      0x20\n        /* \"#utility.yul\":3859:3912   */\n      tag_672\n        /* \"#utility.yul\":3904:3911   */\n      dup6\n        /* \"#utility.yul\":3895:3901   */\n      dup3\n        /* \"#utility.yul\":3884:3893   */\n      dup7\n        /* \"#utility.yul\":3880:3902   */\n      add\n        /* \"#utility.yul\":3859:3912   */\n      tag_557\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":3849:3912   */\n      swap2\n      pop\n        /* \"#utility.yul\":3804:3922   */\n      pop\n        /* \"#utility.yul\":3455:3929   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3935:4025   */\n    tag_558:\n        /* \"#utility.yul\":3969:3976   */\n      0x00\n        /* \"#utility.yul\":4012:4017   */\n      dup2\n        /* \"#utility.yul\":4005:4018   */\n      iszero\n        /* \"#utility.yul\":3998:4019   */\n      iszero\n        /* \"#utility.yul\":3987:4019   */\n      swap1\n      pop\n        /* \"#utility.yul\":3935:4025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4031:4140   */\n    tag_559:\n        /* \"#utility.yul\":4112:4133   */\n      tag_675\n        /* \"#utility.yul\":4127:4132   */\n      dup2\n        /* \"#utility.yul\":4112:4133   */\n      tag_558\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":4107:4110   */\n      dup3\n        /* \"#utility.yul\":4100:4134   */\n      mstore\n        /* \"#utility.yul\":4031:4140   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4146:4356   */\n    tag_66:\n        /* \"#utility.yul\":4233:4237   */\n      0x00\n        /* \"#utility.yul\":4271:4273   */\n      0x20\n        /* \"#utility.yul\":4260:4269   */\n      dup3\n        /* \"#utility.yul\":4256:4274   */\n      add\n        /* \"#utility.yul\":4248:4274   */\n      swap1\n      pop\n        /* \"#utility.yul\":4284:4349   */\n      tag_677\n        /* \"#utility.yul\":4346:4347   */\n      0x00\n        /* \"#utility.yul\":4335:4344   */\n      dup4\n        /* \"#utility.yul\":4331:4348   */\n      add\n        /* \"#utility.yul\":4322:4328   */\n      dup5\n        /* \"#utility.yul\":4284:4349   */\n      tag_559\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":4146:4356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4362:4480   */\n    tag_560:\n        /* \"#utility.yul\":4449:4473   */\n      tag_679\n        /* \"#utility.yul\":4467:4472   */\n      dup2\n        /* \"#utility.yul\":4449:4473   */\n      tag_555\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":4444:4447   */\n      dup3\n        /* \"#utility.yul\":4437:4474   */\n      mstore\n        /* \"#utility.yul\":4362:4480   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4486:4708   */\n    tag_71:\n        /* \"#utility.yul\":4579:4583   */\n      0x00\n        /* \"#utility.yul\":4617:4619   */\n      0x20\n        /* \"#utility.yul\":4606:4615   */\n      dup3\n        /* \"#utility.yul\":4602:4620   */\n      add\n        /* \"#utility.yul\":4594:4620   */\n      swap1\n      pop\n        /* \"#utility.yul\":4630:4701   */\n      tag_681\n        /* \"#utility.yul\":4698:4699   */\n      0x00\n        /* \"#utility.yul\":4687:4696   */\n      dup4\n        /* \"#utility.yul\":4683:4700   */\n      add\n        /* \"#utility.yul\":4674:4680   */\n      dup5\n        /* \"#utility.yul\":4630:4701   */\n      tag_560\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":4486:4708   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4714:5043   */\n    tag_75:\n        /* \"#utility.yul\":4773:4779   */\n      0x00\n        /* \"#utility.yul\":4822:4824   */\n      0x20\n        /* \"#utility.yul\":4810:4819   */\n      dup3\n        /* \"#utility.yul\":4801:4808   */\n      dup5\n        /* \"#utility.yul\":4797:4820   */\n      sub\n        /* \"#utility.yul\":4793:4825   */\n      slt\n        /* \"#utility.yul\":4790:4909   */\n      iszero\n      tag_683\n      jumpi\n        /* \"#utility.yul\":4828:4907   */\n      tag_684\n      tag_549\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":4790:4909   */\n    tag_683:\n        /* \"#utility.yul\":4948:4949   */\n      0x00\n        /* \"#utility.yul\":4973:5026   */\n      tag_685\n        /* \"#utility.yul\":5018:5025   */\n      dup5\n        /* \"#utility.yul\":5009:5015   */\n      dup3\n        /* \"#utility.yul\":4998:5007   */\n      dup6\n        /* \"#utility.yul\":4994:5016   */\n      add\n        /* \"#utility.yul\":4973:5026   */\n      tag_557\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":4963:5026   */\n      swap2\n      pop\n        /* \"#utility.yul\":4919:5036   */\n      pop\n        /* \"#utility.yul\":4714:5043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5049:5109   */\n    tag_561:\n        /* \"#utility.yul\":5077:5080   */\n      0x00\n        /* \"#utility.yul\":5098:5103   */\n      dup2\n        /* \"#utility.yul\":5091:5103   */\n      swap1\n      pop\n        /* \"#utility.yul\":5049:5109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5115:5257   */\n    tag_562:\n        /* \"#utility.yul\":5165:5174   */\n      0x00\n        /* \"#utility.yul\":5198:5251   */\n      tag_688\n        /* \"#utility.yul\":5216:5250   */\n      tag_689\n        /* \"#utility.yul\":5225:5249   */\n      tag_690\n        /* \"#utility.yul\":5243:5248   */\n      dup5\n        /* \"#utility.yul\":5225:5249   */\n      tag_551\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":5216:5250   */\n      tag_561\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":5198:5251   */\n      tag_551\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":5185:5251   */\n      swap1\n      pop\n        /* \"#utility.yul\":5115:5257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5263:5389   */\n    tag_563:\n        /* \"#utility.yul\":5313:5322   */\n      0x00\n        /* \"#utility.yul\":5346:5383   */\n      tag_692\n        /* \"#utility.yul\":5377:5382   */\n      dup3\n        /* \"#utility.yul\":5346:5383   */\n      tag_562\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":5333:5383   */\n      swap1\n      pop\n        /* \"#utility.yul\":5263:5389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5395:5549   */\n    tag_564:\n        /* \"#utility.yul\":5473:5482   */\n      0x00\n        /* \"#utility.yul\":5506:5543   */\n      tag_694\n        /* \"#utility.yul\":5537:5542   */\n      dup3\n        /* \"#utility.yul\":5506:5543   */\n      tag_563\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":5493:5543   */\n      swap1\n      pop\n        /* \"#utility.yul\":5395:5549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5555:5742   */\n    tag_565:\n        /* \"#utility.yul\":5670:5735   */\n      tag_696\n        /* \"#utility.yul\":5729:5734   */\n      dup2\n        /* \"#utility.yul\":5670:5735   */\n      tag_564\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":5665:5668   */\n      dup3\n        /* \"#utility.yul\":5658:5736   */\n      mstore\n        /* \"#utility.yul\":5555:5742   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5748:6026   */\n    tag_78:\n        /* \"#utility.yul\":5869:5873   */\n      0x00\n        /* \"#utility.yul\":5907:5909   */\n      0x20\n        /* \"#utility.yul\":5896:5905   */\n      dup3\n        /* \"#utility.yul\":5892:5910   */\n      add\n        /* \"#utility.yul\":5884:5910   */\n      swap1\n      pop\n        /* \"#utility.yul\":5920:6019   */\n      tag_698\n        /* \"#utility.yul\":6016:6017   */\n      0x00\n        /* \"#utility.yul\":6005:6014   */\n      dup4\n        /* \"#utility.yul\":6001:6018   */\n      add\n        /* \"#utility.yul\":5992:5998   */\n      dup5\n        /* \"#utility.yul\":5920:6019   */\n      tag_565\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":5748:6026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6032:6361   */\n    tag_90:\n        /* \"#utility.yul\":6091:6097   */\n      0x00\n        /* \"#utility.yul\":6140:6142   */\n      0x20\n        /* \"#utility.yul\":6128:6137   */\n      dup3\n        /* \"#utility.yul\":6119:6126   */\n      dup5\n        /* \"#utility.yul\":6115:6138   */\n      sub\n        /* \"#utility.yul\":6111:6143   */\n      slt\n        /* \"#utility.yul\":6108:6227   */\n      iszero\n      tag_700\n      jumpi\n        /* \"#utility.yul\":6146:6225   */\n      tag_701\n      tag_549\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":6108:6227   */\n    tag_700:\n        /* \"#utility.yul\":6266:6267   */\n      0x00\n        /* \"#utility.yul\":6291:6344   */\n      tag_702\n        /* \"#utility.yul\":6336:6343   */\n      dup5\n        /* \"#utility.yul\":6327:6333   */\n      dup3\n        /* \"#utility.yul\":6316:6325   */\n      dup6\n        /* \"#utility.yul\":6312:6334   */\n      add\n        /* \"#utility.yul\":6291:6344   */\n      tag_554\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":6281:6344   */\n      swap2\n      pop\n        /* \"#utility.yul\":6237:6354   */\n      pop\n        /* \"#utility.yul\":6032:6361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6367:6986   */\n    tag_96:\n        /* \"#utility.yul\":6444:6450   */\n      0x00\n        /* \"#utility.yul\":6452:6458   */\n      dup1\n        /* \"#utility.yul\":6460:6466   */\n      0x00\n        /* \"#utility.yul\":6509:6511   */\n      0x60\n        /* \"#utility.yul\":6497:6506   */\n      dup5\n        /* \"#utility.yul\":6488:6495   */\n      dup7\n        /* \"#utility.yul\":6484:6507   */\n      sub\n        /* \"#utility.yul\":6480:6512   */\n      slt\n        /* \"#utility.yul\":6477:6596   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":6515:6594   */\n      tag_705\n      tag_549\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":6477:6596   */\n    tag_704:\n        /* \"#utility.yul\":6635:6636   */\n      0x00\n        /* \"#utility.yul\":6660:6713   */\n      tag_706\n        /* \"#utility.yul\":6705:6712   */\n      dup7\n        /* \"#utility.yul\":6696:6702   */\n      dup3\n        /* \"#utility.yul\":6685:6694   */\n      dup8\n        /* \"#utility.yul\":6681:6703   */\n      add\n        /* \"#utility.yul\":6660:6713   */\n      tag_554\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":6650:6713   */\n      swap4\n      pop\n        /* \"#utility.yul\":6606:6723   */\n      pop\n        /* \"#utility.yul\":6762:6764   */\n      0x20\n        /* \"#utility.yul\":6788:6841   */\n      tag_707\n        /* \"#utility.yul\":6833:6840   */\n      dup7\n        /* \"#utility.yul\":6824:6830   */\n      dup3\n        /* \"#utility.yul\":6813:6822   */\n      dup8\n        /* \"#utility.yul\":6809:6831   */\n      add\n        /* \"#utility.yul\":6788:6841   */\n      tag_554\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":6778:6841   */\n      swap3\n      pop\n        /* \"#utility.yul\":6733:6851   */\n      pop\n        /* \"#utility.yul\":6890:6892   */\n      0x40\n        /* \"#utility.yul\":6916:6969   */\n      tag_708\n        /* \"#utility.yul\":6961:6968   */\n      dup7\n        /* \"#utility.yul\":6952:6958   */\n      dup3\n        /* \"#utility.yul\":6941:6950   */\n      dup8\n        /* \"#utility.yul\":6937:6959   */\n      add\n        /* \"#utility.yul\":6916:6969   */\n      tag_557\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":6906:6969   */\n      swap2\n      pop\n        /* \"#utility.yul\":6861:6979   */\n      pop\n        /* \"#utility.yul\":6367:6986   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6992:7078   */\n    tag_566:\n        /* \"#utility.yul\":7027:7034   */\n      0x00\n        /* \"#utility.yul\":7067:7071   */\n      0xff\n        /* \"#utility.yul\":7060:7065   */\n      dup3\n        /* \"#utility.yul\":7056:7072   */\n      and\n        /* \"#utility.yul\":7045:7072   */\n      swap1\n      pop\n        /* \"#utility.yul\":6992:7078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7084:7196   */\n    tag_567:\n        /* \"#utility.yul\":7167:7189   */\n      tag_711\n        /* \"#utility.yul\":7183:7188   */\n      dup2\n        /* \"#utility.yul\":7167:7189   */\n      tag_566\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":7162:7165   */\n      dup3\n        /* \"#utility.yul\":7155:7190   */\n      mstore\n        /* \"#utility.yul\":7084:7196   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7202:7416   */\n    tag_111:\n        /* \"#utility.yul\":7291:7295   */\n      0x00\n        /* \"#utility.yul\":7329:7331   */\n      0x20\n        /* \"#utility.yul\":7318:7327   */\n      dup3\n        /* \"#utility.yul\":7314:7332   */\n      add\n        /* \"#utility.yul\":7306:7332   */\n      swap1\n      pop\n        /* \"#utility.yul\":7342:7409   */\n      tag_713\n        /* \"#utility.yul\":7406:7407   */\n      0x00\n        /* \"#utility.yul\":7395:7404   */\n      dup4\n        /* \"#utility.yul\":7391:7408   */\n      add\n        /* \"#utility.yul\":7382:7388   */\n      dup5\n        /* \"#utility.yul\":7342:7409   */\n      tag_567\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":7202:7416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7422:7540   */\n    tag_568:\n        /* \"#utility.yul\":7509:7533   */\n      tag_715\n        /* \"#utility.yul\":7527:7532   */\n      dup2\n        /* \"#utility.yul\":7509:7533   */\n      tag_552\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":7504:7507   */\n      dup3\n        /* \"#utility.yul\":7497:7534   */\n      mstore\n        /* \"#utility.yul\":7422:7540   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7546:7768   */\n    tag_151:\n        /* \"#utility.yul\":7639:7643   */\n      0x00\n        /* \"#utility.yul\":7677:7679   */\n      0x20\n        /* \"#utility.yul\":7666:7675   */\n      dup3\n        /* \"#utility.yul\":7662:7680   */\n      add\n        /* \"#utility.yul\":7654:7680   */\n      swap1\n      pop\n        /* \"#utility.yul\":7690:7761   */\n      tag_717\n        /* \"#utility.yul\":7758:7759   */\n      0x00\n        /* \"#utility.yul\":7747:7756   */\n      dup4\n        /* \"#utility.yul\":7743:7760   */\n      add\n        /* \"#utility.yul\":7734:7740   */\n      dup5\n        /* \"#utility.yul\":7690:7761   */\n      tag_568\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":7546:7768   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7774:7954   */\n    tag_265:\n        /* \"#utility.yul\":7822:7899   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7819:7820   */\n      0x00\n        /* \"#utility.yul\":7812:7900   */\n      mstore\n        /* \"#utility.yul\":7919:7923   */\n      0x21\n        /* \"#utility.yul\":7916:7917   */\n      0x04\n        /* \"#utility.yul\":7909:7924   */\n      mstore\n        /* \"#utility.yul\":7943:7947   */\n      0x24\n        /* \"#utility.yul\":7940:7941   */\n      0x00\n        /* \"#utility.yul\":7933:7948   */\n      revert\n        /* \"#utility.yul\":7960:8079   */\n    tag_569:\n        /* \"#utility.yul\":8047:8048   */\n      0x03\n        /* \"#utility.yul\":8040:8045   */\n      dup2\n        /* \"#utility.yul\":8037:8049   */\n      lt\n        /* \"#utility.yul\":8027:8073   */\n      tag_720\n      jumpi\n        /* \"#utility.yul\":8053:8071   */\n      tag_721\n      tag_265\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":8027:8073   */\n    tag_720:\n        /* \"#utility.yul\":7960:8079   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8085:8224   */\n    tag_570:\n        /* \"#utility.yul\":8136:8143   */\n      0x00\n        /* \"#utility.yul\":8165:8170   */\n      dup2\n        /* \"#utility.yul\":8154:8170   */\n      swap1\n      pop\n        /* \"#utility.yul\":8171:8218   */\n      tag_723\n        /* \"#utility.yul\":8212:8217   */\n      dup3\n        /* \"#utility.yul\":8171:8218   */\n      tag_569\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":8085:8224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8230:8369   */\n    tag_571:\n        /* \"#utility.yul\":8292:8301   */\n      0x00\n        /* \"#utility.yul\":8325:8363   */\n      tag_725\n        /* \"#utility.yul\":8357:8362   */\n      dup3\n        /* \"#utility.yul\":8325:8363   */\n      tag_570\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":8312:8363   */\n      swap1\n      pop\n        /* \"#utility.yul\":8230:8369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8375:8530   */\n    tag_572:\n        /* \"#utility.yul\":8474:8523   */\n      tag_727\n        /* \"#utility.yul\":8517:8522   */\n      dup2\n        /* \"#utility.yul\":8474:8523   */\n      tag_571\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":8469:8472   */\n      dup3\n        /* \"#utility.yul\":8462:8524   */\n      mstore\n        /* \"#utility.yul\":8375:8530   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8536:8782   */\n    tag_201:\n        /* \"#utility.yul\":8641:8645   */\n      0x00\n        /* \"#utility.yul\":8679:8681   */\n      0x20\n        /* \"#utility.yul\":8668:8677   */\n      dup3\n        /* \"#utility.yul\":8664:8682   */\n      add\n        /* \"#utility.yul\":8656:8682   */\n      swap1\n      pop\n        /* \"#utility.yul\":8692:8775   */\n      tag_729\n        /* \"#utility.yul\":8772:8773   */\n      0x00\n        /* \"#utility.yul\":8761:8770   */\n      dup4\n        /* \"#utility.yul\":8757:8774   */\n      add\n        /* \"#utility.yul\":8748:8754   */\n      dup5\n        /* \"#utility.yul\":8692:8775   */\n      tag_572\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":8536:8782   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8788:9262   */\n    tag_209:\n        /* \"#utility.yul\":8856:8862   */\n      0x00\n        /* \"#utility.yul\":8864:8870   */\n      dup1\n        /* \"#utility.yul\":8913:8915   */\n      0x40\n        /* \"#utility.yul\":8901:8910   */\n      dup4\n        /* \"#utility.yul\":8892:8899   */\n      dup6\n        /* \"#utility.yul\":8888:8911   */\n      sub\n        /* \"#utility.yul\":8884:8916   */\n      slt\n        /* \"#utility.yul\":8881:9000   */\n      iszero\n      tag_731\n      jumpi\n        /* \"#utility.yul\":8919:8998   */\n      tag_732\n      tag_549\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":8881:9000   */\n    tag_731:\n        /* \"#utility.yul\":9039:9040   */\n      0x00\n        /* \"#utility.yul\":9064:9117   */\n      tag_733\n        /* \"#utility.yul\":9109:9116   */\n      dup6\n        /* \"#utility.yul\":9100:9106   */\n      dup3\n        /* \"#utility.yul\":9089:9098   */\n      dup7\n        /* \"#utility.yul\":9085:9107   */\n      add\n        /* \"#utility.yul\":9064:9117   */\n      tag_554\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":9054:9117   */\n      swap3\n      pop\n        /* \"#utility.yul\":9010:9127   */\n      pop\n        /* \"#utility.yul\":9166:9168   */\n      0x20\n        /* \"#utility.yul\":9192:9245   */\n      tag_734\n        /* \"#utility.yul\":9237:9244   */\n      dup6\n        /* \"#utility.yul\":9228:9234   */\n      dup3\n        /* \"#utility.yul\":9217:9226   */\n      dup7\n        /* \"#utility.yul\":9213:9235   */\n      add\n        /* \"#utility.yul\":9192:9245   */\n      tag_554\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":9182:9245   */\n      swap2\n      pop\n        /* \"#utility.yul\":9137:9255   */\n      pop\n        /* \"#utility.yul\":8788:9262   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9268:9448   */\n    tag_573:\n        /* \"#utility.yul\":9316:9393   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9313:9314   */\n      0x00\n        /* \"#utility.yul\":9306:9394   */\n      mstore\n        /* \"#utility.yul\":9413:9417   */\n      0x22\n        /* \"#utility.yul\":9410:9411   */\n      0x04\n        /* \"#utility.yul\":9403:9418   */\n      mstore\n        /* \"#utility.yul\":9437:9441   */\n      0x24\n        /* \"#utility.yul\":9434:9435   */\n      0x00\n        /* \"#utility.yul\":9427:9442   */\n      revert\n        /* \"#utility.yul\":9454:9774   */\n    tag_222:\n        /* \"#utility.yul\":9498:9504   */\n      0x00\n        /* \"#utility.yul\":9535:9536   */\n      0x02\n        /* \"#utility.yul\":9529:9533   */\n      dup3\n        /* \"#utility.yul\":9525:9537   */\n      div\n        /* \"#utility.yul\":9515:9537   */\n      swap1\n      pop\n        /* \"#utility.yul\":9582:9583   */\n      0x01\n        /* \"#utility.yul\":9576:9580   */\n      dup3\n        /* \"#utility.yul\":9572:9584   */\n      and\n        /* \"#utility.yul\":9603:9621   */\n      dup1\n        /* \"#utility.yul\":9593:9674   */\n      tag_737\n      jumpi\n        /* \"#utility.yul\":9659:9663   */\n      0x7f\n        /* \"#utility.yul\":9651:9657   */\n      dup3\n        /* \"#utility.yul\":9647:9664   */\n      and\n        /* \"#utility.yul\":9637:9664   */\n      swap2\n      pop\n        /* \"#utility.yul\":9593:9674   */\n    tag_737:\n        /* \"#utility.yul\":9721:9723   */\n      0x20\n        /* \"#utility.yul\":9713:9719   */\n      dup3\n        /* \"#utility.yul\":9710:9724   */\n      lt\n        /* \"#utility.yul\":9690:9708   */\n      dup2\n        /* \"#utility.yul\":9687:9725   */\n      sub\n        /* \"#utility.yul\":9684:9768   */\n      tag_738\n      jumpi\n        /* \"#utility.yul\":9740:9758   */\n      tag_739\n      tag_573\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":9684:9768   */\n    tag_738:\n        /* \"#utility.yul\":9505:9774   */\n      pop\n        /* \"#utility.yul\":9454:9774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9780:9956   */\n    tag_574:\n        /* \"#utility.yul\":9920:9948   */\n      0x53616c65732074617267657473206e6f7420796574206d65742e000000000000\n        /* \"#utility.yul\":9916:9917   */\n      0x00\n        /* \"#utility.yul\":9908:9914   */\n      dup3\n        /* \"#utility.yul\":9904:9918   */\n      add\n        /* \"#utility.yul\":9897:9949   */\n      mstore\n        /* \"#utility.yul\":9780:9956   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9962:10328   */\n    tag_575:\n        /* \"#utility.yul\":10104:10107   */\n      0x00\n        /* \"#utility.yul\":10125:10192   */\n      tag_742\n        /* \"#utility.yul\":10189:10191   */\n      0x1a\n        /* \"#utility.yul\":10184:10187   */\n      dup4\n        /* \"#utility.yul\":10125:10192   */\n      tag_541\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":10118:10192   */\n      swap2\n      pop\n        /* \"#utility.yul\":10201:10294   */\n      tag_743\n        /* \"#utility.yul\":10290:10293   */\n      dup3\n        /* \"#utility.yul\":10201:10294   */\n      tag_574\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":10319:10321   */\n      0x20\n        /* \"#utility.yul\":10314:10317   */\n      dup3\n        /* \"#utility.yul\":10310:10322   */\n      add\n        /* \"#utility.yul\":10303:10322   */\n      swap1\n      pop\n        /* \"#utility.yul\":9962:10328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10334:10753   */\n    tag_262:\n        /* \"#utility.yul\":10500:10504   */\n      0x00\n        /* \"#utility.yul\":10538:10540   */\n      0x20\n        /* \"#utility.yul\":10527:10536   */\n      dup3\n        /* \"#utility.yul\":10523:10541   */\n      add\n        /* \"#utility.yul\":10515:10541   */\n      swap1\n      pop\n        /* \"#utility.yul\":10587:10596   */\n      dup2\n        /* \"#utility.yul\":10581:10585   */\n      dup2\n        /* \"#utility.yul\":10577:10597   */\n      sub\n        /* \"#utility.yul\":10573:10574   */\n      0x00\n        /* \"#utility.yul\":10562:10571   */\n      dup4\n        /* \"#utility.yul\":10558:10575   */\n      add\n        /* \"#utility.yul\":10551:10598   */\n      mstore\n        /* \"#utility.yul\":10615:10746   */\n      tag_745\n        /* \"#utility.yul\":10741:10745   */\n      dup2\n        /* \"#utility.yul\":10615:10746   */\n      tag_575\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":10607:10746   */\n      swap1\n      pop\n        /* \"#utility.yul\":10334:10753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10759:10990   */\n    tag_576:\n        /* \"#utility.yul\":10899:10933   */\n      0x507269766174652053616c652063616e206f6e6c792073746172742066726f6d\n        /* \"#utility.yul\":10895:10896   */\n      0x00\n        /* \"#utility.yul\":10887:10893   */\n      dup3\n        /* \"#utility.yul\":10883:10897   */\n      add\n        /* \"#utility.yul\":10876:10934   */\n      mstore\n        /* \"#utility.yul\":10968:10982   */\n      0x204e4f4e452073746167652e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":10963:10965   */\n      0x20\n        /* \"#utility.yul\":10955:10961   */\n      dup3\n        /* \"#utility.yul\":10951:10966   */\n      add\n        /* \"#utility.yul\":10944:10983   */\n      mstore\n        /* \"#utility.yul\":10759:10990   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10996:11362   */\n    tag_577:\n        /* \"#utility.yul\":11138:11141   */\n      0x00\n        /* \"#utility.yul\":11159:11226   */\n      tag_748\n        /* \"#utility.yul\":11223:11225   */\n      0x2c\n        /* \"#utility.yul\":11218:11221   */\n      dup4\n        /* \"#utility.yul\":11159:11226   */\n      tag_541\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":11152:11226   */\n      swap2\n      pop\n        /* \"#utility.yul\":11235:11328   */\n      tag_749\n        /* \"#utility.yul\":11324:11327   */\n      dup3\n        /* \"#utility.yul\":11235:11328   */\n      tag_576\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":11353:11355   */\n      0x40\n        /* \"#utility.yul\":11348:11351   */\n      dup3\n        /* \"#utility.yul\":11344:11356   */\n      add\n        /* \"#utility.yul\":11337:11356   */\n      swap1\n      pop\n        /* \"#utility.yul\":10996:11362   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11368:11787   */\n    tag_276:\n        /* \"#utility.yul\":11534:11538   */\n      0x00\n        /* \"#utility.yul\":11572:11574   */\n      0x20\n        /* \"#utility.yul\":11561:11570   */\n      dup3\n        /* \"#utility.yul\":11557:11575   */\n      add\n        /* \"#utility.yul\":11549:11575   */\n      swap1\n      pop\n        /* \"#utility.yul\":11621:11630   */\n      dup2\n        /* \"#utility.yul\":11615:11619   */\n      dup2\n        /* \"#utility.yul\":11611:11631   */\n      sub\n        /* \"#utility.yul\":11607:11608   */\n      0x00\n        /* \"#utility.yul\":11596:11605   */\n      dup4\n        /* \"#utility.yul\":11592:11609   */\n      add\n        /* \"#utility.yul\":11585:11632   */\n      mstore\n        /* \"#utility.yul\":11649:11780   */\n      tag_751\n        /* \"#utility.yul\":11775:11779   */\n      dup2\n        /* \"#utility.yul\":11649:11780   */\n      tag_577\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":11641:11780   */\n      swap1\n      pop\n        /* \"#utility.yul\":11368:11787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11793:12026   */\n    tag_578:\n        /* \"#utility.yul\":11933:11967   */\n      0x507269766174652053616c6520746f6b656e732073686f756c6420626520756e\n        /* \"#utility.yul\":11929:11930   */\n      0x00\n        /* \"#utility.yul\":11921:11927   */\n      dup3\n        /* \"#utility.yul\":11917:11931   */\n      add\n        /* \"#utility.yul\":11910:11968   */\n      mstore\n        /* \"#utility.yul\":12002:12018   */\n      0x736f6c642061742073746172742e000000000000000000000000000000000000\n        /* \"#utility.yul\":11997:11999   */\n      0x20\n        /* \"#utility.yul\":11989:11995   */\n      dup3\n        /* \"#utility.yul\":11985:12000   */\n      add\n        /* \"#utility.yul\":11978:12019   */\n      mstore\n        /* \"#utility.yul\":11793:12026   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12032:12398   */\n    tag_579:\n        /* \"#utility.yul\":12174:12177   */\n      0x00\n        /* \"#utility.yul\":12195:12262   */\n      tag_754\n        /* \"#utility.yul\":12259:12261   */\n      0x2e\n        /* \"#utility.yul\":12254:12257   */\n      dup4\n        /* \"#utility.yul\":12195:12262   */\n      tag_541\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":12188:12262   */\n      swap2\n      pop\n        /* \"#utility.yul\":12271:12364   */\n      tag_755\n        /* \"#utility.yul\":12360:12363   */\n      dup3\n        /* \"#utility.yul\":12271:12364   */\n      tag_578\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":12389:12391   */\n      0x40\n        /* \"#utility.yul\":12384:12387   */\n      dup3\n        /* \"#utility.yul\":12380:12392   */\n      add\n        /* \"#utility.yul\":12373:12392   */\n      swap1\n      pop\n        /* \"#utility.yul\":12032:12398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12404:12823   */\n    tag_279:\n        /* \"#utility.yul\":12570:12574   */\n      0x00\n        /* \"#utility.yul\":12608:12610   */\n      0x20\n        /* \"#utility.yul\":12597:12606   */\n      dup3\n        /* \"#utility.yul\":12593:12611   */\n      add\n        /* \"#utility.yul\":12585:12611   */\n      swap1\n      pop\n        /* \"#utility.yul\":12657:12666   */\n      dup2\n        /* \"#utility.yul\":12651:12655   */\n      dup2\n        /* \"#utility.yul\":12647:12667   */\n      sub\n        /* \"#utility.yul\":12643:12644   */\n      0x00\n        /* \"#utility.yul\":12632:12641   */\n      dup4\n        /* \"#utility.yul\":12628:12645   */\n      add\n        /* \"#utility.yul\":12621:12668   */\n      mstore\n        /* \"#utility.yul\":12685:12816   */\n      tag_757\n        /* \"#utility.yul\":12811:12815   */\n      dup2\n        /* \"#utility.yul\":12685:12816   */\n      tag_579\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":12677:12816   */\n      swap1\n      pop\n        /* \"#utility.yul\":12404:12823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12829:13069   */\n    tag_580:\n        /* \"#utility.yul\":12969:13003   */\n      0x5072652d53616c652073686f756c64206e6f7420686176652073746172746564\n        /* \"#utility.yul\":12965:12966   */\n      0x00\n        /* \"#utility.yul\":12957:12963   */\n      dup3\n        /* \"#utility.yul\":12953:12967   */\n      add\n        /* \"#utility.yul\":12946:13004   */\n      mstore\n        /* \"#utility.yul\":13038:13061   */\n      0x206265666f726520507269766174652053616c652e0000000000000000000000\n        /* \"#utility.yul\":13033:13035   */\n      0x20\n        /* \"#utility.yul\":13025:13031   */\n      dup3\n        /* \"#utility.yul\":13021:13036   */\n      add\n        /* \"#utility.yul\":13014:13062   */\n      mstore\n        /* \"#utility.yul\":12829:13069   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13075:13441   */\n    tag_581:\n        /* \"#utility.yul\":13217:13220   */\n      0x00\n        /* \"#utility.yul\":13238:13305   */\n      tag_760\n        /* \"#utility.yul\":13302:13304   */\n      0x35\n        /* \"#utility.yul\":13297:13300   */\n      dup4\n        /* \"#utility.yul\":13238:13305   */\n      tag_541\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":13231:13305   */\n      swap2\n      pop\n        /* \"#utility.yul\":13314:13407   */\n      tag_761\n        /* \"#utility.yul\":13403:13406   */\n      dup3\n        /* \"#utility.yul\":13314:13407   */\n      tag_580\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":13432:13434   */\n      0x40\n        /* \"#utility.yul\":13427:13430   */\n      dup3\n        /* \"#utility.yul\":13423:13435   */\n      add\n        /* \"#utility.yul\":13416:13435   */\n      swap1\n      pop\n        /* \"#utility.yul\":13075:13441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13447:13866   */\n    tag_282:\n        /* \"#utility.yul\":13613:13617   */\n      0x00\n        /* \"#utility.yul\":13651:13653   */\n      0x20\n        /* \"#utility.yul\":13640:13649   */\n      dup3\n        /* \"#utility.yul\":13636:13654   */\n      add\n        /* \"#utility.yul\":13628:13654   */\n      swap1\n      pop\n        /* \"#utility.yul\":13700:13709   */\n      dup2\n        /* \"#utility.yul\":13694:13698   */\n      dup2\n        /* \"#utility.yul\":13690:13710   */\n      sub\n        /* \"#utility.yul\":13686:13687   */\n      0x00\n        /* \"#utility.yul\":13675:13684   */\n      dup4\n        /* \"#utility.yul\":13671:13688   */\n      add\n        /* \"#utility.yul\":13664:13711   */\n      mstore\n        /* \"#utility.yul\":13728:13859   */\n      tag_763\n        /* \"#utility.yul\":13854:13858   */\n      dup2\n        /* \"#utility.yul\":13728:13859   */\n      tag_581\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":13720:13859   */\n      swap1\n      pop\n        /* \"#utility.yul\":13447:13866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13872:14040   */\n    tag_582:\n        /* \"#utility.yul\":14012:14032   */\n      0x4e6f2073616c65206973206163746976652e0000000000000000000000000000\n        /* \"#utility.yul\":14008:14009   */\n      0x00\n        /* \"#utility.yul\":14000:14006   */\n      dup3\n        /* \"#utility.yul\":13996:14010   */\n      add\n        /* \"#utility.yul\":13989:14033   */\n      mstore\n        /* \"#utility.yul\":13872:14040   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14046:14412   */\n    tag_583:\n        /* \"#utility.yul\":14188:14191   */\n      0x00\n        /* \"#utility.yul\":14209:14276   */\n      tag_766\n        /* \"#utility.yul\":14273:14275   */\n      0x12\n        /* \"#utility.yul\":14268:14271   */\n      dup4\n        /* \"#utility.yul\":14209:14276   */\n      tag_541\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":14202:14276   */\n      swap2\n      pop\n        /* \"#utility.yul\":14285:14378   */\n      tag_767\n        /* \"#utility.yul\":14374:14377   */\n      dup3\n        /* \"#utility.yul\":14285:14378   */\n      tag_582\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":14403:14405   */\n      0x20\n        /* \"#utility.yul\":14398:14401   */\n      dup3\n        /* \"#utility.yul\":14394:14406   */\n      add\n        /* \"#utility.yul\":14387:14406   */\n      swap1\n      pop\n        /* \"#utility.yul\":14046:14412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14418:14837   */\n    tag_295:\n        /* \"#utility.yul\":14584:14588   */\n      0x00\n        /* \"#utility.yul\":14622:14624   */\n      0x20\n        /* \"#utility.yul\":14611:14620   */\n      dup3\n        /* \"#utility.yul\":14607:14625   */\n      add\n        /* \"#utility.yul\":14599:14625   */\n      swap1\n      pop\n        /* \"#utility.yul\":14671:14680   */\n      dup2\n        /* \"#utility.yul\":14665:14669   */\n      dup2\n        /* \"#utility.yul\":14661:14681   */\n      sub\n        /* \"#utility.yul\":14657:14658   */\n      0x00\n        /* \"#utility.yul\":14646:14655   */\n      dup4\n        /* \"#utility.yul\":14642:14659   */\n      add\n        /* \"#utility.yul\":14635:14682   */\n      mstore\n        /* \"#utility.yul\":14699:14830   */\n      tag_769\n        /* \"#utility.yul\":14825:14829   */\n      dup2\n        /* \"#utility.yul\":14699:14830   */\n      tag_583\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":14691:14830   */\n      swap1\n      pop\n        /* \"#utility.yul\":14418:14837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14843:15018   */\n    tag_584:\n        /* \"#utility.yul\":14983:15010   */\n      0x496e76616c69642070726963652066726f6d206f7261636c6500000000000000\n        /* \"#utility.yul\":14979:14980   */\n      0x00\n        /* \"#utility.yul\":14971:14977   */\n      dup3\n        /* \"#utility.yul\":14967:14981   */\n      add\n        /* \"#utility.yul\":14960:15011   */\n      mstore\n        /* \"#utility.yul\":14843:15018   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15024:15390   */\n    tag_585:\n        /* \"#utility.yul\":15166:15169   */\n      0x00\n        /* \"#utility.yul\":15187:15254   */\n      tag_772\n        /* \"#utility.yul\":15251:15253   */\n      0x19\n        /* \"#utility.yul\":15246:15249   */\n      dup4\n        /* \"#utility.yul\":15187:15254   */\n      tag_541\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":15180:15254   */\n      swap2\n      pop\n        /* \"#utility.yul\":15263:15356   */\n      tag_773\n        /* \"#utility.yul\":15352:15355   */\n      dup3\n        /* \"#utility.yul\":15263:15356   */\n      tag_584\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":15381:15383   */\n      0x20\n        /* \"#utility.yul\":15376:15379   */\n      dup3\n        /* \"#utility.yul\":15372:15384   */\n      add\n        /* \"#utility.yul\":15365:15384   */\n      swap1\n      pop\n        /* \"#utility.yul\":15024:15390   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15396:15815   */\n    tag_299:\n        /* \"#utility.yul\":15562:15566   */\n      0x00\n        /* \"#utility.yul\":15600:15602   */\n      0x20\n        /* \"#utility.yul\":15589:15598   */\n      dup3\n        /* \"#utility.yul\":15585:15603   */\n      add\n        /* \"#utility.yul\":15577:15603   */\n      swap1\n      pop\n        /* \"#utility.yul\":15649:15658   */\n      dup2\n        /* \"#utility.yul\":15643:15647   */\n      dup2\n        /* \"#utility.yul\":15639:15659   */\n      sub\n        /* \"#utility.yul\":15635:15636   */\n      0x00\n        /* \"#utility.yul\":15624:15633   */\n      dup4\n        /* \"#utility.yul\":15620:15637   */\n      add\n        /* \"#utility.yul\":15613:15660   */\n      mstore\n        /* \"#utility.yul\":15677:15808   */\n      tag_775\n        /* \"#utility.yul\":15803:15807   */\n      dup2\n        /* \"#utility.yul\":15677:15808   */\n      tag_585\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":15669:15808   */\n      swap1\n      pop\n        /* \"#utility.yul\":15396:15815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15821:15993   */\n    tag_586:\n        /* \"#utility.yul\":15961:15985   */\n      0x507269766174652053616c6520736f6c64206f75742e00000000000000000000\n        /* \"#utility.yul\":15957:15958   */\n      0x00\n        /* \"#utility.yul\":15949:15955   */\n      dup3\n        /* \"#utility.yul\":15945:15959   */\n      add\n        /* \"#utility.yul\":15938:15986   */\n      mstore\n        /* \"#utility.yul\":15821:15993   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15999:16365   */\n    tag_587:\n        /* \"#utility.yul\":16141:16144   */\n      0x00\n        /* \"#utility.yul\":16162:16229   */\n      tag_778\n        /* \"#utility.yul\":16226:16228   */\n      0x16\n        /* \"#utility.yul\":16221:16224   */\n      dup4\n        /* \"#utility.yul\":16162:16229   */\n      tag_541\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":16155:16229   */\n      swap2\n      pop\n        /* \"#utility.yul\":16238:16331   */\n      tag_779\n        /* \"#utility.yul\":16327:16330   */\n      dup3\n        /* \"#utility.yul\":16238:16331   */\n      tag_586\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":16356:16358   */\n      0x20\n        /* \"#utility.yul\":16351:16354   */\n      dup3\n        /* \"#utility.yul\":16347:16359   */\n      add\n        /* \"#utility.yul\":16340:16359   */\n      swap1\n      pop\n        /* \"#utility.yul\":15999:16365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16371:16790   */\n    tag_307:\n        /* \"#utility.yul\":16537:16541   */\n      0x00\n        /* \"#utility.yul\":16575:16577   */\n      0x20\n        /* \"#utility.yul\":16564:16573   */\n      dup3\n        /* \"#utility.yul\":16560:16578   */\n      add\n        /* \"#utility.yul\":16552:16578   */\n      swap1\n      pop\n        /* \"#utility.yul\":16624:16633   */\n      dup2\n        /* \"#utility.yul\":16618:16622   */\n      dup2\n        /* \"#utility.yul\":16614:16634   */\n      sub\n        /* \"#utility.yul\":16610:16611   */\n      0x00\n        /* \"#utility.yul\":16599:16608   */\n      dup4\n        /* \"#utility.yul\":16595:16612   */\n      add\n        /* \"#utility.yul\":16588:16635   */\n      mstore\n        /* \"#utility.yul\":16652:16783   */\n      tag_781\n        /* \"#utility.yul\":16778:16782   */\n      dup2\n        /* \"#utility.yul\":16652:16783   */\n      tag_587\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":16644:16783   */\n      swap1\n      pop\n        /* \"#utility.yul\":16371:16790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16796:17016   */\n    tag_588:\n        /* \"#utility.yul\":16936:16970   */\n      0x4578636565647320507269766174652053616c6520746f6b656e206c696d6974\n        /* \"#utility.yul\":16932:16933   */\n      0x00\n        /* \"#utility.yul\":16924:16930   */\n      dup3\n        /* \"#utility.yul\":16920:16934   */\n      add\n        /* \"#utility.yul\":16913:16971   */\n      mstore\n        /* \"#utility.yul\":17005:17008   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17000:17002   */\n      0x20\n        /* \"#utility.yul\":16992:16998   */\n      dup3\n        /* \"#utility.yul\":16988:17003   */\n      add\n        /* \"#utility.yul\":16981:17009   */\n      mstore\n        /* \"#utility.yul\":16796:17016   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17022:17388   */\n    tag_589:\n        /* \"#utility.yul\":17164:17167   */\n      0x00\n        /* \"#utility.yul\":17185:17252   */\n      tag_784\n        /* \"#utility.yul\":17249:17251   */\n      0x21\n        /* \"#utility.yul\":17244:17247   */\n      dup4\n        /* \"#utility.yul\":17185:17252   */\n      tag_541\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":17178:17252   */\n      swap2\n      pop\n        /* \"#utility.yul\":17261:17354   */\n      tag_785\n        /* \"#utility.yul\":17350:17353   */\n      dup3\n        /* \"#utility.yul\":17261:17354   */\n      tag_588\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":17379:17381   */\n      0x40\n        /* \"#utility.yul\":17374:17377   */\n      dup3\n        /* \"#utility.yul\":17370:17382   */\n      add\n        /* \"#utility.yul\":17363:17382   */\n      swap1\n      pop\n        /* \"#utility.yul\":17022:17388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17394:17813   */\n    tag_318:\n        /* \"#utility.yul\":17560:17564   */\n      0x00\n        /* \"#utility.yul\":17598:17600   */\n      0x20\n        /* \"#utility.yul\":17587:17596   */\n      dup3\n        /* \"#utility.yul\":17583:17601   */\n      add\n        /* \"#utility.yul\":17575:17601   */\n      swap1\n      pop\n        /* \"#utility.yul\":17647:17656   */\n      dup2\n        /* \"#utility.yul\":17641:17645   */\n      dup2\n        /* \"#utility.yul\":17637:17657   */\n      sub\n        /* \"#utility.yul\":17633:17634   */\n      0x00\n        /* \"#utility.yul\":17622:17631   */\n      dup4\n        /* \"#utility.yul\":17618:17635   */\n      add\n        /* \"#utility.yul\":17611:17658   */\n      mstore\n        /* \"#utility.yul\":17675:17806   */\n      tag_787\n        /* \"#utility.yul\":17801:17805   */\n      dup2\n        /* \"#utility.yul\":17675:17806   */\n      tag_589\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":17667:17806   */\n      swap1\n      pop\n        /* \"#utility.yul\":17394:17813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17819:17987   */\n    tag_590:\n        /* \"#utility.yul\":17959:17979   */\n      0x5072652d53616c6520736f6c64206f75742e0000000000000000000000000000\n        /* \"#utility.yul\":17955:17956   */\n      0x00\n        /* \"#utility.yul\":17947:17953   */\n      dup3\n        /* \"#utility.yul\":17943:17957   */\n      add\n        /* \"#utility.yul\":17936:17980   */\n      mstore\n        /* \"#utility.yul\":17819:17987   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17993:18359   */\n    tag_591:\n        /* \"#utility.yul\":18135:18138   */\n      0x00\n        /* \"#utility.yul\":18156:18223   */\n      tag_790\n        /* \"#utility.yul\":18220:18222   */\n      0x12\n        /* \"#utility.yul\":18215:18218   */\n      dup4\n        /* \"#utility.yul\":18156:18223   */\n      tag_541\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":18149:18223   */\n      swap2\n      pop\n        /* \"#utility.yul\":18232:18325   */\n      tag_791\n        /* \"#utility.yul\":18321:18324   */\n      dup3\n        /* \"#utility.yul\":18232:18325   */\n      tag_590\n      jump\t// in\n    tag_791:\n        /* \"#utility.yul\":18350:18352   */\n      0x20\n        /* \"#utility.yul\":18345:18348   */\n      dup3\n        /* \"#utility.yul\":18341:18353   */\n      add\n        /* \"#utility.yul\":18334:18353   */\n      swap1\n      pop\n        /* \"#utility.yul\":17993:18359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18365:18784   */\n    tag_331:\n        /* \"#utility.yul\":18531:18535   */\n      0x00\n        /* \"#utility.yul\":18569:18571   */\n      0x20\n        /* \"#utility.yul\":18558:18567   */\n      dup3\n        /* \"#utility.yul\":18554:18572   */\n      add\n        /* \"#utility.yul\":18546:18572   */\n      swap1\n      pop\n        /* \"#utility.yul\":18618:18627   */\n      dup2\n        /* \"#utility.yul\":18612:18616   */\n      dup2\n        /* \"#utility.yul\":18608:18628   */\n      sub\n        /* \"#utility.yul\":18604:18605   */\n      0x00\n        /* \"#utility.yul\":18593:18602   */\n      dup4\n        /* \"#utility.yul\":18589:18606   */\n      add\n        /* \"#utility.yul\":18582:18629   */\n      mstore\n        /* \"#utility.yul\":18646:18777   */\n      tag_793\n        /* \"#utility.yul\":18772:18776   */\n      dup2\n        /* \"#utility.yul\":18646:18777   */\n      tag_591\n      jump\t// in\n    tag_793:\n        /* \"#utility.yul\":18638:18777   */\n      swap1\n      pop\n        /* \"#utility.yul\":18365:18784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18790:18970   */\n    tag_592:\n        /* \"#utility.yul\":18930:18962   */\n      0x507572636861736520616d6f756e74206f7574206f66206c696d6974732e0000\n        /* \"#utility.yul\":18926:18927   */\n      0x00\n        /* \"#utility.yul\":18918:18924   */\n      dup3\n        /* \"#utility.yul\":18914:18928   */\n      add\n        /* \"#utility.yul\":18907:18963   */\n      mstore\n        /* \"#utility.yul\":18790:18970   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18976:19342   */\n    tag_593:\n        /* \"#utility.yul\":19118:19121   */\n      0x00\n        /* \"#utility.yul\":19139:19206   */\n      tag_796\n        /* \"#utility.yul\":19203:19205   */\n      0x1e\n        /* \"#utility.yul\":19198:19201   */\n      dup4\n        /* \"#utility.yul\":19139:19206   */\n      tag_541\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":19132:19206   */\n      swap2\n      pop\n        /* \"#utility.yul\":19215:19308   */\n      tag_797\n        /* \"#utility.yul\":19304:19307   */\n      dup3\n        /* \"#utility.yul\":19215:19308   */\n      tag_592\n      jump\t// in\n    tag_797:\n        /* \"#utility.yul\":19333:19335   */\n      0x20\n        /* \"#utility.yul\":19328:19331   */\n      dup3\n        /* \"#utility.yul\":19324:19336   */\n      add\n        /* \"#utility.yul\":19317:19336   */\n      swap1\n      pop\n        /* \"#utility.yul\":18976:19342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19348:19767   */\n    tag_335:\n        /* \"#utility.yul\":19514:19518   */\n      0x00\n        /* \"#utility.yul\":19552:19554   */\n      0x20\n        /* \"#utility.yul\":19541:19550   */\n      dup3\n        /* \"#utility.yul\":19537:19555   */\n      add\n        /* \"#utility.yul\":19529:19555   */\n      swap1\n      pop\n        /* \"#utility.yul\":19601:19610   */\n      dup2\n        /* \"#utility.yul\":19595:19599   */\n      dup2\n        /* \"#utility.yul\":19591:19611   */\n      sub\n        /* \"#utility.yul\":19587:19588   */\n      0x00\n        /* \"#utility.yul\":19576:19585   */\n      dup4\n        /* \"#utility.yul\":19572:19589   */\n      add\n        /* \"#utility.yul\":19565:19612   */\n      mstore\n        /* \"#utility.yul\":19629:19760   */\n      tag_799\n        /* \"#utility.yul\":19755:19759   */\n      dup2\n        /* \"#utility.yul\":19629:19760   */\n      tag_593\n      jump\t// in\n    tag_799:\n        /* \"#utility.yul\":19621:19760   */\n      swap1\n      pop\n        /* \"#utility.yul\":19348:19767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19773:19952   */\n    tag_594:\n        /* \"#utility.yul\":19913:19944   */\n      0x45786365656473205072652d53616c6520746f6b656e206c696d69742e000000\n        /* \"#utility.yul\":19909:19910   */\n      0x00\n        /* \"#utility.yul\":19901:19907   */\n      dup3\n        /* \"#utility.yul\":19897:19911   */\n      add\n        /* \"#utility.yul\":19890:19945   */\n      mstore\n        /* \"#utility.yul\":19773:19952   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19958:20324   */\n    tag_595:\n        /* \"#utility.yul\":20100:20103   */\n      0x00\n        /* \"#utility.yul\":20121:20188   */\n      tag_802\n        /* \"#utility.yul\":20185:20187   */\n      0x1d\n        /* \"#utility.yul\":20180:20183   */\n      dup4\n        /* \"#utility.yul\":20121:20188   */\n      tag_541\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":20114:20188   */\n      swap2\n      pop\n        /* \"#utility.yul\":20197:20290   */\n      tag_803\n        /* \"#utility.yul\":20286:20289   */\n      dup3\n        /* \"#utility.yul\":20197:20290   */\n      tag_594\n      jump\t// in\n    tag_803:\n        /* \"#utility.yul\":20315:20317   */\n      0x20\n        /* \"#utility.yul\":20310:20313   */\n      dup3\n        /* \"#utility.yul\":20306:20318   */\n      add\n        /* \"#utility.yul\":20299:20318   */\n      swap1\n      pop\n        /* \"#utility.yul\":19958:20324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20330:20749   */\n    tag_343:\n        /* \"#utility.yul\":20496:20500   */\n      0x00\n        /* \"#utility.yul\":20534:20536   */\n      0x20\n        /* \"#utility.yul\":20523:20532   */\n      dup3\n        /* \"#utility.yul\":20519:20537   */\n      add\n        /* \"#utility.yul\":20511:20537   */\n      swap1\n      pop\n        /* \"#utility.yul\":20583:20592   */\n      dup2\n        /* \"#utility.yul\":20577:20581   */\n      dup2\n        /* \"#utility.yul\":20573:20593   */\n      sub\n        /* \"#utility.yul\":20569:20570   */\n      0x00\n        /* \"#utility.yul\":20558:20567   */\n      dup4\n        /* \"#utility.yul\":20554:20571   */\n      add\n        /* \"#utility.yul\":20547:20594   */\n      mstore\n        /* \"#utility.yul\":20611:20742   */\n      tag_805\n        /* \"#utility.yul\":20737:20741   */\n      dup2\n        /* \"#utility.yul\":20611:20742   */\n      tag_595\n      jump\t// in\n    tag_805:\n        /* \"#utility.yul\":20603:20742   */\n      swap1\n      pop\n        /* \"#utility.yul\":20330:20749   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20755:20975   */\n    tag_596:\n        /* \"#utility.yul\":20895:20929   */\n      0x56657374696e6720706572696f64206e6f742079657420636f6d706c65746564\n        /* \"#utility.yul\":20891:20892   */\n      0x00\n        /* \"#utility.yul\":20883:20889   */\n      dup3\n        /* \"#utility.yul\":20879:20893   */\n      add\n        /* \"#utility.yul\":20872:20930   */\n      mstore\n        /* \"#utility.yul\":20964:20967   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20959:20961   */\n      0x20\n        /* \"#utility.yul\":20951:20957   */\n      dup3\n        /* \"#utility.yul\":20947:20962   */\n      add\n        /* \"#utility.yul\":20940:20968   */\n      mstore\n        /* \"#utility.yul\":20755:20975   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20981:21347   */\n    tag_597:\n        /* \"#utility.yul\":21123:21126   */\n      0x00\n        /* \"#utility.yul\":21144:21211   */\n      tag_808\n        /* \"#utility.yul\":21208:21210   */\n      0x21\n        /* \"#utility.yul\":21203:21206   */\n      dup4\n        /* \"#utility.yul\":21144:21211   */\n      tag_541\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":21137:21211   */\n      swap2\n      pop\n        /* \"#utility.yul\":21220:21313   */\n      tag_809\n        /* \"#utility.yul\":21309:21312   */\n      dup3\n        /* \"#utility.yul\":21220:21313   */\n      tag_596\n      jump\t// in\n    tag_809:\n        /* \"#utility.yul\":21338:21340   */\n      0x40\n        /* \"#utility.yul\":21333:21336   */\n      dup3\n        /* \"#utility.yul\":21329:21341   */\n      add\n        /* \"#utility.yul\":21322:21341   */\n      swap1\n      pop\n        /* \"#utility.yul\":20981:21347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21353:21772   */\n    tag_352:\n        /* \"#utility.yul\":21519:21523   */\n      0x00\n        /* \"#utility.yul\":21557:21559   */\n      0x20\n        /* \"#utility.yul\":21546:21555   */\n      dup3\n        /* \"#utility.yul\":21542:21560   */\n      add\n        /* \"#utility.yul\":21534:21560   */\n      swap1\n      pop\n        /* \"#utility.yul\":21606:21615   */\n      dup2\n        /* \"#utility.yul\":21600:21604   */\n      dup2\n        /* \"#utility.yul\":21596:21616   */\n      sub\n        /* \"#utility.yul\":21592:21593   */\n      0x00\n        /* \"#utility.yul\":21581:21590   */\n      dup4\n        /* \"#utility.yul\":21577:21594   */\n      add\n        /* \"#utility.yul\":21570:21617   */\n      mstore\n        /* \"#utility.yul\":21634:21765   */\n      tag_811\n        /* \"#utility.yul\":21760:21764   */\n      dup2\n        /* \"#utility.yul\":21634:21765   */\n      tag_597\n      jump\t// in\n    tag_811:\n        /* \"#utility.yul\":21626:21765   */\n      swap1\n      pop\n        /* \"#utility.yul\":21353:21772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21778:21955   */\n    tag_598:\n        /* \"#utility.yul\":21918:21947   */\n      0x4e6f2076657374656420746f6b656e7320746f2072656c656173650000000000\n        /* \"#utility.yul\":21914:21915   */\n      0x00\n        /* \"#utility.yul\":21906:21912   */\n      dup3\n        /* \"#utility.yul\":21902:21916   */\n      add\n        /* \"#utility.yul\":21895:21948   */\n      mstore\n        /* \"#utility.yul\":21778:21955   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21961:22327   */\n    tag_599:\n        /* \"#utility.yul\":22103:22106   */\n      0x00\n        /* \"#utility.yul\":22124:22191   */\n      tag_814\n        /* \"#utility.yul\":22188:22190   */\n      0x1b\n        /* \"#utility.yul\":22183:22186   */\n      dup4\n        /* \"#utility.yul\":22124:22191   */\n      tag_541\n      jump\t// in\n    tag_814:\n        /* \"#utility.yul\":22117:22191   */\n      swap2\n      pop\n        /* \"#utility.yul\":22200:22293   */\n      tag_815\n        /* \"#utility.yul\":22289:22292   */\n      dup3\n        /* \"#utility.yul\":22200:22293   */\n      tag_598\n      jump\t// in\n    tag_815:\n        /* \"#utility.yul\":22318:22320   */\n      0x20\n        /* \"#utility.yul\":22313:22316   */\n      dup3\n        /* \"#utility.yul\":22309:22321   */\n      add\n        /* \"#utility.yul\":22302:22321   */\n      swap1\n      pop\n        /* \"#utility.yul\":21961:22327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22333:22752   */\n    tag_355:\n        /* \"#utility.yul\":22499:22503   */\n      0x00\n        /* \"#utility.yul\":22537:22539   */\n      0x20\n        /* \"#utility.yul\":22526:22535   */\n      dup3\n        /* \"#utility.yul\":22522:22540   */\n      add\n        /* \"#utility.yul\":22514:22540   */\n      swap1\n      pop\n        /* \"#utility.yul\":22586:22595   */\n      dup2\n        /* \"#utility.yul\":22580:22584   */\n      dup2\n        /* \"#utility.yul\":22576:22596   */\n      sub\n        /* \"#utility.yul\":22572:22573   */\n      0x00\n        /* \"#utility.yul\":22561:22570   */\n      dup4\n        /* \"#utility.yul\":22557:22574   */\n      add\n        /* \"#utility.yul\":22550:22597   */\n      mstore\n        /* \"#utility.yul\":22614:22745   */\n      tag_817\n        /* \"#utility.yul\":22740:22744   */\n      dup2\n        /* \"#utility.yul\":22614:22745   */\n      tag_599\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":22606:22745   */\n      swap1\n      pop\n        /* \"#utility.yul\":22333:22752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22758:22988   */\n    tag_600:\n        /* \"#utility.yul\":22898:22932   */\n      0x5072652d53616c652063616e206f6e6c79207374617274206166746572205072\n        /* \"#utility.yul\":22894:22895   */\n      0x00\n        /* \"#utility.yul\":22886:22892   */\n      dup3\n        /* \"#utility.yul\":22882:22896   */\n      add\n        /* \"#utility.yul\":22875:22933   */\n      mstore\n        /* \"#utility.yul\":22967:22980   */\n      0x69766174652053616c652e000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22962:22964   */\n      0x20\n        /* \"#utility.yul\":22954:22960   */\n      dup3\n        /* \"#utility.yul\":22950:22965   */\n      add\n        /* \"#utility.yul\":22943:22981   */\n      mstore\n        /* \"#utility.yul\":22758:22988   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22994:23360   */\n    tag_601:\n        /* \"#utility.yul\":23136:23139   */\n      0x00\n        /* \"#utility.yul\":23157:23224   */\n      tag_820\n        /* \"#utility.yul\":23221:23223   */\n      0x2b\n        /* \"#utility.yul\":23216:23219   */\n      dup4\n        /* \"#utility.yul\":23157:23224   */\n      tag_541\n      jump\t// in\n    tag_820:\n        /* \"#utility.yul\":23150:23224   */\n      swap2\n      pop\n        /* \"#utility.yul\":23233:23326   */\n      tag_821\n        /* \"#utility.yul\":23322:23325   */\n      dup3\n        /* \"#utility.yul\":23233:23326   */\n      tag_600\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":23351:23353   */\n      0x40\n        /* \"#utility.yul\":23346:23349   */\n      dup3\n        /* \"#utility.yul\":23342:23354   */\n      add\n        /* \"#utility.yul\":23335:23354   */\n      swap1\n      pop\n        /* \"#utility.yul\":22994:23360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23366:23785   */\n    tag_368:\n        /* \"#utility.yul\":23532:23536   */\n      0x00\n        /* \"#utility.yul\":23570:23572   */\n      0x20\n        /* \"#utility.yul\":23559:23568   */\n      dup3\n        /* \"#utility.yul\":23555:23573   */\n      add\n        /* \"#utility.yul\":23547:23573   */\n      swap1\n      pop\n        /* \"#utility.yul\":23619:23628   */\n      dup2\n        /* \"#utility.yul\":23613:23617   */\n      dup2\n        /* \"#utility.yul\":23609:23629   */\n      sub\n        /* \"#utility.yul\":23605:23606   */\n      0x00\n        /* \"#utility.yul\":23594:23603   */\n      dup4\n        /* \"#utility.yul\":23590:23607   */\n      add\n        /* \"#utility.yul\":23583:23630   */\n      mstore\n        /* \"#utility.yul\":23647:23778   */\n      tag_823\n        /* \"#utility.yul\":23773:23777   */\n      dup2\n        /* \"#utility.yul\":23647:23778   */\n      tag_601\n      jump\t// in\n    tag_823:\n        /* \"#utility.yul\":23639:23778   */\n      swap1\n      pop\n        /* \"#utility.yul\":23366:23785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23791:24034   */\n    tag_602:\n        /* \"#utility.yul\":23931:23965   */\n      0x507269766174652053616c65206d75737420626520636f6d706c657465642062\n        /* \"#utility.yul\":23927:23928   */\n      0x00\n        /* \"#utility.yul\":23919:23925   */\n      dup3\n        /* \"#utility.yul\":23915:23929   */\n      add\n        /* \"#utility.yul\":23908:23966   */\n      mstore\n        /* \"#utility.yul\":24000:24026   */\n      0x65666f7265207374617274696e67205072652d53616c652e0000000000000000\n        /* \"#utility.yul\":23995:23997   */\n      0x20\n        /* \"#utility.yul\":23987:23993   */\n      dup3\n        /* \"#utility.yul\":23983:23998   */\n      add\n        /* \"#utility.yul\":23976:24027   */\n      mstore\n        /* \"#utility.yul\":23791:24034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24040:24406   */\n    tag_603:\n        /* \"#utility.yul\":24182:24185   */\n      0x00\n        /* \"#utility.yul\":24203:24270   */\n      tag_826\n        /* \"#utility.yul\":24267:24269   */\n      0x38\n        /* \"#utility.yul\":24262:24265   */\n      dup4\n        /* \"#utility.yul\":24203:24270   */\n      tag_541\n      jump\t// in\n    tag_826:\n        /* \"#utility.yul\":24196:24270   */\n      swap2\n      pop\n        /* \"#utility.yul\":24279:24372   */\n      tag_827\n        /* \"#utility.yul\":24368:24371   */\n      dup3\n        /* \"#utility.yul\":24279:24372   */\n      tag_602\n      jump\t// in\n    tag_827:\n        /* \"#utility.yul\":24397:24399   */\n      0x40\n        /* \"#utility.yul\":24392:24395   */\n      dup3\n        /* \"#utility.yul\":24388:24400   */\n      add\n        /* \"#utility.yul\":24381:24400   */\n      swap1\n      pop\n        /* \"#utility.yul\":24040:24406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24412:24831   */\n    tag_371:\n        /* \"#utility.yul\":24578:24582   */\n      0x00\n        /* \"#utility.yul\":24616:24618   */\n      0x20\n        /* \"#utility.yul\":24605:24614   */\n      dup3\n        /* \"#utility.yul\":24601:24619   */\n      add\n        /* \"#utility.yul\":24593:24619   */\n      swap1\n      pop\n        /* \"#utility.yul\":24665:24674   */\n      dup2\n        /* \"#utility.yul\":24659:24663   */\n      dup2\n        /* \"#utility.yul\":24655:24675   */\n      sub\n        /* \"#utility.yul\":24651:24652   */\n      0x00\n        /* \"#utility.yul\":24640:24649   */\n      dup4\n        /* \"#utility.yul\":24636:24653   */\n      add\n        /* \"#utility.yul\":24629:24676   */\n      mstore\n        /* \"#utility.yul\":24693:24824   */\n      tag_829\n        /* \"#utility.yul\":24819:24823   */\n      dup2\n        /* \"#utility.yul\":24693:24824   */\n      tag_603\n      jump\t// in\n    tag_829:\n        /* \"#utility.yul\":24685:24824   */\n      swap1\n      pop\n        /* \"#utility.yul\":24412:24831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24837:25016   */\n    tag_604:\n        /* \"#utility.yul\":24977:25008   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":24973:24974   */\n      0x00\n        /* \"#utility.yul\":24965:24971   */\n      dup3\n        /* \"#utility.yul\":24961:24975   */\n      add\n        /* \"#utility.yul\":24954:25009   */\n      mstore\n        /* \"#utility.yul\":24837:25016   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25022:25388   */\n    tag_605:\n        /* \"#utility.yul\":25164:25167   */\n      0x00\n        /* \"#utility.yul\":25185:25252   */\n      tag_832\n        /* \"#utility.yul\":25249:25251   */\n      0x1d\n        /* \"#utility.yul\":25244:25247   */\n      dup4\n        /* \"#utility.yul\":25185:25252   */\n      tag_541\n      jump\t// in\n    tag_832:\n        /* \"#utility.yul\":25178:25252   */\n      swap2\n      pop\n        /* \"#utility.yul\":25261:25354   */\n      tag_833\n        /* \"#utility.yul\":25350:25353   */\n      dup3\n        /* \"#utility.yul\":25261:25354   */\n      tag_604\n      jump\t// in\n    tag_833:\n        /* \"#utility.yul\":25379:25381   */\n      0x20\n        /* \"#utility.yul\":25374:25377   */\n      dup3\n        /* \"#utility.yul\":25370:25382   */\n      add\n        /* \"#utility.yul\":25363:25382   */\n      swap1\n      pop\n        /* \"#utility.yul\":25022:25388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25394:25813   */\n    tag_388:\n        /* \"#utility.yul\":25560:25564   */\n      0x00\n        /* \"#utility.yul\":25598:25600   */\n      0x20\n        /* \"#utility.yul\":25587:25596   */\n      dup3\n        /* \"#utility.yul\":25583:25601   */\n      add\n        /* \"#utility.yul\":25575:25601   */\n      swap1\n      pop\n        /* \"#utility.yul\":25647:25656   */\n      dup2\n        /* \"#utility.yul\":25641:25645   */\n      dup2\n        /* \"#utility.yul\":25637:25657   */\n      sub\n        /* \"#utility.yul\":25633:25634   */\n      0x00\n        /* \"#utility.yul\":25622:25631   */\n      dup4\n        /* \"#utility.yul\":25618:25635   */\n      add\n        /* \"#utility.yul\":25611:25658   */\n      mstore\n        /* \"#utility.yul\":25675:25806   */\n      tag_835\n        /* \"#utility.yul\":25801:25805   */\n      dup2\n        /* \"#utility.yul\":25675:25806   */\n      tag_605\n      jump\t// in\n    tag_835:\n        /* \"#utility.yul\":25667:25806   */\n      swap1\n      pop\n        /* \"#utility.yul\":25394:25813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25819:25998   */\n    tag_606:\n        /* \"#utility.yul\":25959:25990   */\n      0x496e73756666696369656e742062616c616e636520746f207374616b65000000\n        /* \"#utility.yul\":25955:25956   */\n      0x00\n        /* \"#utility.yul\":25947:25953   */\n      dup3\n        /* \"#utility.yul\":25943:25957   */\n      add\n        /* \"#utility.yul\":25936:25991   */\n      mstore\n        /* \"#utility.yul\":25819:25998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26004:26370   */\n    tag_607:\n        /* \"#utility.yul\":26146:26149   */\n      0x00\n        /* \"#utility.yul\":26167:26234   */\n      tag_838\n        /* \"#utility.yul\":26231:26233   */\n      0x1d\n        /* \"#utility.yul\":26226:26229   */\n      dup4\n        /* \"#utility.yul\":26167:26234   */\n      tag_541\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":26160:26234   */\n      swap2\n      pop\n        /* \"#utility.yul\":26243:26336   */\n      tag_839\n        /* \"#utility.yul\":26332:26335   */\n      dup3\n        /* \"#utility.yul\":26243:26336   */\n      tag_606\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":26361:26363   */\n      0x20\n        /* \"#utility.yul\":26356:26359   */\n      dup3\n        /* \"#utility.yul\":26352:26364   */\n      add\n        /* \"#utility.yul\":26345:26364   */\n      swap1\n      pop\n        /* \"#utility.yul\":26004:26370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26376:26795   */\n    tag_392:\n        /* \"#utility.yul\":26542:26546   */\n      0x00\n        /* \"#utility.yul\":26580:26582   */\n      0x20\n        /* \"#utility.yul\":26569:26578   */\n      dup3\n        /* \"#utility.yul\":26565:26583   */\n      add\n        /* \"#utility.yul\":26557:26583   */\n      swap1\n      pop\n        /* \"#utility.yul\":26629:26638   */\n      dup2\n        /* \"#utility.yul\":26623:26627   */\n      dup2\n        /* \"#utility.yul\":26619:26639   */\n      sub\n        /* \"#utility.yul\":26615:26616   */\n      0x00\n        /* \"#utility.yul\":26604:26613   */\n      dup4\n        /* \"#utility.yul\":26600:26617   */\n      add\n        /* \"#utility.yul\":26593:26640   */\n      mstore\n        /* \"#utility.yul\":26657:26788   */\n      tag_841\n        /* \"#utility.yul\":26783:26787   */\n      dup2\n        /* \"#utility.yul\":26657:26788   */\n      tag_607\n      jump\t// in\n    tag_841:\n        /* \"#utility.yul\":26649:26788   */\n      swap1\n      pop\n        /* \"#utility.yul\":26376:26795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26801:27133   */\n    tag_397:\n        /* \"#utility.yul\":26922:26926   */\n      0x00\n        /* \"#utility.yul\":26960:26962   */\n      0x40\n        /* \"#utility.yul\":26949:26958   */\n      dup3\n        /* \"#utility.yul\":26945:26963   */\n      add\n        /* \"#utility.yul\":26937:26963   */\n      swap1\n      pop\n        /* \"#utility.yul\":26973:27044   */\n      tag_843\n        /* \"#utility.yul\":27041:27042   */\n      0x00\n        /* \"#utility.yul\":27030:27039   */\n      dup4\n        /* \"#utility.yul\":27026:27043   */\n      add\n        /* \"#utility.yul\":27017:27023   */\n      dup6\n        /* \"#utility.yul\":26973:27044   */\n      tag_560\n      jump\t// in\n    tag_843:\n        /* \"#utility.yul\":27054:27126   */\n      tag_844\n        /* \"#utility.yul\":27122:27124   */\n      0x20\n        /* \"#utility.yul\":27111:27120   */\n      dup4\n        /* \"#utility.yul\":27107:27125   */\n      add\n        /* \"#utility.yul\":27098:27104   */\n      dup5\n        /* \"#utility.yul\":27054:27126   */\n      tag_560\n      jump\t// in\n    tag_844:\n        /* \"#utility.yul\":26801:27133   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27139:27319   */\n    tag_406:\n        /* \"#utility.yul\":27187:27264   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27184:27185   */\n      0x00\n        /* \"#utility.yul\":27177:27265   */\n      mstore\n        /* \"#utility.yul\":27284:27288   */\n      0x32\n        /* \"#utility.yul\":27281:27282   */\n      0x04\n        /* \"#utility.yul\":27274:27289   */\n      mstore\n        /* \"#utility.yul\":27308:27312   */\n      0x24\n        /* \"#utility.yul\":27305:27306   */\n      0x00\n        /* \"#utility.yul\":27298:27313   */\n      revert\n        /* \"#utility.yul\":27325:27430   */\n    tag_608:\n        /* \"#utility.yul\":27361:27368   */\n      0x00\n        /* \"#utility.yul\":27401:27423   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":27394:27399   */\n      dup3\n        /* \"#utility.yul\":27390:27424   */\n      and\n        /* \"#utility.yul\":27379:27424   */\n      swap1\n      pop\n        /* \"#utility.yul\":27325:27430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27436:27556   */\n    tag_609:\n        /* \"#utility.yul\":27508:27531   */\n      tag_848\n        /* \"#utility.yul\":27525:27530   */\n      dup2\n        /* \"#utility.yul\":27508:27531   */\n      tag_608\n      jump\t// in\n    tag_848:\n        /* \"#utility.yul\":27501:27506   */\n      dup2\n        /* \"#utility.yul\":27498:27532   */\n      eq\n        /* \"#utility.yul\":27488:27550   */\n      tag_849\n      jumpi\n        /* \"#utility.yul\":27546:27547   */\n      0x00\n        /* \"#utility.yul\":27543:27544   */\n      dup1\n        /* \"#utility.yul\":27536:27548   */\n      revert\n        /* \"#utility.yul\":27488:27550   */\n    tag_849:\n        /* \"#utility.yul\":27436:27556   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27562:27703   */\n    tag_610:\n        /* \"#utility.yul\":27618:27623   */\n      0x00\n        /* \"#utility.yul\":27649:27655   */\n      dup2\n        /* \"#utility.yul\":27643:27656   */\n      mload\n        /* \"#utility.yul\":27634:27656   */\n      swap1\n      pop\n        /* \"#utility.yul\":27665:27697   */\n      tag_851\n        /* \"#utility.yul\":27691:27696   */\n      dup2\n        /* \"#utility.yul\":27665:27697   */\n      tag_609\n      jump\t// in\n    tag_851:\n        /* \"#utility.yul\":27562:27703   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27709:27785   */\n    tag_611:\n        /* \"#utility.yul\":27745:27752   */\n      0x00\n        /* \"#utility.yul\":27774:27779   */\n      dup2\n        /* \"#utility.yul\":27763:27779   */\n      swap1\n      pop\n        /* \"#utility.yul\":27709:27785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27791:27911   */\n    tag_612:\n        /* \"#utility.yul\":27863:27886   */\n      tag_854\n        /* \"#utility.yul\":27880:27885   */\n      dup2\n        /* \"#utility.yul\":27863:27886   */\n      tag_611\n      jump\t// in\n    tag_854:\n        /* \"#utility.yul\":27856:27861   */\n      dup2\n        /* \"#utility.yul\":27853:27887   */\n      eq\n        /* \"#utility.yul\":27843:27905   */\n      tag_855\n      jumpi\n        /* \"#utility.yul\":27901:27902   */\n      0x00\n        /* \"#utility.yul\":27898:27899   */\n      dup1\n        /* \"#utility.yul\":27891:27903   */\n      revert\n        /* \"#utility.yul\":27843:27905   */\n    tag_855:\n        /* \"#utility.yul\":27791:27911   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27917:28058   */\n    tag_613:\n        /* \"#utility.yul\":27973:27978   */\n      0x00\n        /* \"#utility.yul\":28004:28010   */\n      dup2\n        /* \"#utility.yul\":27998:28011   */\n      mload\n        /* \"#utility.yul\":27989:28011   */\n      swap1\n      pop\n        /* \"#utility.yul\":28020:28052   */\n      tag_857\n        /* \"#utility.yul\":28046:28051   */\n      dup2\n        /* \"#utility.yul\":28020:28052   */\n      tag_612\n      jump\t// in\n    tag_857:\n        /* \"#utility.yul\":27917:28058   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28064:28207   */\n    tag_614:\n        /* \"#utility.yul\":28121:28126   */\n      0x00\n        /* \"#utility.yul\":28152:28158   */\n      dup2\n        /* \"#utility.yul\":28146:28159   */\n      mload\n        /* \"#utility.yul\":28137:28159   */\n      swap1\n      pop\n        /* \"#utility.yul\":28168:28201   */\n      tag_859\n        /* \"#utility.yul\":28195:28200   */\n      dup2\n        /* \"#utility.yul\":28168:28201   */\n      tag_556\n      jump\t// in\n    tag_859:\n        /* \"#utility.yul\":28064:28207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28213:29184   */\n    tag_411:\n        /* \"#utility.yul\":28316:28322   */\n      0x00\n        /* \"#utility.yul\":28324:28330   */\n      dup1\n        /* \"#utility.yul\":28332:28338   */\n      0x00\n        /* \"#utility.yul\":28340:28346   */\n      dup1\n        /* \"#utility.yul\":28348:28354   */\n      0x00\n        /* \"#utility.yul\":28397:28400   */\n      0xa0\n        /* \"#utility.yul\":28385:28394   */\n      dup7\n        /* \"#utility.yul\":28376:28383   */\n      dup9\n        /* \"#utility.yul\":28372:28395   */\n      sub\n        /* \"#utility.yul\":28368:28401   */\n      slt\n        /* \"#utility.yul\":28365:28485   */\n      iszero\n      tag_861\n      jumpi\n        /* \"#utility.yul\":28404:28483   */\n      tag_862\n      tag_549\n      jump\t// in\n    tag_862:\n        /* \"#utility.yul\":28365:28485   */\n    tag_861:\n        /* \"#utility.yul\":28524:28525   */\n      0x00\n        /* \"#utility.yul\":28549:28612   */\n      tag_863\n        /* \"#utility.yul\":28604:28611   */\n      dup9\n        /* \"#utility.yul\":28595:28601   */\n      dup3\n        /* \"#utility.yul\":28584:28593   */\n      dup10\n        /* \"#utility.yul\":28580:28602   */\n      add\n        /* \"#utility.yul\":28549:28612   */\n      tag_610\n      jump\t// in\n    tag_863:\n        /* \"#utility.yul\":28539:28612   */\n      swap6\n      pop\n        /* \"#utility.yul\":28495:28622   */\n      pop\n        /* \"#utility.yul\":28661:28663   */\n      0x20\n        /* \"#utility.yul\":28687:28750   */\n      tag_864\n        /* \"#utility.yul\":28742:28749   */\n      dup9\n        /* \"#utility.yul\":28733:28739   */\n      dup3\n        /* \"#utility.yul\":28722:28731   */\n      dup10\n        /* \"#utility.yul\":28718:28740   */\n      add\n        /* \"#utility.yul\":28687:28750   */\n      tag_613\n      jump\t// in\n    tag_864:\n        /* \"#utility.yul\":28677:28750   */\n      swap5\n      pop\n        /* \"#utility.yul\":28632:28760   */\n      pop\n        /* \"#utility.yul\":28799:28801   */\n      0x40\n        /* \"#utility.yul\":28825:28889   */\n      tag_865\n        /* \"#utility.yul\":28881:28888   */\n      dup9\n        /* \"#utility.yul\":28872:28878   */\n      dup3\n        /* \"#utility.yul\":28861:28870   */\n      dup10\n        /* \"#utility.yul\":28857:28879   */\n      add\n        /* \"#utility.yul\":28825:28889   */\n      tag_614\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":28815:28889   */\n      swap4\n      pop\n        /* \"#utility.yul\":28770:28899   */\n      pop\n        /* \"#utility.yul\":28938:28940   */\n      0x60\n        /* \"#utility.yul\":28964:29028   */\n      tag_866\n        /* \"#utility.yul\":29020:29027   */\n      dup9\n        /* \"#utility.yul\":29011:29017   */\n      dup3\n        /* \"#utility.yul\":29000:29009   */\n      dup10\n        /* \"#utility.yul\":28996:29018   */\n      add\n        /* \"#utility.yul\":28964:29028   */\n      tag_614\n      jump\t// in\n    tag_866:\n        /* \"#utility.yul\":28954:29028   */\n      swap3\n      pop\n        /* \"#utility.yul\":28909:29038   */\n      pop\n        /* \"#utility.yul\":29077:29080   */\n      0x80\n        /* \"#utility.yul\":29104:29167   */\n      tag_867\n        /* \"#utility.yul\":29159:29166   */\n      dup9\n        /* \"#utility.yul\":29150:29156   */\n      dup3\n        /* \"#utility.yul\":29139:29148   */\n      dup10\n        /* \"#utility.yul\":29135:29157   */\n      add\n        /* \"#utility.yul\":29104:29167   */\n      tag_610\n      jump\t// in\n    tag_867:\n        /* \"#utility.yul\":29094:29167   */\n      swap2\n      pop\n        /* \"#utility.yul\":29048:29177   */\n      pop\n        /* \"#utility.yul\":28213:29184   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29190:29370   */\n    tag_615:\n        /* \"#utility.yul\":29330:29362   */\n      0x496e76616c696420707269636520646174612066726f6d206f7261636c650000\n        /* \"#utility.yul\":29326:29327   */\n      0x00\n        /* \"#utility.yul\":29318:29324   */\n      dup3\n        /* \"#utility.yul\":29314:29328   */\n      add\n        /* \"#utility.yul\":29307:29363   */\n      mstore\n        /* \"#utility.yul\":29190:29370   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29376:29742   */\n    tag_616:\n        /* \"#utility.yul\":29518:29521   */\n      0x00\n        /* \"#utility.yul\":29539:29606   */\n      tag_870\n        /* \"#utility.yul\":29603:29605   */\n      0x1e\n        /* \"#utility.yul\":29598:29601   */\n      dup4\n        /* \"#utility.yul\":29539:29606   */\n      tag_541\n      jump\t// in\n    tag_870:\n        /* \"#utility.yul\":29532:29606   */\n      swap2\n      pop\n        /* \"#utility.yul\":29615:29708   */\n      tag_871\n        /* \"#utility.yul\":29704:29707   */\n      dup3\n        /* \"#utility.yul\":29615:29708   */\n      tag_615\n      jump\t// in\n    tag_871:\n        /* \"#utility.yul\":29733:29735   */\n      0x20\n        /* \"#utility.yul\":29728:29731   */\n      dup3\n        /* \"#utility.yul\":29724:29736   */\n      add\n        /* \"#utility.yul\":29717:29736   */\n      swap1\n      pop\n        /* \"#utility.yul\":29376:29742   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29748:30167   */\n    tag_414:\n        /* \"#utility.yul\":29914:29918   */\n      0x00\n        /* \"#utility.yul\":29952:29954   */\n      0x20\n        /* \"#utility.yul\":29941:29950   */\n      dup3\n        /* \"#utility.yul\":29937:29955   */\n      add\n        /* \"#utility.yul\":29929:29955   */\n      swap1\n      pop\n        /* \"#utility.yul\":30001:30010   */\n      dup2\n        /* \"#utility.yul\":29995:29999   */\n      dup2\n        /* \"#utility.yul\":29991:30011   */\n      sub\n        /* \"#utility.yul\":29987:29988   */\n      0x00\n        /* \"#utility.yul\":29976:29985   */\n      dup4\n        /* \"#utility.yul\":29972:29989   */\n      add\n        /* \"#utility.yul\":29965:30012   */\n      mstore\n        /* \"#utility.yul\":30029:30160   */\n      tag_873\n        /* \"#utility.yul\":30155:30159   */\n      dup2\n        /* \"#utility.yul\":30029:30160   */\n      tag_616\n      jump\t// in\n    tag_873:\n        /* \"#utility.yul\":30021:30160   */\n      swap1\n      pop\n        /* \"#utility.yul\":29748:30167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30173:30505   */\n    tag_425:\n        /* \"#utility.yul\":30294:30298   */\n      0x00\n        /* \"#utility.yul\":30332:30334   */\n      0x40\n        /* \"#utility.yul\":30321:30330   */\n      dup3\n        /* \"#utility.yul\":30317:30335   */\n      add\n        /* \"#utility.yul\":30309:30335   */\n      swap1\n      pop\n        /* \"#utility.yul\":30345:30416   */\n      tag_875\n        /* \"#utility.yul\":30413:30414   */\n      0x00\n        /* \"#utility.yul\":30402:30411   */\n      dup4\n        /* \"#utility.yul\":30398:30415   */\n      add\n        /* \"#utility.yul\":30389:30395   */\n      dup6\n        /* \"#utility.yul\":30345:30416   */\n      tag_568\n      jump\t// in\n    tag_875:\n        /* \"#utility.yul\":30426:30498   */\n      tag_876\n        /* \"#utility.yul\":30494:30496   */\n      0x20\n        /* \"#utility.yul\":30483:30492   */\n      dup4\n        /* \"#utility.yul\":30479:30497   */\n      add\n        /* \"#utility.yul\":30470:30476   */\n      dup5\n        /* \"#utility.yul\":30426:30498   */\n      tag_560\n      jump\t// in\n    tag_876:\n        /* \"#utility.yul\":30173:30505   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30511:30627   */\n    tag_617:\n        /* \"#utility.yul\":30581:30602   */\n      tag_878\n        /* \"#utility.yul\":30596:30601   */\n      dup2\n        /* \"#utility.yul\":30581:30602   */\n      tag_558\n      jump\t// in\n    tag_878:\n        /* \"#utility.yul\":30574:30579   */\n      dup2\n        /* \"#utility.yul\":30571:30603   */\n      eq\n        /* \"#utility.yul\":30561:30621   */\n      tag_879\n      jumpi\n        /* \"#utility.yul\":30617:30618   */\n      0x00\n        /* \"#utility.yul\":30614:30615   */\n      dup1\n        /* \"#utility.yul\":30607:30619   */\n      revert\n        /* \"#utility.yul\":30561:30621   */\n    tag_879:\n        /* \"#utility.yul\":30511:30627   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30633:30770   */\n    tag_618:\n        /* \"#utility.yul\":30687:30692   */\n      0x00\n        /* \"#utility.yul\":30718:30724   */\n      dup2\n        /* \"#utility.yul\":30712:30725   */\n      mload\n        /* \"#utility.yul\":30703:30725   */\n      swap1\n      pop\n        /* \"#utility.yul\":30734:30764   */\n      tag_881\n        /* \"#utility.yul\":30758:30763   */\n      dup2\n        /* \"#utility.yul\":30734:30764   */\n      tag_617\n      jump\t// in\n    tag_881:\n        /* \"#utility.yul\":30633:30770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30776:31121   */\n    tag_429:\n        /* \"#utility.yul\":30843:30849   */\n      0x00\n        /* \"#utility.yul\":30892:30894   */\n      0x20\n        /* \"#utility.yul\":30880:30889   */\n      dup3\n        /* \"#utility.yul\":30871:30878   */\n      dup5\n        /* \"#utility.yul\":30867:30890   */\n      sub\n        /* \"#utility.yul\":30863:30895   */\n      slt\n        /* \"#utility.yul\":30860:30979   */\n      iszero\n      tag_883\n      jumpi\n        /* \"#utility.yul\":30898:30977   */\n      tag_884\n      tag_549\n      jump\t// in\n    tag_884:\n        /* \"#utility.yul\":30860:30979   */\n    tag_883:\n        /* \"#utility.yul\":31018:31019   */\n      0x00\n        /* \"#utility.yul\":31043:31104   */\n      tag_885\n        /* \"#utility.yul\":31096:31103   */\n      dup5\n        /* \"#utility.yul\":31087:31093   */\n      dup3\n        /* \"#utility.yul\":31076:31085   */\n      dup6\n        /* \"#utility.yul\":31072:31094   */\n      add\n        /* \"#utility.yul\":31043:31104   */\n      tag_618\n      jump\t// in\n    tag_885:\n        /* \"#utility.yul\":31033:31104   */\n      swap2\n      pop\n        /* \"#utility.yul\":30989:31114   */\n      pop\n        /* \"#utility.yul\":30776:31121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31127:31569   */\n    tag_458:\n        /* \"#utility.yul\":31276:31280   */\n      0x00\n        /* \"#utility.yul\":31314:31316   */\n      0x60\n        /* \"#utility.yul\":31303:31312   */\n      dup3\n        /* \"#utility.yul\":31299:31317   */\n      add\n        /* \"#utility.yul\":31291:31317   */\n      swap1\n      pop\n        /* \"#utility.yul\":31327:31398   */\n      tag_887\n        /* \"#utility.yul\":31395:31396   */\n      0x00\n        /* \"#utility.yul\":31384:31393   */\n      dup4\n        /* \"#utility.yul\":31380:31397   */\n      add\n        /* \"#utility.yul\":31371:31377   */\n      dup7\n        /* \"#utility.yul\":31327:31398   */\n      tag_568\n      jump\t// in\n    tag_887:\n        /* \"#utility.yul\":31408:31480   */\n      tag_888\n        /* \"#utility.yul\":31476:31478   */\n      0x20\n        /* \"#utility.yul\":31465:31474   */\n      dup4\n        /* \"#utility.yul\":31461:31479   */\n      add\n        /* \"#utility.yul\":31452:31458   */\n      dup6\n        /* \"#utility.yul\":31408:31480   */\n      tag_560\n      jump\t// in\n    tag_888:\n        /* \"#utility.yul\":31490:31562   */\n      tag_889\n        /* \"#utility.yul\":31558:31560   */\n      0x40\n        /* \"#utility.yul\":31547:31556   */\n      dup4\n        /* \"#utility.yul\":31543:31561   */\n      add\n        /* \"#utility.yul\":31534:31540   */\n      dup5\n        /* \"#utility.yul\":31490:31562   */\n      tag_560\n      jump\t// in\n    tag_889:\n        /* \"#utility.yul\":31127:31569   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31575:31756   */\n    tag_619:\n        /* \"#utility.yul\":31715:31748   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":31711:31712   */\n      0x00\n        /* \"#utility.yul\":31703:31709   */\n      dup3\n        /* \"#utility.yul\":31699:31713   */\n      add\n        /* \"#utility.yul\":31692:31749   */\n      mstore\n        /* \"#utility.yul\":31575:31756   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31762:32128   */\n    tag_620:\n        /* \"#utility.yul\":31904:31907   */\n      0x00\n        /* \"#utility.yul\":31925:31992   */\n      tag_892\n        /* \"#utility.yul\":31989:31991   */\n      0x1f\n        /* \"#utility.yul\":31984:31987   */\n      dup4\n        /* \"#utility.yul\":31925:31992   */\n      tag_541\n      jump\t// in\n    tag_892:\n        /* \"#utility.yul\":31918:31992   */\n      swap2\n      pop\n        /* \"#utility.yul\":32001:32094   */\n      tag_893\n        /* \"#utility.yul\":32090:32093   */\n      dup3\n        /* \"#utility.yul\":32001:32094   */\n      tag_619\n      jump\t// in\n    tag_893:\n        /* \"#utility.yul\":32119:32121   */\n      0x20\n        /* \"#utility.yul\":32114:32117   */\n      dup3\n        /* \"#utility.yul\":32110:32122   */\n      add\n        /* \"#utility.yul\":32103:32122   */\n      swap1\n      pop\n        /* \"#utility.yul\":31762:32128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32134:32553   */\n    tag_476:\n        /* \"#utility.yul\":32300:32304   */\n      0x00\n        /* \"#utility.yul\":32338:32340   */\n      0x20\n        /* \"#utility.yul\":32327:32336   */\n      dup3\n        /* \"#utility.yul\":32323:32341   */\n      add\n        /* \"#utility.yul\":32315:32341   */\n      swap1\n      pop\n        /* \"#utility.yul\":32387:32396   */\n      dup2\n        /* \"#utility.yul\":32381:32385   */\n      dup2\n        /* \"#utility.yul\":32377:32397   */\n      sub\n        /* \"#utility.yul\":32373:32374   */\n      0x00\n        /* \"#utility.yul\":32362:32371   */\n      dup4\n        /* \"#utility.yul\":32358:32375   */\n      add\n        /* \"#utility.yul\":32351:32398   */\n      mstore\n        /* \"#utility.yul\":32415:32546   */\n      tag_895\n        /* \"#utility.yul\":32541:32545   */\n      dup2\n        /* \"#utility.yul\":32415:32546   */\n      tag_620\n      jump\t// in\n    tag_895:\n        /* \"#utility.yul\":32407:32546   */\n      swap1\n      pop\n        /* \"#utility.yul\":32134:32553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32559:32739   */\n    tag_621:\n        /* \"#utility.yul\":32607:32684   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32604:32605   */\n      0x00\n        /* \"#utility.yul\":32597:32685   */\n      mstore\n        /* \"#utility.yul\":32704:32708   */\n      0x11\n        /* \"#utility.yul\":32701:32702   */\n      0x04\n        /* \"#utility.yul\":32694:32709   */\n      mstore\n        /* \"#utility.yul\":32728:32732   */\n      0x24\n        /* \"#utility.yul\":32725:32726   */\n      0x00\n        /* \"#utility.yul\":32718:32733   */\n      revert\n        /* \"#utility.yul\":32745:33155   */\n    tag_480:\n        /* \"#utility.yul\":32785:32792   */\n      0x00\n        /* \"#utility.yul\":32808:32828   */\n      tag_898\n        /* \"#utility.yul\":32826:32827   */\n      dup3\n        /* \"#utility.yul\":32808:32828   */\n      tag_555\n      jump\t// in\n    tag_898:\n        /* \"#utility.yul\":32803:32828   */\n      swap2\n      pop\n        /* \"#utility.yul\":32842:32862   */\n      tag_899\n        /* \"#utility.yul\":32860:32861   */\n      dup4\n        /* \"#utility.yul\":32842:32862   */\n      tag_555\n      jump\t// in\n    tag_899:\n        /* \"#utility.yul\":32837:32862   */\n      swap3\n      pop\n        /* \"#utility.yul\":32897:32898   */\n      dup3\n        /* \"#utility.yul\":32894:32895   */\n      dup3\n        /* \"#utility.yul\":32890:32899   */\n      mul\n        /* \"#utility.yul\":32919:32949   */\n      tag_900\n        /* \"#utility.yul\":32937:32948   */\n      dup2\n        /* \"#utility.yul\":32919:32949   */\n      tag_555\n      jump\t// in\n    tag_900:\n        /* \"#utility.yul\":32908:32949   */\n      swap2\n      pop\n        /* \"#utility.yul\":33098:33099   */\n      dup3\n        /* \"#utility.yul\":33089:33096   */\n      dup3\n        /* \"#utility.yul\":33085:33100   */\n      div\n        /* \"#utility.yul\":33082:33083   */\n      dup5\n        /* \"#utility.yul\":33079:33101   */\n      eq\n        /* \"#utility.yul\":33059:33060   */\n      dup4\n        /* \"#utility.yul\":33052:33061   */\n      iszero\n        /* \"#utility.yul\":33032:33115   */\n      or\n        /* \"#utility.yul\":33009:33148   */\n      tag_901\n      jumpi\n        /* \"#utility.yul\":33128:33146   */\n      tag_902\n      tag_621\n      jump\t// in\n    tag_902:\n        /* \"#utility.yul\":33009:33148   */\n    tag_901:\n        /* \"#utility.yul\":32793:33155   */\n      pop\n        /* \"#utility.yul\":32745:33155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33161:33341   */\n    tag_622:\n        /* \"#utility.yul\":33209:33286   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":33206:33207   */\n      0x00\n        /* \"#utility.yul\":33199:33287   */\n      mstore\n        /* \"#utility.yul\":33306:33310   */\n      0x12\n        /* \"#utility.yul\":33303:33304   */\n      0x04\n        /* \"#utility.yul\":33296:33311   */\n      mstore\n        /* \"#utility.yul\":33330:33334   */\n      0x24\n        /* \"#utility.yul\":33327:33328   */\n      0x00\n        /* \"#utility.yul\":33320:33335   */\n      revert\n        /* \"#utility.yul\":33347:33532   */\n    tag_483:\n        /* \"#utility.yul\":33387:33388   */\n      0x00\n        /* \"#utility.yul\":33404:33424   */\n      tag_905\n        /* \"#utility.yul\":33422:33423   */\n      dup3\n        /* \"#utility.yul\":33404:33424   */\n      tag_555\n      jump\t// in\n    tag_905:\n        /* \"#utility.yul\":33399:33424   */\n      swap2\n      pop\n        /* \"#utility.yul\":33438:33458   */\n      tag_906\n        /* \"#utility.yul\":33456:33457   */\n      dup4\n        /* \"#utility.yul\":33438:33458   */\n      tag_555\n      jump\t// in\n    tag_906:\n        /* \"#utility.yul\":33433:33458   */\n      swap3\n      pop\n        /* \"#utility.yul\":33477:33478   */\n      dup3\n        /* \"#utility.yul\":33467:33502   */\n      tag_907\n      jumpi\n        /* \"#utility.yul\":33482:33500   */\n      tag_908\n      tag_622\n      jump\t// in\n    tag_908:\n        /* \"#utility.yul\":33467:33502   */\n    tag_907:\n        /* \"#utility.yul\":33524:33525   */\n      dup3\n        /* \"#utility.yul\":33521:33522   */\n      dup3\n        /* \"#utility.yul\":33517:33526   */\n      div\n        /* \"#utility.yul\":33512:33526   */\n      swap1\n      pop\n        /* \"#utility.yul\":33347:33532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33538:33758   */\n    tag_623:\n        /* \"#utility.yul\":33678:33712   */\n      0x55534420616d6f756e74206d7573742062652067726561746572207468616e20\n        /* \"#utility.yul\":33674:33675   */\n      0x00\n        /* \"#utility.yul\":33666:33672   */\n      dup3\n        /* \"#utility.yul\":33662:33676   */\n      add\n        /* \"#utility.yul\":33655:33713   */\n      mstore\n        /* \"#utility.yul\":33747:33750   */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":33742:33744   */\n      0x20\n        /* \"#utility.yul\":33734:33740   */\n      dup3\n        /* \"#utility.yul\":33730:33745   */\n      add\n        /* \"#utility.yul\":33723:33751   */\n      mstore\n        /* \"#utility.yul\":33538:33758   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33764:34130   */\n    tag_624:\n        /* \"#utility.yul\":33906:33909   */\n      0x00\n        /* \"#utility.yul\":33927:33994   */\n      tag_911\n        /* \"#utility.yul\":33991:33993   */\n      0x21\n        /* \"#utility.yul\":33986:33989   */\n      dup4\n        /* \"#utility.yul\":33927:33994   */\n      tag_541\n      jump\t// in\n    tag_911:\n        /* \"#utility.yul\":33920:33994   */\n      swap2\n      pop\n        /* \"#utility.yul\":34003:34096   */\n      tag_912\n        /* \"#utility.yul\":34092:34095   */\n      dup3\n        /* \"#utility.yul\":34003:34096   */\n      tag_623\n      jump\t// in\n    tag_912:\n        /* \"#utility.yul\":34121:34123   */\n      0x40\n        /* \"#utility.yul\":34116:34119   */\n      dup3\n        /* \"#utility.yul\":34112:34124   */\n      add\n        /* \"#utility.yul\":34105:34124   */\n      swap1\n      pop\n        /* \"#utility.yul\":33764:34130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34136:34555   */\n    tag_487:\n        /* \"#utility.yul\":34302:34306   */\n      0x00\n        /* \"#utility.yul\":34340:34342   */\n      0x20\n        /* \"#utility.yul\":34329:34338   */\n      dup3\n        /* \"#utility.yul\":34325:34343   */\n      add\n        /* \"#utility.yul\":34317:34343   */\n      swap1\n      pop\n        /* \"#utility.yul\":34389:34398   */\n      dup2\n        /* \"#utility.yul\":34383:34387   */\n      dup2\n        /* \"#utility.yul\":34379:34399   */\n      sub\n        /* \"#utility.yul\":34375:34376   */\n      0x00\n        /* \"#utility.yul\":34364:34373   */\n      dup4\n        /* \"#utility.yul\":34360:34377   */\n      add\n        /* \"#utility.yul\":34353:34400   */\n      mstore\n        /* \"#utility.yul\":34417:34548   */\n      tag_914\n        /* \"#utility.yul\":34543:34547   */\n      dup2\n        /* \"#utility.yul\":34417:34548   */\n      tag_624\n      jump\t// in\n    tag_914:\n        /* \"#utility.yul\":34409:34548   */\n      swap1\n      pop\n        /* \"#utility.yul\":34136:34555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34561:34790   */\n    tag_625:\n        /* \"#utility.yul\":34701:34735   */\n      0x507269766174652053616c6520746f6b656e73206d7573742062652067726561\n        /* \"#utility.yul\":34697:34698   */\n      0x00\n        /* \"#utility.yul\":34689:34695   */\n      dup3\n        /* \"#utility.yul\":34685:34699   */\n      add\n        /* \"#utility.yul\":34678:34736   */\n      mstore\n        /* \"#utility.yul\":34770:34782   */\n      0x746572207468616e203000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":34765:34767   */\n      0x20\n        /* \"#utility.yul\":34757:34763   */\n      dup3\n        /* \"#utility.yul\":34753:34768   */\n      add\n        /* \"#utility.yul\":34746:34783   */\n      mstore\n        /* \"#utility.yul\":34561:34790   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34796:35162   */\n    tag_626:\n        /* \"#utility.yul\":34938:34941   */\n      0x00\n        /* \"#utility.yul\":34959:35026   */\n      tag_917\n        /* \"#utility.yul\":35023:35025   */\n      0x2a\n        /* \"#utility.yul\":35018:35021   */\n      dup4\n        /* \"#utility.yul\":34959:35026   */\n      tag_541\n      jump\t// in\n    tag_917:\n        /* \"#utility.yul\":34952:35026   */\n      swap2\n      pop\n        /* \"#utility.yul\":35035:35128   */\n      tag_918\n        /* \"#utility.yul\":35124:35127   */\n      dup3\n        /* \"#utility.yul\":35035:35128   */\n      tag_625\n      jump\t// in\n    tag_918:\n        /* \"#utility.yul\":35153:35155   */\n      0x40\n        /* \"#utility.yul\":35148:35151   */\n      dup3\n        /* \"#utility.yul\":35144:35156   */\n      add\n        /* \"#utility.yul\":35137:35156   */\n      swap1\n      pop\n        /* \"#utility.yul\":34796:35162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35168:35587   */\n    tag_490:\n        /* \"#utility.yul\":35334:35338   */\n      0x00\n        /* \"#utility.yul\":35372:35374   */\n      0x20\n        /* \"#utility.yul\":35361:35370   */\n      dup3\n        /* \"#utility.yul\":35357:35375   */\n      add\n        /* \"#utility.yul\":35349:35375   */\n      swap1\n      pop\n        /* \"#utility.yul\":35421:35430   */\n      dup2\n        /* \"#utility.yul\":35415:35419   */\n      dup2\n        /* \"#utility.yul\":35411:35431   */\n      sub\n        /* \"#utility.yul\":35407:35408   */\n      0x00\n        /* \"#utility.yul\":35396:35405   */\n      dup4\n        /* \"#utility.yul\":35392:35409   */\n      add\n        /* \"#utility.yul\":35385:35432   */\n      mstore\n        /* \"#utility.yul\":35449:35580   */\n      tag_920\n        /* \"#utility.yul\":35575:35579   */\n      dup2\n        /* \"#utility.yul\":35449:35580   */\n      tag_626\n      jump\t// in\n    tag_920:\n        /* \"#utility.yul\":35441:35580   */\n      swap1\n      pop\n        /* \"#utility.yul\":35168:35587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35593:35828   */\n    tag_627:\n        /* \"#utility.yul\":35733:35767   */\n      0x507269766174652053616c6520736f6c6420746f6b656e732065786365656420\n        /* \"#utility.yul\":35729:35730   */\n      0x00\n        /* \"#utility.yul\":35721:35727   */\n      dup3\n        /* \"#utility.yul\":35717:35731   */\n      add\n        /* \"#utility.yul\":35710:35768   */\n      mstore\n        /* \"#utility.yul\":35802:35820   */\n      0x617661696c61626c6520746f6b656e7300000000000000000000000000000000\n        /* \"#utility.yul\":35797:35799   */\n      0x20\n        /* \"#utility.yul\":35789:35795   */\n      dup3\n        /* \"#utility.yul\":35785:35800   */\n      add\n        /* \"#utility.yul\":35778:35821   */\n      mstore\n        /* \"#utility.yul\":35593:35828   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35834:36200   */\n    tag_628:\n        /* \"#utility.yul\":35976:35979   */\n      0x00\n        /* \"#utility.yul\":35997:36064   */\n      tag_923\n        /* \"#utility.yul\":36061:36063   */\n      0x30\n        /* \"#utility.yul\":36056:36059   */\n      dup4\n        /* \"#utility.yul\":35997:36064   */\n      tag_541\n      jump\t// in\n    tag_923:\n        /* \"#utility.yul\":35990:36064   */\n      swap2\n      pop\n        /* \"#utility.yul\":36073:36166   */\n      tag_924\n        /* \"#utility.yul\":36162:36165   */\n      dup3\n        /* \"#utility.yul\":36073:36166   */\n      tag_627\n      jump\t// in\n    tag_924:\n        /* \"#utility.yul\":36191:36193   */\n      0x40\n        /* \"#utility.yul\":36186:36189   */\n      dup3\n        /* \"#utility.yul\":36182:36194   */\n      add\n        /* \"#utility.yul\":36175:36194   */\n      swap1\n      pop\n        /* \"#utility.yul\":35834:36200   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36206:36625   */\n    tag_493:\n        /* \"#utility.yul\":36372:36376   */\n      0x00\n        /* \"#utility.yul\":36410:36412   */\n      0x20\n        /* \"#utility.yul\":36399:36408   */\n      dup3\n        /* \"#utility.yul\":36395:36413   */\n      add\n        /* \"#utility.yul\":36387:36413   */\n      swap1\n      pop\n        /* \"#utility.yul\":36459:36468   */\n      dup2\n        /* \"#utility.yul\":36453:36457   */\n      dup2\n        /* \"#utility.yul\":36449:36469   */\n      sub\n        /* \"#utility.yul\":36445:36446   */\n      0x00\n        /* \"#utility.yul\":36434:36443   */\n      dup4\n        /* \"#utility.yul\":36430:36447   */\n      add\n        /* \"#utility.yul\":36423:36470   */\n      mstore\n        /* \"#utility.yul\":36487:36618   */\n      tag_926\n        /* \"#utility.yul\":36613:36617   */\n      dup2\n        /* \"#utility.yul\":36487:36618   */\n      tag_628\n      jump\t// in\n    tag_926:\n        /* \"#utility.yul\":36479:36618   */\n      swap1\n      pop\n        /* \"#utility.yul\":36206:36625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36631:36811   */\n    tag_629:\n        /* \"#utility.yul\":36771:36803   */\n      0x496e76616c696420746f6b656e2070726963652063616c63756c617465640000\n        /* \"#utility.yul\":36767:36768   */\n      0x00\n        /* \"#utility.yul\":36759:36765   */\n      dup3\n        /* \"#utility.yul\":36755:36769   */\n      add\n        /* \"#utility.yul\":36748:36804   */\n      mstore\n        /* \"#utility.yul\":36631:36811   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36817:37183   */\n    tag_630:\n        /* \"#utility.yul\":36959:36962   */\n      0x00\n        /* \"#utility.yul\":36980:37047   */\n      tag_929\n        /* \"#utility.yul\":37044:37046   */\n      0x1e\n        /* \"#utility.yul\":37039:37042   */\n      dup4\n        /* \"#utility.yul\":36980:37047   */\n      tag_541\n      jump\t// in\n    tag_929:\n        /* \"#utility.yul\":36973:37047   */\n      swap2\n      pop\n        /* \"#utility.yul\":37056:37149   */\n      tag_930\n        /* \"#utility.yul\":37145:37148   */\n      dup3\n        /* \"#utility.yul\":37056:37149   */\n      tag_629\n      jump\t// in\n    tag_930:\n        /* \"#utility.yul\":37174:37176   */\n      0x20\n        /* \"#utility.yul\":37169:37172   */\n      dup3\n        /* \"#utility.yul\":37165:37177   */\n      add\n        /* \"#utility.yul\":37158:37177   */\n      swap1\n      pop\n        /* \"#utility.yul\":36817:37183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37189:37608   */\n    tag_502:\n        /* \"#utility.yul\":37355:37359   */\n      0x00\n        /* \"#utility.yul\":37393:37395   */\n      0x20\n        /* \"#utility.yul\":37382:37391   */\n      dup3\n        /* \"#utility.yul\":37378:37396   */\n      add\n        /* \"#utility.yul\":37370:37396   */\n      swap1\n      pop\n        /* \"#utility.yul\":37442:37451   */\n      dup2\n        /* \"#utility.yul\":37436:37440   */\n      dup2\n        /* \"#utility.yul\":37432:37452   */\n      sub\n        /* \"#utility.yul\":37428:37429   */\n      0x00\n        /* \"#utility.yul\":37417:37426   */\n      dup4\n        /* \"#utility.yul\":37413:37430   */\n      add\n        /* \"#utility.yul\":37406:37453   */\n      mstore\n        /* \"#utility.yul\":37470:37601   */\n      tag_932\n        /* \"#utility.yul\":37596:37600   */\n      dup2\n        /* \"#utility.yul\":37470:37601   */\n      tag_630\n      jump\t// in\n    tag_932:\n        /* \"#utility.yul\":37462:37601   */\n      swap1\n      pop\n        /* \"#utility.yul\":37189:37608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37614:37841   */\n    tag_631:\n        /* \"#utility.yul\":37754:37788   */\n      0x43616c63756c6174656420746f6b656e73206d75737420626520677265617465\n        /* \"#utility.yul\":37750:37751   */\n      0x00\n        /* \"#utility.yul\":37742:37748   */\n      dup3\n        /* \"#utility.yul\":37738:37752   */\n      add\n        /* \"#utility.yul\":37731:37789   */\n      mstore\n        /* \"#utility.yul\":37823:37833   */\n      0x72207468616e2030000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":37818:37820   */\n      0x20\n        /* \"#utility.yul\":37810:37816   */\n      dup3\n        /* \"#utility.yul\":37806:37821   */\n      add\n        /* \"#utility.yul\":37799:37834   */\n      mstore\n        /* \"#utility.yul\":37614:37841   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":37847:38213   */\n    tag_632:\n        /* \"#utility.yul\":37989:37992   */\n      0x00\n        /* \"#utility.yul\":38010:38077   */\n      tag_935\n        /* \"#utility.yul\":38074:38076   */\n      0x28\n        /* \"#utility.yul\":38069:38072   */\n      dup4\n        /* \"#utility.yul\":38010:38077   */\n      tag_541\n      jump\t// in\n    tag_935:\n        /* \"#utility.yul\":38003:38077   */\n      swap2\n      pop\n        /* \"#utility.yul\":38086:38179   */\n      tag_936\n        /* \"#utility.yul\":38175:38178   */\n      dup3\n        /* \"#utility.yul\":38086:38179   */\n      tag_631\n      jump\t// in\n    tag_936:\n        /* \"#utility.yul\":38204:38206   */\n      0x40\n        /* \"#utility.yul\":38199:38202   */\n      dup3\n        /* \"#utility.yul\":38195:38207   */\n      add\n        /* \"#utility.yul\":38188:38207   */\n      swap1\n      pop\n        /* \"#utility.yul\":37847:38213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38219:38638   */\n    tag_506:\n        /* \"#utility.yul\":38385:38389   */\n      0x00\n        /* \"#utility.yul\":38423:38425   */\n      0x20\n        /* \"#utility.yul\":38412:38421   */\n      dup3\n        /* \"#utility.yul\":38408:38426   */\n      add\n        /* \"#utility.yul\":38400:38426   */\n      swap1\n      pop\n        /* \"#utility.yul\":38472:38481   */\n      dup2\n        /* \"#utility.yul\":38466:38470   */\n      dup2\n        /* \"#utility.yul\":38462:38482   */\n      sub\n        /* \"#utility.yul\":38458:38459   */\n      0x00\n        /* \"#utility.yul\":38447:38456   */\n      dup4\n        /* \"#utility.yul\":38443:38460   */\n      add\n        /* \"#utility.yul\":38436:38483   */\n      mstore\n        /* \"#utility.yul\":38500:38631   */\n      tag_938\n        /* \"#utility.yul\":38626:38630   */\n      dup2\n        /* \"#utility.yul\":38500:38631   */\n      tag_632\n      jump\t// in\n    tag_938:\n        /* \"#utility.yul\":38492:38631   */\n      swap1\n      pop\n        /* \"#utility.yul\":38219:38638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38644:38835   */\n    tag_509:\n        /* \"#utility.yul\":38684:38687   */\n      0x00\n        /* \"#utility.yul\":38703:38723   */\n      tag_940\n        /* \"#utility.yul\":38721:38722   */\n      dup3\n        /* \"#utility.yul\":38703:38723   */\n      tag_555\n      jump\t// in\n    tag_940:\n        /* \"#utility.yul\":38698:38723   */\n      swap2\n      pop\n        /* \"#utility.yul\":38737:38757   */\n      tag_941\n        /* \"#utility.yul\":38755:38756   */\n      dup4\n        /* \"#utility.yul\":38737:38757   */\n      tag_555\n      jump\t// in\n    tag_941:\n        /* \"#utility.yul\":38732:38757   */\n      swap3\n      pop\n        /* \"#utility.yul\":38780:38781   */\n      dup3\n        /* \"#utility.yul\":38777:38778   */\n      dup3\n        /* \"#utility.yul\":38773:38782   */\n      add\n        /* \"#utility.yul\":38766:38782   */\n      swap1\n      pop\n        /* \"#utility.yul\":38801:38804   */\n      dup1\n        /* \"#utility.yul\":38798:38799   */\n      dup3\n        /* \"#utility.yul\":38795:38805   */\n      gt\n        /* \"#utility.yul\":38792:38828   */\n      iszero\n      tag_942\n      jumpi\n        /* \"#utility.yul\":38808:38826   */\n      tag_943\n      tag_621\n      jump\t// in\n    tag_943:\n        /* \"#utility.yul\":38792:38828   */\n    tag_942:\n        /* \"#utility.yul\":38644:38835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":38841:39035   */\n    tag_540:\n        /* \"#utility.yul\":38881:38885   */\n      0x00\n        /* \"#utility.yul\":38901:38921   */\n      tag_945\n        /* \"#utility.yul\":38919:38920   */\n      dup3\n        /* \"#utility.yul\":38901:38921   */\n      tag_555\n      jump\t// in\n    tag_945:\n        /* \"#utility.yul\":38896:38921   */\n      swap2\n      pop\n        /* \"#utility.yul\":38935:38955   */\n      tag_946\n        /* \"#utility.yul\":38953:38954   */\n      dup4\n        /* \"#utility.yul\":38935:38955   */\n      tag_555\n      jump\t// in\n    tag_946:\n        /* \"#utility.yul\":38930:38955   */\n      swap3\n      pop\n        /* \"#utility.yul\":38979:38980   */\n      dup3\n        /* \"#utility.yul\":38976:38977   */\n      dup3\n        /* \"#utility.yul\":38972:38981   */\n      sub\n        /* \"#utility.yul\":38964:38981   */\n      swap1\n      pop\n        /* \"#utility.yul\":39003:39004   */\n      dup2\n        /* \"#utility.yul\":38997:39001   */\n      dup2\n        /* \"#utility.yul\":38994:39005   */\n      gt\n        /* \"#utility.yul\":38991:39028   */\n      iszero\n      tag_947\n      jumpi\n        /* \"#utility.yul\":39008:39026   */\n      tag_948\n      tag_621\n      jump\t// in\n    tag_948:\n        /* \"#utility.yul\":38991:39028   */\n    tag_947:\n        /* \"#utility.yul\":38841:39035   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f1b8841746faa3d853ab09a092672caf5c2942261c2794fab50af760c2b42bc564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1551": {
									"entryPoint": null,
									"id": 1551,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_349": {
									"entryPoint": null,
									"id": 349,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_750": {
									"entryPoint": 871,
									"id": 750,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 676,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_717": {
									"entryPoint": 1004,
									"id": 717,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1880,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3028,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1586,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2488,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 1541,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2872,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1603,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2248,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2389,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2426,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10792:10",
										"nodeType": "YulBlock",
										"src": "0:10792:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:10",
													"nodeType": "YulBlock",
													"src": "35:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:10",
																		"nodeType": "YulLiteral",
																		"src": "52:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:10",
																		"nodeType": "YulLiteral",
																		"src": "55:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:10"
																},
																"nativeSrc": "45:88:10",
																"nodeType": "YulFunctionCall",
																"src": "45:88:10"
															},
															"nativeSrc": "45:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:10",
																		"nodeType": "YulLiteral",
																		"src": "149:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:10",
																		"nodeType": "YulLiteral",
																		"src": "152:4:10",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:10"
																},
																"nativeSrc": "142:15:10",
																"nodeType": "YulFunctionCall",
																"src": "142:15:10"
															},
															"nativeSrc": "142:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:10",
																		"nodeType": "YulLiteral",
																		"src": "173:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:10",
																		"nodeType": "YulLiteral",
																		"src": "176:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:10"
																},
																"nativeSrc": "166:15:10",
																"nodeType": "YulFunctionCall",
																"src": "166:15:10"
															},
															"nativeSrc": "166:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:10"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "7:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:10"
											},
											{
												"body": {
													"nativeSrc": "233:35:10",
													"nodeType": "YulBlock",
													"src": "233:35:10",
													"statements": [
														{
															"nativeSrc": "243:19:10",
															"nodeType": "YulAssignment",
															"src": "243:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "259:2:10",
																		"nodeType": "YulLiteral",
																		"src": "259:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "253:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "253:5:10"
																},
																"nativeSrc": "253:9:10",
																"nodeType": "YulFunctionCall",
																"src": "253:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "243:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "243:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "193:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "226:6:10",
														"nodeType": "YulTypedName",
														"src": "226:6:10",
														"type": ""
													}
												],
												"src": "193:75:10"
											},
											{
												"body": {
													"nativeSrc": "363:28:10",
													"nodeType": "YulBlock",
													"src": "363:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "380:1:10",
																		"nodeType": "YulLiteral",
																		"src": "380:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "383:1:10",
																		"nodeType": "YulLiteral",
																		"src": "383:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "373:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "373:6:10"
																},
																"nativeSrc": "373:12:10",
																"nodeType": "YulFunctionCall",
																"src": "373:12:10"
															},
															"nativeSrc": "373:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "373:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "274:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "274:117:10"
											},
											{
												"body": {
													"nativeSrc": "486:28:10",
													"nodeType": "YulBlock",
													"src": "486:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "503:1:10",
																		"nodeType": "YulLiteral",
																		"src": "503:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "506:1:10",
																		"nodeType": "YulLiteral",
																		"src": "506:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "496:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "496:6:10"
																},
																"nativeSrc": "496:12:10",
																"nodeType": "YulFunctionCall",
																"src": "496:12:10"
															},
															"nativeSrc": "496:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "496:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "397:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "397:117:10"
											},
											{
												"body": {
													"nativeSrc": "609:28:10",
													"nodeType": "YulBlock",
													"src": "609:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "626:1:10",
																		"nodeType": "YulLiteral",
																		"src": "626:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:10",
																		"nodeType": "YulLiteral",
																		"src": "629:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "619:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "619:6:10"
																},
																"nativeSrc": "619:12:10",
																"nodeType": "YulFunctionCall",
																"src": "619:12:10"
															},
															"nativeSrc": "619:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "619:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "520:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "520:117:10"
											},
											{
												"body": {
													"nativeSrc": "691:54:10",
													"nodeType": "YulBlock",
													"src": "691:54:10",
													"statements": [
														{
															"nativeSrc": "701:38:10",
															"nodeType": "YulAssignment",
															"src": "701:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "719:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "719:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "726:2:10",
																				"nodeType": "YulLiteral",
																				"src": "726:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "715:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:10"
																		},
																		"nativeSrc": "715:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "715:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "735:2:10",
																				"nodeType": "YulLiteral",
																				"src": "735:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "731:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "731:3:10"
																		},
																		"nativeSrc": "731:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "731:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "711:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "711:3:10"
																},
																"nativeSrc": "711:28:10",
																"nodeType": "YulFunctionCall",
																"src": "711:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "701:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "701:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "643:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "674:5:10",
														"nodeType": "YulTypedName",
														"src": "674:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "684:6:10",
														"nodeType": "YulTypedName",
														"src": "684:6:10",
														"type": ""
													}
												],
												"src": "643:102:10"
											},
											{
												"body": {
													"nativeSrc": "779:152:10",
													"nodeType": "YulBlock",
													"src": "779:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "796:1:10",
																		"nodeType": "YulLiteral",
																		"src": "796:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "799:77:10",
																		"nodeType": "YulLiteral",
																		"src": "799:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "789:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "789:6:10"
																},
																"nativeSrc": "789:88:10",
																"nodeType": "YulFunctionCall",
																"src": "789:88:10"
															},
															"nativeSrc": "789:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "789:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "893:1:10",
																		"nodeType": "YulLiteral",
																		"src": "893:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "896:4:10",
																		"nodeType": "YulLiteral",
																		"src": "896:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "886:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "886:6:10"
																},
																"nativeSrc": "886:15:10",
																"nodeType": "YulFunctionCall",
																"src": "886:15:10"
															},
															"nativeSrc": "886:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "886:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "917:1:10",
																		"nodeType": "YulLiteral",
																		"src": "917:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "920:4:10",
																		"nodeType": "YulLiteral",
																		"src": "920:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "910:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "910:6:10"
																},
																"nativeSrc": "910:15:10",
																"nodeType": "YulFunctionCall",
																"src": "910:15:10"
															},
															"nativeSrc": "910:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "910:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "751:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "751:180:10"
											},
											{
												"body": {
													"nativeSrc": "980:238:10",
													"nodeType": "YulBlock",
													"src": "980:238:10",
													"statements": [
														{
															"nativeSrc": "990:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "990:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1012:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1042:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1042:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1020:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "1020:21:10"
																		},
																		"nativeSrc": "1020:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1020:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1008:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1008:3:10"
																},
																"nativeSrc": "1008:40:10",
																"nodeType": "YulFunctionCall",
																"src": "1008:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "994:10:10",
																	"nodeType": "YulTypedName",
																	"src": "994:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1159:22:10",
																"nodeType": "YulBlock",
																"src": "1159:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1161:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1161:16:10"
																			},
																			"nativeSrc": "1161:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1161:18:10"
																		},
																		"nativeSrc": "1161:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1161:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1102:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1102:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1114:18:10",
																				"nodeType": "YulLiteral",
																				"src": "1114:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1099:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1099:2:10"
																		},
																		"nativeSrc": "1099:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1099:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1138:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1138:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1150:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1150:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1135:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1135:2:10"
																		},
																		"nativeSrc": "1135:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1135:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1096:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1096:2:10"
																},
																"nativeSrc": "1096:62:10",
																"nodeType": "YulFunctionCall",
																"src": "1096:62:10"
															},
															"nativeSrc": "1093:88:10",
															"nodeType": "YulIf",
															"src": "1093:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1197:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1197:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1201:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1201:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1190:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:10"
																},
																"nativeSrc": "1190:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1190:22:10"
															},
															"nativeSrc": "1190:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "1190:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "937:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "966:6:10",
														"nodeType": "YulTypedName",
														"src": "966:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "974:4:10",
														"nodeType": "YulTypedName",
														"src": "974:4:10",
														"type": ""
													}
												],
												"src": "937:281:10"
											},
											{
												"body": {
													"nativeSrc": "1265:88:10",
													"nodeType": "YulBlock",
													"src": "1265:88:10",
													"statements": [
														{
															"nativeSrc": "1275:30:10",
															"nodeType": "YulAssignment",
															"src": "1275:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1285:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1285:18:10"
																},
																"nativeSrc": "1285:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1285:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1275:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1275:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1334:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1334:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1342:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1342:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1314:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "1314:19:10"
																},
																"nativeSrc": "1314:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1314:33:10"
															},
															"nativeSrc": "1314:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1314:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1224:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1249:4:10",
														"nodeType": "YulTypedName",
														"src": "1249:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1258:6:10",
														"nodeType": "YulTypedName",
														"src": "1258:6:10",
														"type": ""
													}
												],
												"src": "1224:129:10"
											},
											{
												"body": {
													"nativeSrc": "1441:229:10",
													"nodeType": "YulBlock",
													"src": "1441:229:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1546:22:10",
																"nodeType": "YulBlock",
																"src": "1546:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1548:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1548:16:10"
																			},
																			"nativeSrc": "1548:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1548:18:10"
																		},
																		"nativeSrc": "1548:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1548:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1518:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1518:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1526:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1526:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1515:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1515:2:10"
																},
																"nativeSrc": "1515:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1515:30:10"
															},
															"nativeSrc": "1512:56:10",
															"nodeType": "YulIf",
															"src": "1512:56:10"
														},
														{
															"nativeSrc": "1578:25:10",
															"nodeType": "YulAssignment",
															"src": "1578:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1590:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1590:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1598:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1598:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1586:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1586:3:10"
																},
																"nativeSrc": "1586:17:10",
																"nodeType": "YulFunctionCall",
																"src": "1586:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1578:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1578:4:10"
																}
															]
														},
														{
															"nativeSrc": "1640:23:10",
															"nodeType": "YulAssignment",
															"src": "1640:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1652:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1652:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1658:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1658:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1648:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1648:3:10"
																},
																"nativeSrc": "1648:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1648:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1640:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1640:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "1359:311:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1425:6:10",
														"nodeType": "YulTypedName",
														"src": "1425:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1436:4:10",
														"nodeType": "YulTypedName",
														"src": "1436:4:10",
														"type": ""
													}
												],
												"src": "1359:311:10"
											},
											{
												"body": {
													"nativeSrc": "1765:28:10",
													"nodeType": "YulBlock",
													"src": "1765:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1782:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1782:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1785:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1785:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1775:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1775:6:10"
																},
																"nativeSrc": "1775:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1775:12:10"
															},
															"nativeSrc": "1775:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1775:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1676:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1676:117:10"
											},
											{
												"body": {
													"nativeSrc": "1844:81:10",
													"nodeType": "YulBlock",
													"src": "1844:81:10",
													"statements": [
														{
															"nativeSrc": "1854:65:10",
															"nodeType": "YulAssignment",
															"src": "1854:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1869:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1869:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1876:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1876:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1865:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1865:3:10"
																},
																"nativeSrc": "1865:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1865:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1854:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1854:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1799:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1826:5:10",
														"nodeType": "YulTypedName",
														"src": "1826:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1836:7:10",
														"nodeType": "YulTypedName",
														"src": "1836:7:10",
														"type": ""
													}
												],
												"src": "1799:126:10"
											},
											{
												"body": {
													"nativeSrc": "1976:51:10",
													"nodeType": "YulBlock",
													"src": "1976:51:10",
													"statements": [
														{
															"nativeSrc": "1986:35:10",
															"nodeType": "YulAssignment",
															"src": "1986:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2015:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2015:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1997:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1997:17:10"
																},
																"nativeSrc": "1997:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1997:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1986:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1986:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1931:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1958:5:10",
														"nodeType": "YulTypedName",
														"src": "1958:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1968:7:10",
														"nodeType": "YulTypedName",
														"src": "1968:7:10",
														"type": ""
													}
												],
												"src": "1931:96:10"
											},
											{
												"body": {
													"nativeSrc": "2076:79:10",
													"nodeType": "YulBlock",
													"src": "2076:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2133:16:10",
																"nodeType": "YulBlock",
																"src": "2133:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2142:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2142:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2145:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2145:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2135:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2135:6:10"
																			},
																			"nativeSrc": "2135:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2135:12:10"
																		},
																		"nativeSrc": "2135:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2135:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2099:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2099:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2124:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2124:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2106:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2106:17:10"
																				},
																				"nativeSrc": "2106:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2106:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2096:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2096:2:10"
																		},
																		"nativeSrc": "2096:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2096:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2089:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2089:6:10"
																},
																"nativeSrc": "2089:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2089:43:10"
															},
															"nativeSrc": "2086:63:10",
															"nodeType": "YulIf",
															"src": "2086:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2033:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2069:5:10",
														"nodeType": "YulTypedName",
														"src": "2069:5:10",
														"type": ""
													}
												],
												"src": "2033:122:10"
											},
											{
												"body": {
													"nativeSrc": "2224:80:10",
													"nodeType": "YulBlock",
													"src": "2224:80:10",
													"statements": [
														{
															"nativeSrc": "2234:22:10",
															"nodeType": "YulAssignment",
															"src": "2234:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2249:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2249:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2243:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2243:5:10"
																},
																"nativeSrc": "2243:13:10",
																"nodeType": "YulFunctionCall",
																"src": "2243:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2234:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2234:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2292:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2292:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2265:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2265:26:10"
																},
																"nativeSrc": "2265:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2265:33:10"
															},
															"nativeSrc": "2265:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2265:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2161:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2202:6:10",
														"nodeType": "YulTypedName",
														"src": "2202:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2210:3:10",
														"nodeType": "YulTypedName",
														"src": "2210:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2218:5:10",
														"nodeType": "YulTypedName",
														"src": "2218:5:10",
														"type": ""
													}
												],
												"src": "2161:143:10"
											},
											{
												"body": {
													"nativeSrc": "2440:619:10",
													"nodeType": "YulBlock",
													"src": "2440:619:10",
													"statements": [
														{
															"nativeSrc": "2450:90:10",
															"nodeType": "YulAssignment",
															"src": "2450:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2532:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2532:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "2475:56:10",
																			"nodeType": "YulIdentifier",
																			"src": "2475:56:10"
																		},
																		"nativeSrc": "2475:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2475:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2459:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "2459:15:10"
																},
																"nativeSrc": "2459:81:10",
																"nodeType": "YulFunctionCall",
																"src": "2459:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2450:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2450:5:10"
																}
															]
														},
														{
															"nativeSrc": "2549:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2549:16:10",
															"value": {
																"name": "array",
																"nativeSrc": "2560:5:10",
																"nodeType": "YulIdentifier",
																"src": "2560:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2553:3:10",
																	"nodeType": "YulTypedName",
																	"src": "2553:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2582:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2582:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2589:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2589:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2575:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2575:6:10"
																},
																"nativeSrc": "2575:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2575:21:10"
															},
															"nativeSrc": "2575:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "2575:21:10"
														},
														{
															"nativeSrc": "2605:23:10",
															"nodeType": "YulAssignment",
															"src": "2605:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2616:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2616:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2623:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2623:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2612:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2612:3:10"
																},
																"nativeSrc": "2612:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2612:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2605:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2605:3:10"
																}
															]
														},
														{
															"nativeSrc": "2638:44:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2638:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2656:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2656:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2668:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2668:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2676:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2676:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2664:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2664:3:10"
																		},
																		"nativeSrc": "2664:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2664:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2652:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2652:3:10"
																},
																"nativeSrc": "2652:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2652:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2642:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2642:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2710:103:10",
																"nodeType": "YulBlock",
																"src": "2710:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2724:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2724:77:10"
																			},
																			"nativeSrc": "2724:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2724:79:10"
																		},
																		"nativeSrc": "2724:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2724:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2697:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2697:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2705:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2705:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2694:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2694:2:10"
																},
																"nativeSrc": "2694:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2694:15:10"
															},
															"nativeSrc": "2691:122:10",
															"nodeType": "YulIf",
															"src": "2691:122:10"
														},
														{
															"body": {
																"nativeSrc": "2898:155:10",
																"nodeType": "YulBlock",
																"src": "2898:155:10",
																"statements": [
																	{
																		"nativeSrc": "2913:21:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2913:21:10",
																		"value": {
																			"name": "src",
																			"nativeSrc": "2931:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2931:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "2917:10:10",
																				"nodeType": "YulTypedName",
																				"src": "2917:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2955:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2955:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "2992:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "2992:10:10"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "3004:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "3004:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nativeSrc": "2960:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "2960:31:10"
																					},
																					"nativeSrc": "2960:48:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2960:48:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2948:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2948:6:10"
																			},
																			"nativeSrc": "2948:61:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2948:61:10"
																		},
																		"nativeSrc": "2948:61:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2948:61:10"
																	},
																	{
																		"nativeSrc": "3022:21:10",
																		"nodeType": "YulAssignment",
																		"src": "3022:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3033:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3033:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3038:4:10",
																					"nodeType": "YulLiteral",
																					"src": "3038:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3029:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3029:3:10"
																			},
																			"nativeSrc": "3029:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3029:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "3022:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3022:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2851:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2851:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2856:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2856:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2848:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2848:2:10"
																},
																"nativeSrc": "2848:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2848:15:10"
															},
															"nativeSrc": "2822:231:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2864:25:10",
																"nodeType": "YulBlock",
																"src": "2864:25:10",
																"statements": [
																	{
																		"nativeSrc": "2866:21:10",
																		"nodeType": "YulAssignment",
																		"src": "2866:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2877:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2877:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2882:4:10",
																					"nodeType": "YulLiteral",
																					"src": "2882:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2873:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2873:3:10"
																			},
																			"nativeSrc": "2873:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2873:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2866:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2866:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2826:21:10",
																"nodeType": "YulBlock",
																"src": "2826:21:10",
																"statements": [
																	{
																		"nativeSrc": "2828:17:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2828:17:10",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "2839:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2839:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "2832:3:10",
																				"nodeType": "YulTypedName",
																				"src": "2832:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2822:231:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2327:732:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2410:6:10",
														"nodeType": "YulTypedName",
														"src": "2410:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2418:6:10",
														"nodeType": "YulTypedName",
														"src": "2418:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2426:3:10",
														"nodeType": "YulTypedName",
														"src": "2426:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2434:5:10",
														"nodeType": "YulTypedName",
														"src": "2434:5:10",
														"type": ""
													}
												],
												"src": "2327:732:10"
											},
											{
												"body": {
													"nativeSrc": "3170:297:10",
													"nodeType": "YulBlock",
													"src": "3170:297:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3219:83:10",
																"nodeType": "YulBlock",
																"src": "3219:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3221:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3221:77:10"
																			},
																			"nativeSrc": "3221:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3221:79:10"
																		},
																		"nativeSrc": "3221:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3221:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3198:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3198:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3206:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3206:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3194:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3194:3:10"
																				},
																				"nativeSrc": "3194:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3194:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3213:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3213:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3190:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3190:3:10"
																		},
																		"nativeSrc": "3190:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3190:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3183:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3183:6:10"
																},
																"nativeSrc": "3183:35:10",
																"nodeType": "YulFunctionCall",
																"src": "3183:35:10"
															},
															"nativeSrc": "3180:122:10",
															"nodeType": "YulIf",
															"src": "3180:122:10"
														},
														{
															"nativeSrc": "3311:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3311:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3331:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3331:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3325:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3325:5:10"
																},
																"nativeSrc": "3325:13:10",
																"nodeType": "YulFunctionCall",
																"src": "3325:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3315:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3315:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3347:114:10",
															"nodeType": "YulAssignment",
															"src": "3347:114:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3434:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3434:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3442:4:10",
																				"nodeType": "YulLiteral",
																				"src": "3442:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3430:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3430:3:10"
																		},
																		"nativeSrc": "3430:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3430:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3449:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3449:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3457:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3457:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "3356:73:10",
																	"nodeType": "YulIdentifier",
																	"src": "3356:73:10"
																},
																"nativeSrc": "3356:105:10",
																"nodeType": "YulFunctionCall",
																"src": "3356:105:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3347:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3347:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "3082:385:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3148:6:10",
														"nodeType": "YulTypedName",
														"src": "3148:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3156:3:10",
														"nodeType": "YulTypedName",
														"src": "3156:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3164:5:10",
														"nodeType": "YulTypedName",
														"src": "3164:5:10",
														"type": ""
													}
												],
												"src": "3082:385:10"
											},
											{
												"body": {
													"nativeSrc": "3575:452:10",
													"nodeType": "YulBlock",
													"src": "3575:452:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3621:83:10",
																"nodeType": "YulBlock",
																"src": "3621:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3623:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3623:77:10"
																			},
																			"nativeSrc": "3623:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3623:79:10"
																		},
																		"nativeSrc": "3623:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3623:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3596:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3596:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3605:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3605:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3592:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3592:3:10"
																		},
																		"nativeSrc": "3592:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3592:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3617:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3617:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3588:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3588:3:10"
																},
																"nativeSrc": "3588:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3588:32:10"
															},
															"nativeSrc": "3585:119:10",
															"nodeType": "YulIf",
															"src": "3585:119:10"
														},
														{
															"nativeSrc": "3714:306:10",
															"nodeType": "YulBlock",
															"src": "3714:306:10",
															"statements": [
																{
																	"nativeSrc": "3729:38:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3729:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3753:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3753:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3764:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3764:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3749:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3749:3:10"
																				},
																				"nativeSrc": "3749:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3749:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3743:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3743:5:10"
																		},
																		"nativeSrc": "3743:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3743:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3733:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3733:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3814:83:10",
																		"nodeType": "YulBlock",
																		"src": "3814:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3816:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3816:77:10"
																					},
																					"nativeSrc": "3816:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3816:79:10"
																				},
																				"nativeSrc": "3816:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3816:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3786:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3786:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3794:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3794:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3783:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3783:2:10"
																		},
																		"nativeSrc": "3783:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3783:30:10"
																	},
																	"nativeSrc": "3780:117:10",
																	"nodeType": "YulIf",
																	"src": "3780:117:10"
																},
																{
																	"nativeSrc": "3911:99:10",
																	"nodeType": "YulAssignment",
																	"src": "3911:99:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3982:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3982:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3993:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3993:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3978:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3978:3:10"
																				},
																				"nativeSrc": "3978:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3978:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4002:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4002:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "3921:56:10",
																			"nodeType": "YulIdentifier",
																			"src": "3921:56:10"
																		},
																		"nativeSrc": "3921:89:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3921:89:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3911:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3911:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "3473:554:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3545:9:10",
														"nodeType": "YulTypedName",
														"src": "3545:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3556:7:10",
														"nodeType": "YulTypedName",
														"src": "3556:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3568:6:10",
														"nodeType": "YulTypedName",
														"src": "3568:6:10",
														"type": ""
													}
												],
												"src": "3473:554:10"
											},
											{
												"body": {
													"nativeSrc": "4092:40:10",
													"nodeType": "YulBlock",
													"src": "4092:40:10",
													"statements": [
														{
															"nativeSrc": "4103:22:10",
															"nodeType": "YulAssignment",
															"src": "4103:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4119:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4119:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4113:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4113:5:10"
																},
																"nativeSrc": "4113:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4113:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4103:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4033:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4075:5:10",
														"nodeType": "YulTypedName",
														"src": "4075:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4085:6:10",
														"nodeType": "YulTypedName",
														"src": "4085:6:10",
														"type": ""
													}
												],
												"src": "4033:99:10"
											},
											{
												"body": {
													"nativeSrc": "4166:152:10",
													"nodeType": "YulBlock",
													"src": "4166:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4183:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4183:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4186:77:10",
																		"nodeType": "YulLiteral",
																		"src": "4186:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4176:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4176:6:10"
																},
																"nativeSrc": "4176:88:10",
																"nodeType": "YulFunctionCall",
																"src": "4176:88:10"
															},
															"nativeSrc": "4176:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "4176:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4280:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4280:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4283:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4283:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4273:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4273:6:10"
																},
																"nativeSrc": "4273:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4273:15:10"
															},
															"nativeSrc": "4273:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4273:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4304:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4304:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4307:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4307:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4297:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4297:6:10"
																},
																"nativeSrc": "4297:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4297:15:10"
															},
															"nativeSrc": "4297:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4297:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4138:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4138:180:10"
											},
											{
												"body": {
													"nativeSrc": "4375:269:10",
													"nodeType": "YulBlock",
													"src": "4375:269:10",
													"statements": [
														{
															"nativeSrc": "4385:22:10",
															"nodeType": "YulAssignment",
															"src": "4385:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4399:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4399:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4405:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4405:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4395:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4395:3:10"
																},
																"nativeSrc": "4395:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4395:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4385:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4385:6:10"
																}
															]
														},
														{
															"nativeSrc": "4416:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4416:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4446:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4446:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4452:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4452:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4442:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4442:3:10"
																},
																"nativeSrc": "4442:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4442:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4420:18:10",
																	"nodeType": "YulTypedName",
																	"src": "4420:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4493:51:10",
																"nodeType": "YulBlock",
																"src": "4493:51:10",
																"statements": [
																	{
																		"nativeSrc": "4507:27:10",
																		"nodeType": "YulAssignment",
																		"src": "4507:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4521:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "4521:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4529:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4529:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4517:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4517:3:10"
																			},
																			"nativeSrc": "4517:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4517:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4507:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4507:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4473:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "4473:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4466:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4466:6:10"
																},
																"nativeSrc": "4466:26:10",
																"nodeType": "YulFunctionCall",
																"src": "4466:26:10"
															},
															"nativeSrc": "4463:81:10",
															"nodeType": "YulIf",
															"src": "4463:81:10"
														},
														{
															"body": {
																"nativeSrc": "4596:42:10",
																"nodeType": "YulBlock",
																"src": "4596:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4610:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4610:16:10"
																			},
																			"nativeSrc": "4610:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4610:18:10"
																		},
																		"nativeSrc": "4610:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4610:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4560:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "4560:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4583:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4583:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4591:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4591:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4580:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4580:2:10"
																		},
																		"nativeSrc": "4580:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4580:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4557:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4557:2:10"
																},
																"nativeSrc": "4557:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4557:38:10"
															},
															"nativeSrc": "4554:84:10",
															"nodeType": "YulIf",
															"src": "4554:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4324:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4359:4:10",
														"nodeType": "YulTypedName",
														"src": "4359:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4368:6:10",
														"nodeType": "YulTypedName",
														"src": "4368:6:10",
														"type": ""
													}
												],
												"src": "4324:320:10"
											},
											{
												"body": {
													"nativeSrc": "4704:87:10",
													"nodeType": "YulBlock",
													"src": "4704:87:10",
													"statements": [
														{
															"nativeSrc": "4714:11:10",
															"nodeType": "YulAssignment",
															"src": "4714:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "4722:3:10",
																"nodeType": "YulIdentifier",
																"src": "4722:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4714:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4714:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4742:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4742:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4745:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4745:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4735:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:10"
																},
																"nativeSrc": "4735:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4735:14:10"
															},
															"nativeSrc": "4735:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "4735:14:10"
														},
														{
															"nativeSrc": "4758:26:10",
															"nodeType": "YulAssignment",
															"src": "4758:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4776:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4776:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4779:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4779:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4766:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4766:9:10"
																},
																"nativeSrc": "4766:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4766:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4758:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4758:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4650:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4691:3:10",
														"nodeType": "YulTypedName",
														"src": "4691:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4699:4:10",
														"nodeType": "YulTypedName",
														"src": "4699:4:10",
														"type": ""
													}
												],
												"src": "4650:141:10"
											},
											{
												"body": {
													"nativeSrc": "4841:49:10",
													"nodeType": "YulBlock",
													"src": "4841:49:10",
													"statements": [
														{
															"nativeSrc": "4851:33:10",
															"nodeType": "YulAssignment",
															"src": "4851:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4869:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4869:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4876:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4876:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4865:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4865:3:10"
																		},
																		"nativeSrc": "4865:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4865:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4881:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4881:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4861:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4861:3:10"
																},
																"nativeSrc": "4861:23:10",
																"nodeType": "YulFunctionCall",
																"src": "4861:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4851:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4851:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4797:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4824:5:10",
														"nodeType": "YulTypedName",
														"src": "4824:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4834:6:10",
														"nodeType": "YulTypedName",
														"src": "4834:6:10",
														"type": ""
													}
												],
												"src": "4797:93:10"
											},
											{
												"body": {
													"nativeSrc": "4949:54:10",
													"nodeType": "YulBlock",
													"src": "4949:54:10",
													"statements": [
														{
															"nativeSrc": "4959:37:10",
															"nodeType": "YulAssignment",
															"src": "4959:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4984:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4984:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4990:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4990:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4980:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4980:3:10"
																},
																"nativeSrc": "4980:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4980:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4959:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "4959:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4896:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4924:4:10",
														"nodeType": "YulTypedName",
														"src": "4924:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4930:5:10",
														"nodeType": "YulTypedName",
														"src": "4930:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4940:8:10",
														"nodeType": "YulTypedName",
														"src": "4940:8:10",
														"type": ""
													}
												],
												"src": "4896:107:10"
											},
											{
												"body": {
													"nativeSrc": "5085:317:10",
													"nodeType": "YulBlock",
													"src": "5085:317:10",
													"statements": [
														{
															"nativeSrc": "5095:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5095:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5116:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "5116:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5128:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5128:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5112:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5112:3:10"
																},
																"nativeSrc": "5112:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5112:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5099:9:10",
																	"nodeType": "YulTypedName",
																	"src": "5099:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5139:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5139:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5170:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5170:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5181:66:10",
																		"nodeType": "YulLiteral",
																		"src": "5181:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5151:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5151:18:10"
																},
																"nativeSrc": "5151:97:10",
																"nodeType": "YulFunctionCall",
																"src": "5151:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5143:4:10",
																	"nodeType": "YulTypedName",
																	"src": "5143:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5257:51:10",
															"nodeType": "YulAssignment",
															"src": "5257:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5288:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5288:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5299:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "5299:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5269:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5269:18:10"
																},
																"nativeSrc": "5269:39:10",
																"nodeType": "YulFunctionCall",
																"src": "5269:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5257:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "5257:8:10"
																}
															]
														},
														{
															"nativeSrc": "5317:30:10",
															"nodeType": "YulAssignment",
															"src": "5317:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5330:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5330:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5341:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5341:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5337:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5337:3:10"
																		},
																		"nativeSrc": "5337:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5337:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5326:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5326:3:10"
																},
																"nativeSrc": "5326:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5326:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5317:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5317:5:10"
																}
															]
														},
														{
															"nativeSrc": "5356:40:10",
															"nodeType": "YulAssignment",
															"src": "5356:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5369:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5369:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5380:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "5380:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5390:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5390:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5376:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5376:3:10"
																		},
																		"nativeSrc": "5376:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5376:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5366:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5366:2:10"
																},
																"nativeSrc": "5366:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5366:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5356:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5356:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5009:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5046:5:10",
														"nodeType": "YulTypedName",
														"src": "5046:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5053:10:10",
														"nodeType": "YulTypedName",
														"src": "5053:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5065:8:10",
														"nodeType": "YulTypedName",
														"src": "5065:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5078:6:10",
														"nodeType": "YulTypedName",
														"src": "5078:6:10",
														"type": ""
													}
												],
												"src": "5009:393:10"
											},
											{
												"body": {
													"nativeSrc": "5453:32:10",
													"nodeType": "YulBlock",
													"src": "5453:32:10",
													"statements": [
														{
															"nativeSrc": "5463:16:10",
															"nodeType": "YulAssignment",
															"src": "5463:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "5474:5:10",
																"nodeType": "YulIdentifier",
																"src": "5474:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5463:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5463:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5408:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5435:5:10",
														"nodeType": "YulTypedName",
														"src": "5435:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5445:7:10",
														"nodeType": "YulTypedName",
														"src": "5445:7:10",
														"type": ""
													}
												],
												"src": "5408:77:10"
											},
											{
												"body": {
													"nativeSrc": "5523:28:10",
													"nodeType": "YulBlock",
													"src": "5523:28:10",
													"statements": [
														{
															"nativeSrc": "5533:12:10",
															"nodeType": "YulAssignment",
															"src": "5533:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5540:5:10",
																"nodeType": "YulIdentifier",
																"src": "5540:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5533:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5533:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5491:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5509:5:10",
														"nodeType": "YulTypedName",
														"src": "5509:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5519:3:10",
														"nodeType": "YulTypedName",
														"src": "5519:3:10",
														"type": ""
													}
												],
												"src": "5491:60:10"
											},
											{
												"body": {
													"nativeSrc": "5617:82:10",
													"nodeType": "YulBlock",
													"src": "5617:82:10",
													"statements": [
														{
															"nativeSrc": "5627:66:10",
															"nodeType": "YulAssignment",
															"src": "5627:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5685:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5685:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5667:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5667:17:10"
																				},
																				"nativeSrc": "5667:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5667:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5658:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "5658:8:10"
																		},
																		"nativeSrc": "5658:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5658:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5640:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5640:17:10"
																},
																"nativeSrc": "5640:53:10",
																"nodeType": "YulFunctionCall",
																"src": "5640:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5627:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5627:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5557:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5597:5:10",
														"nodeType": "YulTypedName",
														"src": "5597:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5607:9:10",
														"nodeType": "YulTypedName",
														"src": "5607:9:10",
														"type": ""
													}
												],
												"src": "5557:142:10"
											},
											{
												"body": {
													"nativeSrc": "5752:28:10",
													"nodeType": "YulBlock",
													"src": "5752:28:10",
													"statements": [
														{
															"nativeSrc": "5762:12:10",
															"nodeType": "YulAssignment",
															"src": "5762:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5769:5:10",
																"nodeType": "YulIdentifier",
																"src": "5769:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5762:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5762:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5705:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5738:5:10",
														"nodeType": "YulTypedName",
														"src": "5738:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5748:3:10",
														"nodeType": "YulTypedName",
														"src": "5748:3:10",
														"type": ""
													}
												],
												"src": "5705:75:10"
											},
											{
												"body": {
													"nativeSrc": "5862:193:10",
													"nodeType": "YulBlock",
													"src": "5862:193:10",
													"statements": [
														{
															"nativeSrc": "5872:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5872:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5927:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "5927:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5896:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5896:30:10"
																},
																"nativeSrc": "5896:39:10",
																"nodeType": "YulFunctionCall",
																"src": "5896:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5876:16:10",
																	"nodeType": "YulTypedName",
																	"src": "5876:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5951:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5951:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5991:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "5991:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5985:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "5985:5:10"
																				},
																				"nativeSrc": "5985:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5985:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5998:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5998:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6030:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "6030:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6006:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "6006:23:10"
																				},
																				"nativeSrc": "6006:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6006:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5957:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "5957:27:10"
																		},
																		"nativeSrc": "5957:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5957:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5944:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5944:6:10"
																},
																"nativeSrc": "5944:105:10",
																"nodeType": "YulFunctionCall",
																"src": "5944:105:10"
															},
															"nativeSrc": "5944:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "5944:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5786:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5839:4:10",
														"nodeType": "YulTypedName",
														"src": "5839:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5845:6:10",
														"nodeType": "YulTypedName",
														"src": "5845:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5853:7:10",
														"nodeType": "YulTypedName",
														"src": "5853:7:10",
														"type": ""
													}
												],
												"src": "5786:269:10"
											},
											{
												"body": {
													"nativeSrc": "6110:24:10",
													"nodeType": "YulBlock",
													"src": "6110:24:10",
													"statements": [
														{
															"nativeSrc": "6120:8:10",
															"nodeType": "YulAssignment",
															"src": "6120:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6127:1:10",
																"nodeType": "YulLiteral",
																"src": "6127:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6120:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6120:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6061:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6106:3:10",
														"nodeType": "YulTypedName",
														"src": "6106:3:10",
														"type": ""
													}
												],
												"src": "6061:73:10"
											},
											{
												"body": {
													"nativeSrc": "6193:136:10",
													"nodeType": "YulBlock",
													"src": "6193:136:10",
													"statements": [
														{
															"nativeSrc": "6203:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6203:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6217:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "6217:30:10"
																},
																"nativeSrc": "6217:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6217:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6207:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6207:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6302:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6302:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6308:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6308:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6316:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6316:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6258:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6258:43:10"
																},
																"nativeSrc": "6258:65:10",
																"nodeType": "YulFunctionCall",
																"src": "6258:65:10"
															},
															"nativeSrc": "6258:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "6258:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6140:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6179:4:10",
														"nodeType": "YulTypedName",
														"src": "6179:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6185:6:10",
														"nodeType": "YulTypedName",
														"src": "6185:6:10",
														"type": ""
													}
												],
												"src": "6140:189:10"
											},
											{
												"body": {
													"nativeSrc": "6385:136:10",
													"nodeType": "YulBlock",
													"src": "6385:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6452:63:10",
																"nodeType": "YulBlock",
																"src": "6452:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6496:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6496:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6503:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6503:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6466:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "6466:29:10"
																			},
																			"nativeSrc": "6466:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6466:39:10"
																		},
																		"nativeSrc": "6466:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6466:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6405:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6405:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6412:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6412:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6402:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6402:2:10"
																},
																"nativeSrc": "6402:14:10",
																"nodeType": "YulFunctionCall",
																"src": "6402:14:10"
															},
															"nativeSrc": "6395:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6417:26:10",
																"nodeType": "YulBlock",
																"src": "6417:26:10",
																"statements": [
																	{
																		"nativeSrc": "6419:22:10",
																		"nodeType": "YulAssignment",
																		"src": "6419:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6432:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6432:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6439:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6439:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6428:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6428:3:10"
																			},
																			"nativeSrc": "6428:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6428:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6419:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6419:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6399:2:10",
																"nodeType": "YulBlock",
																"src": "6399:2:10",
																"statements": []
															},
															"src": "6395:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6335:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6373:5:10",
														"nodeType": "YulTypedName",
														"src": "6373:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6380:3:10",
														"nodeType": "YulTypedName",
														"src": "6380:3:10",
														"type": ""
													}
												],
												"src": "6335:186:10"
											},
											{
												"body": {
													"nativeSrc": "6606:464:10",
													"nodeType": "YulBlock",
													"src": "6606:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6632:431:10",
																"nodeType": "YulBlock",
																"src": "6632:431:10",
																"statements": [
																	{
																		"nativeSrc": "6646:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6646:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6694:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6694:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6662:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "6662:31:10"
																			},
																			"nativeSrc": "6662:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6662:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6650:8:10",
																				"nodeType": "YulTypedName",
																				"src": "6650:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6713:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6713:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6736:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "6736:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6764:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "6764:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6746:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "6746:17:10"
																					},
																					"nativeSrc": "6746:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6746:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6732:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6732:3:10"
																			},
																			"nativeSrc": "6732:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6732:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6717:11:10",
																				"nodeType": "YulTypedName",
																				"src": "6717:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6933:27:10",
																			"nodeType": "YulBlock",
																			"src": "6933:27:10",
																			"statements": [
																				{
																					"nativeSrc": "6935:23:10",
																					"nodeType": "YulAssignment",
																					"src": "6935:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6950:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "6950:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6935:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "6935:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6917:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "6917:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6929:2:10",
																					"nodeType": "YulLiteral",
																					"src": "6929:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6914:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "6914:2:10"
																			},
																			"nativeSrc": "6914:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6914:18:10"
																		},
																		"nativeSrc": "6911:49:10",
																		"nodeType": "YulIf",
																		"src": "6911:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7002:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "7002:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7019:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "7019:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7047:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "7047:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7029:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "7029:17:10"
																							},
																							"nativeSrc": "7029:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "7029:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7015:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "7015:3:10"
																					},
																					"nativeSrc": "7015:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7015:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6973:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "6973:28:10"
																			},
																			"nativeSrc": "6973:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6973:80:10"
																		},
																		"nativeSrc": "6973:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6973:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6623:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6623:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6628:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6628:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6620:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6620:2:10"
																},
																"nativeSrc": "6620:11:10",
																"nodeType": "YulFunctionCall",
																"src": "6620:11:10"
															},
															"nativeSrc": "6617:446:10",
															"nodeType": "YulIf",
															"src": "6617:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6527:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6582:5:10",
														"nodeType": "YulTypedName",
														"src": "6582:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6589:3:10",
														"nodeType": "YulTypedName",
														"src": "6589:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6594:10:10",
														"nodeType": "YulTypedName",
														"src": "6594:10:10",
														"type": ""
													}
												],
												"src": "6527:543:10"
											},
											{
												"body": {
													"nativeSrc": "7139:54:10",
													"nodeType": "YulBlock",
													"src": "7139:54:10",
													"statements": [
														{
															"nativeSrc": "7149:37:10",
															"nodeType": "YulAssignment",
															"src": "7149:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7174:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7174:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7180:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7180:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7170:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7170:3:10"
																},
																"nativeSrc": "7170:16:10",
																"nodeType": "YulFunctionCall",
																"src": "7170:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7149:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "7149:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7076:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7114:4:10",
														"nodeType": "YulTypedName",
														"src": "7114:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7120:5:10",
														"nodeType": "YulTypedName",
														"src": "7120:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7130:8:10",
														"nodeType": "YulTypedName",
														"src": "7130:8:10",
														"type": ""
													}
												],
												"src": "7076:117:10"
											},
											{
												"body": {
													"nativeSrc": "7250:118:10",
													"nodeType": "YulBlock",
													"src": "7250:118:10",
													"statements": [
														{
															"nativeSrc": "7260:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7260:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7309:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7309:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7312:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "7312:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7305:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7305:3:10"
																				},
																				"nativeSrc": "7305:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7305:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7324:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7324:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7320:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7320:3:10"
																				},
																				"nativeSrc": "7320:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7320:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7276:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "7276:28:10"
																		},
																		"nativeSrc": "7276:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7276:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7272:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7272:3:10"
																},
																"nativeSrc": "7272:56:10",
																"nodeType": "YulFunctionCall",
																"src": "7272:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7264:4:10",
																	"nodeType": "YulTypedName",
																	"src": "7264:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7337:25:10",
															"nodeType": "YulAssignment",
															"src": "7337:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7351:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7351:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7357:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7357:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7347:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7347:3:10"
																},
																"nativeSrc": "7347:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7347:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7337:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7337:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7199:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7227:4:10",
														"nodeType": "YulTypedName",
														"src": "7227:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7233:5:10",
														"nodeType": "YulTypedName",
														"src": "7233:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7243:6:10",
														"nodeType": "YulTypedName",
														"src": "7243:6:10",
														"type": ""
													}
												],
												"src": "7199:169:10"
											},
											{
												"body": {
													"nativeSrc": "7454:214:10",
													"nodeType": "YulBlock",
													"src": "7454:214:10",
													"statements": [
														{
															"nativeSrc": "7587:37:10",
															"nodeType": "YulAssignment",
															"src": "7587:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7614:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7614:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7620:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7620:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7595:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "7595:18:10"
																},
																"nativeSrc": "7595:29:10",
																"nodeType": "YulFunctionCall",
																"src": "7595:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7587:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7587:4:10"
																}
															]
														},
														{
															"nativeSrc": "7633:29:10",
															"nodeType": "YulAssignment",
															"src": "7633:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7644:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7644:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7654:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7654:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7657:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7657:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7650:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7650:3:10"
																		},
																		"nativeSrc": "7650:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7650:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7641:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7641:2:10"
																},
																"nativeSrc": "7641:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7641:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7633:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7633:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7373:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7435:4:10",
														"nodeType": "YulTypedName",
														"src": "7435:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7441:3:10",
														"nodeType": "YulTypedName",
														"src": "7441:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7449:4:10",
														"nodeType": "YulTypedName",
														"src": "7449:4:10",
														"type": ""
													}
												],
												"src": "7373:295:10"
											},
											{
												"body": {
													"nativeSrc": "7765:1303:10",
													"nodeType": "YulBlock",
													"src": "7765:1303:10",
													"statements": [
														{
															"nativeSrc": "7776:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7776:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7823:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7823:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7790:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "7790:32:10"
																},
																"nativeSrc": "7790:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7790:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7780:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7780:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7912:22:10",
																"nodeType": "YulBlock",
																"src": "7912:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7914:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7914:16:10"
																			},
																			"nativeSrc": "7914:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7914:18:10"
																		},
																		"nativeSrc": "7914:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7914:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7884:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7884:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7892:18:10",
																		"nodeType": "YulLiteral",
																		"src": "7892:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7881:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7881:2:10"
																},
																"nativeSrc": "7881:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7881:30:10"
															},
															"nativeSrc": "7878:56:10",
															"nodeType": "YulIf",
															"src": "7878:56:10"
														},
														{
															"nativeSrc": "7944:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7944:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7990:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7990:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7984:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "7984:5:10"
																		},
																		"nativeSrc": "7984:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7984:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7958:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "7958:25:10"
																},
																"nativeSrc": "7958:38:10",
																"nodeType": "YulFunctionCall",
																"src": "7958:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7948:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7948:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8089:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8089:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8095:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8095:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8103:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8103:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8043:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "8043:45:10"
																},
																"nativeSrc": "8043:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8043:67:10"
															},
															"nativeSrc": "8043:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "8043:67:10"
														},
														{
															"nativeSrc": "8120:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8120:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "8137:1:10",
																"nodeType": "YulLiteral",
																"src": "8137:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8124:9:10",
																	"nodeType": "YulTypedName",
																	"src": "8124:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8148:17:10",
															"nodeType": "YulAssignment",
															"src": "8148:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "8161:4:10",
																"nodeType": "YulLiteral",
																"src": "8161:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8148:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "8148:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8212:611:10",
																		"nodeType": "YulBlock",
																		"src": "8212:611:10",
																		"statements": [
																			{
																				"nativeSrc": "8226:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8226:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8245:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "8245:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8257:4:10",
																									"nodeType": "YulLiteral",
																									"src": "8257:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8253:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "8253:3:10"
																							},
																							"nativeSrc": "8253:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "8253:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8241:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "8241:3:10"
																					},
																					"nativeSrc": "8241:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8241:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8230:7:10",
																						"nodeType": "YulTypedName",
																						"src": "8230:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8277:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8277:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8323:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "8323:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8291:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "8291:31:10"
																					},
																					"nativeSrc": "8291:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8291:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8281:6:10",
																						"nodeType": "YulTypedName",
																						"src": "8281:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8341:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8341:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8350:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8350:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8345:1:10",
																						"nodeType": "YulTypedName",
																						"src": "8345:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8409:163:10",
																					"nodeType": "YulBlock",
																					"src": "8409:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8434:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8434:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8452:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "8452:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8457:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "8457:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8448:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "8448:3:10"
																												},
																												"nativeSrc": "8448:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "8448:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8442:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "8442:5:10"
																										},
																										"nativeSrc": "8442:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8442:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8427:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8427:6:10"
																								},
																								"nativeSrc": "8427:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8427:42:10"
																							},
																							"nativeSrc": "8427:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "8427:42:10"
																						},
																						{
																							"nativeSrc": "8486:24:10",
																							"nodeType": "YulAssignment",
																							"src": "8486:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8500:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8500:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8508:1:10",
																										"nodeType": "YulLiteral",
																										"src": "8508:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8496:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8496:3:10"
																								},
																								"nativeSrc": "8496:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8496:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8486:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8486:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8527:31:10",
																							"nodeType": "YulAssignment",
																							"src": "8527:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8544:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "8544:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8555:2:10",
																										"nodeType": "YulLiteral",
																										"src": "8555:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8540:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8540:3:10"
																								},
																								"nativeSrc": "8540:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8540:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8527:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "8527:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8375:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "8375:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8378:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "8378:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8372:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "8372:2:10"
																					},
																					"nativeSrc": "8372:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8372:14:10"
																				},
																				"nativeSrc": "8364:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8387:21:10",
																					"nodeType": "YulBlock",
																					"src": "8387:21:10",
																					"statements": [
																						{
																							"nativeSrc": "8389:17:10",
																							"nodeType": "YulAssignment",
																							"src": "8389:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8398:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "8398:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8401:4:10",
																										"nodeType": "YulLiteral",
																										"src": "8401:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8394:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8394:3:10"
																								},
																								"nativeSrc": "8394:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8394:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8389:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "8389:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8368:3:10",
																					"nodeType": "YulBlock",
																					"src": "8368:3:10",
																					"statements": []
																				},
																				"src": "8364:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "8608:156:10",
																					"nodeType": "YulBlock",
																					"src": "8608:156:10",
																					"statements": [
																						{
																							"nativeSrc": "8626:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8626:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8653:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "8653:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8658:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8658:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8649:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "8649:3:10"
																										},
																										"nativeSrc": "8649:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8649:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8643:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8643:5:10"
																								},
																								"nativeSrc": "8643:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8643:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8630:9:10",
																									"nodeType": "YulTypedName",
																									"src": "8630:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8693:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8693:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8720:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8720:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8735:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "8735:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8743:4:10",
																														"nodeType": "YulLiteral",
																														"src": "8743:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8731:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "8731:3:10"
																												},
																												"nativeSrc": "8731:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "8731:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8701:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "8701:18:10"
																										},
																										"nativeSrc": "8701:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8701:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8686:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8686:6:10"
																								},
																								"nativeSrc": "8686:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8686:64:10"
																							},
																							"nativeSrc": "8686:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "8686:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8591:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "8591:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8600:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "8600:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8588:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "8588:2:10"
																					},
																					"nativeSrc": "8588:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8588:19:10"
																				},
																				"nativeSrc": "8585:179:10",
																				"nodeType": "YulIf",
																				"src": "8585:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8784:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "8784:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8798:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "8798:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8806:1:10",
																											"nodeType": "YulLiteral",
																											"src": "8806:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8794:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "8794:3:10"
																									},
																									"nativeSrc": "8794:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "8794:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8810:1:10",
																									"nodeType": "YulLiteral",
																									"src": "8810:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8790:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "8790:3:10"
																							},
																							"nativeSrc": "8790:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "8790:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8777:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8777:6:10"
																					},
																					"nativeSrc": "8777:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8777:36:10"
																				},
																				"nativeSrc": "8777:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "8777:36:10"
																			}
																		]
																	},
																	"nativeSrc": "8205:618:10",
																	"nodeType": "YulCase",
																	"src": "8205:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8210:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8210:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8840:222:10",
																		"nodeType": "YulBlock",
																		"src": "8840:222:10",
																		"statements": [
																			{
																				"nativeSrc": "8854:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8854:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8867:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8867:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8858:5:10",
																						"nodeType": "YulTypedName",
																						"src": "8858:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8891:67:10",
																					"nodeType": "YulBlock",
																					"src": "8891:67:10",
																					"statements": [
																						{
																							"nativeSrc": "8909:35:10",
																							"nodeType": "YulAssignment",
																							"src": "8909:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8928:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "8928:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8933:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8933:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8924:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "8924:3:10"
																										},
																										"nativeSrc": "8924:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8924:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8918:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8918:5:10"
																								},
																								"nativeSrc": "8918:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8918:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8909:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8909:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8884:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8884:6:10"
																				},
																				"nativeSrc": "8881:77:10",
																				"nodeType": "YulIf",
																				"src": "8881:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8978:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "8978:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9037:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "9037:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9044:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "9044:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8984:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "8984:52:10"
																							},
																							"nativeSrc": "8984:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "8984:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8971:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8971:6:10"
																					},
																					"nativeSrc": "8971:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8971:81:10"
																				},
																				"nativeSrc": "8971:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "8971:81:10"
																			}
																		]
																	},
																	"nativeSrc": "8832:230:10",
																	"nodeType": "YulCase",
																	"src": "8832:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8185:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8185:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8193:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8193:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8182:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8182:2:10"
																},
																"nativeSrc": "8182:14:10",
																"nodeType": "YulFunctionCall",
																"src": "8182:14:10"
															},
															"nativeSrc": "8175:887:10",
															"nodeType": "YulSwitch",
															"src": "8175:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7673:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7754:4:10",
														"nodeType": "YulTypedName",
														"src": "7754:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7760:3:10",
														"nodeType": "YulTypedName",
														"src": "7760:3:10",
														"type": ""
													}
												],
												"src": "7673:1395:10"
											},
											{
												"body": {
													"nativeSrc": "9139:53:10",
													"nodeType": "YulBlock",
													"src": "9139:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9156:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9156:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9179:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9179:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9161:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "9161:17:10"
																		},
																		"nativeSrc": "9161:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9161:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9149:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9149:6:10"
																},
																"nativeSrc": "9149:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9149:37:10"
															},
															"nativeSrc": "9149:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "9149:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9074:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9127:5:10",
														"nodeType": "YulTypedName",
														"src": "9127:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9134:3:10",
														"nodeType": "YulTypedName",
														"src": "9134:3:10",
														"type": ""
													}
												],
												"src": "9074:118:10"
											},
											{
												"body": {
													"nativeSrc": "9296:124:10",
													"nodeType": "YulBlock",
													"src": "9296:124:10",
													"statements": [
														{
															"nativeSrc": "9306:26:10",
															"nodeType": "YulAssignment",
															"src": "9306:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9318:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9318:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9329:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9329:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9314:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9314:3:10"
																},
																"nativeSrc": "9314:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9314:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9306:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9306:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9386:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9386:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9399:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9399:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9410:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9410:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9395:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9395:3:10"
																		},
																		"nativeSrc": "9395:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9395:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9342:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9342:43:10"
																},
																"nativeSrc": "9342:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9342:71:10"
															},
															"nativeSrc": "9342:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9342:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9198:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9268:9:10",
														"nodeType": "YulTypedName",
														"src": "9268:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9280:6:10",
														"nodeType": "YulTypedName",
														"src": "9280:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9291:4:10",
														"nodeType": "YulTypedName",
														"src": "9291:4:10",
														"type": ""
													}
												],
												"src": "9198:222:10"
											},
											{
												"body": {
													"nativeSrc": "9454:152:10",
													"nodeType": "YulBlock",
													"src": "9454:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9471:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9471:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9474:77:10",
																		"nodeType": "YulLiteral",
																		"src": "9474:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9464:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9464:6:10"
																},
																"nativeSrc": "9464:88:10",
																"nodeType": "YulFunctionCall",
																"src": "9464:88:10"
															},
															"nativeSrc": "9464:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "9464:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9568:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9568:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9571:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9571:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9561:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9561:6:10"
																},
																"nativeSrc": "9561:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9561:15:10"
															},
															"nativeSrc": "9561:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9561:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9592:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9592:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9595:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9595:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9585:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9585:6:10"
																},
																"nativeSrc": "9585:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9585:15:10"
															},
															"nativeSrc": "9585:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9585:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9426:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "9426:180:10"
											},
											{
												"body": {
													"nativeSrc": "9640:152:10",
													"nodeType": "YulBlock",
													"src": "9640:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9657:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9657:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9660:77:10",
																		"nodeType": "YulLiteral",
																		"src": "9660:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9650:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9650:6:10"
																},
																"nativeSrc": "9650:88:10",
																"nodeType": "YulFunctionCall",
																"src": "9650:88:10"
															},
															"nativeSrc": "9650:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "9650:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9754:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9754:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9757:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9757:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9747:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9747:6:10"
																},
																"nativeSrc": "9747:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9747:15:10"
															},
															"nativeSrc": "9747:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9747:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9778:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9778:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9781:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9781:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9771:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9771:6:10"
																},
																"nativeSrc": "9771:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9771:15:10"
															},
															"nativeSrc": "9771:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9771:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9612:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "9612:180:10"
											},
											{
												"body": {
													"nativeSrc": "9842:147:10",
													"nodeType": "YulBlock",
													"src": "9842:147:10",
													"statements": [
														{
															"nativeSrc": "9852:25:10",
															"nodeType": "YulAssignment",
															"src": "9852:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9875:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9875:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9857:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9857:17:10"
																},
																"nativeSrc": "9857:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9857:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9852:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9852:1:10"
																}
															]
														},
														{
															"nativeSrc": "9886:25:10",
															"nodeType": "YulAssignment",
															"src": "9886:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9909:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9909:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9891:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9891:17:10"
																},
																"nativeSrc": "9891:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9891:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9886:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9886:1:10"
																}
															]
														},
														{
															"nativeSrc": "9920:16:10",
															"nodeType": "YulAssignment",
															"src": "9920:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9931:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9931:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9934:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9934:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9927:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9927:3:10"
																},
																"nativeSrc": "9927:9:10",
																"nodeType": "YulFunctionCall",
																"src": "9927:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9920:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9920:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9960:22:10",
																"nodeType": "YulBlock",
																"src": "9960:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9962:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9962:16:10"
																			},
																			"nativeSrc": "9962:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9962:18:10"
																		},
																		"nativeSrc": "9962:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9962:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9952:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9952:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9955:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9955:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9949:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9949:2:10"
																},
																"nativeSrc": "9949:10:10",
																"nodeType": "YulFunctionCall",
																"src": "9949:10:10"
															},
															"nativeSrc": "9946:36:10",
															"nodeType": "YulIf",
															"src": "9946:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9798:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9829:1:10",
														"nodeType": "YulTypedName",
														"src": "9829:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9832:1:10",
														"nodeType": "YulTypedName",
														"src": "9832:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9838:3:10",
														"nodeType": "YulTypedName",
														"src": "9838:3:10",
														"type": ""
													}
												],
												"src": "9798:191:10"
											},
											{
												"body": {
													"nativeSrc": "10060:53:10",
													"nodeType": "YulBlock",
													"src": "10060:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10077:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10077:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10100:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "10100:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10082:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "10082:17:10"
																		},
																		"nativeSrc": "10082:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10082:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10070:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10070:6:10"
																},
																"nativeSrc": "10070:37:10",
																"nodeType": "YulFunctionCall",
																"src": "10070:37:10"
															},
															"nativeSrc": "10070:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "10070:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9995:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10048:5:10",
														"nodeType": "YulTypedName",
														"src": "10048:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10055:3:10",
														"nodeType": "YulTypedName",
														"src": "10055:3:10",
														"type": ""
													}
												],
												"src": "9995:118:10"
											},
											{
												"body": {
													"nativeSrc": "10273:288:10",
													"nodeType": "YulBlock",
													"src": "10273:288:10",
													"statements": [
														{
															"nativeSrc": "10283:26:10",
															"nodeType": "YulAssignment",
															"src": "10283:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10295:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10295:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10306:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10306:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10291:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10291:3:10"
																},
																"nativeSrc": "10291:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10291:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10283:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10283:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10363:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10363:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10376:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10376:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10387:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10387:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10372:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10372:3:10"
																		},
																		"nativeSrc": "10372:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10372:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10319:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10319:43:10"
																},
																"nativeSrc": "10319:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10319:71:10"
															},
															"nativeSrc": "10319:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10319:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10444:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10444:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10457:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10457:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10468:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10468:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10453:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10453:3:10"
																		},
																		"nativeSrc": "10453:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10453:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10400:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10400:43:10"
																},
																"nativeSrc": "10400:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10400:72:10"
															},
															"nativeSrc": "10400:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10400:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10526:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10526:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10539:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10539:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10550:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10550:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10535:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10535:3:10"
																		},
																		"nativeSrc": "10535:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10535:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10482:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10482:43:10"
																},
																"nativeSrc": "10482:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10482:72:10"
															},
															"nativeSrc": "10482:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10482:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10119:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10229:9:10",
														"nodeType": "YulTypedName",
														"src": "10229:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10241:6:10",
														"nodeType": "YulTypedName",
														"src": "10241:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10249:6:10",
														"nodeType": "YulTypedName",
														"src": "10249:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10257:6:10",
														"nodeType": "YulTypedName",
														"src": "10257:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10268:4:10",
														"nodeType": "YulTypedName",
														"src": "10268:4:10",
														"type": ""
													}
												],
												"src": "10119:442:10"
											},
											{
												"body": {
													"nativeSrc": "10665:124:10",
													"nodeType": "YulBlock",
													"src": "10665:124:10",
													"statements": [
														{
															"nativeSrc": "10675:26:10",
															"nodeType": "YulAssignment",
															"src": "10675:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10687:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10687:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10698:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10698:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10683:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10683:3:10"
																},
																"nativeSrc": "10683:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10683:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10675:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10675:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10755:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10755:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10768:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10768:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10779:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10779:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10764:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10764:3:10"
																		},
																		"nativeSrc": "10764:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10764:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10711:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10711:43:10"
																},
																"nativeSrc": "10711:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10711:71:10"
															},
															"nativeSrc": "10711:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10711:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10567:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10637:9:10",
														"nodeType": "YulTypedName",
														"src": "10637:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10649:6:10",
														"nodeType": "YulTypedName",
														"src": "10649:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10660:4:10",
														"nodeType": "YulTypedName",
														"src": "10660:4:10",
														"type": ""
													}
												],
												"src": "10567:222:10"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405269d3c21bcecceda10000006007556a201fcafc2577d29850000060085566038d7ea4c6800060095566b3697b81284000600a555f600b556a0fb768105935a2f3000000600c556a854fdabd6aa1d32fb00000600d5566b3697b81284000600e5567016345785d8a0000600f555f6010555f60115f6101000a81548160ff0219169083600281111561009857610097610605565b5b021790555062ed4e006014556301e133806015553480156100b7575f80fd5b506040516146cf3803806146cf83398181016040528101906100d991906107ed565b336040518060400160405280600881526020017f426574746f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f424554540000000000000000000000000000000000000000000000000000000081525081600390816101559190610a41565b5080600490816101659190610a41565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101d8575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101cf9190610b1f565b60405180910390fd5b6101e7816102a460201b60201c565b50600160068190555061020b306aa56fa5b99019a5c800000061036760201b60201c565b5f5b815181101561029d57601682828151811061022b5761022a610b38565b5b6020026020010151908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808060010191505061020d565b5050610c22565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103d7575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103ce9190610b1f565b60405180910390fd5b6103e85f83836103ec60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361043c578060025f8282546104309190610b92565b9250508190555061050a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156104c5578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104bc93929190610bd4565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610551578060025f828254039250508190555061059b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105f89190610c09565b60405180910390a3505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61068d82610647565b810181811067ffffffffffffffff821117156106ac576106ab610657565b5b80604052505050565b5f6106be610632565b90506106ca8282610684565b919050565b5f67ffffffffffffffff8211156106e9576106e8610657565b5b602082029050602081019050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610727826106fe565b9050919050565b6107378161071d565b8114610741575f80fd5b50565b5f815190506107528161072e565b92915050565b5f61076a610765846106cf565b6106b5565b9050808382526020820190506020840283018581111561078d5761078c6106fa565b5b835b818110156107b657806107a28882610744565b84526020840193505060208101905061078f565b5050509392505050565b5f82601f8301126107d4576107d3610643565b5b81516107e4848260208601610758565b91505092915050565b5f602082840312156108025761080161063b565b5b5f82015167ffffffffffffffff81111561081f5761081e61063f565b5b61082b848285016107c0565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061088257607f821691505b6020821081036108955761089461083e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108f77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826108bc565b61090186836108bc565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61094561094061093b84610919565b610922565b610919565b9050919050565b5f819050919050565b61095e8361092b565b61097261096a8261094c565b8484546108c8565b825550505050565b5f90565b61098661097a565b610991818484610955565b505050565b5b818110156109b4576109a95f8261097e565b600181019050610997565b5050565b601f8211156109f9576109ca8161089b565b6109d3846108ad565b810160208510156109e2578190505b6109f66109ee856108ad565b830182610996565b50505b505050565b5f82821c905092915050565b5f610a195f19846008026109fe565b1980831691505092915050565b5f610a318383610a0a565b9150826002028217905092915050565b610a4a82610834565b67ffffffffffffffff811115610a6357610a62610657565b5b610a6d825461086b565b610a788282856109b8565b5f60209050601f831160018114610aa9575f8415610a97578287015190505b610aa18582610a26565b865550610b08565b601f198416610ab78661089b565b5f5b82811015610ade57848901518255600182019150602085019450602081019050610ab9565b86831015610afb5784890151610af7601f891682610a0a565b8355505b6001600288020188555050505b505050505050565b610b198161071d565b82525050565b5f602082019050610b325f830184610b10565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b9c82610919565b9150610ba783610919565b9250828201905080821115610bbf57610bbe610b65565b5b92915050565b610bce81610919565b82525050565b5f606082019050610be75f830186610b10565b610bf46020830185610bc5565b610c016040830184610bc5565b949350505050565b5f602082019050610c1c5f830184610bc5565b92915050565b613aa080610c2f5f395ff3fe608060405260043610610228575f3560e01c8063715018a611610122578063a9059cbb116100aa578063c040e6b81161006e578063c040e6b814610801578063c552e04b1461082b578063dd62ed3e14610855578063e6bd92b914610891578063f2fde38b146108bb57610268565b8063a9059cbb1461071d578063b0e6863014610759578063b68ed11f14610783578063ba20cf4c146107ad578063bda95633146107d757610268565b80638f7713ff116100f15780638f7713ff1461064d578063902d55a514610677578063920168b3146106a157806395ccea67146106cb57806395d89b41146106f357610268565b8063715018a6146105bb5780637547c7a3146105d15780638da5cb5b146105f95780638e15f4731461062357610268565b80632b1cbc38116101b057806340f02ab61161017457806340f02ab6146104ff57806354dd1da41461052957806355dd574c1461053f5780635fb3b9441461055557806370a082311461057f57610268565b80632b1cbc3814610451578063313ce5671461048d57806332c85ac0146104b7578063338dbf59146104cd5780633610724e146104e357610268565b80631514617e116101f75780631514617e1461036f57806318160ddd14610399578063192399d1146103c357806323b872dd146103ff57806324600fc31461043b57610268565b806306fdde03146102a3578063095ea7b3146102cd5780630fe83bb81461030957806310c7f0b91461033357610268565b36610268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025f90612770565b60405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029a90612770565b60405180910390fd5b3480156102ae575f80fd5b506102b76108e3565b6040516102c491906127ee565b60405180910390f35b3480156102d8575f80fd5b506102f360048036038101906102ee919061289f565b610973565b60405161030091906128f7565b60405180910390f35b348015610314575f80fd5b5061031d610995565b60405161032a919061291f565b60405180910390f35b34801561033e575f80fd5b5061035960048036038101906103549190612938565b61099b565b60405161036691906129be565b60405180910390f35b34801561037a575f80fd5b506103836109d6565b604051610390919061291f565b60405180910390f35b3480156103a4575f80fd5b506103ad6109dc565b6040516103ba919061291f565b60405180910390f35b3480156103ce575f80fd5b506103e960048036038101906103e491906129d7565b6109e5565b6040516103f6919061291f565b60405180910390f35b34801561040a575f80fd5b5061042560048036038101906104209190612a02565b6109fa565b60405161043291906128f7565b60405180910390f35b348015610446575f80fd5b5061044f610a28565b005b34801561045c575f80fd5b50610477600480360381019061047291906129d7565b610ae7565b604051610484919061291f565b60405180910390f35b348015610498575f80fd5b506104a1610afc565b6040516104ae9190612a6d565b60405180910390f35b3480156104c2575f80fd5b506104cb610b04565b005b3480156104d8575f80fd5b506104e1610bd0565b005b6104fd60048036038101906104f89190612938565b610d45565b005b34801561050a575f80fd5b50610513611257565b604051610520919061291f565b60405180910390f35b348015610534575f80fd5b5061053d61125d565b005b34801561054a575f80fd5b50610553611450565b005b348015610560575f80fd5b50610569611584565b604051610576919061291f565b60405180910390f35b34801561058a575f80fd5b506105a560048036038101906105a091906129d7565b61158a565b6040516105b2919061291f565b60405180910390f35b3480156105c6575f80fd5b506105cf6115cf565b005b3480156105dc575f80fd5b506105f760048036038101906105f29190612938565b6115e2565b005b348015610604575f80fd5b5061060d611809565b60405161061a9190612a95565b60405180910390f35b34801561062e575f80fd5b50610637611831565b604051610644919061291f565b60405180910390f35b348015610658575f80fd5b5061066161198f565b60405161066e919061291f565b60405180910390f35b348015610682575f80fd5b5061068b611995565b604051610698919061291f565b60405180910390f35b3480156106ac575f80fd5b506106b56119a4565b6040516106c2919061291f565b60405180910390f35b3480156106d6575f80fd5b506106f160048036038101906106ec919061289f565b6119aa565b005b3480156106fe575f80fd5b50610707611a9e565b60405161071491906127ee565b60405180910390f35b348015610728575f80fd5b50610743600480360381019061073e919061289f565b611b2e565b60405161075091906128f7565b60405180910390f35b348015610764575f80fd5b5061076d611b50565b60405161077a919061291f565b60405180910390f35b34801561078e575f80fd5b50610797611b56565b6040516107a4919061291f565b60405180910390f35b3480156107b8575f80fd5b506107c1611b5c565b6040516107ce919061291f565b60405180910390f35b3480156107e2575f80fd5b506107eb611b62565b6040516107f8919061291f565b60405180910390f35b34801561080c575f80fd5b50610815611b68565b6040516108229190612b21565b60405180910390f35b348015610836575f80fd5b5061083f611b7a565b60405161084c919061291f565b60405180910390f35b348015610860575f80fd5b5061087b60048036038101906108769190612b3a565b611b80565b604051610888919061291f565b60405180910390f35b34801561089c575f80fd5b506108a5611c02565b6040516108b2919061291f565b60405180910390f35b3480156108c6575f80fd5b506108e160048036038101906108dc91906129d7565b611c08565b005b6060600380546108f290612ba5565b80601f016020809104026020016040519081016040528092919081815260200182805461091e90612ba5565b80156109695780601f1061094057610100808354040283529160200191610969565b820191905f5260205f20905b81548152906001019060200180831161094c57829003601f168201915b5050505050905090565b5f8061097d611c8c565b905061098a818585611c93565b600191505092915050565b600d5481565b601681815481106109aa575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60145481565b5f600254905090565b6012602052805f5260405f205f915090505481565b5f80610a04611c8c565b9050610a11858285611ca5565b610a1c858585611d37565b60019150509392505050565b610a30611e27565b610a38611eae565b5f479050610a44611809565b73ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610a86573d5f803e3d5ffd5b50610a8f611809565b73ffffffffffffffffffffffffffffffffffffffff167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d82604051610ad4919061291f565b60405180910390a250610ae5611efd565b565b6013602052805f5260405f205f915090505481565b5f6012905090565b610b0c611e27565b600854600b541480610b215750600d54601054145b610b60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5790612c1f565b60405180910390fd5b5f60115f6101000a81548160ff02191690836002811115610b8457610b83612aae565b5b02179055507f273467821f33675618854603ef917ebcec8a1a39f95c43d5564ed1aefab870b360115f9054906101000a900460ff16604051610bc69190612b21565b60405180910390a1565b610bd8611e27565b5f6002811115610beb57610bea612aae565b5b60115f9054906101000a900460ff166002811115610c0c57610c0b612aae565b5b14610c4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4390612cad565b60405180910390fd5b5f600b5414610c90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8790612d3b565b60405180910390fd5b5f60105414610cd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccb90612dc9565b60405180910390fd5b600160115f6101000a81548160ff02191690836002811115610cf957610cf8612aae565b5b02179055507f273467821f33675618854603ef917ebcec8a1a39f95c43d5564ed1aefab870b360115f9054906101000a900460ff16604051610d3b9190612b21565b60405180910390a1565b610d4d611eae565b5f6002811115610d6057610d5f612aae565b5b60115f9054906101000a900460ff166002811115610d8157610d80612aae565b5b03610dc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db890612e31565b60405180910390fd5b5f610dca611831565b90505f8111610e0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0590612e99565b60405180910390fd5b5f60016002811115610e2357610e22612aae565b5b60115f9054906101000a900460ff166002811115610e4457610e43612aae565b5b0361107657600854600b5410610e8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8690612f01565b60405180910390fd5b610ec4610ebf670de0b6b3a7640000610eb18587611f0790919063ffffffff16565b611f1c90919063ffffffff16565b611f31565b9050610edb81600b5461210f90919063ffffffff16565b600b81905550600854600b541115610f28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1f90612f8f565b60405180910390fd5b610f788160125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461210f90919063ffffffff16565b60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610fe2601454610fd46015544261210f90919063ffffffff16565b61210f90919063ffffffff16565b60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167f8fa81bb0702332ea2a0aee44bb9e4d359cf4a2c5a820dd59d9129369bdbca73f82604051611069919061291f565b60405180910390a261124a565b60028081111561108957611088612aae565b5b60115f9054906101000a900460ff1660028111156110aa576110a9612aae565b5b0361124957600d54601054106110f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ec90612ff7565b60405180910390fd5b68056bc75e2d631000008310158015611117575068a2a15d09519be000008311155b611156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114d9061305f565b60405180910390fd5b61118b611186670de0b6b3a76400006111788587611f0790919063ffffffff16565b611f1c90919063ffffffff16565b612124565b90506111a28160105461210f90919063ffffffff16565b601081905550600d5460105411156111ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e6906130c7565b60405180910390fd5b6111fa303383611d37565b3373ffffffffffffffffffffffffffffffffffffffff167f550498dc565cc74203b9d14cba907c9f60ceefe26e82b37df98f6cb98529cf1982604051611240919061291f565b60405180910390a25b5b5050611254611efd565b50565b60155481565b611265611eae565b60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20544210156112e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112dc90613155565b60405180910390fd5b5f60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111611368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135f906131bd565b60405180910390fd5b5f60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506113f7303383611d37565b3373ffffffffffffffffffffffffffffffffffffffff167f6bc5063c7239b75c8bf325a2a2238f726fada322163996bb6c93d5594fb119f08260405161143d919061291f565b60405180910390a25061144e611efd565b565b611458611e27565b6001600281111561146c5761146b612aae565b5b60115f9054906101000a900460ff16600281111561148d5761148c612aae565b5b146114cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c49061324b565b60405180910390fd5b600854600b5414611513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150a906132d9565b60405180910390fd5b600260115f6101000a81548160ff0219169083600281111561153857611537612aae565b5b02179055507f273467821f33675618854603ef917ebcec8a1a39f95c43d5564ed1aefab870b360115f9054906101000a900460ff1660405161157a9190612b21565b60405180910390a1565b600b5481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6115d7611e27565b6115e05f612230565b565b6115ea611e27565b6115f2611eae565b5f8111611634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162b90613341565b60405180910390fd5b8061163e3361158a565b101561167f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611676906133a9565b60405180910390fd5b61168a333083611d37565b6116da8160125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461210f90919063ffffffff16565b60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506117306015544261210f90919063ffffffff16565b60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167fdd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc8260135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040516117f69291906133c7565b60405180910390a2611806611efd565b50565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f90505f5b601680549050811015611959575f6016828154811061185a576118596133ee565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156118ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118ee91906134a1565b5050509150505f8113611936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192d90613562565b60405180910390fd5b611949818461210f90919063ffffffff16565b9250508080600101915050611838565b506119896402540be40061197b60168054905084611f1c90919063ffffffff16565b611f0790919063ffffffff16565b91505090565b600f5481565b6aa56fa5b99019a5c800000081565b600e5481565b6119b2611e27565b6119ba611eae565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6119de611809565b836040518363ffffffff1660e01b81526004016119fc929190613580565b6020604051808303815f875af1158015611a18573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a3c91906135d1565b50611a45611809565b73ffffffffffffffffffffffffffffffffffffffff167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d82604051611a8a919061291f565b60405180910390a2611a9a611efd565b5050565b606060048054611aad90612ba5565b80601f0160208091040260200160405190810160405280929190818152602001828054611ad990612ba5565b8015611b245780601f10611afb57610100808354040283529160200191611b24565b820191905f5260205f20905b815481529060010190602001808311611b0757829003601f168201915b5050505050905090565b5f80611b38611c8c565b9050611b45818585611d37565b600191505092915050565b60095481565b60105481565b60075481565b600a5481565b60115f9054906101000a900460ff1681565b60085481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600c5481565b611c10611e27565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611c80575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611c779190612a95565b60405180910390fd5b611c8981612230565b50565b5f33905090565b611ca083838360016122f3565b505050565b5f611cb08484611b80565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611d315781811015611d22578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611d19939291906135fc565b60405180910390fd5b611d3084848484035f6122f3565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611da7575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611d9e9190612a95565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e17575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611e0e9190612a95565b60405180910390fd5b611e228383836124c2565b505050565b611e2f611c8c565b73ffffffffffffffffffffffffffffffffffffffff16611e4d611809565b73ffffffffffffffffffffffffffffffffffffffff1614611eac57611e70611c8c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611ea39190612a95565b60405180910390fd5b565b600260065403611ef3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eea9061367b565b60405180910390fd5b6002600681905550565b6001600681905550565b5f8183611f1491906136c6565b905092915050565b5f8183611f299190613734565b905092915050565b5f808211611f74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f6b906137d4565b60405180910390fd5b5f60085411611fb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611faf90613862565b60405180910390fd5b600854600b541115611fff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ff6906138f0565b60405180910390fd5b5f612017600954600a546126db90919063ffffffff16565b90505f612057612046600854612038600b5486611f0790919063ffffffff16565b611f1c90919063ffffffff16565b60095461210f90919063ffffffff16565b9050600954811015801561206d5750600a548111155b6120ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120a390613958565b60405180910390fd5b5f6120c08286611f1c90919063ffffffff16565b90505f8111612104576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120fb906139e6565b60405180910390fd5b809350505050919050565b5f818361211c9190613a04565b905092915050565b5f80612179612168600d5461215a60105461214c600e54600f546126db90919063ffffffff16565b611f0790919063ffffffff16565b611f1c90919063ffffffff16565b600e5461210f90919063ffffffff16565b9050600e54811015801561218f5750600f548111155b6121ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c590613958565b60405180910390fd5b5f6121e28285611f1c90919063ffffffff16565b90505f8111612226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161221d906139e6565b60405180910390fd5b8092505050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603612363575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161235a9190612a95565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036123d3575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016123ca9190612a95565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156124bc578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516124b3919061291f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612512578060025f8282546125069190613a04565b925050819055506125e0565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561259b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401612592939291906135fc565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612627578060025f8282540392505081905550612671565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516126ce919061291f565b60405180910390a3505050565b5f81836126e89190613a37565b905092915050565b5f82825260208201905092915050565b7f44697265637420455448207472616e7366657273206e6f7420616c6c6f7765645f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61275a6021836126f0565b915061276582612700565b604082019050919050565b5f6020820190508181035f8301526127878161274e565b9050919050565b5f81519050919050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6127c08261278e565b6127ca81856126f0565b93506127da818560208601612798565b6127e3816127a6565b840191505092915050565b5f6020820190508181035f83015261280681846127b6565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61283b82612812565b9050919050565b61284b81612831565b8114612855575f80fd5b50565b5f8135905061286681612842565b92915050565b5f819050919050565b61287e8161286c565b8114612888575f80fd5b50565b5f8135905061289981612875565b92915050565b5f80604083850312156128b5576128b461280e565b5b5f6128c285828601612858565b92505060206128d38582860161288b565b9150509250929050565b5f8115159050919050565b6128f1816128dd565b82525050565b5f60208201905061290a5f8301846128e8565b92915050565b6129198161286c565b82525050565b5f6020820190506129325f830184612910565b92915050565b5f6020828403121561294d5761294c61280e565b5b5f61295a8482850161288b565b91505092915050565b5f819050919050565b5f61298661298161297c84612812565b612963565b612812565b9050919050565b5f6129978261296c565b9050919050565b5f6129a88261298d565b9050919050565b6129b88161299e565b82525050565b5f6020820190506129d15f8301846129af565b92915050565b5f602082840312156129ec576129eb61280e565b5b5f6129f984828501612858565b91505092915050565b5f805f60608486031215612a1957612a1861280e565b5b5f612a2686828701612858565b9350506020612a3786828701612858565b9250506040612a488682870161288b565b9150509250925092565b5f60ff82169050919050565b612a6781612a52565b82525050565b5f602082019050612a805f830184612a5e565b92915050565b612a8f81612831565b82525050565b5f602082019050612aa85f830184612a86565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60038110612aec57612aeb612aae565b5b50565b5f819050612afc82612adb565b919050565b5f612b0b82612aef565b9050919050565b612b1b81612b01565b82525050565b5f602082019050612b345f830184612b12565b92915050565b5f8060408385031215612b5057612b4f61280e565b5b5f612b5d85828601612858565b9250506020612b6e85828601612858565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612bbc57607f821691505b602082108103612bcf57612bce612b78565b5b50919050565b7f53616c65732074617267657473206e6f7420796574206d65742e0000000000005f82015250565b5f612c09601a836126f0565b9150612c1482612bd5565b602082019050919050565b5f6020820190508181035f830152612c3681612bfd565b9050919050565b7f507269766174652053616c652063616e206f6e6c792073746172742066726f6d5f8201527f204e4f4e452073746167652e0000000000000000000000000000000000000000602082015250565b5f612c97602c836126f0565b9150612ca282612c3d565b604082019050919050565b5f6020820190508181035f830152612cc481612c8b565b9050919050565b7f507269766174652053616c6520746f6b656e732073686f756c6420626520756e5f8201527f736f6c642061742073746172742e000000000000000000000000000000000000602082015250565b5f612d25602e836126f0565b9150612d3082612ccb565b604082019050919050565b5f6020820190508181035f830152612d5281612d19565b9050919050565b7f5072652d53616c652073686f756c64206e6f74206861766520737461727465645f8201527f206265666f726520507269766174652053616c652e0000000000000000000000602082015250565b5f612db36035836126f0565b9150612dbe82612d59565b604082019050919050565b5f6020820190508181035f830152612de081612da7565b9050919050565b7f4e6f2073616c65206973206163746976652e00000000000000000000000000005f82015250565b5f612e1b6012836126f0565b9150612e2682612de7565b602082019050919050565b5f6020820190508181035f830152612e4881612e0f565b9050919050565b7f496e76616c69642070726963652066726f6d206f7261636c65000000000000005f82015250565b5f612e836019836126f0565b9150612e8e82612e4f565b602082019050919050565b5f6020820190508181035f830152612eb081612e77565b9050919050565b7f507269766174652053616c6520736f6c64206f75742e000000000000000000005f82015250565b5f612eeb6016836126f0565b9150612ef682612eb7565b602082019050919050565b5f6020820190508181035f830152612f1881612edf565b9050919050565b7f4578636565647320507269766174652053616c6520746f6b656e206c696d69745f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f612f796021836126f0565b9150612f8482612f1f565b604082019050919050565b5f6020820190508181035f830152612fa681612f6d565b9050919050565b7f5072652d53616c6520736f6c64206f75742e00000000000000000000000000005f82015250565b5f612fe16012836126f0565b9150612fec82612fad565b602082019050919050565b5f6020820190508181035f83015261300e81612fd5565b9050919050565b7f507572636861736520616d6f756e74206f7574206f66206c696d6974732e00005f82015250565b5f613049601e836126f0565b915061305482613015565b602082019050919050565b5f6020820190508181035f8301526130768161303d565b9050919050565b7f45786365656473205072652d53616c6520746f6b656e206c696d69742e0000005f82015250565b5f6130b1601d836126f0565b91506130bc8261307d565b602082019050919050565b5f6020820190508181035f8301526130de816130a5565b9050919050565b7f56657374696e6720706572696f64206e6f742079657420636f6d706c657465645f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61313f6021836126f0565b915061314a826130e5565b604082019050919050565b5f6020820190508181035f83015261316c81613133565b9050919050565b7f4e6f2076657374656420746f6b656e7320746f2072656c6561736500000000005f82015250565b5f6131a7601b836126f0565b91506131b282613173565b602082019050919050565b5f6020820190508181035f8301526131d48161319b565b9050919050565b7f5072652d53616c652063616e206f6e6c792073746172742061667465722050725f8201527f69766174652053616c652e000000000000000000000000000000000000000000602082015250565b5f613235602b836126f0565b9150613240826131db565b604082019050919050565b5f6020820190508181035f83015261326281613229565b9050919050565b7f507269766174652053616c65206d75737420626520636f6d706c6574656420625f8201527f65666f7265207374617274696e67205072652d53616c652e0000000000000000602082015250565b5f6132c36038836126f0565b91506132ce82613269565b604082019050919050565b5f6020820190508181035f8301526132f0816132b7565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f61332b601d836126f0565b9150613336826132f7565b602082019050919050565b5f6020820190508181035f8301526133588161331f565b9050919050565b7f496e73756666696369656e742062616c616e636520746f207374616b650000005f82015250565b5f613393601d836126f0565b915061339e8261335f565b602082019050919050565b5f6020820190508181035f8301526133c081613387565b9050919050565b5f6040820190506133da5f830185612910565b6133e76020830184612910565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f69ffffffffffffffffffff82169050919050565b6134398161341b565b8114613443575f80fd5b50565b5f8151905061345481613430565b92915050565b5f819050919050565b61346c8161345a565b8114613476575f80fd5b50565b5f8151905061348781613463565b92915050565b5f8151905061349b81612875565b92915050565b5f805f805f60a086880312156134ba576134b961280e565b5b5f6134c788828901613446565b95505060206134d888828901613479565b94505060406134e98882890161348d565b93505060606134fa8882890161348d565b925050608061350b88828901613446565b9150509295509295909350565b7f496e76616c696420707269636520646174612066726f6d206f7261636c6500005f82015250565b5f61354c601e836126f0565b915061355782613518565b602082019050919050565b5f6020820190508181035f83015261357981613540565b9050919050565b5f6040820190506135935f830185612a86565b6135a06020830184612910565b9392505050565b6135b0816128dd565b81146135ba575f80fd5b50565b5f815190506135cb816135a7565b92915050565b5f602082840312156135e6576135e561280e565b5b5f6135f3848285016135bd565b91505092915050565b5f60608201905061360f5f830186612a86565b61361c6020830185612910565b6136296040830184612910565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f613665601f836126f0565b915061367082613631565b602082019050919050565b5f6020820190508181035f83015261369281613659565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6136d08261286c565b91506136db8361286c565b92508282026136e98161286c565b91508282048414831517613700576136ff613699565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61373e8261286c565b91506137498361286c565b92508261375957613758613707565b5b828204905092915050565b7f55534420616d6f756e74206d7573742062652067726561746572207468616e205f8201527f3000000000000000000000000000000000000000000000000000000000000000602082015250565b5f6137be6021836126f0565b91506137c982613764565b604082019050919050565b5f6020820190508181035f8301526137eb816137b2565b9050919050565b7f507269766174652053616c6520746f6b656e73206d75737420626520677265615f8201527f746572207468616e203000000000000000000000000000000000000000000000602082015250565b5f61384c602a836126f0565b9150613857826137f2565b604082019050919050565b5f6020820190508181035f83015261387981613840565b9050919050565b7f507269766174652053616c6520736f6c6420746f6b656e7320657863656564205f8201527f617661696c61626c6520746f6b656e7300000000000000000000000000000000602082015250565b5f6138da6030836126f0565b91506138e582613880565b604082019050919050565b5f6020820190508181035f830152613907816138ce565b9050919050565b7f496e76616c696420746f6b656e2070726963652063616c63756c6174656400005f82015250565b5f613942601e836126f0565b915061394d8261390e565b602082019050919050565b5f6020820190508181035f83015261396f81613936565b9050919050565b7f43616c63756c6174656420746f6b656e73206d757374206265206772656174655f8201527f72207468616e2030000000000000000000000000000000000000000000000000602082015250565b5f6139d06028836126f0565b91506139db82613976565b604082019050919050565b5f6020820190508181035f8301526139fd816139c4565b9050919050565b5f613a0e8261286c565b9150613a198361286c565b9250828201905080821115613a3157613a30613699565b5b92915050565b5f613a418261286c565b9150613a4c8361286c565b9250828203905081811115613a6457613a63613699565b5b9291505056fea2646970667358221220f1b8841746faa3d853ab09a092672caf5c2942261c2794fab50af760c2b42bc564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x7 SSTORE PUSH11 0x201FCAFC2577D298500000 PUSH1 0x8 SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x9 SSTORE PUSH7 0xB3697B81284000 PUSH1 0xA SSTORE PUSH0 PUSH1 0xB SSTORE PUSH11 0xFB768105935A2F3000000 PUSH1 0xC SSTORE PUSH11 0x854FDABD6AA1D32FB00000 PUSH1 0xD SSTORE PUSH7 0xB3697B81284000 PUSH1 0xE SSTORE PUSH8 0x16345785D8A0000 PUSH1 0xF SSTORE PUSH0 PUSH1 0x10 SSTORE PUSH0 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x98 JUMPI PUSH2 0x97 PUSH2 0x605 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH3 0xED4E00 PUSH1 0x14 SSTORE PUSH4 0x1E13380 PUSH1 0x15 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x46CF CODESIZE SUB DUP1 PUSH2 0x46CF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426574746F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4245545400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E7 DUP2 PUSH2 0x2A4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x20B ADDRESS PUSH11 0xA56FA5B99019A5C8000000 PUSH2 0x367 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x16 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x22B JUMPI PUSH2 0x22A PUSH2 0xB38 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x20D JUMP JUMPDEST POP POP PUSH2 0xC22 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3D7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH0 DUP4 DUP4 PUSH2 0x3EC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x43C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x50A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4C5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x551 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x59B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x68D DUP3 PUSH2 0x647 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x6AC JUMPI PUSH2 0x6AB PUSH2 0x657 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6BE PUSH2 0x632 JUMP JUMPDEST SWAP1 POP PUSH2 0x6CA DUP3 DUP3 PUSH2 0x684 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6E9 JUMPI PUSH2 0x6E8 PUSH2 0x657 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x727 DUP3 PUSH2 0x6FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x737 DUP2 PUSH2 0x71D JUMP JUMPDEST DUP2 EQ PUSH2 0x741 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x752 DUP2 PUSH2 0x72E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x76A PUSH2 0x765 DUP5 PUSH2 0x6CF JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x78D JUMPI PUSH2 0x78C PUSH2 0x6FA JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7B6 JUMPI DUP1 PUSH2 0x7A2 DUP9 DUP3 PUSH2 0x744 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x78F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7D4 JUMPI PUSH2 0x7D3 PUSH2 0x643 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x7E4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x758 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x802 JUMPI PUSH2 0x801 PUSH2 0x63B JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x81F JUMPI PUSH2 0x81E PUSH2 0x63F JUMP JUMPDEST JUMPDEST PUSH2 0x82B DUP5 DUP3 DUP6 ADD PUSH2 0x7C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x882 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x895 JUMPI PUSH2 0x894 PUSH2 0x83E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x8F7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x901 DUP7 DUP4 PUSH2 0x8BC JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x945 PUSH2 0x940 PUSH2 0x93B DUP5 PUSH2 0x919 JUMP JUMPDEST PUSH2 0x922 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95E DUP4 PUSH2 0x92B JUMP JUMPDEST PUSH2 0x972 PUSH2 0x96A DUP3 PUSH2 0x94C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x8C8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x986 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x991 DUP2 DUP5 DUP5 PUSH2 0x955 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9B4 JUMPI PUSH2 0x9A9 PUSH0 DUP3 PUSH2 0x97E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x997 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9F9 JUMPI PUSH2 0x9CA DUP2 PUSH2 0x89B JUMP JUMPDEST PUSH2 0x9D3 DUP5 PUSH2 0x8AD JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x9E2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x9F6 PUSH2 0x9EE DUP6 PUSH2 0x8AD JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x996 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA19 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x9FE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA31 DUP4 DUP4 PUSH2 0xA0A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4A DUP3 PUSH2 0x834 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA63 JUMPI PUSH2 0xA62 PUSH2 0x657 JUMP JUMPDEST JUMPDEST PUSH2 0xA6D DUP3 SLOAD PUSH2 0x86B JUMP JUMPDEST PUSH2 0xA78 DUP3 DUP3 DUP6 PUSH2 0x9B8 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xAA9 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xA97 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xAA1 DUP6 DUP3 PUSH2 0xA26 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xAB7 DUP7 PUSH2 0x89B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xADE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAB9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xAFB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xAF7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xA0A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB19 DUP2 PUSH2 0x71D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB32 PUSH0 DUP4 ADD DUP5 PUSH2 0xB10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB9C DUP3 PUSH2 0x919 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA7 DUP4 PUSH2 0x919 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBBF JUMPI PUSH2 0xBBE PUSH2 0xB65 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBCE DUP2 PUSH2 0x919 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBE7 PUSH0 DUP4 ADD DUP7 PUSH2 0xB10 JUMP JUMPDEST PUSH2 0xBF4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0xC01 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBC5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC1C PUSH0 DUP4 ADD DUP5 PUSH2 0xBC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3AA0 DUP1 PUSH2 0xC2F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x228 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x122 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xC040E6B8 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x801 JUMPI DUP1 PUSH4 0xC552E04B EQ PUSH2 0x82B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x855 JUMPI DUP1 PUSH4 0xE6BD92B9 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8BB JUMPI PUSH2 0x268 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0xB0E68630 EQ PUSH2 0x759 JUMPI DUP1 PUSH4 0xB68ED11F EQ PUSH2 0x783 JUMPI DUP1 PUSH4 0xBA20CF4C EQ PUSH2 0x7AD JUMPI DUP1 PUSH4 0xBDA95633 EQ PUSH2 0x7D7 JUMPI PUSH2 0x268 JUMP JUMPDEST DUP1 PUSH4 0x8F7713FF GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x8F7713FF EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0x920168B3 EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6F3 JUMPI PUSH2 0x268 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x5D1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5F9 JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x623 JUMPI PUSH2 0x268 JUMP JUMPDEST DUP1 PUSH4 0x2B1CBC38 GT PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x40F02AB6 GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x40F02AB6 EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0x54DD1DA4 EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0x55DD574C EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0x5FB3B944 EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x57F JUMPI PUSH2 0x268 JUMP JUMPDEST DUP1 PUSH4 0x2B1CBC38 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x32C85AC0 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x338DBF59 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0x4E3 JUMPI PUSH2 0x268 JUMP JUMPDEST DUP1 PUSH4 0x1514617E GT PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x1514617E EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x192399D1 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x43B JUMPI PUSH2 0x268 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xFE83BB8 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x10C7F0B9 EQ PUSH2 0x333 JUMPI PUSH2 0x268 JUMP JUMPDEST CALLDATASIZE PUSH2 0x268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A SWAP1 PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x27EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x289F JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x28F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x2938 JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x29BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x9D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AD PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x29D7 JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x425 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x2A02 JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x28F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH2 0xA28 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x477 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x29D7 JUMP JUMPDEST PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x2A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CB PUSH2 0xB04 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E1 PUSH2 0xBD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x2938 JUMP JUMPDEST PUSH2 0xD45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x513 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x534 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53D PUSH2 0x125D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x553 PUSH2 0x1450 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x569 PUSH2 0x1584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x29D7 JUMP JUMPDEST PUSH2 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CF PUSH2 0x15CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x2938 JUMP JUMPDEST PUSH2 0x15E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x604 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60D PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x637 PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x658 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x661 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x682 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x68B PUSH2 0x1995 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B5 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6EC SWAP2 SWAP1 PUSH2 0x289F JUMP JUMPDEST PUSH2 0x19AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x707 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x27EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x728 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x743 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x73E SWAP2 SWAP1 PUSH2 0x289F JUMP JUMPDEST PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x750 SWAP2 SWAP1 PUSH2 0x28F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x764 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x76D PUSH2 0x1B50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77A SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x797 PUSH2 0x1B56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A4 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7EB PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x815 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x2B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x836 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x83F PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x860 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x87B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x876 SWAP2 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x888 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A5 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8DC SWAP2 SWAP1 PUSH2 0x29D7 JUMP JUMPDEST PUSH2 0x1C08 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x8F2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x91E SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x969 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x940 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x969 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x94C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x97D PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP PUSH2 0x98A DUP2 DUP6 DUP6 PUSH2 0x1C93 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9AA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA04 PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP PUSH2 0xA11 DUP6 DUP3 DUP6 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0xA1C DUP6 DUP6 DUP6 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA30 PUSH2 0x1E27 JUMP JUMPDEST PUSH2 0xA38 PUSH2 0x1EAE JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH2 0xA44 PUSH2 0x1809 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xA8F PUSH2 0x1809 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D DUP3 PUSH1 0x40 MLOAD PUSH2 0xAD4 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xAE5 PUSH2 0x1EFD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB0C PUSH2 0x1E27 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD EQ DUP1 PUSH2 0xB21 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x10 SLOAD EQ JUMPDEST PUSH2 0xB60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB57 SWAP1 PUSH2 0x2C1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB84 JUMPI PUSH2 0xB83 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x273467821F33675618854603EF917EBCEC8A1A39F95C43D5564ED1AEFAB870B3 PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0xBC6 SWAP2 SWAP1 PUSH2 0x2B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xBD8 PUSH2 0x1E27 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC0C JUMPI PUSH2 0xC0B PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST EQ PUSH2 0xC4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC43 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB SLOAD EQ PUSH2 0xC90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC87 SWAP1 PUSH2 0x2D3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x10 SLOAD EQ PUSH2 0xCD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCB SWAP1 PUSH2 0x2DC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCF9 JUMPI PUSH2 0xCF8 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x273467821F33675618854603EF917EBCEC8A1A39F95C43D5564ED1AEFAB870B3 PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0xD3B SWAP2 SWAP1 PUSH2 0x2B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xD4D PUSH2 0x1EAE JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD60 JUMPI PUSH2 0xD5F PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD81 JUMPI PUSH2 0xD80 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST SUB PUSH2 0xDC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB8 SWAP1 PUSH2 0x2E31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xDCA PUSH2 0x1831 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xE0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE05 SWAP1 PUSH2 0x2E99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE23 JUMPI PUSH2 0xE22 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE44 JUMPI PUSH2 0xE43 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1076 JUMPI PUSH1 0x8 SLOAD PUSH1 0xB SLOAD LT PUSH2 0xE8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE86 SWAP1 PUSH2 0x2F01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEC4 PUSH2 0xEBF PUSH8 0xDE0B6B3A7640000 PUSH2 0xEB1 DUP6 DUP8 PUSH2 0x1F07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F31 JUMP JUMPDEST SWAP1 POP PUSH2 0xEDB DUP2 PUSH1 0xB SLOAD PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH2 0xF28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1F SWAP1 PUSH2 0x2F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF78 DUP2 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xFE2 PUSH1 0x14 SLOAD PUSH2 0xFD4 PUSH1 0x15 SLOAD TIMESTAMP PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FA81BB0702332EA2A0AEE44BB9E4D359CF4A2C5A820DD59D9129369BDBCA73F DUP3 PUSH1 0x40 MLOAD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1089 JUMPI PUSH2 0x1088 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x10AA JUMPI PUSH2 0x10A9 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1249 JUMPI PUSH1 0xD SLOAD PUSH1 0x10 SLOAD LT PUSH2 0x10F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EC SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH9 0x56BC75E2D63100000 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1117 JUMPI POP PUSH9 0xA2A15D09519BE00000 DUP4 GT ISZERO JUMPDEST PUSH2 0x1156 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114D SWAP1 PUSH2 0x305F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x118B PUSH2 0x1186 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1178 DUP6 DUP8 PUSH2 0x1F07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2124 JUMP JUMPDEST SWAP1 POP PUSH2 0x11A2 DUP2 PUSH1 0x10 SLOAD PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 DUP2 SWAP1 SSTORE POP PUSH1 0xD SLOAD PUSH1 0x10 SLOAD GT ISZERO PUSH2 0x11EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E6 SWAP1 PUSH2 0x30C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11FA ADDRESS CALLER DUP4 PUSH2 0x1D37 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x550498DC565CC74203B9D14CBA907C9F60CEEFE26E82B37DF98F6CB98529CF19 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1240 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST JUMPDEST POP POP PUSH2 0x1254 PUSH2 0x1EFD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1265 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DC SWAP1 PUSH2 0x3155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135F SWAP1 PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x13F7 ADDRESS CALLER DUP4 PUSH2 0x1D37 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6BC5063C7239B75C8BF325A2A2238F726FADA322163996BB6C93D5594FB119F0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x144E PUSH2 0x1EFD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1458 PUSH2 0x1E27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x146C JUMPI PUSH2 0x146B PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x148D JUMPI PUSH2 0x148C PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x14CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C4 SWAP1 PUSH2 0x324B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD EQ PUSH2 0x1513 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150A SWAP1 PUSH2 0x32D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1538 JUMPI PUSH2 0x1537 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x273467821F33675618854603EF917EBCEC8A1A39F95C43D5564ED1AEFAB870B3 PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x157A SWAP2 SWAP1 PUSH2 0x2B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D7 PUSH2 0x1E27 JUMP JUMPDEST PUSH2 0x15E0 PUSH0 PUSH2 0x2230 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x15EA PUSH2 0x1E27 JUMP JUMPDEST PUSH2 0x15F2 PUSH2 0x1EAE JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1634 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162B SWAP1 PUSH2 0x3341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x163E CALLER PUSH2 0x158A JUMP JUMPDEST LT ISZERO PUSH2 0x167F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1676 SWAP1 PUSH2 0x33A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x168A CALLER ADDRESS DUP4 PUSH2 0x1D37 JUMP JUMPDEST PUSH2 0x16DA DUP2 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1730 PUSH1 0x15 SLOAD TIMESTAMP PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDD2A19C3BDD089CBE77C04F5655F83DE0504D6140D12C8667646F55D0557C4DC DUP3 PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x17F6 SWAP3 SWAP2 SWAP1 PUSH2 0x33C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1806 PUSH2 0x1EFD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x16 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1959 JUMPI PUSH0 PUSH1 0x16 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x185A JUMPI PUSH2 0x1859 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18EE SWAP2 SWAP1 PUSH2 0x34A1 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0x1936 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192D SWAP1 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1949 DUP2 DUP5 PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1838 JUMP JUMPDEST POP PUSH2 0x1989 PUSH5 0x2540BE400 PUSH2 0x197B PUSH1 0x16 DUP1 SLOAD SWAP1 POP DUP5 PUSH2 0x1F1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH11 0xA56FA5B99019A5C8000000 DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19B2 PUSH2 0x1E27 JUMP JUMPDEST PUSH2 0x19BA PUSH2 0x1EAE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x19DE PUSH2 0x1809 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19FC SWAP3 SWAP2 SWAP1 PUSH2 0x3580 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A18 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A3C SWAP2 SWAP1 PUSH2 0x35D1 JUMP JUMPDEST POP PUSH2 0x1A45 PUSH2 0x1809 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D DUP3 PUSH1 0x40 MLOAD PUSH2 0x1A8A SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1A9A PUSH2 0x1EFD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AAD SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AD9 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B24 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AFB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B24 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B07 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1B38 PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP PUSH2 0x1B45 DUP2 DUP6 DUP6 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C10 PUSH2 0x1E27 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C80 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C77 SWAP2 SWAP1 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C89 DUP2 PUSH2 0x2230 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1CA0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x22F3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB0 DUP5 DUP5 PUSH2 0x1B80 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1D31 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1D22 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D19 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D30 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x22F3 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DA7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9E SWAP2 SWAP1 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E17 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0E SWAP2 SWAP1 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E22 DUP4 DUP4 DUP4 PUSH2 0x24C2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1E2F PUSH2 0x1C8C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E4D PUSH2 0x1809 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EAC JUMPI PUSH2 0x1E70 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA3 SWAP2 SWAP1 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1EF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EEA SWAP1 PUSH2 0x367B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1F14 SWAP2 SWAP1 PUSH2 0x36C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1F29 SWAP2 SWAP1 PUSH2 0x3734 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 GT PUSH2 0x1F74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6B SWAP1 PUSH2 0x37D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD GT PUSH2 0x1FB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FAF SWAP1 PUSH2 0x3862 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH2 0x1FFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF6 SWAP1 PUSH2 0x38F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2017 PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x26DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2057 PUSH2 0x2046 PUSH1 0x8 SLOAD PUSH2 0x2038 PUSH1 0xB SLOAD DUP7 PUSH2 0x1F07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x206D JUMPI POP PUSH1 0xA SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x20AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20A3 SWAP1 PUSH2 0x3958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x20C0 DUP3 DUP7 PUSH2 0x1F1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x2104 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20FB SWAP1 PUSH2 0x39E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x211C SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2179 PUSH2 0x2168 PUSH1 0xD SLOAD PUSH2 0x215A PUSH1 0x10 SLOAD PUSH2 0x214C PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH2 0x26DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xE SLOAD DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x218F JUMPI POP PUSH1 0xF SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x21CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C5 SWAP1 PUSH2 0x3958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x21E2 DUP3 DUP6 PUSH2 0x1F1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x2226 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x221D SWAP1 PUSH2 0x39E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2363 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235A SWAP2 SWAP1 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x23D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23CA SWAP2 SWAP1 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x24BC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x24B3 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2512 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2506 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x25E0 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x259B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2592 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2627 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2671 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x26CE SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x26E8 SWAP2 SWAP1 PUSH2 0x3A37 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x44697265637420455448207472616E7366657273206E6F7420616C6C6F776564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x275A PUSH1 0x21 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2765 DUP3 PUSH2 0x2700 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2787 DUP2 PUSH2 0x274E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27C0 DUP3 PUSH2 0x278E JUMP JUMPDEST PUSH2 0x27CA DUP2 DUP6 PUSH2 0x26F0 JUMP JUMPDEST SWAP4 POP PUSH2 0x27DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2798 JUMP JUMPDEST PUSH2 0x27E3 DUP2 PUSH2 0x27A6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2806 DUP2 DUP5 PUSH2 0x27B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x283B DUP3 PUSH2 0x2812 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x284B DUP2 PUSH2 0x2831 JUMP JUMPDEST DUP2 EQ PUSH2 0x2855 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2866 DUP2 PUSH2 0x2842 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x287E DUP2 PUSH2 0x286C JUMP JUMPDEST DUP2 EQ PUSH2 0x2888 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2899 DUP2 PUSH2 0x2875 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28B5 JUMPI PUSH2 0x28B4 PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28C2 DUP6 DUP3 DUP7 ADD PUSH2 0x2858 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28D3 DUP6 DUP3 DUP7 ADD PUSH2 0x288B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F1 DUP2 PUSH2 0x28DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x290A PUSH0 DUP4 ADD DUP5 PUSH2 0x28E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2919 DUP2 PUSH2 0x286C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2932 PUSH0 DUP4 ADD DUP5 PUSH2 0x2910 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x294D JUMPI PUSH2 0x294C PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x295A DUP5 DUP3 DUP6 ADD PUSH2 0x288B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2986 PUSH2 0x2981 PUSH2 0x297C DUP5 PUSH2 0x2812 JUMP JUMPDEST PUSH2 0x2963 JUMP JUMPDEST PUSH2 0x2812 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2997 DUP3 PUSH2 0x296C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29A8 DUP3 PUSH2 0x298D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B8 DUP2 PUSH2 0x299E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x29AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29EC JUMPI PUSH2 0x29EB PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29F9 DUP5 DUP3 DUP6 ADD PUSH2 0x2858 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A19 JUMPI PUSH2 0x2A18 PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A26 DUP7 DUP3 DUP8 ADD PUSH2 0x2858 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2A37 DUP7 DUP3 DUP8 ADD PUSH2 0x2858 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2A48 DUP7 DUP3 DUP8 ADD PUSH2 0x288B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A67 DUP2 PUSH2 0x2A52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A80 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A8F DUP2 PUSH2 0x2831 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AA8 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2AEC JUMPI PUSH2 0x2AEB PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2AFC DUP3 PUSH2 0x2ADB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B0B DUP3 PUSH2 0x2AEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B1B DUP2 PUSH2 0x2B01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B34 PUSH0 DUP4 ADD DUP5 PUSH2 0x2B12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B50 JUMPI PUSH2 0x2B4F PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B5D DUP6 DUP3 DUP7 ADD PUSH2 0x2858 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B6E DUP6 DUP3 DUP7 ADD PUSH2 0x2858 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2BBC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2BCF JUMPI PUSH2 0x2BCE PUSH2 0x2B78 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616C65732074617267657473206E6F7420796574206D65742E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C09 PUSH1 0x1A DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C14 DUP3 PUSH2 0x2BD5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C36 DUP2 PUSH2 0x2BFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C652063616E206F6E6C792073746172742066726F6D PUSH0 DUP3 ADD MSTORE PUSH32 0x204E4F4E452073746167652E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C97 PUSH1 0x2C DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA2 DUP3 PUSH2 0x2C3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CC4 DUP2 PUSH2 0x2C8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520746F6B656E732073686F756C6420626520756E PUSH0 DUP3 ADD MSTORE PUSH32 0x736F6C642061742073746172742E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D25 PUSH1 0x2E DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D30 DUP3 PUSH2 0x2CCB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D52 DUP2 PUSH2 0x2D19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D53616C652073686F756C64206E6F7420686176652073746172746564 PUSH0 DUP3 ADD MSTORE PUSH32 0x206265666F726520507269766174652053616C652E0000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DB3 PUSH1 0x35 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DBE DUP3 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DE0 DUP2 PUSH2 0x2DA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2073616C65206973206163746976652E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E1B PUSH1 0x12 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E26 DUP3 PUSH2 0x2DE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E48 DUP2 PUSH2 0x2E0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642070726963652066726F6D206F7261636C6500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E83 PUSH1 0x19 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E8E DUP3 PUSH2 0x2E4F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EB0 DUP2 PUSH2 0x2E77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520736F6C64206F75742E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EEB PUSH1 0x16 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF6 DUP3 PUSH2 0x2EB7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F18 DUP2 PUSH2 0x2EDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4578636565647320507269766174652053616C6520746F6B656E206C696D6974 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F79 PUSH1 0x21 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F84 DUP3 PUSH2 0x2F1F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FA6 DUP2 PUSH2 0x2F6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D53616C6520736F6C64206F75742E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FE1 PUSH1 0x12 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FEC DUP3 PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x300E DUP2 PUSH2 0x2FD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507572636861736520616D6F756E74206F7574206F66206C696D6974732E0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3049 PUSH1 0x1E DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3054 DUP3 PUSH2 0x3015 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3076 DUP2 PUSH2 0x303D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473205072652D53616C6520746F6B656E206C696D69742E000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x30B1 PUSH1 0x1D DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x30BC DUP3 PUSH2 0x307D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30DE DUP2 PUSH2 0x30A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E6720706572696F64206E6F742079657420636F6D706C65746564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x313F PUSH1 0x21 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x314A DUP3 PUSH2 0x30E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x316C DUP2 PUSH2 0x3133 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2076657374656420746F6B656E7320746F2072656C656173650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x31A7 PUSH1 0x1B DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x31B2 DUP3 PUSH2 0x3173 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x31D4 DUP2 PUSH2 0x319B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D53616C652063616E206F6E6C79207374617274206166746572205072 PUSH0 DUP3 ADD MSTORE PUSH32 0x69766174652053616C652E000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3235 PUSH1 0x2B DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3240 DUP3 PUSH2 0x31DB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3262 DUP2 PUSH2 0x3229 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C65206D75737420626520636F6D706C657465642062 PUSH0 DUP3 ADD MSTORE PUSH32 0x65666F7265207374617274696E67205072652D53616C652E0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32C3 PUSH1 0x38 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x32CE DUP3 PUSH2 0x3269 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x32F0 DUP2 PUSH2 0x32B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x332B PUSH1 0x1D DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3336 DUP3 PUSH2 0x32F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3358 DUP2 PUSH2 0x331F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F207374616B65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3393 PUSH1 0x1D DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x339E DUP3 PUSH2 0x335F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33C0 DUP2 PUSH2 0x3387 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33DA PUSH0 DUP4 ADD DUP6 PUSH2 0x2910 JUMP JUMPDEST PUSH2 0x33E7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2910 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3439 DUP2 PUSH2 0x341B JUMP JUMPDEST DUP2 EQ PUSH2 0x3443 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3454 DUP2 PUSH2 0x3430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x346C DUP2 PUSH2 0x345A JUMP JUMPDEST DUP2 EQ PUSH2 0x3476 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3487 DUP2 PUSH2 0x3463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x349B DUP2 PUSH2 0x2875 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x34BA JUMPI PUSH2 0x34B9 PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x34C7 DUP9 DUP3 DUP10 ADD PUSH2 0x3446 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x34D8 DUP9 DUP3 DUP10 ADD PUSH2 0x3479 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x34E9 DUP9 DUP3 DUP10 ADD PUSH2 0x348D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x34FA DUP9 DUP3 DUP10 ADD PUSH2 0x348D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x350B DUP9 DUP3 DUP10 ADD PUSH2 0x3446 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636520646174612066726F6D206F7261636C650000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x354C PUSH1 0x1E DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3557 DUP3 PUSH2 0x3518 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3579 DUP2 PUSH2 0x3540 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3593 PUSH0 DUP4 ADD DUP6 PUSH2 0x2A86 JUMP JUMPDEST PUSH2 0x35A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2910 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x35B0 DUP2 PUSH2 0x28DD JUMP JUMPDEST DUP2 EQ PUSH2 0x35BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x35CB DUP2 PUSH2 0x35A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35E6 JUMPI PUSH2 0x35E5 PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x35F3 DUP5 DUP3 DUP6 ADD PUSH2 0x35BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x360F PUSH0 DUP4 ADD DUP7 PUSH2 0x2A86 JUMP JUMPDEST PUSH2 0x361C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2910 JUMP JUMPDEST PUSH2 0x3629 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2910 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3665 PUSH1 0x1F DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3670 DUP3 PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3692 DUP2 PUSH2 0x3659 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x36D0 DUP3 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x36DB DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x36E9 DUP2 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3700 JUMPI PUSH2 0x36FF PUSH2 0x3699 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x373E DUP3 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3749 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3759 JUMPI PUSH2 0x3758 PUSH2 0x3707 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55534420616D6F756E74206D7573742062652067726561746572207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x37BE PUSH1 0x21 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x37C9 DUP3 PUSH2 0x3764 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x37EB DUP2 PUSH2 0x37B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520746F6B656E73206D7573742062652067726561 PUSH0 DUP3 ADD MSTORE PUSH32 0x746572207468616E203000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x384C PUSH1 0x2A DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3857 DUP3 PUSH2 0x37F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3879 DUP2 PUSH2 0x3840 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520736F6C6420746F6B656E732065786365656420 PUSH0 DUP3 ADD MSTORE PUSH32 0x617661696C61626C6520746F6B656E7300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x38DA PUSH1 0x30 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x38E5 DUP3 PUSH2 0x3880 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3907 DUP2 PUSH2 0x38CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E2070726963652063616C63756C617465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3942 PUSH1 0x1E DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x394D DUP3 PUSH2 0x390E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x396F DUP2 PUSH2 0x3936 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C63756C6174656420746F6B656E73206D75737420626520677265617465 PUSH0 DUP3 ADD MSTORE PUSH32 0x72207468616E2030000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x39D0 PUSH1 0x28 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x39DB DUP3 PUSH2 0x3976 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x39FD DUP2 PUSH2 0x39C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3A0E DUP3 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3A19 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3A31 JUMPI PUSH2 0x3A30 PUSH2 0x3699 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3A41 DUP3 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3A4C DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3A64 JUMPI PUSH2 0x3A63 PUSH2 0x3699 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xB8 DUP5 OR CHAINID STATICCALL LOG3 0xD8 MSTORE8 0xAB MULMOD LOG0 SWAP3 PUSH8 0x2CAF5C2942261C27 SWAP5 STATICCALL 0xB5 EXP 0xF7 PUSH1 0xC2 0xB4 0x2B 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "367:8291:9:-:0;;;629:20;594:55;;714:21;679:56;;799:16;760:55;;880:17;843:54;;965:1;926:40;;1030:21;999:52;;1113:22;1082:53;;1196:17;1161:52;;1275:14;1242:47;;1350:1;1315:36;;1448:14;1423:39;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1642:8;1609:41;;1695:8;1664:39;;2224:276;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2300:10;1896:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:3;1821:7;:22;;;;2322:34:9::2;2336:4;498:22;2322:5;;;:34;;:::i;:::-;2371:9;2366:128;2390:11;:18;2386:1;:22;2366:128;;;2429:10;2467:11;2479:1;2467:14;;;;;;;;:::i;:::-;;;;;;;;2429:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2410:3;;;;;;;2366:128;;;;2224:276:::0;367:8291;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:180:10:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:75;226:6;259:2;253:9;243:19;;193:75;:::o;274:117::-;383:1;380;373:12;397:117;506:1;503;496:12;520:117;629:1;626;619:12;643:102;684:6;735:2;731:7;726:2;719:5;715:14;711:28;701:38;;643:102;;;:::o;751:180::-;799:77;796:1;789:88;896:4;893:1;886:15;920:4;917:1;910:15;937:281;1020:27;1042:4;1020:27;:::i;:::-;1012:6;1008:40;1150:6;1138:10;1135:22;1114:18;1102:10;1099:34;1096:62;1093:88;;;1161:18;;:::i;:::-;1093:88;1201:10;1197:2;1190:22;980:238;937:281;;:::o;1224:129::-;1258:6;1285:20;;:::i;:::-;1275:30;;1314:33;1342:4;1334:6;1314:33;:::i;:::-;1224:129;;;:::o;1359:311::-;1436:4;1526:18;1518:6;1515:30;1512:56;;;1548:18;;:::i;:::-;1512:56;1598:4;1590:6;1586:17;1578:25;;1658:4;1652;1648:15;1640:23;;1359:311;;;:::o;1676:117::-;1785:1;1782;1775:12;1799:126;1836:7;1876:42;1869:5;1865:54;1854:65;;1799:126;;;:::o;1931:96::-;1968:7;1997:24;2015:5;1997:24;:::i;:::-;1986:35;;1931:96;;;:::o;2033:122::-;2106:24;2124:5;2106:24;:::i;:::-;2099:5;2096:35;2086:63;;2145:1;2142;2135:12;2086:63;2033:122;:::o;2161:143::-;2218:5;2249:6;2243:13;2234:22;;2265:33;2292:5;2265:33;:::i;:::-;2161:143;;;;:::o;2327:732::-;2434:5;2459:81;2475:64;2532:6;2475:64;:::i;:::-;2459:81;:::i;:::-;2450:90;;2560:5;2589:6;2582:5;2575:21;2623:4;2616:5;2612:16;2605:23;;2676:4;2668:6;2664:17;2656:6;2652:30;2705:3;2697:6;2694:15;2691:122;;;2724:79;;:::i;:::-;2691:122;2839:6;2822:231;2856:6;2851:3;2848:15;2822:231;;;2931:3;2960:48;3004:3;2992:10;2960:48;:::i;:::-;2955:3;2948:61;3038:4;3033:3;3029:14;3022:21;;2898:155;2882:4;2877:3;2873:14;2866:21;;2822:231;;;2826:21;2440:619;;2327:732;;;;;:::o;3082:385::-;3164:5;3213:3;3206:4;3198:6;3194:17;3190:27;3180:122;;3221:79;;:::i;:::-;3180:122;3331:6;3325:13;3356:105;3457:3;3449:6;3442:4;3434:6;3430:17;3356:105;:::i;:::-;3347:114;;3170:297;3082:385;;;;:::o;3473:554::-;3568:6;3617:2;3605:9;3596:7;3592:23;3588:32;3585:119;;;3623:79;;:::i;:::-;3585:119;3764:1;3753:9;3749:17;3743:24;3794:18;3786:6;3783:30;3780:117;;;3816:79;;:::i;:::-;3780:117;3921:89;4002:7;3993:6;3982:9;3978:22;3921:89;:::i;:::-;3911:99;;3714:306;3473:554;;;;:::o;4033:99::-;4085:6;4119:5;4113:12;4103:22;;4033:99;;;:::o;4138:180::-;4186:77;4183:1;4176:88;4283:4;4280:1;4273:15;4307:4;4304:1;4297:15;4324:320;4368:6;4405:1;4399:4;4395:12;4385:22;;4452:1;4446:4;4442:12;4473:18;4463:81;;4529:4;4521:6;4517:17;4507:27;;4463:81;4591:2;4583:6;4580:14;4560:18;4557:38;4554:84;;4610:18;;:::i;:::-;4554:84;4375:269;4324:320;;;:::o;4650:141::-;4699:4;4722:3;4714:11;;4745:3;4742:1;4735:14;4779:4;4776:1;4766:18;4758:26;;4650:141;;;:::o;4797:93::-;4834:6;4881:2;4876;4869:5;4865:14;4861:23;4851:33;;4797:93;;;:::o;4896:107::-;4940:8;4990:5;4984:4;4980:16;4959:37;;4896:107;;;;:::o;5009:393::-;5078:6;5128:1;5116:10;5112:18;5151:97;5181:66;5170:9;5151:97;:::i;:::-;5269:39;5299:8;5288:9;5269:39;:::i;:::-;5257:51;;5341:4;5337:9;5330:5;5326:21;5317:30;;5390:4;5380:8;5376:19;5369:5;5366:30;5356:40;;5085:317;;5009:393;;;;;:::o;5408:77::-;5445:7;5474:5;5463:16;;5408:77;;;:::o;5491:60::-;5519:3;5540:5;5533:12;;5491:60;;;:::o;5557:142::-;5607:9;5640:53;5658:34;5667:24;5685:5;5667:24;:::i;:::-;5658:34;:::i;:::-;5640:53;:::i;:::-;5627:66;;5557:142;;;:::o;5705:75::-;5748:3;5769:5;5762:12;;5705:75;;;:::o;5786:269::-;5896:39;5927:7;5896:39;:::i;:::-;5957:91;6006:41;6030:16;6006:41;:::i;:::-;5998:6;5991:4;5985:11;5957:91;:::i;:::-;5951:4;5944:105;5862:193;5786:269;;;:::o;6061:73::-;6106:3;6061:73;:::o;6140:189::-;6217:32;;:::i;:::-;6258:65;6316:6;6308;6302:4;6258:65;:::i;:::-;6193:136;6140:189;;:::o;6335:186::-;6395:120;6412:3;6405:5;6402:14;6395:120;;;6466:39;6503:1;6496:5;6466:39;:::i;:::-;6439:1;6432:5;6428:13;6419:22;;6395:120;;;6335:186;;:::o;6527:543::-;6628:2;6623:3;6620:11;6617:446;;;6662:38;6694:5;6662:38;:::i;:::-;6746:29;6764:10;6746:29;:::i;:::-;6736:8;6732:44;6929:2;6917:10;6914:18;6911:49;;;6950:8;6935:23;;6911:49;6973:80;7029:22;7047:3;7029:22;:::i;:::-;7019:8;7015:37;7002:11;6973:80;:::i;:::-;6632:431;;6617:446;6527:543;;;:::o;7076:117::-;7130:8;7180:5;7174:4;7170:16;7149:37;;7076:117;;;;:::o;7199:169::-;7243:6;7276:51;7324:1;7320:6;7312:5;7309:1;7305:13;7276:51;:::i;:::-;7272:56;7357:4;7351;7347:15;7337:25;;7250:118;7199:169;;;;:::o;7373:295::-;7449:4;7595:29;7620:3;7614:4;7595:29;:::i;:::-;7587:37;;7657:3;7654:1;7650:11;7644:4;7641:21;7633:29;;7373:295;;;;:::o;7673:1395::-;7790:37;7823:3;7790:37;:::i;:::-;7892:18;7884:6;7881:30;7878:56;;;7914:18;;:::i;:::-;7878:56;7958:38;7990:4;7984:11;7958:38;:::i;:::-;8043:67;8103:6;8095;8089:4;8043:67;:::i;:::-;8137:1;8161:4;8148:17;;8193:2;8185:6;8182:14;8210:1;8205:618;;;;8867:1;8884:6;8881:77;;;8933:9;8928:3;8924:19;8918:26;8909:35;;8881:77;8984:67;9044:6;9037:5;8984:67;:::i;:::-;8978:4;8971:81;8840:222;8175:887;;8205:618;8257:4;8253:9;8245:6;8241:22;8291:37;8323:4;8291:37;:::i;:::-;8350:1;8364:208;8378:7;8375:1;8372:14;8364:208;;;8457:9;8452:3;8448:19;8442:26;8434:6;8427:42;8508:1;8500:6;8496:14;8486:24;;8555:2;8544:9;8540:18;8527:31;;8401:4;8398:1;8394:12;8389:17;;8364:208;;;8600:6;8591:7;8588:19;8585:179;;;8658:9;8653:3;8649:19;8643:26;8701:48;8743:4;8735:6;8731:17;8720:9;8701:48;:::i;:::-;8693:6;8686:64;8608:156;8585:179;8810:1;8806;8798:6;8794:14;8790:22;8784:4;8777:36;8212:611;;;8175:887;;7765:1303;;;7673:1395;;:::o;9074:118::-;9161:24;9179:5;9161:24;:::i;:::-;9156:3;9149:37;9074:118;;:::o;9198:222::-;9291:4;9329:2;9318:9;9314:18;9306:26;;9342:71;9410:1;9399:9;9395:17;9386:6;9342:71;:::i;:::-;9198:222;;;;:::o;9426:180::-;9474:77;9471:1;9464:88;9571:4;9568:1;9561:15;9595:4;9592:1;9585:15;9612:180;9660:77;9657:1;9650:88;9757:4;9754:1;9747:15;9781:4;9778:1;9771:15;9798:191;9838:3;9857:20;9875:1;9857:20;:::i;:::-;9852:25;;9891:20;9909:1;9891:20;:::i;:::-;9886:25;;9934:1;9931;9927:9;9920:16;;9955:3;9952:1;9949:10;9946:36;;;9962:18;;:::i;:::-;9946:36;9798:191;;;;:::o;9995:118::-;10082:24;10100:5;10082:24;:::i;:::-;10077:3;10070:37;9995:118;;:::o;10119:442::-;10268:4;10306:2;10295:9;10291:18;10283:26;;10319:71;10387:1;10376:9;10372:17;10363:6;10319:71;:::i;:::-;10400:72;10468:2;10457:9;10453:18;10444:6;10400:72;:::i;:::-;10482;10550:2;10539:9;10535:18;10526:6;10482:72;:::i;:::-;10119:442;;;;;;:::o;10567:222::-;10660:4;10698:2;10687:9;10683:18;10675:26;;10711:71;10779:1;10768:9;10764:17;10755:6;10711:71;:::i;:::-;10567:222;;;;:::o;367:8291:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TOTAL_SUPPLY_1379": {
									"entryPoint": 6549,
									"id": 1379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2206": {
									"entryPoint": null,
									"id": 2206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2214": {
									"entryPoint": null,
									"id": 2214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_801": {
									"entryPoint": 7315,
									"id": 801,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_861": {
									"entryPoint": 8947,
									"id": 861,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_130": {
									"entryPoint": 7719,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1026": {
									"entryPoint": 7308,
									"id": 1026,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_383": {
									"entryPoint": 7933,
									"id": 383,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_375": {
									"entryPoint": 7854,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_909": {
									"entryPoint": 7333,
									"id": 909,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 8752,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_640": {
									"entryPoint": 7479,
									"id": 640,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_717": {
									"entryPoint": 9410,
									"id": 717,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_1220": {
									"entryPoint": 8463,
									"id": 1220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_537": {
									"entryPoint": 7040,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_561": {
									"entryPoint": 2419,
									"id": 561,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_496": {
									"entryPoint": 5514,
									"id": 496,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyTokens_1854": {
									"entryPoint": 3397,
									"id": 1854,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculatePreSaleTokens_1982": {
									"entryPoint": 8484,
									"id": 1982,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculatePrivateSaleTokens_1930": {
									"entryPoint": 7985,
									"id": 1930,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_474": {
									"entryPoint": 2812,
									"id": 474,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_1265": {
									"entryPoint": 7964,
									"id": 1265,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@emergencyWithdraw_2167": {
									"entryPoint": 6570,
									"id": 2167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getLatestPrice_1610": {
									"entryPoint": 6193,
									"id": 1610,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@haltSales_2140": {
									"entryPoint": 2820,
									"id": 2140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_1250": {
									"entryPoint": 7943,
									"id": 1250,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_456": {
									"entryPoint": 2275,
									"id": 456,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_113": {
									"entryPoint": 6153,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@preSaleEndPrice_1438": {
									"entryPoint": 6543,
									"id": 1438,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleSoldTokens_1441": {
									"entryPoint": 6998,
									"id": 1441,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleStartPrice_1431": {
									"entryPoint": 6564,
									"id": 1431,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleTarget_1417": {
									"entryPoint": 7170,
									"id": 1417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleTokens_1424": {
									"entryPoint": 2453,
									"id": 1424,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@priceFeeds_1468": {
									"entryPoint": 2459,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleEndPrice_1407": {
									"entryPoint": 7010,
									"id": 1407,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleSoldTokens_1410": {
									"entryPoint": 5508,
									"id": 1410,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleStartPrice_1400": {
									"entryPoint": 6992,
									"id": 1400,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleTarget_1386": {
									"entryPoint": 7004,
									"id": 1386,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleTokens_1393": {
									"entryPoint": 7034,
									"id": 1393,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releaseVestedTokens_2114": {
									"entryPoint": 4701,
									"id": 2114,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_144": {
									"entryPoint": 5583,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stage_1450": {
									"entryPoint": 7016,
									"id": 1450,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeDuration_1464": {
									"entryPoint": 4695,
									"id": 1464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeTokens_2053": {
									"entryPoint": 5602,
									"id": 2053,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@startPreSale_1677": {
									"entryPoint": 5200,
									"id": 1677,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startPrivateSale_1647": {
									"entryPoint": 3024,
									"id": 1647,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1235": {
									"entryPoint": 9947,
									"id": 1235,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_465": {
									"entryPoint": 6814,
									"id": 465,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_483": {
									"entryPoint": 2524,
									"id": 483,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_593": {
									"entryPoint": 2554,
									"id": 593,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_172": {
									"entryPoint": 7176,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_520": {
									"entryPoint": 6958,
									"id": 520,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@vestingBalance_1454": {
									"entryPoint": 2533,
									"id": 1454,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestingDuration_1461": {
									"entryPoint": 2518,
									"id": 1461,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestingReleaseTime_1458": {
									"entryPoint": 2791,
									"id": 1458,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawFunds_2198": {
									"entryPoint": 2600,
									"id": 2198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 10328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 13757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 13433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 13453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 13382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 11066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 10754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 13777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 13473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 10472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack": {
									"entryPoint": 10671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_SaleStage_$1445_to_t_uint8_fromStack": {
									"entryPoint": 11026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_05043e7e6a7e43f546dc3edaeb19e4aba3d9787fc557c8eb5421e8352d209d3b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_17f20696f0fa86018195f469014cbcb189920391ba0d2a0304f597cf79bbbbe7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2442b511367f0b2d1fcb1c2739922b9057f05346fc1b0da072e9b62ecd0f2126_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_85a92b7d2f3c8949309a7dee9f4ca63adcd1660cd0a768c248f1d76c264451ae_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b6838c7afcdde6199dc4da34991bafdb53e10c5b79115748c94bef6ed3648976_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d8e3511bc2ef1eacf227714a4be566bdacade7e0259e47bca8127d56e48d6281_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 10846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 13696,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13820,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 10487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed": {
									"entryPoint": 10686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_SaleStage_$1445__to_t_uint8__fromStack_reversed": {
									"entryPoint": 11041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_05043e7e6a7e43f546dc3edaeb19e4aba3d9787fc557c8eb5421e8352d209d3b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_17f20696f0fa86018195f469014cbcb189920391ba0d2a0304f597cf79bbbbe7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2442b511367f0b2d1fcb1c2739922b9057f05346fc1b0da072e9b62ecd0f2126__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_85a92b7d2f3c8949309a7dee9f4ca63adcd1660cd0a768c248f1d76c264451ae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b6838c7afcdde6199dc4da34991bafdb53e10c5b79115748c94bef6ed3648976__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d8e3511bc2ef1eacf227714a4be566bdacade7e0259e47bca8127d56e48d6281__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13255,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 10861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 14852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 14132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 14022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 14903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 10289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_SaleStage_$1445": {
									"entryPoint": 10991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 13402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 10834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 13339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_AggregatorV3Interface_$45_to_t_address": {
									"entryPoint": 10654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_SaleStage_$1445_to_t_uint8": {
									"entryPoint": 11009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 10637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 10604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10136,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 11173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 10595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 13977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 14087,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 10926,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 11128,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 13294,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10254,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_05043e7e6a7e43f546dc3edaeb19e4aba3d9787fc557c8eb5421e8352d209d3b": {
									"entryPoint": 12763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef": {
									"entryPoint": 11221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_17f20696f0fa86018195f469014cbcb189920391ba0d2a0304f597cf79bbbbe7": {
									"entryPoint": 13592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2442b511367f0b2d1fcb1c2739922b9057f05346fc1b0da072e9b62ecd0f2126": {
									"entryPoint": 12905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620": {
									"entryPoint": 11855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4": {
									"entryPoint": 14606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 13047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a": {
									"entryPoint": 14180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b": {
									"entryPoint": 12659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec": {
									"entryPoint": 12309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d": {
									"entryPoint": 12517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67": {
									"entryPoint": 12413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_85a92b7d2f3c8949309a7dee9f4ca63adcd1660cd0a768c248f1d76c264451ae": {
									"entryPoint": 11325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996": {
									"entryPoint": 14710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2": {
									"entryPoint": 14464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb": {
									"entryPoint": 11959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b6838c7afcdde6199dc4da34991bafdb53e10c5b79115748c94bef6ed3648976": {
									"entryPoint": 11609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0": {
									"entryPoint": 13151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513": {
									"entryPoint": 12205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e": {
									"entryPoint": 12063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85": {
									"entryPoint": 14322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f": {
									"entryPoint": 11751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d8e3511bc2ef1eacf227714a4be566bdacade7e0259e47bca8127d56e48d6281": {
									"entryPoint": 11467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd": {
									"entryPoint": 9984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 13873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_SaleStage_$1445": {
									"entryPoint": 10971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 13735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 13411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 13360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:39038:10",
										"nodeType": "YulBlock",
										"src": "0:39038:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:10",
													"nodeType": "YulBlock",
													"src": "103:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:10"
																},
																"nativeSrc": "113:19:10",
																"nodeType": "YulFunctionCall",
																"src": "113:19:10"
															},
															"nativeSrc": "113:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:10"
														},
														{
															"nativeSrc": "141:29:10",
															"nodeType": "YulAssignment",
															"src": "141:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:10",
																		"nodeType": "YulLiteral",
																		"src": "165:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:10"
																},
																"nativeSrc": "156:14:10",
																"nodeType": "YulFunctionCall",
																"src": "156:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:10",
														"nodeType": "YulTypedName",
														"src": "75:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:10",
														"nodeType": "YulTypedName",
														"src": "80:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:10",
														"nodeType": "YulTypedName",
														"src": "91:11:10",
														"type": ""
													}
												],
												"src": "7:169:10"
											},
											{
												"body": {
													"nativeSrc": "288:114:10",
													"nodeType": "YulBlock",
													"src": "288:114:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:10",
																				"nodeType": "YulLiteral",
																				"src": "318:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:10"
																		},
																		"nativeSrc": "306:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:10"
																	},
																	{
																		"hexValue": "44697265637420455448207472616e7366657273206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "322:34:10",
																		"nodeType": "YulLiteral",
																		"src": "322:34:10",
																		"type": "",
																		"value": "Direct ETH transfers not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:10"
																},
																"nativeSrc": "299:58:10",
																"nodeType": "YulFunctionCall",
																"src": "299:58:10"
															},
															"nativeSrc": "299:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "299:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "378:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "378:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "386:2:10",
																				"nodeType": "YulLiteral",
																				"src": "386:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "374:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "374:3:10"
																		},
																		"nativeSrc": "374:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "374:15:10"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "391:3:10",
																		"nodeType": "YulLiteral",
																		"src": "391:3:10",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "367:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "367:6:10"
																},
																"nativeSrc": "367:28:10",
																"nodeType": "YulFunctionCall",
																"src": "367:28:10"
															},
															"nativeSrc": "367:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "367:28:10"
														}
													]
												},
												"name": "store_literal_in_memory_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
												"nativeSrc": "182:220:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:10",
														"nodeType": "YulTypedName",
														"src": "280:6:10",
														"type": ""
													}
												],
												"src": "182:220:10"
											},
											{
												"body": {
													"nativeSrc": "554:220:10",
													"nodeType": "YulBlock",
													"src": "554:220:10",
													"statements": [
														{
															"nativeSrc": "564:74:10",
															"nodeType": "YulAssignment",
															"src": "564:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "630:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "630:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "635:2:10",
																		"nodeType": "YulLiteral",
																		"src": "635:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "571:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "571:58:10"
																},
																"nativeSrc": "571:67:10",
																"nodeType": "YulFunctionCall",
																"src": "571:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "564:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "564:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "736:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "736:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
																	"nativeSrc": "647:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "647:88:10"
																},
																"nativeSrc": "647:93:10",
																"nodeType": "YulFunctionCall",
																"src": "647:93:10"
															},
															"nativeSrc": "647:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "647:93:10"
														},
														{
															"nativeSrc": "749:19:10",
															"nodeType": "YulAssignment",
															"src": "749:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "760:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "760:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "765:2:10",
																		"nodeType": "YulLiteral",
																		"src": "765:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "756:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:10"
																},
																"nativeSrc": "756:12:10",
																"nodeType": "YulFunctionCall",
																"src": "756:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "749:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "749:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "408:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "542:3:10",
														"nodeType": "YulTypedName",
														"src": "542:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "550:3:10",
														"nodeType": "YulTypedName",
														"src": "550:3:10",
														"type": ""
													}
												],
												"src": "408:366:10"
											},
											{
												"body": {
													"nativeSrc": "951:248:10",
													"nodeType": "YulBlock",
													"src": "951:248:10",
													"statements": [
														{
															"nativeSrc": "961:26:10",
															"nodeType": "YulAssignment",
															"src": "961:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "973:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "973:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "984:2:10",
																		"nodeType": "YulLiteral",
																		"src": "984:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "969:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:10"
																},
																"nativeSrc": "969:18:10",
																"nodeType": "YulFunctionCall",
																"src": "969:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "961:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "961:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1008:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1008:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1019:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1019:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1004:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1004:3:10"
																		},
																		"nativeSrc": "1004:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1004:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1027:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1027:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1033:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1033:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1023:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:10"
																		},
																		"nativeSrc": "1023:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1023:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "997:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "997:6:10"
																},
																"nativeSrc": "997:47:10",
																"nodeType": "YulFunctionCall",
																"src": "997:47:10"
															},
															"nativeSrc": "997:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "997:47:10"
														},
														{
															"nativeSrc": "1053:139:10",
															"nodeType": "YulAssignment",
															"src": "1053:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1187:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1187:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1061:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "1061:124:10"
																},
																"nativeSrc": "1061:131:10",
																"nodeType": "YulFunctionCall",
																"src": "1061:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1053:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1053:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "780:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "931:9:10",
														"nodeType": "YulTypedName",
														"src": "931:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "946:4:10",
														"nodeType": "YulTypedName",
														"src": "946:4:10",
														"type": ""
													}
												],
												"src": "780:419:10"
											},
											{
												"body": {
													"nativeSrc": "1264:40:10",
													"nodeType": "YulBlock",
													"src": "1264:40:10",
													"statements": [
														{
															"nativeSrc": "1275:22:10",
															"nodeType": "YulAssignment",
															"src": "1275:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1291:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1291:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1285:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1285:5:10"
																},
																"nativeSrc": "1285:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1285:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1275:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1275:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1205:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1247:5:10",
														"nodeType": "YulTypedName",
														"src": "1247:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1257:6:10",
														"nodeType": "YulTypedName",
														"src": "1257:6:10",
														"type": ""
													}
												],
												"src": "1205:99:10"
											},
											{
												"body": {
													"nativeSrc": "1372:77:10",
													"nodeType": "YulBlock",
													"src": "1372:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1389:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1389:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1394:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1394:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1399:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1399:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1383:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1383:5:10"
																},
																"nativeSrc": "1383:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1383:23:10"
															},
															"nativeSrc": "1383:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "1383:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1426:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1426:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1431:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1431:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1422:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1422:3:10"
																		},
																		"nativeSrc": "1422:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1422:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1440:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1415:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:10"
																},
																"nativeSrc": "1415:27:10",
																"nodeType": "YulFunctionCall",
																"src": "1415:27:10"
															},
															"nativeSrc": "1415:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "1415:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1310:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1354:3:10",
														"nodeType": "YulTypedName",
														"src": "1354:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1359:3:10",
														"nodeType": "YulTypedName",
														"src": "1359:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1364:6:10",
														"nodeType": "YulTypedName",
														"src": "1364:6:10",
														"type": ""
													}
												],
												"src": "1310:139:10"
											},
											{
												"body": {
													"nativeSrc": "1503:54:10",
													"nodeType": "YulBlock",
													"src": "1503:54:10",
													"statements": [
														{
															"nativeSrc": "1513:38:10",
															"nodeType": "YulAssignment",
															"src": "1513:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1531:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1531:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1538:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1527:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1527:3:10"
																		},
																		"nativeSrc": "1527:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1527:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1547:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1547:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1543:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:10"
																		},
																		"nativeSrc": "1543:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1543:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1523:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1523:3:10"
																},
																"nativeSrc": "1523:28:10",
																"nodeType": "YulFunctionCall",
																"src": "1523:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1513:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1513:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1455:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1486:5:10",
														"nodeType": "YulTypedName",
														"src": "1486:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1496:6:10",
														"nodeType": "YulTypedName",
														"src": "1496:6:10",
														"type": ""
													}
												],
												"src": "1455:102:10"
											},
											{
												"body": {
													"nativeSrc": "1655:285:10",
													"nodeType": "YulBlock",
													"src": "1655:285:10",
													"statements": [
														{
															"nativeSrc": "1665:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1665:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1712:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1712:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1679:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "1679:32:10"
																},
																"nativeSrc": "1679:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1679:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1669:6:10",
																	"nodeType": "YulTypedName",
																	"src": "1669:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1727:78:10",
															"nodeType": "YulAssignment",
															"src": "1727:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1793:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1793:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1798:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1798:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1734:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "1734:58:10"
																},
																"nativeSrc": "1734:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1734:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1727:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1727:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1853:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1853:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1860:4:10",
																				"nodeType": "YulLiteral",
																				"src": "1860:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1849:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1849:3:10"
																		},
																		"nativeSrc": "1849:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1849:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1867:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1867:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1872:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1872:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1814:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "1814:34:10"
																},
																"nativeSrc": "1814:65:10",
																"nodeType": "YulFunctionCall",
																"src": "1814:65:10"
															},
															"nativeSrc": "1814:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "1814:65:10"
														},
														{
															"nativeSrc": "1888:46:10",
															"nodeType": "YulAssignment",
															"src": "1888:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1899:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1899:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1926:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1926:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1904:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "1904:21:10"
																		},
																		"nativeSrc": "1904:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1904:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1895:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1895:3:10"
																},
																"nativeSrc": "1895:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1895:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1888:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1888:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1563:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1636:5:10",
														"nodeType": "YulTypedName",
														"src": "1636:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1643:3:10",
														"nodeType": "YulTypedName",
														"src": "1643:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1651:3:10",
														"nodeType": "YulTypedName",
														"src": "1651:3:10",
														"type": ""
													}
												],
												"src": "1563:377:10"
											},
											{
												"body": {
													"nativeSrc": "2064:195:10",
													"nodeType": "YulBlock",
													"src": "2064:195:10",
													"statements": [
														{
															"nativeSrc": "2074:26:10",
															"nodeType": "YulAssignment",
															"src": "2074:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2086:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2086:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2097:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2097:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2082:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2082:3:10"
																},
																"nativeSrc": "2082:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2082:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2074:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2074:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2121:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2132:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2132:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2117:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2117:3:10"
																		},
																		"nativeSrc": "2117:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2140:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2140:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2146:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2146:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2136:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2136:3:10"
																		},
																		"nativeSrc": "2136:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2136:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2110:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2110:6:10"
																},
																"nativeSrc": "2110:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2110:47:10"
															},
															"nativeSrc": "2110:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2110:47:10"
														},
														{
															"nativeSrc": "2166:86:10",
															"nodeType": "YulAssignment",
															"src": "2166:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2238:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2238:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2247:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2247:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2174:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "2174:63:10"
																},
																"nativeSrc": "2174:78:10",
																"nodeType": "YulFunctionCall",
																"src": "2174:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2166:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2166:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1946:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2036:9:10",
														"nodeType": "YulTypedName",
														"src": "2036:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2048:6:10",
														"nodeType": "YulTypedName",
														"src": "2048:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2059:4:10",
														"nodeType": "YulTypedName",
														"src": "2059:4:10",
														"type": ""
													}
												],
												"src": "1946:313:10"
											},
											{
												"body": {
													"nativeSrc": "2305:35:10",
													"nodeType": "YulBlock",
													"src": "2305:35:10",
													"statements": [
														{
															"nativeSrc": "2315:19:10",
															"nodeType": "YulAssignment",
															"src": "2315:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2331:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2331:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2325:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2325:5:10"
																},
																"nativeSrc": "2325:9:10",
																"nodeType": "YulFunctionCall",
																"src": "2325:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2315:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "2265:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2298:6:10",
														"nodeType": "YulTypedName",
														"src": "2298:6:10",
														"type": ""
													}
												],
												"src": "2265:75:10"
											},
											{
												"body": {
													"nativeSrc": "2435:28:10",
													"nodeType": "YulBlock",
													"src": "2435:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2452:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2452:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2455:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2455:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2445:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2445:6:10"
																},
																"nativeSrc": "2445:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2445:12:10"
															},
															"nativeSrc": "2445:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "2445:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2346:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "2346:117:10"
											},
											{
												"body": {
													"nativeSrc": "2558:28:10",
													"nodeType": "YulBlock",
													"src": "2558:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2575:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2575:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2578:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2578:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2568:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2568:6:10"
																},
																"nativeSrc": "2568:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2568:12:10"
															},
															"nativeSrc": "2568:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "2568:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2469:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "2469:117:10"
											},
											{
												"body": {
													"nativeSrc": "2637:81:10",
													"nodeType": "YulBlock",
													"src": "2637:81:10",
													"statements": [
														{
															"nativeSrc": "2647:65:10",
															"nodeType": "YulAssignment",
															"src": "2647:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2662:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2662:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2669:42:10",
																		"nodeType": "YulLiteral",
																		"src": "2669:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2658:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:10"
																},
																"nativeSrc": "2658:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2658:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2647:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2647:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2592:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2619:5:10",
														"nodeType": "YulTypedName",
														"src": "2619:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2629:7:10",
														"nodeType": "YulTypedName",
														"src": "2629:7:10",
														"type": ""
													}
												],
												"src": "2592:126:10"
											},
											{
												"body": {
													"nativeSrc": "2769:51:10",
													"nodeType": "YulBlock",
													"src": "2769:51:10",
													"statements": [
														{
															"nativeSrc": "2779:35:10",
															"nodeType": "YulAssignment",
															"src": "2779:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2808:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2808:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2790:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2790:17:10"
																},
																"nativeSrc": "2790:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2790:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2779:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2779:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2724:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2751:5:10",
														"nodeType": "YulTypedName",
														"src": "2751:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2761:7:10",
														"nodeType": "YulTypedName",
														"src": "2761:7:10",
														"type": ""
													}
												],
												"src": "2724:96:10"
											},
											{
												"body": {
													"nativeSrc": "2869:79:10",
													"nodeType": "YulBlock",
													"src": "2869:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2926:16:10",
																"nodeType": "YulBlock",
																"src": "2926:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2935:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2935:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2938:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2928:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2928:6:10"
																			},
																			"nativeSrc": "2928:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2928:12:10"
																		},
																		"nativeSrc": "2928:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2928:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2892:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2892:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2917:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2917:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2899:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2899:17:10"
																				},
																				"nativeSrc": "2899:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2899:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2889:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2889:2:10"
																		},
																		"nativeSrc": "2889:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2889:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2882:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2882:6:10"
																},
																"nativeSrc": "2882:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2882:43:10"
															},
															"nativeSrc": "2879:63:10",
															"nodeType": "YulIf",
															"src": "2879:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2826:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2862:5:10",
														"nodeType": "YulTypedName",
														"src": "2862:5:10",
														"type": ""
													}
												],
												"src": "2826:122:10"
											},
											{
												"body": {
													"nativeSrc": "3006:87:10",
													"nodeType": "YulBlock",
													"src": "3006:87:10",
													"statements": [
														{
															"nativeSrc": "3016:29:10",
															"nodeType": "YulAssignment",
															"src": "3016:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3038:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3038:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3025:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3025:12:10"
																},
																"nativeSrc": "3025:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3025:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3016:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3016:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3081:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3081:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3054:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3054:26:10"
																},
																"nativeSrc": "3054:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3054:33:10"
															},
															"nativeSrc": "3054:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3054:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2954:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2984:6:10",
														"nodeType": "YulTypedName",
														"src": "2984:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2992:3:10",
														"nodeType": "YulTypedName",
														"src": "2992:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3000:5:10",
														"nodeType": "YulTypedName",
														"src": "3000:5:10",
														"type": ""
													}
												],
												"src": "2954:139:10"
											},
											{
												"body": {
													"nativeSrc": "3144:32:10",
													"nodeType": "YulBlock",
													"src": "3144:32:10",
													"statements": [
														{
															"nativeSrc": "3154:16:10",
															"nodeType": "YulAssignment",
															"src": "3154:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "3165:5:10",
																"nodeType": "YulIdentifier",
																"src": "3165:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3154:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3154:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3099:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3126:5:10",
														"nodeType": "YulTypedName",
														"src": "3126:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3136:7:10",
														"nodeType": "YulTypedName",
														"src": "3136:7:10",
														"type": ""
													}
												],
												"src": "3099:77:10"
											},
											{
												"body": {
													"nativeSrc": "3225:79:10",
													"nodeType": "YulBlock",
													"src": "3225:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3282:16:10",
																"nodeType": "YulBlock",
																"src": "3282:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3291:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3291:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3294:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3294:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3284:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3284:6:10"
																			},
																			"nativeSrc": "3284:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3284:12:10"
																		},
																		"nativeSrc": "3284:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3284:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3248:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3248:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3273:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3273:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3255:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3255:17:10"
																				},
																				"nativeSrc": "3255:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3255:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3245:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3245:2:10"
																		},
																		"nativeSrc": "3245:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3245:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3238:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3238:6:10"
																},
																"nativeSrc": "3238:43:10",
																"nodeType": "YulFunctionCall",
																"src": "3238:43:10"
															},
															"nativeSrc": "3235:63:10",
															"nodeType": "YulIf",
															"src": "3235:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3182:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3218:5:10",
														"nodeType": "YulTypedName",
														"src": "3218:5:10",
														"type": ""
													}
												],
												"src": "3182:122:10"
											},
											{
												"body": {
													"nativeSrc": "3362:87:10",
													"nodeType": "YulBlock",
													"src": "3362:87:10",
													"statements": [
														{
															"nativeSrc": "3372:29:10",
															"nodeType": "YulAssignment",
															"src": "3372:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3394:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3394:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3381:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3381:12:10"
																},
																"nativeSrc": "3381:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3381:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3372:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3372:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3437:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3437:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3410:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3410:26:10"
																},
																"nativeSrc": "3410:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3410:33:10"
															},
															"nativeSrc": "3410:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3410:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3310:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3340:6:10",
														"nodeType": "YulTypedName",
														"src": "3340:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3348:3:10",
														"nodeType": "YulTypedName",
														"src": "3348:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3356:5:10",
														"nodeType": "YulTypedName",
														"src": "3356:5:10",
														"type": ""
													}
												],
												"src": "3310:139:10"
											},
											{
												"body": {
													"nativeSrc": "3538:391:10",
													"nodeType": "YulBlock",
													"src": "3538:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3584:83:10",
																"nodeType": "YulBlock",
																"src": "3584:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3586:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3586:77:10"
																			},
																			"nativeSrc": "3586:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3586:79:10"
																		},
																		"nativeSrc": "3586:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3586:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3559:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3559:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3568:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3555:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3555:3:10"
																		},
																		"nativeSrc": "3555:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3555:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3580:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3580:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3551:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3551:3:10"
																},
																"nativeSrc": "3551:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3551:32:10"
															},
															"nativeSrc": "3548:119:10",
															"nodeType": "YulIf",
															"src": "3548:119:10"
														},
														{
															"nativeSrc": "3677:117:10",
															"nodeType": "YulBlock",
															"src": "3677:117:10",
															"statements": [
																{
																	"nativeSrc": "3692:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3692:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3706:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3706:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3696:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3696:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3721:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3721:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3756:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3756:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3767:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3767:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3752:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3752:3:10"
																				},
																				"nativeSrc": "3752:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3752:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3776:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3776:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3731:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3731:20:10"
																		},
																		"nativeSrc": "3731:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3731:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3721:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3721:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3804:118:10",
															"nodeType": "YulBlock",
															"src": "3804:118:10",
															"statements": [
																{
																	"nativeSrc": "3819:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3819:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3833:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3823:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3823:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3849:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3849:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3884:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3884:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3895:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3895:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3880:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3880:3:10"
																				},
																				"nativeSrc": "3880:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3880:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3904:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3904:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3859:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3859:20:10"
																		},
																		"nativeSrc": "3859:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3859:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3849:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3849:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3455:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3500:9:10",
														"nodeType": "YulTypedName",
														"src": "3500:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3511:7:10",
														"nodeType": "YulTypedName",
														"src": "3511:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3523:6:10",
														"nodeType": "YulTypedName",
														"src": "3523:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3531:6:10",
														"nodeType": "YulTypedName",
														"src": "3531:6:10",
														"type": ""
													}
												],
												"src": "3455:474:10"
											},
											{
												"body": {
													"nativeSrc": "3977:48:10",
													"nodeType": "YulBlock",
													"src": "3977:48:10",
													"statements": [
														{
															"nativeSrc": "3987:32:10",
															"nodeType": "YulAssignment",
															"src": "3987:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4012:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4012:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4005:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4005:6:10"
																		},
																		"nativeSrc": "4005:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4005:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3998:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3998:6:10"
																},
																"nativeSrc": "3998:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3998:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3987:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3987:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3935:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3959:5:10",
														"nodeType": "YulTypedName",
														"src": "3959:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3969:7:10",
														"nodeType": "YulTypedName",
														"src": "3969:7:10",
														"type": ""
													}
												],
												"src": "3935:90:10"
											},
											{
												"body": {
													"nativeSrc": "4090:50:10",
													"nodeType": "YulBlock",
													"src": "4090:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4107:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4107:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4127:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4127:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4112:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "4112:14:10"
																		},
																		"nativeSrc": "4112:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4100:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4100:6:10"
																},
																"nativeSrc": "4100:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4100:34:10"
															},
															"nativeSrc": "4100:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "4100:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "4031:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4078:5:10",
														"nodeType": "YulTypedName",
														"src": "4078:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4085:3:10",
														"nodeType": "YulTypedName",
														"src": "4085:3:10",
														"type": ""
													}
												],
												"src": "4031:109:10"
											},
											{
												"body": {
													"nativeSrc": "4238:118:10",
													"nodeType": "YulBlock",
													"src": "4238:118:10",
													"statements": [
														{
															"nativeSrc": "4248:26:10",
															"nodeType": "YulAssignment",
															"src": "4248:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4260:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4260:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4271:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4271:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4256:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4256:3:10"
																},
																"nativeSrc": "4256:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4256:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4248:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4248:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4322:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4322:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4335:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4335:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4346:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4346:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4331:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4331:3:10"
																		},
																		"nativeSrc": "4331:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4331:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4284:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "4284:37:10"
																},
																"nativeSrc": "4284:65:10",
																"nodeType": "YulFunctionCall",
																"src": "4284:65:10"
															},
															"nativeSrc": "4284:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "4284:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4146:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4210:9:10",
														"nodeType": "YulTypedName",
														"src": "4210:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4222:6:10",
														"nodeType": "YulTypedName",
														"src": "4222:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4233:4:10",
														"nodeType": "YulTypedName",
														"src": "4233:4:10",
														"type": ""
													}
												],
												"src": "4146:210:10"
											},
											{
												"body": {
													"nativeSrc": "4427:53:10",
													"nodeType": "YulBlock",
													"src": "4427:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4444:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4444:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4467:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4467:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4449:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "4449:17:10"
																		},
																		"nativeSrc": "4449:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4449:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4437:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4437:6:10"
																},
																"nativeSrc": "4437:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4437:37:10"
															},
															"nativeSrc": "4437:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "4437:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4362:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4415:5:10",
														"nodeType": "YulTypedName",
														"src": "4415:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4422:3:10",
														"nodeType": "YulTypedName",
														"src": "4422:3:10",
														"type": ""
													}
												],
												"src": "4362:118:10"
											},
											{
												"body": {
													"nativeSrc": "4584:124:10",
													"nodeType": "YulBlock",
													"src": "4584:124:10",
													"statements": [
														{
															"nativeSrc": "4594:26:10",
															"nodeType": "YulAssignment",
															"src": "4594:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4606:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4606:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4617:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4617:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4602:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4602:3:10"
																},
																"nativeSrc": "4602:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4602:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4594:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4594:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4674:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4674:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4687:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4687:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4698:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4698:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4683:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4683:3:10"
																		},
																		"nativeSrc": "4683:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4683:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4630:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4630:43:10"
																},
																"nativeSrc": "4630:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4630:71:10"
															},
															"nativeSrc": "4630:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "4630:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4486:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4556:9:10",
														"nodeType": "YulTypedName",
														"src": "4556:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4568:6:10",
														"nodeType": "YulTypedName",
														"src": "4568:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4579:4:10",
														"nodeType": "YulTypedName",
														"src": "4579:4:10",
														"type": ""
													}
												],
												"src": "4486:222:10"
											},
											{
												"body": {
													"nativeSrc": "4780:263:10",
													"nodeType": "YulBlock",
													"src": "4780:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4826:83:10",
																"nodeType": "YulBlock",
																"src": "4826:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4828:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4828:77:10"
																			},
																			"nativeSrc": "4828:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4828:79:10"
																		},
																		"nativeSrc": "4828:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4828:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4801:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4801:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4810:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4810:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4797:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4797:3:10"
																		},
																		"nativeSrc": "4797:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4797:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4822:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4822:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4793:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:10"
																},
																"nativeSrc": "4793:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4793:32:10"
															},
															"nativeSrc": "4790:119:10",
															"nodeType": "YulIf",
															"src": "4790:119:10"
														},
														{
															"nativeSrc": "4919:117:10",
															"nodeType": "YulBlock",
															"src": "4919:117:10",
															"statements": [
																{
																	"nativeSrc": "4934:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4934:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4948:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4948:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4938:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4938:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4963:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4963:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4998:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4998:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5009:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5009:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4994:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4994:3:10"
																				},
																				"nativeSrc": "4994:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4994:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5018:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5018:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4973:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4973:20:10"
																		},
																		"nativeSrc": "4973:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4973:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4963:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4963:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4714:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4750:9:10",
														"nodeType": "YulTypedName",
														"src": "4750:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4761:7:10",
														"nodeType": "YulTypedName",
														"src": "4761:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4773:6:10",
														"nodeType": "YulTypedName",
														"src": "4773:6:10",
														"type": ""
													}
												],
												"src": "4714:329:10"
											},
											{
												"body": {
													"nativeSrc": "5081:28:10",
													"nodeType": "YulBlock",
													"src": "5081:28:10",
													"statements": [
														{
															"nativeSrc": "5091:12:10",
															"nodeType": "YulAssignment",
															"src": "5091:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5098:5:10",
																"nodeType": "YulIdentifier",
																"src": "5098:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5091:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5091:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5049:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5067:5:10",
														"nodeType": "YulTypedName",
														"src": "5067:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5077:3:10",
														"nodeType": "YulTypedName",
														"src": "5077:3:10",
														"type": ""
													}
												],
												"src": "5049:60:10"
											},
											{
												"body": {
													"nativeSrc": "5175:82:10",
													"nodeType": "YulBlock",
													"src": "5175:82:10",
													"statements": [
														{
															"nativeSrc": "5185:66:10",
															"nodeType": "YulAssignment",
															"src": "5185:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5243:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5243:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5225:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5225:17:10"
																				},
																				"nativeSrc": "5225:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5216:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "5216:8:10"
																		},
																		"nativeSrc": "5216:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5216:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5198:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5198:17:10"
																},
																"nativeSrc": "5198:53:10",
																"nodeType": "YulFunctionCall",
																"src": "5198:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5185:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5185:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5115:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5155:5:10",
														"nodeType": "YulTypedName",
														"src": "5155:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5165:9:10",
														"nodeType": "YulTypedName",
														"src": "5165:9:10",
														"type": ""
													}
												],
												"src": "5115:142:10"
											},
											{
												"body": {
													"nativeSrc": "5323:66:10",
													"nodeType": "YulBlock",
													"src": "5323:66:10",
													"statements": [
														{
															"nativeSrc": "5333:50:10",
															"nodeType": "YulAssignment",
															"src": "5333:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5377:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5377:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5346:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5346:30:10"
																},
																"nativeSrc": "5346:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5346:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5333:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5333:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5263:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5303:5:10",
														"nodeType": "YulTypedName",
														"src": "5303:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5313:9:10",
														"nodeType": "YulTypedName",
														"src": "5313:9:10",
														"type": ""
													}
												],
												"src": "5263:126:10"
											},
											{
												"body": {
													"nativeSrc": "5483:66:10",
													"nodeType": "YulBlock",
													"src": "5483:66:10",
													"statements": [
														{
															"nativeSrc": "5493:50:10",
															"nodeType": "YulAssignment",
															"src": "5493:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5537:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5537:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5506:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5506:30:10"
																},
																"nativeSrc": "5506:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5506:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5493:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5493:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
												"nativeSrc": "5395:154:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5463:5:10",
														"nodeType": "YulTypedName",
														"src": "5463:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5473:9:10",
														"nodeType": "YulTypedName",
														"src": "5473:9:10",
														"type": ""
													}
												],
												"src": "5395:154:10"
											},
											{
												"body": {
													"nativeSrc": "5648:94:10",
													"nodeType": "YulBlock",
													"src": "5648:94:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5665:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5665:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5729:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5729:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
																			"nativeSrc": "5670:58:10",
																			"nodeType": "YulIdentifier",
																			"src": "5670:58:10"
																		},
																		"nativeSrc": "5670:65:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5670:65:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5658:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5658:6:10"
																},
																"nativeSrc": "5658:78:10",
																"nodeType": "YulFunctionCall",
																"src": "5658:78:10"
															},
															"nativeSrc": "5658:78:10",
															"nodeType": "YulExpressionStatement",
															"src": "5658:78:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
												"nativeSrc": "5555:187:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5636:5:10",
														"nodeType": "YulTypedName",
														"src": "5636:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5643:3:10",
														"nodeType": "YulTypedName",
														"src": "5643:3:10",
														"type": ""
													}
												],
												"src": "5555:187:10"
											},
											{
												"body": {
													"nativeSrc": "5874:152:10",
													"nodeType": "YulBlock",
													"src": "5874:152:10",
													"statements": [
														{
															"nativeSrc": "5884:26:10",
															"nodeType": "YulAssignment",
															"src": "5884:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5896:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5896:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5907:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5907:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5892:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5892:3:10"
																},
																"nativeSrc": "5892:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5892:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5884:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5884:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5992:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5992:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6005:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6005:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6016:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6016:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6001:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6001:3:10"
																		},
																		"nativeSrc": "6001:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6001:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
																	"nativeSrc": "5920:71:10",
																	"nodeType": "YulIdentifier",
																	"src": "5920:71:10"
																},
																"nativeSrc": "5920:99:10",
																"nodeType": "YulFunctionCall",
																"src": "5920:99:10"
															},
															"nativeSrc": "5920:99:10",
															"nodeType": "YulExpressionStatement",
															"src": "5920:99:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
												"nativeSrc": "5748:278:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5846:9:10",
														"nodeType": "YulTypedName",
														"src": "5846:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5858:6:10",
														"nodeType": "YulTypedName",
														"src": "5858:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5869:4:10",
														"nodeType": "YulTypedName",
														"src": "5869:4:10",
														"type": ""
													}
												],
												"src": "5748:278:10"
											},
											{
												"body": {
													"nativeSrc": "6098:263:10",
													"nodeType": "YulBlock",
													"src": "6098:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6144:83:10",
																"nodeType": "YulBlock",
																"src": "6144:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6146:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6146:77:10"
																			},
																			"nativeSrc": "6146:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6146:79:10"
																		},
																		"nativeSrc": "6146:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6146:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6119:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6119:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6128:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6128:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6115:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6115:3:10"
																		},
																		"nativeSrc": "6115:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6115:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6140:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6140:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6111:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6111:3:10"
																},
																"nativeSrc": "6111:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6111:32:10"
															},
															"nativeSrc": "6108:119:10",
															"nodeType": "YulIf",
															"src": "6108:119:10"
														},
														{
															"nativeSrc": "6237:117:10",
															"nodeType": "YulBlock",
															"src": "6237:117:10",
															"statements": [
																{
																	"nativeSrc": "6252:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6252:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6266:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6266:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6256:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6256:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6281:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6281:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6316:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6316:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6327:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6327:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6312:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6312:3:10"
																				},
																				"nativeSrc": "6312:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6312:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6336:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6336:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6291:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6291:20:10"
																		},
																		"nativeSrc": "6291:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6291:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6281:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6281:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6032:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6068:9:10",
														"nodeType": "YulTypedName",
														"src": "6068:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6079:7:10",
														"nodeType": "YulTypedName",
														"src": "6079:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6091:6:10",
														"nodeType": "YulTypedName",
														"src": "6091:6:10",
														"type": ""
													}
												],
												"src": "6032:329:10"
											},
											{
												"body": {
													"nativeSrc": "6467:519:10",
													"nodeType": "YulBlock",
													"src": "6467:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6513:83:10",
																"nodeType": "YulBlock",
																"src": "6513:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6515:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6515:77:10"
																			},
																			"nativeSrc": "6515:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6515:79:10"
																		},
																		"nativeSrc": "6515:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6515:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6488:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6488:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6497:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6497:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6484:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6484:3:10"
																		},
																		"nativeSrc": "6484:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6484:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6509:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6509:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6480:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6480:3:10"
																},
																"nativeSrc": "6480:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6480:32:10"
															},
															"nativeSrc": "6477:119:10",
															"nodeType": "YulIf",
															"src": "6477:119:10"
														},
														{
															"nativeSrc": "6606:117:10",
															"nodeType": "YulBlock",
															"src": "6606:117:10",
															"statements": [
																{
																	"nativeSrc": "6621:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6621:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6635:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6635:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6625:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6625:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6650:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6650:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6685:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6685:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6696:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6696:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6681:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6681:3:10"
																				},
																				"nativeSrc": "6681:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6681:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6705:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6705:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6660:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6660:20:10"
																		},
																		"nativeSrc": "6660:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6660:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6650:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6650:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6733:118:10",
															"nodeType": "YulBlock",
															"src": "6733:118:10",
															"statements": [
																{
																	"nativeSrc": "6748:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6748:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6762:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6762:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6752:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6752:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6778:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6778:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6813:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6813:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6824:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6824:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6809:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6809:3:10"
																				},
																				"nativeSrc": "6809:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6809:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6833:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6833:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6788:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6788:20:10"
																		},
																		"nativeSrc": "6788:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6788:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6778:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6778:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6861:118:10",
															"nodeType": "YulBlock",
															"src": "6861:118:10",
															"statements": [
																{
																	"nativeSrc": "6876:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6876:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6890:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6890:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6880:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6880:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6906:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6906:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6941:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6941:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6952:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6952:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6937:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6937:3:10"
																				},
																				"nativeSrc": "6937:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6937:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6961:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6961:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6916:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6916:20:10"
																		},
																		"nativeSrc": "6916:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6916:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6906:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6906:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "6367:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6421:9:10",
														"nodeType": "YulTypedName",
														"src": "6421:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6432:7:10",
														"nodeType": "YulTypedName",
														"src": "6432:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6444:6:10",
														"nodeType": "YulTypedName",
														"src": "6444:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6452:6:10",
														"nodeType": "YulTypedName",
														"src": "6452:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6460:6:10",
														"nodeType": "YulTypedName",
														"src": "6460:6:10",
														"type": ""
													}
												],
												"src": "6367:619:10"
											},
											{
												"body": {
													"nativeSrc": "7035:43:10",
													"nodeType": "YulBlock",
													"src": "7035:43:10",
													"statements": [
														{
															"nativeSrc": "7045:27:10",
															"nodeType": "YulAssignment",
															"src": "7045:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7060:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7060:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7067:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7067:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7056:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7056:3:10"
																},
																"nativeSrc": "7056:16:10",
																"nodeType": "YulFunctionCall",
																"src": "7056:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7045:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "7045:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6992:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7017:5:10",
														"nodeType": "YulTypedName",
														"src": "7017:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7027:7:10",
														"nodeType": "YulTypedName",
														"src": "7027:7:10",
														"type": ""
													}
												],
												"src": "6992:86:10"
											},
											{
												"body": {
													"nativeSrc": "7145:51:10",
													"nodeType": "YulBlock",
													"src": "7145:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7162:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7162:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7183:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7183:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7167:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "7167:15:10"
																		},
																		"nativeSrc": "7167:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7167:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7155:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7155:6:10"
																},
																"nativeSrc": "7155:35:10",
																"nodeType": "YulFunctionCall",
																"src": "7155:35:10"
															},
															"nativeSrc": "7155:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "7155:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7084:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7133:5:10",
														"nodeType": "YulTypedName",
														"src": "7133:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7140:3:10",
														"nodeType": "YulTypedName",
														"src": "7140:3:10",
														"type": ""
													}
												],
												"src": "7084:112:10"
											},
											{
												"body": {
													"nativeSrc": "7296:120:10",
													"nodeType": "YulBlock",
													"src": "7296:120:10",
													"statements": [
														{
															"nativeSrc": "7306:26:10",
															"nodeType": "YulAssignment",
															"src": "7306:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7318:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7318:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7329:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7329:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7314:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7314:3:10"
																},
																"nativeSrc": "7314:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7314:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7306:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7306:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7382:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7382:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7395:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7395:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7406:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7406:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7391:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7391:3:10"
																		},
																		"nativeSrc": "7391:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7391:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7342:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "7342:39:10"
																},
																"nativeSrc": "7342:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7342:67:10"
															},
															"nativeSrc": "7342:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "7342:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7202:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7268:9:10",
														"nodeType": "YulTypedName",
														"src": "7268:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7280:6:10",
														"nodeType": "YulTypedName",
														"src": "7280:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7291:4:10",
														"nodeType": "YulTypedName",
														"src": "7291:4:10",
														"type": ""
													}
												],
												"src": "7202:214:10"
											},
											{
												"body": {
													"nativeSrc": "7487:53:10",
													"nodeType": "YulBlock",
													"src": "7487:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7504:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7504:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7527:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7527:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7509:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "7509:17:10"
																		},
																		"nativeSrc": "7509:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7509:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7497:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7497:6:10"
																},
																"nativeSrc": "7497:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7497:37:10"
															},
															"nativeSrc": "7497:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "7497:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7422:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7475:5:10",
														"nodeType": "YulTypedName",
														"src": "7475:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7482:3:10",
														"nodeType": "YulTypedName",
														"src": "7482:3:10",
														"type": ""
													}
												],
												"src": "7422:118:10"
											},
											{
												"body": {
													"nativeSrc": "7644:124:10",
													"nodeType": "YulBlock",
													"src": "7644:124:10",
													"statements": [
														{
															"nativeSrc": "7654:26:10",
															"nodeType": "YulAssignment",
															"src": "7654:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7666:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7666:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7677:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7677:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7662:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7662:3:10"
																},
																"nativeSrc": "7662:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7662:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7654:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7654:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7734:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7734:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7747:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7747:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7758:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7758:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7743:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:10"
																		},
																		"nativeSrc": "7743:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7743:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7690:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7690:43:10"
																},
																"nativeSrc": "7690:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7690:71:10"
															},
															"nativeSrc": "7690:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "7690:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7546:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7616:9:10",
														"nodeType": "YulTypedName",
														"src": "7616:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7628:6:10",
														"nodeType": "YulTypedName",
														"src": "7628:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7639:4:10",
														"nodeType": "YulTypedName",
														"src": "7639:4:10",
														"type": ""
													}
												],
												"src": "7546:222:10"
											},
											{
												"body": {
													"nativeSrc": "7802:152:10",
													"nodeType": "YulBlock",
													"src": "7802:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7819:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7819:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7822:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7822:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7812:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7812:6:10"
																},
																"nativeSrc": "7812:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7812:88:10"
															},
															"nativeSrc": "7812:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7812:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7916:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7916:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7919:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7919:4:10",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7909:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7909:6:10"
																},
																"nativeSrc": "7909:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7909:15:10"
															},
															"nativeSrc": "7909:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7909:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7940:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7940:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7943:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7943:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7933:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7933:6:10"
																},
																"nativeSrc": "7933:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7933:15:10"
															},
															"nativeSrc": "7933:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7933:15:10"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "7774:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7774:180:10"
											},
											{
												"body": {
													"nativeSrc": "8017:62:10",
													"nodeType": "YulBlock",
													"src": "8017:62:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8051:22:10",
																"nodeType": "YulBlock",
																"src": "8051:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "8053:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8053:16:10"
																			},
																			"nativeSrc": "8053:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8053:18:10"
																		},
																		"nativeSrc": "8053:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8053:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8040:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8040:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8047:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8047:1:10",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8037:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8037:2:10"
																		},
																		"nativeSrc": "8037:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8037:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8030:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8030:6:10"
																},
																"nativeSrc": "8030:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8030:20:10"
															},
															"nativeSrc": "8027:46:10",
															"nodeType": "YulIf",
															"src": "8027:46:10"
														}
													]
												},
												"name": "validator_assert_t_enum$_SaleStage_$1445",
												"nativeSrc": "7960:119:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8010:5:10",
														"nodeType": "YulTypedName",
														"src": "8010:5:10",
														"type": ""
													}
												],
												"src": "7960:119:10"
											},
											{
												"body": {
													"nativeSrc": "8144:80:10",
													"nodeType": "YulBlock",
													"src": "8144:80:10",
													"statements": [
														{
															"nativeSrc": "8154:16:10",
															"nodeType": "YulAssignment",
															"src": "8154:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "8165:5:10",
																"nodeType": "YulIdentifier",
																"src": "8165:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8154:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "8154:7:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8212:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8212:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_SaleStage_$1445",
																	"nativeSrc": "8171:40:10",
																	"nodeType": "YulIdentifier",
																	"src": "8171:40:10"
																},
																"nativeSrc": "8171:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8171:47:10"
															},
															"nativeSrc": "8171:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8171:47:10"
														}
													]
												},
												"name": "cleanup_t_enum$_SaleStage_$1445",
												"nativeSrc": "8085:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8126:5:10",
														"nodeType": "YulTypedName",
														"src": "8126:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8136:7:10",
														"nodeType": "YulTypedName",
														"src": "8136:7:10",
														"type": ""
													}
												],
												"src": "8085:139:10"
											},
											{
												"body": {
													"nativeSrc": "8302:67:10",
													"nodeType": "YulBlock",
													"src": "8302:67:10",
													"statements": [
														{
															"nativeSrc": "8312:51:10",
															"nodeType": "YulAssignment",
															"src": "8312:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8357:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8357:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_SaleStage_$1445",
																	"nativeSrc": "8325:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "8325:31:10"
																},
																"nativeSrc": "8325:38:10",
																"nodeType": "YulFunctionCall",
																"src": "8325:38:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8312:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "8312:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_SaleStage_$1445_to_t_uint8",
												"nativeSrc": "8230:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8282:5:10",
														"nodeType": "YulTypedName",
														"src": "8282:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8292:9:10",
														"nodeType": "YulTypedName",
														"src": "8292:9:10",
														"type": ""
													}
												],
												"src": "8230:139:10"
											},
											{
												"body": {
													"nativeSrc": "8452:78:10",
													"nodeType": "YulBlock",
													"src": "8452:78:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8469:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8469:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8517:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8517:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_SaleStage_$1445_to_t_uint8",
																			"nativeSrc": "8474:42:10",
																			"nodeType": "YulIdentifier",
																			"src": "8474:42:10"
																		},
																		"nativeSrc": "8474:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8474:49:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8462:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8462:6:10"
																},
																"nativeSrc": "8462:62:10",
																"nodeType": "YulFunctionCall",
																"src": "8462:62:10"
															},
															"nativeSrc": "8462:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "8462:62:10"
														}
													]
												},
												"name": "abi_encode_t_enum$_SaleStage_$1445_to_t_uint8_fromStack",
												"nativeSrc": "8375:155:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8440:5:10",
														"nodeType": "YulTypedName",
														"src": "8440:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8447:3:10",
														"nodeType": "YulTypedName",
														"src": "8447:3:10",
														"type": ""
													}
												],
												"src": "8375:155:10"
											},
											{
												"body": {
													"nativeSrc": "8646:136:10",
													"nodeType": "YulBlock",
													"src": "8646:136:10",
													"statements": [
														{
															"nativeSrc": "8656:26:10",
															"nodeType": "YulAssignment",
															"src": "8656:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8668:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8668:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8679:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8679:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8664:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8664:3:10"
																},
																"nativeSrc": "8664:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8664:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8656:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8656:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8748:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8748:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8761:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8761:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8772:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8772:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8757:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8757:3:10"
																		},
																		"nativeSrc": "8757:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8757:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_SaleStage_$1445_to_t_uint8_fromStack",
																	"nativeSrc": "8692:55:10",
																	"nodeType": "YulIdentifier",
																	"src": "8692:55:10"
																},
																"nativeSrc": "8692:83:10",
																"nodeType": "YulFunctionCall",
																"src": "8692:83:10"
															},
															"nativeSrc": "8692:83:10",
															"nodeType": "YulExpressionStatement",
															"src": "8692:83:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_SaleStage_$1445__to_t_uint8__fromStack_reversed",
												"nativeSrc": "8536:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8618:9:10",
														"nodeType": "YulTypedName",
														"src": "8618:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8630:6:10",
														"nodeType": "YulTypedName",
														"src": "8630:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8641:4:10",
														"nodeType": "YulTypedName",
														"src": "8641:4:10",
														"type": ""
													}
												],
												"src": "8536:246:10"
											},
											{
												"body": {
													"nativeSrc": "8871:391:10",
													"nodeType": "YulBlock",
													"src": "8871:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8917:83:10",
																"nodeType": "YulBlock",
																"src": "8917:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8919:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8919:77:10"
																			},
																			"nativeSrc": "8919:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8919:79:10"
																		},
																		"nativeSrc": "8919:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8919:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8892:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8892:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8901:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8901:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8888:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8888:3:10"
																		},
																		"nativeSrc": "8888:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8888:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8913:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8913:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8884:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8884:3:10"
																},
																"nativeSrc": "8884:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8884:32:10"
															},
															"nativeSrc": "8881:119:10",
															"nodeType": "YulIf",
															"src": "8881:119:10"
														},
														{
															"nativeSrc": "9010:117:10",
															"nodeType": "YulBlock",
															"src": "9010:117:10",
															"statements": [
																{
																	"nativeSrc": "9025:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9025:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9039:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9039:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9029:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9029:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9054:63:10",
																	"nodeType": "YulAssignment",
																	"src": "9054:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9089:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9089:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9100:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9100:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9085:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9085:3:10"
																				},
																				"nativeSrc": "9085:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9085:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9109:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9109:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9064:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "9064:20:10"
																		},
																		"nativeSrc": "9064:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9064:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9054:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9054:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9137:118:10",
															"nodeType": "YulBlock",
															"src": "9137:118:10",
															"statements": [
																{
																	"nativeSrc": "9152:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9152:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9166:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9166:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9156:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9156:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9182:63:10",
																	"nodeType": "YulAssignment",
																	"src": "9182:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9217:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9217:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9228:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9228:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9213:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9213:3:10"
																				},
																				"nativeSrc": "9213:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9213:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9237:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9237:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9192:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "9192:20:10"
																		},
																		"nativeSrc": "9192:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9192:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9182:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9182:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8788:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8833:9:10",
														"nodeType": "YulTypedName",
														"src": "8833:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8844:7:10",
														"nodeType": "YulTypedName",
														"src": "8844:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8856:6:10",
														"nodeType": "YulTypedName",
														"src": "8856:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8864:6:10",
														"nodeType": "YulTypedName",
														"src": "8864:6:10",
														"type": ""
													}
												],
												"src": "8788:474:10"
											},
											{
												"body": {
													"nativeSrc": "9296:152:10",
													"nodeType": "YulBlock",
													"src": "9296:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9313:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9313:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9316:77:10",
																		"nodeType": "YulLiteral",
																		"src": "9316:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9306:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9306:6:10"
																},
																"nativeSrc": "9306:88:10",
																"nodeType": "YulFunctionCall",
																"src": "9306:88:10"
															},
															"nativeSrc": "9306:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "9306:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9410:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9410:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9413:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9413:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9403:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9403:6:10"
																},
																"nativeSrc": "9403:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9403:15:10"
															},
															"nativeSrc": "9403:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9403:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9434:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9434:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9437:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9437:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9427:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9427:6:10"
																},
																"nativeSrc": "9427:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9427:15:10"
															},
															"nativeSrc": "9427:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9427:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9268:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "9268:180:10"
											},
											{
												"body": {
													"nativeSrc": "9505:269:10",
													"nodeType": "YulBlock",
													"src": "9505:269:10",
													"statements": [
														{
															"nativeSrc": "9515:22:10",
															"nodeType": "YulAssignment",
															"src": "9515:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9529:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9529:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9535:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9535:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9525:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9525:3:10"
																},
																"nativeSrc": "9525:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9525:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9515:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9515:6:10"
																}
															]
														},
														{
															"nativeSrc": "9546:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9546:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9576:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9576:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9582:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9582:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9572:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9572:3:10"
																},
																"nativeSrc": "9572:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9572:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9550:18:10",
																	"nodeType": "YulTypedName",
																	"src": "9550:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9623:51:10",
																"nodeType": "YulBlock",
																"src": "9623:51:10",
																"statements": [
																	{
																		"nativeSrc": "9637:27:10",
																		"nodeType": "YulAssignment",
																		"src": "9637:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9651:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "9651:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9659:4:10",
																					"nodeType": "YulLiteral",
																					"src": "9659:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9647:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "9647:3:10"
																			},
																			"nativeSrc": "9647:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9647:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9637:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9637:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9603:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "9603:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9596:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9596:6:10"
																},
																"nativeSrc": "9596:26:10",
																"nodeType": "YulFunctionCall",
																"src": "9596:26:10"
															},
															"nativeSrc": "9593:81:10",
															"nodeType": "YulIf",
															"src": "9593:81:10"
														},
														{
															"body": {
																"nativeSrc": "9726:42:10",
																"nodeType": "YulBlock",
																"src": "9726:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9740:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9740:16:10"
																			},
																			"nativeSrc": "9740:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9740:18:10"
																		},
																		"nativeSrc": "9740:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9740:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9690:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "9690:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9713:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9713:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9721:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9721:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9710:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9710:2:10"
																		},
																		"nativeSrc": "9710:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9710:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9687:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9687:2:10"
																},
																"nativeSrc": "9687:38:10",
																"nodeType": "YulFunctionCall",
																"src": "9687:38:10"
															},
															"nativeSrc": "9684:84:10",
															"nodeType": "YulIf",
															"src": "9684:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9454:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9489:4:10",
														"nodeType": "YulTypedName",
														"src": "9489:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9498:6:10",
														"nodeType": "YulTypedName",
														"src": "9498:6:10",
														"type": ""
													}
												],
												"src": "9454:320:10"
											},
											{
												"body": {
													"nativeSrc": "9886:70:10",
													"nodeType": "YulBlock",
													"src": "9886:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9908:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9908:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9916:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9916:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9904:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9904:3:10"
																		},
																		"nativeSrc": "9904:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9904:14:10"
																	},
																	{
																		"hexValue": "53616c65732074617267657473206e6f7420796574206d65742e",
																		"kind": "string",
																		"nativeSrc": "9920:28:10",
																		"nodeType": "YulLiteral",
																		"src": "9920:28:10",
																		"type": "",
																		"value": "Sales targets not yet met."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9897:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9897:6:10"
																},
																"nativeSrc": "9897:52:10",
																"nodeType": "YulFunctionCall",
																"src": "9897:52:10"
															},
															"nativeSrc": "9897:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "9897:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef",
												"nativeSrc": "9780:176:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9878:6:10",
														"nodeType": "YulTypedName",
														"src": "9878:6:10",
														"type": ""
													}
												],
												"src": "9780:176:10"
											},
											{
												"body": {
													"nativeSrc": "10108:220:10",
													"nodeType": "YulBlock",
													"src": "10108:220:10",
													"statements": [
														{
															"nativeSrc": "10118:74:10",
															"nodeType": "YulAssignment",
															"src": "10118:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10184:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10184:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10189:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10189:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10125:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10125:58:10"
																},
																"nativeSrc": "10125:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10125:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10118:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10118:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10290:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10290:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef",
																	"nativeSrc": "10201:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10201:88:10"
																},
																"nativeSrc": "10201:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10201:93:10"
															},
															"nativeSrc": "10201:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10201:93:10"
														},
														{
															"nativeSrc": "10303:19:10",
															"nodeType": "YulAssignment",
															"src": "10303:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10314:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10314:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10319:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10319:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10310:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10310:3:10"
																},
																"nativeSrc": "10310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10310:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10303:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10303:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9962:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10096:3:10",
														"nodeType": "YulTypedName",
														"src": "10096:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10104:3:10",
														"nodeType": "YulTypedName",
														"src": "10104:3:10",
														"type": ""
													}
												],
												"src": "9962:366:10"
											},
											{
												"body": {
													"nativeSrc": "10505:248:10",
													"nodeType": "YulBlock",
													"src": "10505:248:10",
													"statements": [
														{
															"nativeSrc": "10515:26:10",
															"nodeType": "YulAssignment",
															"src": "10515:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10527:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10527:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10538:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10538:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10523:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10523:3:10"
																},
																"nativeSrc": "10523:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10523:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10515:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10515:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10562:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10562:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10573:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10573:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10558:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10558:3:10"
																		},
																		"nativeSrc": "10558:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10558:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10581:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10581:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10587:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10587:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10577:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10577:3:10"
																		},
																		"nativeSrc": "10577:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10577:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10551:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10551:6:10"
																},
																"nativeSrc": "10551:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10551:47:10"
															},
															"nativeSrc": "10551:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10551:47:10"
														},
														{
															"nativeSrc": "10607:139:10",
															"nodeType": "YulAssignment",
															"src": "10607:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10741:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10741:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10615:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10615:124:10"
																},
																"nativeSrc": "10615:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10615:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10607:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10607:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10334:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10485:9:10",
														"nodeType": "YulTypedName",
														"src": "10485:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10500:4:10",
														"nodeType": "YulTypedName",
														"src": "10500:4:10",
														"type": ""
													}
												],
												"src": "10334:419:10"
											},
											{
												"body": {
													"nativeSrc": "10865:125:10",
													"nodeType": "YulBlock",
													"src": "10865:125:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10887:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10887:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10895:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10895:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10883:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10883:3:10"
																		},
																		"nativeSrc": "10883:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10883:14:10"
																	},
																	{
																		"hexValue": "507269766174652053616c652063616e206f6e6c792073746172742066726f6d",
																		"kind": "string",
																		"nativeSrc": "10899:34:10",
																		"nodeType": "YulLiteral",
																		"src": "10899:34:10",
																		"type": "",
																		"value": "Private Sale can only start from"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10876:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10876:6:10"
																},
																"nativeSrc": "10876:58:10",
																"nodeType": "YulFunctionCall",
																"src": "10876:58:10"
															},
															"nativeSrc": "10876:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "10876:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10955:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10955:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10963:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10963:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10951:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10951:3:10"
																		},
																		"nativeSrc": "10951:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10951:15:10"
																	},
																	{
																		"hexValue": "204e4f4e452073746167652e",
																		"kind": "string",
																		"nativeSrc": "10968:14:10",
																		"nodeType": "YulLiteral",
																		"src": "10968:14:10",
																		"type": "",
																		"value": " NONE stage."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10944:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10944:6:10"
																},
																"nativeSrc": "10944:39:10",
																"nodeType": "YulFunctionCall",
																"src": "10944:39:10"
															},
															"nativeSrc": "10944:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "10944:39:10"
														}
													]
												},
												"name": "store_literal_in_memory_85a92b7d2f3c8949309a7dee9f4ca63adcd1660cd0a768c248f1d76c264451ae",
												"nativeSrc": "10759:231:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10857:6:10",
														"nodeType": "YulTypedName",
														"src": "10857:6:10",
														"type": ""
													}
												],
												"src": "10759:231:10"
											},
											{
												"body": {
													"nativeSrc": "11142:220:10",
													"nodeType": "YulBlock",
													"src": "11142:220:10",
													"statements": [
														{
															"nativeSrc": "11152:74:10",
															"nodeType": "YulAssignment",
															"src": "11152:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11218:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11218:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11223:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11223:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11159:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11159:58:10"
																},
																"nativeSrc": "11159:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11159:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11152:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11152:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11324:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11324:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_85a92b7d2f3c8949309a7dee9f4ca63adcd1660cd0a768c248f1d76c264451ae",
																	"nativeSrc": "11235:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11235:88:10"
																},
																"nativeSrc": "11235:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11235:93:10"
															},
															"nativeSrc": "11235:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11235:93:10"
														},
														{
															"nativeSrc": "11337:19:10",
															"nodeType": "YulAssignment",
															"src": "11337:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11348:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11348:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11353:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11353:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11344:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11344:3:10"
																},
																"nativeSrc": "11344:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11344:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11337:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11337:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_85a92b7d2f3c8949309a7dee9f4ca63adcd1660cd0a768c248f1d76c264451ae_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10996:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11130:3:10",
														"nodeType": "YulTypedName",
														"src": "11130:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11138:3:10",
														"nodeType": "YulTypedName",
														"src": "11138:3:10",
														"type": ""
													}
												],
												"src": "10996:366:10"
											},
											{
												"body": {
													"nativeSrc": "11539:248:10",
													"nodeType": "YulBlock",
													"src": "11539:248:10",
													"statements": [
														{
															"nativeSrc": "11549:26:10",
															"nodeType": "YulAssignment",
															"src": "11549:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11561:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11561:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11572:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11572:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11557:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11557:3:10"
																},
																"nativeSrc": "11557:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11557:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11549:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11549:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11596:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11596:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11607:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11607:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11592:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11592:3:10"
																		},
																		"nativeSrc": "11592:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11592:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11615:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11615:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11621:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11621:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11611:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11611:3:10"
																		},
																		"nativeSrc": "11611:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11611:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11585:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11585:6:10"
																},
																"nativeSrc": "11585:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11585:47:10"
															},
															"nativeSrc": "11585:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11585:47:10"
														},
														{
															"nativeSrc": "11641:139:10",
															"nodeType": "YulAssignment",
															"src": "11641:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11775:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11775:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_85a92b7d2f3c8949309a7dee9f4ca63adcd1660cd0a768c248f1d76c264451ae_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11649:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11649:124:10"
																},
																"nativeSrc": "11649:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11649:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11641:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11641:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_85a92b7d2f3c8949309a7dee9f4ca63adcd1660cd0a768c248f1d76c264451ae__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11368:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11519:9:10",
														"nodeType": "YulTypedName",
														"src": "11519:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11534:4:10",
														"nodeType": "YulTypedName",
														"src": "11534:4:10",
														"type": ""
													}
												],
												"src": "11368:419:10"
											},
											{
												"body": {
													"nativeSrc": "11899:127:10",
													"nodeType": "YulBlock",
													"src": "11899:127:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11921:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11921:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11929:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11929:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11917:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11917:3:10"
																		},
																		"nativeSrc": "11917:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11917:14:10"
																	},
																	{
																		"hexValue": "507269766174652053616c6520746f6b656e732073686f756c6420626520756e",
																		"kind": "string",
																		"nativeSrc": "11933:34:10",
																		"nodeType": "YulLiteral",
																		"src": "11933:34:10",
																		"type": "",
																		"value": "Private Sale tokens should be un"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11910:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11910:6:10"
																},
																"nativeSrc": "11910:58:10",
																"nodeType": "YulFunctionCall",
																"src": "11910:58:10"
															},
															"nativeSrc": "11910:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "11910:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11989:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11989:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11997:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11997:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11985:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11985:3:10"
																		},
																		"nativeSrc": "11985:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11985:15:10"
																	},
																	{
																		"hexValue": "736f6c642061742073746172742e",
																		"kind": "string",
																		"nativeSrc": "12002:16:10",
																		"nodeType": "YulLiteral",
																		"src": "12002:16:10",
																		"type": "",
																		"value": "sold at start."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11978:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11978:6:10"
																},
																"nativeSrc": "11978:41:10",
																"nodeType": "YulFunctionCall",
																"src": "11978:41:10"
															},
															"nativeSrc": "11978:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "11978:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_d8e3511bc2ef1eacf227714a4be566bdacade7e0259e47bca8127d56e48d6281",
												"nativeSrc": "11793:233:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11891:6:10",
														"nodeType": "YulTypedName",
														"src": "11891:6:10",
														"type": ""
													}
												],
												"src": "11793:233:10"
											},
											{
												"body": {
													"nativeSrc": "12178:220:10",
													"nodeType": "YulBlock",
													"src": "12178:220:10",
													"statements": [
														{
															"nativeSrc": "12188:74:10",
															"nodeType": "YulAssignment",
															"src": "12188:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12254:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12254:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12259:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12259:2:10",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12195:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12195:58:10"
																},
																"nativeSrc": "12195:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12195:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12188:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12188:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12360:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12360:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d8e3511bc2ef1eacf227714a4be566bdacade7e0259e47bca8127d56e48d6281",
																	"nativeSrc": "12271:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12271:88:10"
																},
																"nativeSrc": "12271:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12271:93:10"
															},
															"nativeSrc": "12271:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12271:93:10"
														},
														{
															"nativeSrc": "12373:19:10",
															"nodeType": "YulAssignment",
															"src": "12373:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12384:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12384:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12389:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12389:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12380:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12380:3:10"
																},
																"nativeSrc": "12380:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12380:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12373:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12373:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d8e3511bc2ef1eacf227714a4be566bdacade7e0259e47bca8127d56e48d6281_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12032:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12166:3:10",
														"nodeType": "YulTypedName",
														"src": "12166:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12174:3:10",
														"nodeType": "YulTypedName",
														"src": "12174:3:10",
														"type": ""
													}
												],
												"src": "12032:366:10"
											},
											{
												"body": {
													"nativeSrc": "12575:248:10",
													"nodeType": "YulBlock",
													"src": "12575:248:10",
													"statements": [
														{
															"nativeSrc": "12585:26:10",
															"nodeType": "YulAssignment",
															"src": "12585:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12597:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12597:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12608:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12608:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12593:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12593:3:10"
																},
																"nativeSrc": "12593:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12593:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12585:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12585:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12632:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12632:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12643:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12643:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12628:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12628:3:10"
																		},
																		"nativeSrc": "12628:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12628:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12651:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12651:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12657:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12657:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12647:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12647:3:10"
																		},
																		"nativeSrc": "12647:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12647:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12621:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12621:6:10"
																},
																"nativeSrc": "12621:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12621:47:10"
															},
															"nativeSrc": "12621:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12621:47:10"
														},
														{
															"nativeSrc": "12677:139:10",
															"nodeType": "YulAssignment",
															"src": "12677:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12811:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12811:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d8e3511bc2ef1eacf227714a4be566bdacade7e0259e47bca8127d56e48d6281_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12685:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12685:124:10"
																},
																"nativeSrc": "12685:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12685:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12677:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12677:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d8e3511bc2ef1eacf227714a4be566bdacade7e0259e47bca8127d56e48d6281__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12404:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12555:9:10",
														"nodeType": "YulTypedName",
														"src": "12555:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12570:4:10",
														"nodeType": "YulTypedName",
														"src": "12570:4:10",
														"type": ""
													}
												],
												"src": "12404:419:10"
											},
											{
												"body": {
													"nativeSrc": "12935:134:10",
													"nodeType": "YulBlock",
													"src": "12935:134:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12957:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12957:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12965:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12965:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12953:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12953:3:10"
																		},
																		"nativeSrc": "12953:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12953:14:10"
																	},
																	{
																		"hexValue": "5072652d53616c652073686f756c64206e6f7420686176652073746172746564",
																		"kind": "string",
																		"nativeSrc": "12969:34:10",
																		"nodeType": "YulLiteral",
																		"src": "12969:34:10",
																		"type": "",
																		"value": "Pre-Sale should not have started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12946:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12946:6:10"
																},
																"nativeSrc": "12946:58:10",
																"nodeType": "YulFunctionCall",
																"src": "12946:58:10"
															},
															"nativeSrc": "12946:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "12946:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13025:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13025:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13033:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13033:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13021:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13021:3:10"
																		},
																		"nativeSrc": "13021:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13021:15:10"
																	},
																	{
																		"hexValue": "206265666f726520507269766174652053616c652e",
																		"kind": "string",
																		"nativeSrc": "13038:23:10",
																		"nodeType": "YulLiteral",
																		"src": "13038:23:10",
																		"type": "",
																		"value": " before Private Sale."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13014:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13014:6:10"
																},
																"nativeSrc": "13014:48:10",
																"nodeType": "YulFunctionCall",
																"src": "13014:48:10"
															},
															"nativeSrc": "13014:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "13014:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_b6838c7afcdde6199dc4da34991bafdb53e10c5b79115748c94bef6ed3648976",
												"nativeSrc": "12829:240:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12927:6:10",
														"nodeType": "YulTypedName",
														"src": "12927:6:10",
														"type": ""
													}
												],
												"src": "12829:240:10"
											},
											{
												"body": {
													"nativeSrc": "13221:220:10",
													"nodeType": "YulBlock",
													"src": "13221:220:10",
													"statements": [
														{
															"nativeSrc": "13231:74:10",
															"nodeType": "YulAssignment",
															"src": "13231:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13297:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13297:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13302:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13302:2:10",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13238:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13238:58:10"
																},
																"nativeSrc": "13238:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13238:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13231:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13231:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13403:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13403:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b6838c7afcdde6199dc4da34991bafdb53e10c5b79115748c94bef6ed3648976",
																	"nativeSrc": "13314:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13314:88:10"
																},
																"nativeSrc": "13314:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13314:93:10"
															},
															"nativeSrc": "13314:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13314:93:10"
														},
														{
															"nativeSrc": "13416:19:10",
															"nodeType": "YulAssignment",
															"src": "13416:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13427:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13427:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13432:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13432:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13423:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13423:3:10"
																},
																"nativeSrc": "13423:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13423:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13416:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13416:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b6838c7afcdde6199dc4da34991bafdb53e10c5b79115748c94bef6ed3648976_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13075:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13209:3:10",
														"nodeType": "YulTypedName",
														"src": "13209:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13217:3:10",
														"nodeType": "YulTypedName",
														"src": "13217:3:10",
														"type": ""
													}
												],
												"src": "13075:366:10"
											},
											{
												"body": {
													"nativeSrc": "13618:248:10",
													"nodeType": "YulBlock",
													"src": "13618:248:10",
													"statements": [
														{
															"nativeSrc": "13628:26:10",
															"nodeType": "YulAssignment",
															"src": "13628:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13640:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13640:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13651:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13651:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13636:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13636:3:10"
																},
																"nativeSrc": "13636:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13636:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13628:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13628:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13675:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13675:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13686:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13686:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13671:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13671:3:10"
																		},
																		"nativeSrc": "13671:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13671:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13694:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13694:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13700:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13700:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13690:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13690:3:10"
																		},
																		"nativeSrc": "13690:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13690:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13664:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13664:6:10"
																},
																"nativeSrc": "13664:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13664:47:10"
															},
															"nativeSrc": "13664:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13664:47:10"
														},
														{
															"nativeSrc": "13720:139:10",
															"nodeType": "YulAssignment",
															"src": "13720:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13854:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13854:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b6838c7afcdde6199dc4da34991bafdb53e10c5b79115748c94bef6ed3648976_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13728:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13728:124:10"
																},
																"nativeSrc": "13728:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13728:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13720:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13720:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b6838c7afcdde6199dc4da34991bafdb53e10c5b79115748c94bef6ed3648976__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13447:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13598:9:10",
														"nodeType": "YulTypedName",
														"src": "13598:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13613:4:10",
														"nodeType": "YulTypedName",
														"src": "13613:4:10",
														"type": ""
													}
												],
												"src": "13447:419:10"
											},
											{
												"body": {
													"nativeSrc": "13978:62:10",
													"nodeType": "YulBlock",
													"src": "13978:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14000:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14000:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14008:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14008:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13996:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13996:3:10"
																		},
																		"nativeSrc": "13996:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13996:14:10"
																	},
																	{
																		"hexValue": "4e6f2073616c65206973206163746976652e",
																		"kind": "string",
																		"nativeSrc": "14012:20:10",
																		"nodeType": "YulLiteral",
																		"src": "14012:20:10",
																		"type": "",
																		"value": "No sale is active."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13989:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13989:6:10"
																},
																"nativeSrc": "13989:44:10",
																"nodeType": "YulFunctionCall",
																"src": "13989:44:10"
															},
															"nativeSrc": "13989:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "13989:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f",
												"nativeSrc": "13872:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13970:6:10",
														"nodeType": "YulTypedName",
														"src": "13970:6:10",
														"type": ""
													}
												],
												"src": "13872:168:10"
											},
											{
												"body": {
													"nativeSrc": "14192:220:10",
													"nodeType": "YulBlock",
													"src": "14192:220:10",
													"statements": [
														{
															"nativeSrc": "14202:74:10",
															"nodeType": "YulAssignment",
															"src": "14202:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14268:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14268:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14273:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14273:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14209:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14209:58:10"
																},
																"nativeSrc": "14209:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14209:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14202:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14202:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14374:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14374:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f",
																	"nativeSrc": "14285:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14285:88:10"
																},
																"nativeSrc": "14285:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14285:93:10"
															},
															"nativeSrc": "14285:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14285:93:10"
														},
														{
															"nativeSrc": "14387:19:10",
															"nodeType": "YulAssignment",
															"src": "14387:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14398:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14398:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14403:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14403:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14394:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14394:3:10"
																},
																"nativeSrc": "14394:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14394:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14387:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14387:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14046:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14180:3:10",
														"nodeType": "YulTypedName",
														"src": "14180:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14188:3:10",
														"nodeType": "YulTypedName",
														"src": "14188:3:10",
														"type": ""
													}
												],
												"src": "14046:366:10"
											},
											{
												"body": {
													"nativeSrc": "14589:248:10",
													"nodeType": "YulBlock",
													"src": "14589:248:10",
													"statements": [
														{
															"nativeSrc": "14599:26:10",
															"nodeType": "YulAssignment",
															"src": "14599:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14611:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14611:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14622:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14622:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14607:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14607:3:10"
																},
																"nativeSrc": "14607:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14607:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14599:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14599:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14646:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14646:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14657:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14657:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14642:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14642:3:10"
																		},
																		"nativeSrc": "14642:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14642:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14665:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14665:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14671:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14671:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14661:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14661:3:10"
																		},
																		"nativeSrc": "14661:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14661:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14635:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14635:6:10"
																},
																"nativeSrc": "14635:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14635:47:10"
															},
															"nativeSrc": "14635:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14635:47:10"
														},
														{
															"nativeSrc": "14691:139:10",
															"nodeType": "YulAssignment",
															"src": "14691:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14825:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14825:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14699:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14699:124:10"
																},
																"nativeSrc": "14699:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14699:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14691:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14691:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14418:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14569:9:10",
														"nodeType": "YulTypedName",
														"src": "14569:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14584:4:10",
														"nodeType": "YulTypedName",
														"src": "14584:4:10",
														"type": ""
													}
												],
												"src": "14418:419:10"
											},
											{
												"body": {
													"nativeSrc": "14949:69:10",
													"nodeType": "YulBlock",
													"src": "14949:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14971:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14971:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14979:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14979:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14967:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14967:3:10"
																		},
																		"nativeSrc": "14967:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14967:14:10"
																	},
																	{
																		"hexValue": "496e76616c69642070726963652066726f6d206f7261636c65",
																		"kind": "string",
																		"nativeSrc": "14983:27:10",
																		"nodeType": "YulLiteral",
																		"src": "14983:27:10",
																		"type": "",
																		"value": "Invalid price from oracle"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14960:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14960:6:10"
																},
																"nativeSrc": "14960:51:10",
																"nodeType": "YulFunctionCall",
																"src": "14960:51:10"
															},
															"nativeSrc": "14960:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "14960:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620",
												"nativeSrc": "14843:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14941:6:10",
														"nodeType": "YulTypedName",
														"src": "14941:6:10",
														"type": ""
													}
												],
												"src": "14843:175:10"
											},
											{
												"body": {
													"nativeSrc": "15170:220:10",
													"nodeType": "YulBlock",
													"src": "15170:220:10",
													"statements": [
														{
															"nativeSrc": "15180:74:10",
															"nodeType": "YulAssignment",
															"src": "15180:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15246:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15246:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15251:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15251:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15187:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15187:58:10"
																},
																"nativeSrc": "15187:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15187:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15180:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15180:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15352:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15352:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620",
																	"nativeSrc": "15263:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15263:88:10"
																},
																"nativeSrc": "15263:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15263:93:10"
															},
															"nativeSrc": "15263:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15263:93:10"
														},
														{
															"nativeSrc": "15365:19:10",
															"nodeType": "YulAssignment",
															"src": "15365:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15376:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15376:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15381:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15381:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15372:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15372:3:10"
																},
																"nativeSrc": "15372:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15372:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15365:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15365:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15024:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15158:3:10",
														"nodeType": "YulTypedName",
														"src": "15158:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15166:3:10",
														"nodeType": "YulTypedName",
														"src": "15166:3:10",
														"type": ""
													}
												],
												"src": "15024:366:10"
											},
											{
												"body": {
													"nativeSrc": "15567:248:10",
													"nodeType": "YulBlock",
													"src": "15567:248:10",
													"statements": [
														{
															"nativeSrc": "15577:26:10",
															"nodeType": "YulAssignment",
															"src": "15577:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15589:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15589:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15600:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15600:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15585:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15585:3:10"
																},
																"nativeSrc": "15585:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15585:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15577:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15577:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15624:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15624:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15635:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15635:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15620:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15620:3:10"
																		},
																		"nativeSrc": "15620:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15620:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15643:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15643:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15649:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15649:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15639:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15639:3:10"
																		},
																		"nativeSrc": "15639:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15639:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15613:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15613:6:10"
																},
																"nativeSrc": "15613:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15613:47:10"
															},
															"nativeSrc": "15613:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15613:47:10"
														},
														{
															"nativeSrc": "15669:139:10",
															"nodeType": "YulAssignment",
															"src": "15669:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15803:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15803:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15677:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15677:124:10"
																},
																"nativeSrc": "15677:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15677:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15669:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15669:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15396:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15547:9:10",
														"nodeType": "YulTypedName",
														"src": "15547:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15562:4:10",
														"nodeType": "YulTypedName",
														"src": "15562:4:10",
														"type": ""
													}
												],
												"src": "15396:419:10"
											},
											{
												"body": {
													"nativeSrc": "15927:66:10",
													"nodeType": "YulBlock",
													"src": "15927:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15949:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15949:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15957:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15957:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15945:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15945:3:10"
																		},
																		"nativeSrc": "15945:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15945:14:10"
																	},
																	{
																		"hexValue": "507269766174652053616c6520736f6c64206f75742e",
																		"kind": "string",
																		"nativeSrc": "15961:24:10",
																		"nodeType": "YulLiteral",
																		"src": "15961:24:10",
																		"type": "",
																		"value": "Private Sale sold out."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15938:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15938:6:10"
																},
																"nativeSrc": "15938:48:10",
																"nodeType": "YulFunctionCall",
																"src": "15938:48:10"
															},
															"nativeSrc": "15938:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "15938:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb",
												"nativeSrc": "15821:172:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15919:6:10",
														"nodeType": "YulTypedName",
														"src": "15919:6:10",
														"type": ""
													}
												],
												"src": "15821:172:10"
											},
											{
												"body": {
													"nativeSrc": "16145:220:10",
													"nodeType": "YulBlock",
													"src": "16145:220:10",
													"statements": [
														{
															"nativeSrc": "16155:74:10",
															"nodeType": "YulAssignment",
															"src": "16155:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16221:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16221:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16226:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16226:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16162:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16162:58:10"
																},
																"nativeSrc": "16162:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16162:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16155:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16155:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16327:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16327:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb",
																	"nativeSrc": "16238:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16238:88:10"
																},
																"nativeSrc": "16238:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16238:93:10"
															},
															"nativeSrc": "16238:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16238:93:10"
														},
														{
															"nativeSrc": "16340:19:10",
															"nodeType": "YulAssignment",
															"src": "16340:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16351:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16351:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16356:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16356:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16347:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16347:3:10"
																},
																"nativeSrc": "16347:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16347:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16340:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16340:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15999:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16133:3:10",
														"nodeType": "YulTypedName",
														"src": "16133:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16141:3:10",
														"nodeType": "YulTypedName",
														"src": "16141:3:10",
														"type": ""
													}
												],
												"src": "15999:366:10"
											},
											{
												"body": {
													"nativeSrc": "16542:248:10",
													"nodeType": "YulBlock",
													"src": "16542:248:10",
													"statements": [
														{
															"nativeSrc": "16552:26:10",
															"nodeType": "YulAssignment",
															"src": "16552:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16564:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16564:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16575:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16575:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16560:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16560:3:10"
																},
																"nativeSrc": "16560:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16560:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16552:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16552:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16599:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16599:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16610:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16610:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16595:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16595:3:10"
																		},
																		"nativeSrc": "16595:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16595:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16618:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16618:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16624:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16624:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16614:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16614:3:10"
																		},
																		"nativeSrc": "16614:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16614:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16588:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16588:6:10"
																},
																"nativeSrc": "16588:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16588:47:10"
															},
															"nativeSrc": "16588:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16588:47:10"
														},
														{
															"nativeSrc": "16644:139:10",
															"nodeType": "YulAssignment",
															"src": "16644:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16778:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16778:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16652:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16652:124:10"
																},
																"nativeSrc": "16652:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16652:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16644:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16644:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16371:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16522:9:10",
														"nodeType": "YulTypedName",
														"src": "16522:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16537:4:10",
														"nodeType": "YulTypedName",
														"src": "16537:4:10",
														"type": ""
													}
												],
												"src": "16371:419:10"
											},
											{
												"body": {
													"nativeSrc": "16902:114:10",
													"nodeType": "YulBlock",
													"src": "16902:114:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16924:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16924:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16932:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16932:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16920:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16920:3:10"
																		},
																		"nativeSrc": "16920:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16920:14:10"
																	},
																	{
																		"hexValue": "4578636565647320507269766174652053616c6520746f6b656e206c696d6974",
																		"kind": "string",
																		"nativeSrc": "16936:34:10",
																		"nodeType": "YulLiteral",
																		"src": "16936:34:10",
																		"type": "",
																		"value": "Exceeds Private Sale token limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16913:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16913:6:10"
																},
																"nativeSrc": "16913:58:10",
																"nodeType": "YulFunctionCall",
																"src": "16913:58:10"
															},
															"nativeSrc": "16913:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "16913:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16992:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16992:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17000:2:10",
																				"nodeType": "YulLiteral",
																				"src": "17000:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16988:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16988:3:10"
																		},
																		"nativeSrc": "16988:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16988:15:10"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "17005:3:10",
																		"nodeType": "YulLiteral",
																		"src": "17005:3:10",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16981:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16981:6:10"
																},
																"nativeSrc": "16981:28:10",
																"nodeType": "YulFunctionCall",
																"src": "16981:28:10"
															},
															"nativeSrc": "16981:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "16981:28:10"
														}
													]
												},
												"name": "store_literal_in_memory_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e",
												"nativeSrc": "16796:220:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16894:6:10",
														"nodeType": "YulTypedName",
														"src": "16894:6:10",
														"type": ""
													}
												],
												"src": "16796:220:10"
											},
											{
												"body": {
													"nativeSrc": "17168:220:10",
													"nodeType": "YulBlock",
													"src": "17168:220:10",
													"statements": [
														{
															"nativeSrc": "17178:74:10",
															"nodeType": "YulAssignment",
															"src": "17178:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17244:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17244:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17249:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17249:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17185:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17185:58:10"
																},
																"nativeSrc": "17185:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17185:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17178:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17178:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17350:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17350:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e",
																	"nativeSrc": "17261:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17261:88:10"
																},
																"nativeSrc": "17261:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17261:93:10"
															},
															"nativeSrc": "17261:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17261:93:10"
														},
														{
															"nativeSrc": "17363:19:10",
															"nodeType": "YulAssignment",
															"src": "17363:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17374:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17374:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17379:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17379:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17370:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17370:3:10"
																},
																"nativeSrc": "17370:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17370:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17363:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17363:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17022:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17156:3:10",
														"nodeType": "YulTypedName",
														"src": "17156:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17164:3:10",
														"nodeType": "YulTypedName",
														"src": "17164:3:10",
														"type": ""
													}
												],
												"src": "17022:366:10"
											},
											{
												"body": {
													"nativeSrc": "17565:248:10",
													"nodeType": "YulBlock",
													"src": "17565:248:10",
													"statements": [
														{
															"nativeSrc": "17575:26:10",
															"nodeType": "YulAssignment",
															"src": "17575:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17587:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17587:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17598:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17598:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17583:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17583:3:10"
																},
																"nativeSrc": "17583:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17583:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17575:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17575:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17622:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17622:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17633:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17633:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17618:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17618:3:10"
																		},
																		"nativeSrc": "17618:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17618:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17641:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17641:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17647:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17647:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17637:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17637:3:10"
																		},
																		"nativeSrc": "17637:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17637:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17611:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17611:6:10"
																},
																"nativeSrc": "17611:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17611:47:10"
															},
															"nativeSrc": "17611:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17611:47:10"
														},
														{
															"nativeSrc": "17667:139:10",
															"nodeType": "YulAssignment",
															"src": "17667:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17801:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17801:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17675:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17675:124:10"
																},
																"nativeSrc": "17675:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17675:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17667:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17667:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17394:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17545:9:10",
														"nodeType": "YulTypedName",
														"src": "17545:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17560:4:10",
														"nodeType": "YulTypedName",
														"src": "17560:4:10",
														"type": ""
													}
												],
												"src": "17394:419:10"
											},
											{
												"body": {
													"nativeSrc": "17925:62:10",
													"nodeType": "YulBlock",
													"src": "17925:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17947:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17947:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17955:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17955:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17943:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17943:3:10"
																		},
																		"nativeSrc": "17943:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17943:14:10"
																	},
																	{
																		"hexValue": "5072652d53616c6520736f6c64206f75742e",
																		"kind": "string",
																		"nativeSrc": "17959:20:10",
																		"nodeType": "YulLiteral",
																		"src": "17959:20:10",
																		"type": "",
																		"value": "Pre-Sale sold out."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17936:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17936:6:10"
																},
																"nativeSrc": "17936:44:10",
																"nodeType": "YulFunctionCall",
																"src": "17936:44:10"
															},
															"nativeSrc": "17936:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "17936:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513",
												"nativeSrc": "17819:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17917:6:10",
														"nodeType": "YulTypedName",
														"src": "17917:6:10",
														"type": ""
													}
												],
												"src": "17819:168:10"
											},
											{
												"body": {
													"nativeSrc": "18139:220:10",
													"nodeType": "YulBlock",
													"src": "18139:220:10",
													"statements": [
														{
															"nativeSrc": "18149:74:10",
															"nodeType": "YulAssignment",
															"src": "18149:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18215:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18215:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18220:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18220:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18156:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18156:58:10"
																},
																"nativeSrc": "18156:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18156:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18149:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18149:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18321:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18321:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513",
																	"nativeSrc": "18232:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18232:88:10"
																},
																"nativeSrc": "18232:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18232:93:10"
															},
															"nativeSrc": "18232:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18232:93:10"
														},
														{
															"nativeSrc": "18334:19:10",
															"nodeType": "YulAssignment",
															"src": "18334:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18345:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18345:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18350:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18350:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18341:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18341:3:10"
																},
																"nativeSrc": "18341:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18341:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18334:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18334:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17993:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18127:3:10",
														"nodeType": "YulTypedName",
														"src": "18127:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18135:3:10",
														"nodeType": "YulTypedName",
														"src": "18135:3:10",
														"type": ""
													}
												],
												"src": "17993:366:10"
											},
											{
												"body": {
													"nativeSrc": "18536:248:10",
													"nodeType": "YulBlock",
													"src": "18536:248:10",
													"statements": [
														{
															"nativeSrc": "18546:26:10",
															"nodeType": "YulAssignment",
															"src": "18546:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18558:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18558:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18569:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18569:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18554:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18554:3:10"
																},
																"nativeSrc": "18554:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18554:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18546:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18546:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18593:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18593:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18604:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18604:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18589:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18589:3:10"
																		},
																		"nativeSrc": "18589:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18589:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18612:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18612:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18618:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18618:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18608:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18608:3:10"
																		},
																		"nativeSrc": "18608:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18608:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18582:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18582:6:10"
																},
																"nativeSrc": "18582:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18582:47:10"
															},
															"nativeSrc": "18582:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18582:47:10"
														},
														{
															"nativeSrc": "18638:139:10",
															"nodeType": "YulAssignment",
															"src": "18638:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18772:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18772:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18646:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18646:124:10"
																},
																"nativeSrc": "18646:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18646:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18638:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18638:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18365:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18516:9:10",
														"nodeType": "YulTypedName",
														"src": "18516:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18531:4:10",
														"nodeType": "YulTypedName",
														"src": "18531:4:10",
														"type": ""
													}
												],
												"src": "18365:419:10"
											},
											{
												"body": {
													"nativeSrc": "18896:74:10",
													"nodeType": "YulBlock",
													"src": "18896:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18918:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18918:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18926:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18926:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18914:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18914:3:10"
																		},
																		"nativeSrc": "18914:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18914:14:10"
																	},
																	{
																		"hexValue": "507572636861736520616d6f756e74206f7574206f66206c696d6974732e",
																		"kind": "string",
																		"nativeSrc": "18930:32:10",
																		"nodeType": "YulLiteral",
																		"src": "18930:32:10",
																		"type": "",
																		"value": "Purchase amount out of limits."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18907:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18907:6:10"
																},
																"nativeSrc": "18907:56:10",
																"nodeType": "YulFunctionCall",
																"src": "18907:56:10"
															},
															"nativeSrc": "18907:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "18907:56:10"
														}
													]
												},
												"name": "store_literal_in_memory_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec",
												"nativeSrc": "18790:180:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18888:6:10",
														"nodeType": "YulTypedName",
														"src": "18888:6:10",
														"type": ""
													}
												],
												"src": "18790:180:10"
											},
											{
												"body": {
													"nativeSrc": "19122:220:10",
													"nodeType": "YulBlock",
													"src": "19122:220:10",
													"statements": [
														{
															"nativeSrc": "19132:74:10",
															"nodeType": "YulAssignment",
															"src": "19132:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19198:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19198:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19203:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19203:2:10",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19139:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19139:58:10"
																},
																"nativeSrc": "19139:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19139:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19132:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19132:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19304:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19304:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec",
																	"nativeSrc": "19215:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19215:88:10"
																},
																"nativeSrc": "19215:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19215:93:10"
															},
															"nativeSrc": "19215:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19215:93:10"
														},
														{
															"nativeSrc": "19317:19:10",
															"nodeType": "YulAssignment",
															"src": "19317:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19328:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19328:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19333:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19333:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19324:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19324:3:10"
																},
																"nativeSrc": "19324:12:10",
																"nodeType": "YulFunctionCall",
																"src": "19324:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19317:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19317:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18976:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19110:3:10",
														"nodeType": "YulTypedName",
														"src": "19110:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19118:3:10",
														"nodeType": "YulTypedName",
														"src": "19118:3:10",
														"type": ""
													}
												],
												"src": "18976:366:10"
											},
											{
												"body": {
													"nativeSrc": "19519:248:10",
													"nodeType": "YulBlock",
													"src": "19519:248:10",
													"statements": [
														{
															"nativeSrc": "19529:26:10",
															"nodeType": "YulAssignment",
															"src": "19529:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19541:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19541:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19552:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19552:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19537:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19537:3:10"
																},
																"nativeSrc": "19537:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19537:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19529:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19529:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19576:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19576:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19587:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19587:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19572:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19572:3:10"
																		},
																		"nativeSrc": "19572:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19572:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19595:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19595:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19601:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19601:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19591:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19591:3:10"
																		},
																		"nativeSrc": "19591:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19591:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19565:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19565:6:10"
																},
																"nativeSrc": "19565:47:10",
																"nodeType": "YulFunctionCall",
																"src": "19565:47:10"
															},
															"nativeSrc": "19565:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "19565:47:10"
														},
														{
															"nativeSrc": "19621:139:10",
															"nodeType": "YulAssignment",
															"src": "19621:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19755:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19755:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19629:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "19629:124:10"
																},
																"nativeSrc": "19629:131:10",
																"nodeType": "YulFunctionCall",
																"src": "19629:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19621:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19621:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19348:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19499:9:10",
														"nodeType": "YulTypedName",
														"src": "19499:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19514:4:10",
														"nodeType": "YulTypedName",
														"src": "19514:4:10",
														"type": ""
													}
												],
												"src": "19348:419:10"
											},
											{
												"body": {
													"nativeSrc": "19879:73:10",
													"nodeType": "YulBlock",
													"src": "19879:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19901:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19901:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19909:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19909:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19897:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19897:3:10"
																		},
																		"nativeSrc": "19897:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19897:14:10"
																	},
																	{
																		"hexValue": "45786365656473205072652d53616c6520746f6b656e206c696d69742e",
																		"kind": "string",
																		"nativeSrc": "19913:31:10",
																		"nodeType": "YulLiteral",
																		"src": "19913:31:10",
																		"type": "",
																		"value": "Exceeds Pre-Sale token limit."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19890:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19890:6:10"
																},
																"nativeSrc": "19890:55:10",
																"nodeType": "YulFunctionCall",
																"src": "19890:55:10"
															},
															"nativeSrc": "19890:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "19890:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67",
												"nativeSrc": "19773:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19871:6:10",
														"nodeType": "YulTypedName",
														"src": "19871:6:10",
														"type": ""
													}
												],
												"src": "19773:179:10"
											},
											{
												"body": {
													"nativeSrc": "20104:220:10",
													"nodeType": "YulBlock",
													"src": "20104:220:10",
													"statements": [
														{
															"nativeSrc": "20114:74:10",
															"nodeType": "YulAssignment",
															"src": "20114:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20180:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20180:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20185:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20185:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20121:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "20121:58:10"
																},
																"nativeSrc": "20121:67:10",
																"nodeType": "YulFunctionCall",
																"src": "20121:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20114:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20114:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20286:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20286:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67",
																	"nativeSrc": "20197:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "20197:88:10"
																},
																"nativeSrc": "20197:93:10",
																"nodeType": "YulFunctionCall",
																"src": "20197:93:10"
															},
															"nativeSrc": "20197:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "20197:93:10"
														},
														{
															"nativeSrc": "20299:19:10",
															"nodeType": "YulAssignment",
															"src": "20299:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20310:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20310:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20315:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20315:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20306:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20306:3:10"
																},
																"nativeSrc": "20306:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20306:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20299:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20299:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19958:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20092:3:10",
														"nodeType": "YulTypedName",
														"src": "20092:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20100:3:10",
														"nodeType": "YulTypedName",
														"src": "20100:3:10",
														"type": ""
													}
												],
												"src": "19958:366:10"
											},
											{
												"body": {
													"nativeSrc": "20501:248:10",
													"nodeType": "YulBlock",
													"src": "20501:248:10",
													"statements": [
														{
															"nativeSrc": "20511:26:10",
															"nodeType": "YulAssignment",
															"src": "20511:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20523:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20523:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20534:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20534:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20519:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20519:3:10"
																},
																"nativeSrc": "20519:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20519:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20511:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20511:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20558:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20558:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20569:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20569:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20554:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20554:3:10"
																		},
																		"nativeSrc": "20554:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20554:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20577:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20577:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20583:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20583:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20573:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20573:3:10"
																		},
																		"nativeSrc": "20573:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20573:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20547:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20547:6:10"
																},
																"nativeSrc": "20547:47:10",
																"nodeType": "YulFunctionCall",
																"src": "20547:47:10"
															},
															"nativeSrc": "20547:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "20547:47:10"
														},
														{
															"nativeSrc": "20603:139:10",
															"nodeType": "YulAssignment",
															"src": "20603:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20737:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20737:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20611:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "20611:124:10"
																},
																"nativeSrc": "20611:131:10",
																"nodeType": "YulFunctionCall",
																"src": "20611:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20603:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20603:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20330:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20481:9:10",
														"nodeType": "YulTypedName",
														"src": "20481:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20496:4:10",
														"nodeType": "YulTypedName",
														"src": "20496:4:10",
														"type": ""
													}
												],
												"src": "20330:419:10"
											},
											{
												"body": {
													"nativeSrc": "20861:114:10",
													"nodeType": "YulBlock",
													"src": "20861:114:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20883:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "20883:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20891:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20891:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20879:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20879:3:10"
																		},
																		"nativeSrc": "20879:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20879:14:10"
																	},
																	{
																		"hexValue": "56657374696e6720706572696f64206e6f742079657420636f6d706c65746564",
																		"kind": "string",
																		"nativeSrc": "20895:34:10",
																		"nodeType": "YulLiteral",
																		"src": "20895:34:10",
																		"type": "",
																		"value": "Vesting period not yet completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20872:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20872:6:10"
																},
																"nativeSrc": "20872:58:10",
																"nodeType": "YulFunctionCall",
																"src": "20872:58:10"
															},
															"nativeSrc": "20872:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "20872:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20951:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "20951:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20959:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20959:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20947:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20947:3:10"
																		},
																		"nativeSrc": "20947:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20947:15:10"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "20964:3:10",
																		"nodeType": "YulLiteral",
																		"src": "20964:3:10",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20940:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20940:6:10"
																},
																"nativeSrc": "20940:28:10",
																"nodeType": "YulFunctionCall",
																"src": "20940:28:10"
															},
															"nativeSrc": "20940:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "20940:28:10"
														}
													]
												},
												"name": "store_literal_in_memory_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d",
												"nativeSrc": "20755:220:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20853:6:10",
														"nodeType": "YulTypedName",
														"src": "20853:6:10",
														"type": ""
													}
												],
												"src": "20755:220:10"
											},
											{
												"body": {
													"nativeSrc": "21127:220:10",
													"nodeType": "YulBlock",
													"src": "21127:220:10",
													"statements": [
														{
															"nativeSrc": "21137:74:10",
															"nodeType": "YulAssignment",
															"src": "21137:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21203:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21203:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21208:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21208:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21144:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "21144:58:10"
																},
																"nativeSrc": "21144:67:10",
																"nodeType": "YulFunctionCall",
																"src": "21144:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21137:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21137:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21309:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21309:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d",
																	"nativeSrc": "21220:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "21220:88:10"
																},
																"nativeSrc": "21220:93:10",
																"nodeType": "YulFunctionCall",
																"src": "21220:93:10"
															},
															"nativeSrc": "21220:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "21220:93:10"
														},
														{
															"nativeSrc": "21322:19:10",
															"nodeType": "YulAssignment",
															"src": "21322:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21333:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21333:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21338:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21338:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21329:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21329:3:10"
																},
																"nativeSrc": "21329:12:10",
																"nodeType": "YulFunctionCall",
																"src": "21329:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21322:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21322:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20981:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21115:3:10",
														"nodeType": "YulTypedName",
														"src": "21115:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21123:3:10",
														"nodeType": "YulTypedName",
														"src": "21123:3:10",
														"type": ""
													}
												],
												"src": "20981:366:10"
											},
											{
												"body": {
													"nativeSrc": "21524:248:10",
													"nodeType": "YulBlock",
													"src": "21524:248:10",
													"statements": [
														{
															"nativeSrc": "21534:26:10",
															"nodeType": "YulAssignment",
															"src": "21534:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21546:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21546:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21557:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21557:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21542:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21542:3:10"
																},
																"nativeSrc": "21542:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21542:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21534:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21534:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21581:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21581:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21592:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21592:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21577:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21577:3:10"
																		},
																		"nativeSrc": "21577:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21577:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21600:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "21600:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21606:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21606:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21596:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21596:3:10"
																		},
																		"nativeSrc": "21596:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21596:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21570:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21570:6:10"
																},
																"nativeSrc": "21570:47:10",
																"nodeType": "YulFunctionCall",
																"src": "21570:47:10"
															},
															"nativeSrc": "21570:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "21570:47:10"
														},
														{
															"nativeSrc": "21626:139:10",
															"nodeType": "YulAssignment",
															"src": "21626:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21760:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21760:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21634:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "21634:124:10"
																},
																"nativeSrc": "21634:131:10",
																"nodeType": "YulFunctionCall",
																"src": "21634:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21626:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21626:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21353:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21504:9:10",
														"nodeType": "YulTypedName",
														"src": "21504:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21519:4:10",
														"nodeType": "YulTypedName",
														"src": "21519:4:10",
														"type": ""
													}
												],
												"src": "21353:419:10"
											},
											{
												"body": {
													"nativeSrc": "21884:71:10",
													"nodeType": "YulBlock",
													"src": "21884:71:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21906:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "21906:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21914:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21914:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21902:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21902:3:10"
																		},
																		"nativeSrc": "21902:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21902:14:10"
																	},
																	{
																		"hexValue": "4e6f2076657374656420746f6b656e7320746f2072656c65617365",
																		"kind": "string",
																		"nativeSrc": "21918:29:10",
																		"nodeType": "YulLiteral",
																		"src": "21918:29:10",
																		"type": "",
																		"value": "No vested tokens to release"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21895:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21895:6:10"
																},
																"nativeSrc": "21895:53:10",
																"nodeType": "YulFunctionCall",
																"src": "21895:53:10"
															},
															"nativeSrc": "21895:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "21895:53:10"
														}
													]
												},
												"name": "store_literal_in_memory_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b",
												"nativeSrc": "21778:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21876:6:10",
														"nodeType": "YulTypedName",
														"src": "21876:6:10",
														"type": ""
													}
												],
												"src": "21778:177:10"
											},
											{
												"body": {
													"nativeSrc": "22107:220:10",
													"nodeType": "YulBlock",
													"src": "22107:220:10",
													"statements": [
														{
															"nativeSrc": "22117:74:10",
															"nodeType": "YulAssignment",
															"src": "22117:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22183:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22183:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22188:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22188:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22124:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "22124:58:10"
																},
																"nativeSrc": "22124:67:10",
																"nodeType": "YulFunctionCall",
																"src": "22124:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22117:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22117:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22289:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22289:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b",
																	"nativeSrc": "22200:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "22200:88:10"
																},
																"nativeSrc": "22200:93:10",
																"nodeType": "YulFunctionCall",
																"src": "22200:93:10"
															},
															"nativeSrc": "22200:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "22200:93:10"
														},
														{
															"nativeSrc": "22302:19:10",
															"nodeType": "YulAssignment",
															"src": "22302:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22313:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22313:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22318:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22318:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22309:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22309:3:10"
																},
																"nativeSrc": "22309:12:10",
																"nodeType": "YulFunctionCall",
																"src": "22309:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22302:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22302:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21961:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22095:3:10",
														"nodeType": "YulTypedName",
														"src": "22095:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22103:3:10",
														"nodeType": "YulTypedName",
														"src": "22103:3:10",
														"type": ""
													}
												],
												"src": "21961:366:10"
											},
											{
												"body": {
													"nativeSrc": "22504:248:10",
													"nodeType": "YulBlock",
													"src": "22504:248:10",
													"statements": [
														{
															"nativeSrc": "22514:26:10",
															"nodeType": "YulAssignment",
															"src": "22514:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22526:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "22526:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22537:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22537:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22522:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22522:3:10"
																},
																"nativeSrc": "22522:18:10",
																"nodeType": "YulFunctionCall",
																"src": "22522:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22514:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22514:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22561:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22561:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22572:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22572:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22557:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22557:3:10"
																		},
																		"nativeSrc": "22557:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22557:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22580:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "22580:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22586:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22586:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22576:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22576:3:10"
																		},
																		"nativeSrc": "22576:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22576:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22550:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22550:6:10"
																},
																"nativeSrc": "22550:47:10",
																"nodeType": "YulFunctionCall",
																"src": "22550:47:10"
															},
															"nativeSrc": "22550:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "22550:47:10"
														},
														{
															"nativeSrc": "22606:139:10",
															"nodeType": "YulAssignment",
															"src": "22606:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22740:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "22740:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22614:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "22614:124:10"
																},
																"nativeSrc": "22614:131:10",
																"nodeType": "YulFunctionCall",
																"src": "22614:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22606:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22606:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22333:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22484:9:10",
														"nodeType": "YulTypedName",
														"src": "22484:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22499:4:10",
														"nodeType": "YulTypedName",
														"src": "22499:4:10",
														"type": ""
													}
												],
												"src": "22333:419:10"
											},
											{
												"body": {
													"nativeSrc": "22864:124:10",
													"nodeType": "YulBlock",
													"src": "22864:124:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22886:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "22886:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22894:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22894:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22882:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22882:3:10"
																		},
																		"nativeSrc": "22882:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22882:14:10"
																	},
																	{
																		"hexValue": "5072652d53616c652063616e206f6e6c79207374617274206166746572205072",
																		"kind": "string",
																		"nativeSrc": "22898:34:10",
																		"nodeType": "YulLiteral",
																		"src": "22898:34:10",
																		"type": "",
																		"value": "Pre-Sale can only start after Pr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22875:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22875:6:10"
																},
																"nativeSrc": "22875:58:10",
																"nodeType": "YulFunctionCall",
																"src": "22875:58:10"
															},
															"nativeSrc": "22875:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "22875:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22954:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "22954:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22962:2:10",
																				"nodeType": "YulLiteral",
																				"src": "22962:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22950:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22950:3:10"
																		},
																		"nativeSrc": "22950:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22950:15:10"
																	},
																	{
																		"hexValue": "69766174652053616c652e",
																		"kind": "string",
																		"nativeSrc": "22967:13:10",
																		"nodeType": "YulLiteral",
																		"src": "22967:13:10",
																		"type": "",
																		"value": "ivate Sale."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22943:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22943:6:10"
																},
																"nativeSrc": "22943:38:10",
																"nodeType": "YulFunctionCall",
																"src": "22943:38:10"
															},
															"nativeSrc": "22943:38:10",
															"nodeType": "YulExpressionStatement",
															"src": "22943:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_05043e7e6a7e43f546dc3edaeb19e4aba3d9787fc557c8eb5421e8352d209d3b",
												"nativeSrc": "22758:230:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22856:6:10",
														"nodeType": "YulTypedName",
														"src": "22856:6:10",
														"type": ""
													}
												],
												"src": "22758:230:10"
											},
											{
												"body": {
													"nativeSrc": "23140:220:10",
													"nodeType": "YulBlock",
													"src": "23140:220:10",
													"statements": [
														{
															"nativeSrc": "23150:74:10",
															"nodeType": "YulAssignment",
															"src": "23150:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23216:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23216:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23221:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23221:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23157:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "23157:58:10"
																},
																"nativeSrc": "23157:67:10",
																"nodeType": "YulFunctionCall",
																"src": "23157:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23150:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23150:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23322:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23322:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_05043e7e6a7e43f546dc3edaeb19e4aba3d9787fc557c8eb5421e8352d209d3b",
																	"nativeSrc": "23233:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "23233:88:10"
																},
																"nativeSrc": "23233:93:10",
																"nodeType": "YulFunctionCall",
																"src": "23233:93:10"
															},
															"nativeSrc": "23233:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "23233:93:10"
														},
														{
															"nativeSrc": "23335:19:10",
															"nodeType": "YulAssignment",
															"src": "23335:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23346:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23346:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23351:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23351:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23342:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23342:3:10"
																},
																"nativeSrc": "23342:12:10",
																"nodeType": "YulFunctionCall",
																"src": "23342:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23335:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23335:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_05043e7e6a7e43f546dc3edaeb19e4aba3d9787fc557c8eb5421e8352d209d3b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22994:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23128:3:10",
														"nodeType": "YulTypedName",
														"src": "23128:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23136:3:10",
														"nodeType": "YulTypedName",
														"src": "23136:3:10",
														"type": ""
													}
												],
												"src": "22994:366:10"
											},
											{
												"body": {
													"nativeSrc": "23537:248:10",
													"nodeType": "YulBlock",
													"src": "23537:248:10",
													"statements": [
														{
															"nativeSrc": "23547:26:10",
															"nodeType": "YulAssignment",
															"src": "23547:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23559:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "23559:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23570:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23570:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23555:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23555:3:10"
																},
																"nativeSrc": "23555:18:10",
																"nodeType": "YulFunctionCall",
																"src": "23555:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23547:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23547:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23594:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23594:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23605:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23605:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23590:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23590:3:10"
																		},
																		"nativeSrc": "23590:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23590:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23613:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "23613:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23619:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23619:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23609:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23609:3:10"
																		},
																		"nativeSrc": "23609:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23609:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23583:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23583:6:10"
																},
																"nativeSrc": "23583:47:10",
																"nodeType": "YulFunctionCall",
																"src": "23583:47:10"
															},
															"nativeSrc": "23583:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "23583:47:10"
														},
														{
															"nativeSrc": "23639:139:10",
															"nodeType": "YulAssignment",
															"src": "23639:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23773:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "23773:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_05043e7e6a7e43f546dc3edaeb19e4aba3d9787fc557c8eb5421e8352d209d3b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23647:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "23647:124:10"
																},
																"nativeSrc": "23647:131:10",
																"nodeType": "YulFunctionCall",
																"src": "23647:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23639:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23639:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_05043e7e6a7e43f546dc3edaeb19e4aba3d9787fc557c8eb5421e8352d209d3b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23366:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23517:9:10",
														"nodeType": "YulTypedName",
														"src": "23517:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23532:4:10",
														"nodeType": "YulTypedName",
														"src": "23532:4:10",
														"type": ""
													}
												],
												"src": "23366:419:10"
											},
											{
												"body": {
													"nativeSrc": "23897:137:10",
													"nodeType": "YulBlock",
													"src": "23897:137:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23919:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "23919:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23927:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23927:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23915:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23915:3:10"
																		},
																		"nativeSrc": "23915:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23915:14:10"
																	},
																	{
																		"hexValue": "507269766174652053616c65206d75737420626520636f6d706c657465642062",
																		"kind": "string",
																		"nativeSrc": "23931:34:10",
																		"nodeType": "YulLiteral",
																		"src": "23931:34:10",
																		"type": "",
																		"value": "Private Sale must be completed b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23908:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23908:6:10"
																},
																"nativeSrc": "23908:58:10",
																"nodeType": "YulFunctionCall",
																"src": "23908:58:10"
															},
															"nativeSrc": "23908:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "23908:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23987:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "23987:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23995:2:10",
																				"nodeType": "YulLiteral",
																				"src": "23995:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23983:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23983:3:10"
																		},
																		"nativeSrc": "23983:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23983:15:10"
																	},
																	{
																		"hexValue": "65666f7265207374617274696e67205072652d53616c652e",
																		"kind": "string",
																		"nativeSrc": "24000:26:10",
																		"nodeType": "YulLiteral",
																		"src": "24000:26:10",
																		"type": "",
																		"value": "efore starting Pre-Sale."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23976:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23976:6:10"
																},
																"nativeSrc": "23976:51:10",
																"nodeType": "YulFunctionCall",
																"src": "23976:51:10"
															},
															"nativeSrc": "23976:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "23976:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_2442b511367f0b2d1fcb1c2739922b9057f05346fc1b0da072e9b62ecd0f2126",
												"nativeSrc": "23791:243:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23889:6:10",
														"nodeType": "YulTypedName",
														"src": "23889:6:10",
														"type": ""
													}
												],
												"src": "23791:243:10"
											},
											{
												"body": {
													"nativeSrc": "24186:220:10",
													"nodeType": "YulBlock",
													"src": "24186:220:10",
													"statements": [
														{
															"nativeSrc": "24196:74:10",
															"nodeType": "YulAssignment",
															"src": "24196:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24262:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24262:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24267:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24267:2:10",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24203:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "24203:58:10"
																},
																"nativeSrc": "24203:67:10",
																"nodeType": "YulFunctionCall",
																"src": "24203:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24196:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24196:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24368:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24368:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2442b511367f0b2d1fcb1c2739922b9057f05346fc1b0da072e9b62ecd0f2126",
																	"nativeSrc": "24279:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "24279:88:10"
																},
																"nativeSrc": "24279:93:10",
																"nodeType": "YulFunctionCall",
																"src": "24279:93:10"
															},
															"nativeSrc": "24279:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "24279:93:10"
														},
														{
															"nativeSrc": "24381:19:10",
															"nodeType": "YulAssignment",
															"src": "24381:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24392:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24392:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24397:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24397:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24388:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24388:3:10"
																},
																"nativeSrc": "24388:12:10",
																"nodeType": "YulFunctionCall",
																"src": "24388:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24381:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24381:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2442b511367f0b2d1fcb1c2739922b9057f05346fc1b0da072e9b62ecd0f2126_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24040:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24174:3:10",
														"nodeType": "YulTypedName",
														"src": "24174:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24182:3:10",
														"nodeType": "YulTypedName",
														"src": "24182:3:10",
														"type": ""
													}
												],
												"src": "24040:366:10"
											},
											{
												"body": {
													"nativeSrc": "24583:248:10",
													"nodeType": "YulBlock",
													"src": "24583:248:10",
													"statements": [
														{
															"nativeSrc": "24593:26:10",
															"nodeType": "YulAssignment",
															"src": "24593:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24605:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "24605:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24616:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24616:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24601:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24601:3:10"
																},
																"nativeSrc": "24601:18:10",
																"nodeType": "YulFunctionCall",
																"src": "24601:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24593:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24593:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24640:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24640:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24651:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24651:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24636:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24636:3:10"
																		},
																		"nativeSrc": "24636:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24636:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24659:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "24659:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24665:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24665:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24655:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24655:3:10"
																		},
																		"nativeSrc": "24655:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24655:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24629:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24629:6:10"
																},
																"nativeSrc": "24629:47:10",
																"nodeType": "YulFunctionCall",
																"src": "24629:47:10"
															},
															"nativeSrc": "24629:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "24629:47:10"
														},
														{
															"nativeSrc": "24685:139:10",
															"nodeType": "YulAssignment",
															"src": "24685:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24819:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "24819:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2442b511367f0b2d1fcb1c2739922b9057f05346fc1b0da072e9b62ecd0f2126_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24693:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "24693:124:10"
																},
																"nativeSrc": "24693:131:10",
																"nodeType": "YulFunctionCall",
																"src": "24693:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24685:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24685:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2442b511367f0b2d1fcb1c2739922b9057f05346fc1b0da072e9b62ecd0f2126__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24412:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24563:9:10",
														"nodeType": "YulTypedName",
														"src": "24563:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24578:4:10",
														"nodeType": "YulTypedName",
														"src": "24578:4:10",
														"type": ""
													}
												],
												"src": "24412:419:10"
											},
											{
												"body": {
													"nativeSrc": "24943:73:10",
													"nodeType": "YulBlock",
													"src": "24943:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24965:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "24965:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24973:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24973:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24961:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24961:3:10"
																		},
																		"nativeSrc": "24961:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24961:14:10"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "24977:31:10",
																		"nodeType": "YulLiteral",
																		"src": "24977:31:10",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24954:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24954:6:10"
																},
																"nativeSrc": "24954:55:10",
																"nodeType": "YulFunctionCall",
																"src": "24954:55:10"
															},
															"nativeSrc": "24954:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "24954:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nativeSrc": "24837:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24935:6:10",
														"nodeType": "YulTypedName",
														"src": "24935:6:10",
														"type": ""
													}
												],
												"src": "24837:179:10"
											},
											{
												"body": {
													"nativeSrc": "25168:220:10",
													"nodeType": "YulBlock",
													"src": "25168:220:10",
													"statements": [
														{
															"nativeSrc": "25178:74:10",
															"nodeType": "YulAssignment",
															"src": "25178:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25244:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25244:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25249:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25249:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25185:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "25185:58:10"
																},
																"nativeSrc": "25185:67:10",
																"nodeType": "YulFunctionCall",
																"src": "25185:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25178:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25178:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25350:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25350:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nativeSrc": "25261:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "25261:88:10"
																},
																"nativeSrc": "25261:93:10",
																"nodeType": "YulFunctionCall",
																"src": "25261:93:10"
															},
															"nativeSrc": "25261:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "25261:93:10"
														},
														{
															"nativeSrc": "25363:19:10",
															"nodeType": "YulAssignment",
															"src": "25363:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25374:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25374:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25379:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25379:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25370:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25370:3:10"
																},
																"nativeSrc": "25370:12:10",
																"nodeType": "YulFunctionCall",
																"src": "25370:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25363:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25363:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25022:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25156:3:10",
														"nodeType": "YulTypedName",
														"src": "25156:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25164:3:10",
														"nodeType": "YulTypedName",
														"src": "25164:3:10",
														"type": ""
													}
												],
												"src": "25022:366:10"
											},
											{
												"body": {
													"nativeSrc": "25565:248:10",
													"nodeType": "YulBlock",
													"src": "25565:248:10",
													"statements": [
														{
															"nativeSrc": "25575:26:10",
															"nodeType": "YulAssignment",
															"src": "25575:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25587:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "25587:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25598:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25598:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25583:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25583:3:10"
																},
																"nativeSrc": "25583:18:10",
																"nodeType": "YulFunctionCall",
																"src": "25583:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25575:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "25575:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25622:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25622:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25633:1:10",
																				"nodeType": "YulLiteral",
																				"src": "25633:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25618:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25618:3:10"
																		},
																		"nativeSrc": "25618:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25618:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25641:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "25641:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25647:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25647:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25637:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25637:3:10"
																		},
																		"nativeSrc": "25637:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25637:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25611:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "25611:6:10"
																},
																"nativeSrc": "25611:47:10",
																"nodeType": "YulFunctionCall",
																"src": "25611:47:10"
															},
															"nativeSrc": "25611:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "25611:47:10"
														},
														{
															"nativeSrc": "25667:139:10",
															"nodeType": "YulAssignment",
															"src": "25667:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25801:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "25801:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25675:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "25675:124:10"
																},
																"nativeSrc": "25675:131:10",
																"nodeType": "YulFunctionCall",
																"src": "25675:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25667:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "25667:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25394:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25545:9:10",
														"nodeType": "YulTypedName",
														"src": "25545:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25560:4:10",
														"nodeType": "YulTypedName",
														"src": "25560:4:10",
														"type": ""
													}
												],
												"src": "25394:419:10"
											},
											{
												"body": {
													"nativeSrc": "25925:73:10",
													"nodeType": "YulBlock",
													"src": "25925:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25947:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "25947:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25955:1:10",
																				"nodeType": "YulLiteral",
																				"src": "25955:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25943:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25943:3:10"
																		},
																		"nativeSrc": "25943:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25943:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e636520746f207374616b65",
																		"kind": "string",
																		"nativeSrc": "25959:31:10",
																		"nodeType": "YulLiteral",
																		"src": "25959:31:10",
																		"type": "",
																		"value": "Insufficient balance to stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25936:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "25936:6:10"
																},
																"nativeSrc": "25936:55:10",
																"nodeType": "YulFunctionCall",
																"src": "25936:55:10"
															},
															"nativeSrc": "25936:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "25936:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0",
												"nativeSrc": "25819:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25917:6:10",
														"nodeType": "YulTypedName",
														"src": "25917:6:10",
														"type": ""
													}
												],
												"src": "25819:179:10"
											},
											{
												"body": {
													"nativeSrc": "26150:220:10",
													"nodeType": "YulBlock",
													"src": "26150:220:10",
													"statements": [
														{
															"nativeSrc": "26160:74:10",
															"nodeType": "YulAssignment",
															"src": "26160:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26226:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "26226:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26231:2:10",
																		"nodeType": "YulLiteral",
																		"src": "26231:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26167:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "26167:58:10"
																},
																"nativeSrc": "26167:67:10",
																"nodeType": "YulFunctionCall",
																"src": "26167:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26160:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26160:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26332:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "26332:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0",
																	"nativeSrc": "26243:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "26243:88:10"
																},
																"nativeSrc": "26243:93:10",
																"nodeType": "YulFunctionCall",
																"src": "26243:93:10"
															},
															"nativeSrc": "26243:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "26243:93:10"
														},
														{
															"nativeSrc": "26345:19:10",
															"nodeType": "YulAssignment",
															"src": "26345:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26356:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "26356:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26361:2:10",
																		"nodeType": "YulLiteral",
																		"src": "26361:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26352:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26352:3:10"
																},
																"nativeSrc": "26352:12:10",
																"nodeType": "YulFunctionCall",
																"src": "26352:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26345:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26345:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26004:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26138:3:10",
														"nodeType": "YulTypedName",
														"src": "26138:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26146:3:10",
														"nodeType": "YulTypedName",
														"src": "26146:3:10",
														"type": ""
													}
												],
												"src": "26004:366:10"
											},
											{
												"body": {
													"nativeSrc": "26547:248:10",
													"nodeType": "YulBlock",
													"src": "26547:248:10",
													"statements": [
														{
															"nativeSrc": "26557:26:10",
															"nodeType": "YulAssignment",
															"src": "26557:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26569:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "26569:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26580:2:10",
																		"nodeType": "YulLiteral",
																		"src": "26580:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26565:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26565:3:10"
																},
																"nativeSrc": "26565:18:10",
																"nodeType": "YulFunctionCall",
																"src": "26565:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26557:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "26557:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26604:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "26604:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26615:1:10",
																				"nodeType": "YulLiteral",
																				"src": "26615:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26600:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26600:3:10"
																		},
																		"nativeSrc": "26600:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26600:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26623:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "26623:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26629:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "26629:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26619:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26619:3:10"
																		},
																		"nativeSrc": "26619:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26619:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26593:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "26593:6:10"
																},
																"nativeSrc": "26593:47:10",
																"nodeType": "YulFunctionCall",
																"src": "26593:47:10"
															},
															"nativeSrc": "26593:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "26593:47:10"
														},
														{
															"nativeSrc": "26649:139:10",
															"nodeType": "YulAssignment",
															"src": "26649:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26783:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "26783:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26657:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "26657:124:10"
																},
																"nativeSrc": "26657:131:10",
																"nodeType": "YulFunctionCall",
																"src": "26657:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26649:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "26649:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26376:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26527:9:10",
														"nodeType": "YulTypedName",
														"src": "26527:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26542:4:10",
														"nodeType": "YulTypedName",
														"src": "26542:4:10",
														"type": ""
													}
												],
												"src": "26376:419:10"
											},
											{
												"body": {
													"nativeSrc": "26927:206:10",
													"nodeType": "YulBlock",
													"src": "26927:206:10",
													"statements": [
														{
															"nativeSrc": "26937:26:10",
															"nodeType": "YulAssignment",
															"src": "26937:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26949:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "26949:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26960:2:10",
																		"nodeType": "YulLiteral",
																		"src": "26960:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26945:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26945:3:10"
																},
																"nativeSrc": "26945:18:10",
																"nodeType": "YulFunctionCall",
																"src": "26945:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26937:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "26937:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27017:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "27017:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27030:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "27030:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27041:1:10",
																				"nodeType": "YulLiteral",
																				"src": "27041:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27026:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "27026:3:10"
																		},
																		"nativeSrc": "27026:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27026:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26973:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "26973:43:10"
																},
																"nativeSrc": "26973:71:10",
																"nodeType": "YulFunctionCall",
																"src": "26973:71:10"
															},
															"nativeSrc": "26973:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "26973:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27098:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "27098:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27111:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "27111:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27122:2:10",
																				"nodeType": "YulLiteral",
																				"src": "27122:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27107:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "27107:3:10"
																		},
																		"nativeSrc": "27107:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27107:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27054:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "27054:43:10"
																},
																"nativeSrc": "27054:72:10",
																"nodeType": "YulFunctionCall",
																"src": "27054:72:10"
															},
															"nativeSrc": "27054:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "27054:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "26801:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26891:9:10",
														"nodeType": "YulTypedName",
														"src": "26891:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26903:6:10",
														"nodeType": "YulTypedName",
														"src": "26903:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26911:6:10",
														"nodeType": "YulTypedName",
														"src": "26911:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26922:4:10",
														"nodeType": "YulTypedName",
														"src": "26922:4:10",
														"type": ""
													}
												],
												"src": "26801:332:10"
											},
											{
												"body": {
													"nativeSrc": "27167:152:10",
													"nodeType": "YulBlock",
													"src": "27167:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27184:1:10",
																		"nodeType": "YulLiteral",
																		"src": "27184:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27187:77:10",
																		"nodeType": "YulLiteral",
																		"src": "27187:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27177:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "27177:6:10"
																},
																"nativeSrc": "27177:88:10",
																"nodeType": "YulFunctionCall",
																"src": "27177:88:10"
															},
															"nativeSrc": "27177:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "27177:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27281:1:10",
																		"nodeType": "YulLiteral",
																		"src": "27281:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27284:4:10",
																		"nodeType": "YulLiteral",
																		"src": "27284:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27274:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "27274:6:10"
																},
																"nativeSrc": "27274:15:10",
																"nodeType": "YulFunctionCall",
																"src": "27274:15:10"
															},
															"nativeSrc": "27274:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "27274:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27305:1:10",
																		"nodeType": "YulLiteral",
																		"src": "27305:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27308:4:10",
																		"nodeType": "YulLiteral",
																		"src": "27308:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "27298:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "27298:6:10"
																},
																"nativeSrc": "27298:15:10",
																"nodeType": "YulFunctionCall",
																"src": "27298:15:10"
															},
															"nativeSrc": "27298:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "27298:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "27139:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "27139:180:10"
											},
											{
												"body": {
													"nativeSrc": "27369:61:10",
													"nodeType": "YulBlock",
													"src": "27369:61:10",
													"statements": [
														{
															"nativeSrc": "27379:45:10",
															"nodeType": "YulAssignment",
															"src": "27379:45:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27394:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "27394:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27401:22:10",
																		"nodeType": "YulLiteral",
																		"src": "27401:22:10",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "27390:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27390:3:10"
																},
																"nativeSrc": "27390:34:10",
																"nodeType": "YulFunctionCall",
																"src": "27390:34:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "27379:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "27379:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "27325:105:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27351:5:10",
														"nodeType": "YulTypedName",
														"src": "27351:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "27361:7:10",
														"nodeType": "YulTypedName",
														"src": "27361:7:10",
														"type": ""
													}
												],
												"src": "27325:105:10"
											},
											{
												"body": {
													"nativeSrc": "27478:78:10",
													"nodeType": "YulBlock",
													"src": "27478:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "27534:16:10",
																"nodeType": "YulBlock",
																"src": "27534:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "27543:1:10",
																					"nodeType": "YulLiteral",
																					"src": "27543:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "27546:1:10",
																					"nodeType": "YulLiteral",
																					"src": "27546:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "27536:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "27536:6:10"
																			},
																			"nativeSrc": "27536:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "27536:12:10"
																		},
																		"nativeSrc": "27536:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "27536:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "27501:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "27501:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "27525:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "27525:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "27508:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "27508:16:10"
																				},
																				"nativeSrc": "27508:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "27508:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "27498:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "27498:2:10"
																		},
																		"nativeSrc": "27498:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27498:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "27491:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "27491:6:10"
																},
																"nativeSrc": "27491:42:10",
																"nodeType": "YulFunctionCall",
																"src": "27491:42:10"
															},
															"nativeSrc": "27488:62:10",
															"nodeType": "YulIf",
															"src": "27488:62:10"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "27436:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27471:5:10",
														"nodeType": "YulTypedName",
														"src": "27471:5:10",
														"type": ""
													}
												],
												"src": "27436:120:10"
											},
											{
												"body": {
													"nativeSrc": "27624:79:10",
													"nodeType": "YulBlock",
													"src": "27624:79:10",
													"statements": [
														{
															"nativeSrc": "27634:22:10",
															"nodeType": "YulAssignment",
															"src": "27634:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "27649:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "27649:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "27643:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "27643:5:10"
																},
																"nativeSrc": "27643:13:10",
																"nodeType": "YulFunctionCall",
																"src": "27643:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "27634:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "27634:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27691:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "27691:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "27665:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "27665:25:10"
																},
																"nativeSrc": "27665:32:10",
																"nodeType": "YulFunctionCall",
																"src": "27665:32:10"
															},
															"nativeSrc": "27665:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "27665:32:10"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "27562:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "27602:6:10",
														"nodeType": "YulTypedName",
														"src": "27602:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "27610:3:10",
														"nodeType": "YulTypedName",
														"src": "27610:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "27618:5:10",
														"nodeType": "YulTypedName",
														"src": "27618:5:10",
														"type": ""
													}
												],
												"src": "27562:141:10"
											},
											{
												"body": {
													"nativeSrc": "27753:32:10",
													"nodeType": "YulBlock",
													"src": "27753:32:10",
													"statements": [
														{
															"nativeSrc": "27763:16:10",
															"nodeType": "YulAssignment",
															"src": "27763:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "27774:5:10",
																"nodeType": "YulIdentifier",
																"src": "27774:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "27763:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "27763:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "27709:76:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27735:5:10",
														"nodeType": "YulTypedName",
														"src": "27735:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "27745:7:10",
														"nodeType": "YulTypedName",
														"src": "27745:7:10",
														"type": ""
													}
												],
												"src": "27709:76:10"
											},
											{
												"body": {
													"nativeSrc": "27833:78:10",
													"nodeType": "YulBlock",
													"src": "27833:78:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "27889:16:10",
																"nodeType": "YulBlock",
																"src": "27889:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "27898:1:10",
																					"nodeType": "YulLiteral",
																					"src": "27898:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "27901:1:10",
																					"nodeType": "YulLiteral",
																					"src": "27901:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "27891:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "27891:6:10"
																			},
																			"nativeSrc": "27891:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "27891:12:10"
																		},
																		"nativeSrc": "27891:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "27891:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "27856:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "27856:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "27880:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "27880:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "27863:16:10",
																					"nodeType": "YulIdentifier",
																					"src": "27863:16:10"
																				},
																				"nativeSrc": "27863:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "27863:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "27853:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "27853:2:10"
																		},
																		"nativeSrc": "27853:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27853:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "27846:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "27846:6:10"
																},
																"nativeSrc": "27846:42:10",
																"nodeType": "YulFunctionCall",
																"src": "27846:42:10"
															},
															"nativeSrc": "27843:62:10",
															"nodeType": "YulIf",
															"src": "27843:62:10"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "27791:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27826:5:10",
														"nodeType": "YulTypedName",
														"src": "27826:5:10",
														"type": ""
													}
												],
												"src": "27791:120:10"
											},
											{
												"body": {
													"nativeSrc": "27979:79:10",
													"nodeType": "YulBlock",
													"src": "27979:79:10",
													"statements": [
														{
															"nativeSrc": "27989:22:10",
															"nodeType": "YulAssignment",
															"src": "27989:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "28004:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "28004:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "27998:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "27998:5:10"
																},
																"nativeSrc": "27998:13:10",
																"nodeType": "YulFunctionCall",
																"src": "27998:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "27989:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "27989:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28046:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "28046:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "28020:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "28020:25:10"
																},
																"nativeSrc": "28020:32:10",
																"nodeType": "YulFunctionCall",
																"src": "28020:32:10"
															},
															"nativeSrc": "28020:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "28020:32:10"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "27917:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "27957:6:10",
														"nodeType": "YulTypedName",
														"src": "27957:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "27965:3:10",
														"nodeType": "YulTypedName",
														"src": "27965:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "27973:5:10",
														"nodeType": "YulTypedName",
														"src": "27973:5:10",
														"type": ""
													}
												],
												"src": "27917:141:10"
											},
											{
												"body": {
													"nativeSrc": "28127:80:10",
													"nodeType": "YulBlock",
													"src": "28127:80:10",
													"statements": [
														{
															"nativeSrc": "28137:22:10",
															"nodeType": "YulAssignment",
															"src": "28137:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "28152:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "28152:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "28146:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "28146:5:10"
																},
																"nativeSrc": "28146:13:10",
																"nodeType": "YulFunctionCall",
																"src": "28146:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "28137:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "28137:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28195:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "28195:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "28168:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "28168:26:10"
																},
																"nativeSrc": "28168:33:10",
																"nodeType": "YulFunctionCall",
																"src": "28168:33:10"
															},
															"nativeSrc": "28168:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "28168:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "28064:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "28105:6:10",
														"nodeType": "YulTypedName",
														"src": "28105:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "28113:3:10",
														"nodeType": "YulTypedName",
														"src": "28113:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "28121:5:10",
														"nodeType": "YulTypedName",
														"src": "28121:5:10",
														"type": ""
													}
												],
												"src": "28064:143:10"
											},
											{
												"body": {
													"nativeSrc": "28355:829:10",
													"nodeType": "YulBlock",
													"src": "28355:829:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "28402:83:10",
																"nodeType": "YulBlock",
																"src": "28402:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "28404:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "28404:77:10"
																			},
																			"nativeSrc": "28404:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "28404:79:10"
																		},
																		"nativeSrc": "28404:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "28404:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28376:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "28376:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28385:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "28385:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28372:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "28372:3:10"
																		},
																		"nativeSrc": "28372:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28372:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28397:3:10",
																		"nodeType": "YulLiteral",
																		"src": "28397:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "28368:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "28368:3:10"
																},
																"nativeSrc": "28368:33:10",
																"nodeType": "YulFunctionCall",
																"src": "28368:33:10"
															},
															"nativeSrc": "28365:120:10",
															"nodeType": "YulIf",
															"src": "28365:120:10"
														},
														{
															"nativeSrc": "28495:127:10",
															"nodeType": "YulBlock",
															"src": "28495:127:10",
															"statements": [
																{
																	"nativeSrc": "28510:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "28510:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "28524:1:10",
																		"nodeType": "YulLiteral",
																		"src": "28524:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "28514:6:10",
																			"nodeType": "YulTypedName",
																			"src": "28514:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "28539:73:10",
																	"nodeType": "YulAssignment",
																	"src": "28539:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "28584:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "28584:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "28595:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "28595:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "28580:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "28580:3:10"
																				},
																				"nativeSrc": "28580:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "28580:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28604:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "28604:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "28549:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "28549:30:10"
																		},
																		"nativeSrc": "28549:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28549:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "28539:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "28539:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "28632:128:10",
															"nodeType": "YulBlock",
															"src": "28632:128:10",
															"statements": [
																{
																	"nativeSrc": "28647:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "28647:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "28661:2:10",
																		"nodeType": "YulLiteral",
																		"src": "28661:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "28651:6:10",
																			"nodeType": "YulTypedName",
																			"src": "28651:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "28677:73:10",
																	"nodeType": "YulAssignment",
																	"src": "28677:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "28722:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "28722:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "28733:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "28733:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "28718:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "28718:3:10"
																				},
																				"nativeSrc": "28718:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "28718:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28742:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "28742:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "28687:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "28687:30:10"
																		},
																		"nativeSrc": "28687:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28687:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "28677:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "28677:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "28770:129:10",
															"nodeType": "YulBlock",
															"src": "28770:129:10",
															"statements": [
																{
																	"nativeSrc": "28785:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "28785:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "28799:2:10",
																		"nodeType": "YulLiteral",
																		"src": "28799:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "28789:6:10",
																			"nodeType": "YulTypedName",
																			"src": "28789:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "28815:74:10",
																	"nodeType": "YulAssignment",
																	"src": "28815:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "28861:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "28861:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "28872:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "28872:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "28857:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "28857:3:10"
																				},
																				"nativeSrc": "28857:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "28857:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28881:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "28881:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "28825:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "28825:31:10"
																		},
																		"nativeSrc": "28825:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28825:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "28815:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "28815:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "28909:129:10",
															"nodeType": "YulBlock",
															"src": "28909:129:10",
															"statements": [
																{
																	"nativeSrc": "28924:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "28924:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "28938:2:10",
																		"nodeType": "YulLiteral",
																		"src": "28938:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "28928:6:10",
																			"nodeType": "YulTypedName",
																			"src": "28928:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "28954:74:10",
																	"nodeType": "YulAssignment",
																	"src": "28954:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "29000:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "29000:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "29011:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "29011:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "28996:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "28996:3:10"
																				},
																				"nativeSrc": "28996:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "28996:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "29020:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "29020:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "28964:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "28964:31:10"
																		},
																		"nativeSrc": "28964:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28964:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "28954:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "28954:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "29048:129:10",
															"nodeType": "YulBlock",
															"src": "29048:129:10",
															"statements": [
																{
																	"nativeSrc": "29063:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "29063:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "29077:3:10",
																		"nodeType": "YulLiteral",
																		"src": "29077:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "29067:6:10",
																			"nodeType": "YulTypedName",
																			"src": "29067:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "29094:73:10",
																	"nodeType": "YulAssignment",
																	"src": "29094:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "29139:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "29139:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "29150:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "29150:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "29135:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "29135:3:10"
																				},
																				"nativeSrc": "29135:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "29135:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "29159:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "29159:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "29104:30:10",
																			"nodeType": "YulIdentifier",
																			"src": "29104:30:10"
																		},
																		"nativeSrc": "29104:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "29104:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "29094:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "29094:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "28213:971:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28293:9:10",
														"nodeType": "YulTypedName",
														"src": "28293:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "28304:7:10",
														"nodeType": "YulTypedName",
														"src": "28304:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "28316:6:10",
														"nodeType": "YulTypedName",
														"src": "28316:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28324:6:10",
														"nodeType": "YulTypedName",
														"src": "28324:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "28332:6:10",
														"nodeType": "YulTypedName",
														"src": "28332:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "28340:6:10",
														"nodeType": "YulTypedName",
														"src": "28340:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "28348:6:10",
														"nodeType": "YulTypedName",
														"src": "28348:6:10",
														"type": ""
													}
												],
												"src": "28213:971:10"
											},
											{
												"body": {
													"nativeSrc": "29296:74:10",
													"nodeType": "YulBlock",
													"src": "29296:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "29318:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "29318:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29326:1:10",
																				"nodeType": "YulLiteral",
																				"src": "29326:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29314:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "29314:3:10"
																		},
																		"nativeSrc": "29314:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "29314:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420707269636520646174612066726f6d206f7261636c65",
																		"kind": "string",
																		"nativeSrc": "29330:32:10",
																		"nodeType": "YulLiteral",
																		"src": "29330:32:10",
																		"type": "",
																		"value": "Invalid price data from oracle"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29307:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "29307:6:10"
																},
																"nativeSrc": "29307:56:10",
																"nodeType": "YulFunctionCall",
																"src": "29307:56:10"
															},
															"nativeSrc": "29307:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "29307:56:10"
														}
													]
												},
												"name": "store_literal_in_memory_17f20696f0fa86018195f469014cbcb189920391ba0d2a0304f597cf79bbbbe7",
												"nativeSrc": "29190:180:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "29288:6:10",
														"nodeType": "YulTypedName",
														"src": "29288:6:10",
														"type": ""
													}
												],
												"src": "29190:180:10"
											},
											{
												"body": {
													"nativeSrc": "29522:220:10",
													"nodeType": "YulBlock",
													"src": "29522:220:10",
													"statements": [
														{
															"nativeSrc": "29532:74:10",
															"nodeType": "YulAssignment",
															"src": "29532:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29598:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "29598:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29603:2:10",
																		"nodeType": "YulLiteral",
																		"src": "29603:2:10",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29539:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "29539:58:10"
																},
																"nativeSrc": "29539:67:10",
																"nodeType": "YulFunctionCall",
																"src": "29539:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29532:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "29532:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29704:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "29704:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_17f20696f0fa86018195f469014cbcb189920391ba0d2a0304f597cf79bbbbe7",
																	"nativeSrc": "29615:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "29615:88:10"
																},
																"nativeSrc": "29615:93:10",
																"nodeType": "YulFunctionCall",
																"src": "29615:93:10"
															},
															"nativeSrc": "29615:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "29615:93:10"
														},
														{
															"nativeSrc": "29717:19:10",
															"nodeType": "YulAssignment",
															"src": "29717:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29728:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "29728:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29733:2:10",
																		"nodeType": "YulLiteral",
																		"src": "29733:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29724:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "29724:3:10"
																},
																"nativeSrc": "29724:12:10",
																"nodeType": "YulFunctionCall",
																"src": "29724:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29717:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "29717:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_17f20696f0fa86018195f469014cbcb189920391ba0d2a0304f597cf79bbbbe7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "29376:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29510:3:10",
														"nodeType": "YulTypedName",
														"src": "29510:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29518:3:10",
														"nodeType": "YulTypedName",
														"src": "29518:3:10",
														"type": ""
													}
												],
												"src": "29376:366:10"
											},
											{
												"body": {
													"nativeSrc": "29919:248:10",
													"nodeType": "YulBlock",
													"src": "29919:248:10",
													"statements": [
														{
															"nativeSrc": "29929:26:10",
															"nodeType": "YulAssignment",
															"src": "29929:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29941:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "29941:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29952:2:10",
																		"nodeType": "YulLiteral",
																		"src": "29952:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29937:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "29937:3:10"
																},
																"nativeSrc": "29937:18:10",
																"nodeType": "YulFunctionCall",
																"src": "29937:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29929:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "29929:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29976:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "29976:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29987:1:10",
																				"nodeType": "YulLiteral",
																				"src": "29987:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29972:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "29972:3:10"
																		},
																		"nativeSrc": "29972:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "29972:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29995:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "29995:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30001:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "30001:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29991:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "29991:3:10"
																		},
																		"nativeSrc": "29991:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "29991:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29965:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "29965:6:10"
																},
																"nativeSrc": "29965:47:10",
																"nodeType": "YulFunctionCall",
																"src": "29965:47:10"
															},
															"nativeSrc": "29965:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "29965:47:10"
														},
														{
															"nativeSrc": "30021:139:10",
															"nodeType": "YulAssignment",
															"src": "30021:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "30155:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "30155:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_17f20696f0fa86018195f469014cbcb189920391ba0d2a0304f597cf79bbbbe7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30029:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "30029:124:10"
																},
																"nativeSrc": "30029:131:10",
																"nodeType": "YulFunctionCall",
																"src": "30029:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30021:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "30021:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_17f20696f0fa86018195f469014cbcb189920391ba0d2a0304f597cf79bbbbe7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29748:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29899:9:10",
														"nodeType": "YulTypedName",
														"src": "29899:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29914:4:10",
														"nodeType": "YulTypedName",
														"src": "29914:4:10",
														"type": ""
													}
												],
												"src": "29748:419:10"
											},
											{
												"body": {
													"nativeSrc": "30299:206:10",
													"nodeType": "YulBlock",
													"src": "30299:206:10",
													"statements": [
														{
															"nativeSrc": "30309:26:10",
															"nodeType": "YulAssignment",
															"src": "30309:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30321:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "30321:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30332:2:10",
																		"nodeType": "YulLiteral",
																		"src": "30332:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30317:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "30317:3:10"
																},
																"nativeSrc": "30317:18:10",
																"nodeType": "YulFunctionCall",
																"src": "30317:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30309:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "30309:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30389:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "30389:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30402:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "30402:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30413:1:10",
																				"nodeType": "YulLiteral",
																				"src": "30413:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30398:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "30398:3:10"
																		},
																		"nativeSrc": "30398:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "30398:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30345:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "30345:43:10"
																},
																"nativeSrc": "30345:71:10",
																"nodeType": "YulFunctionCall",
																"src": "30345:71:10"
															},
															"nativeSrc": "30345:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "30345:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "30470:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "30470:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30483:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "30483:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30494:2:10",
																				"nodeType": "YulLiteral",
																				"src": "30494:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30479:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "30479:3:10"
																		},
																		"nativeSrc": "30479:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "30479:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30426:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "30426:43:10"
																},
																"nativeSrc": "30426:72:10",
																"nodeType": "YulFunctionCall",
																"src": "30426:72:10"
															},
															"nativeSrc": "30426:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "30426:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "30173:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30263:9:10",
														"nodeType": "YulTypedName",
														"src": "30263:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "30275:6:10",
														"nodeType": "YulTypedName",
														"src": "30275:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30283:6:10",
														"nodeType": "YulTypedName",
														"src": "30283:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30294:4:10",
														"nodeType": "YulTypedName",
														"src": "30294:4:10",
														"type": ""
													}
												],
												"src": "30173:332:10"
											},
											{
												"body": {
													"nativeSrc": "30551:76:10",
													"nodeType": "YulBlock",
													"src": "30551:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "30605:16:10",
																"nodeType": "YulBlock",
																"src": "30605:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "30614:1:10",
																					"nodeType": "YulLiteral",
																					"src": "30614:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "30617:1:10",
																					"nodeType": "YulLiteral",
																					"src": "30617:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "30607:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "30607:6:10"
																			},
																			"nativeSrc": "30607:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "30607:12:10"
																		},
																		"nativeSrc": "30607:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "30607:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "30574:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "30574:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "30596:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "30596:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "30581:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "30581:14:10"
																				},
																				"nativeSrc": "30581:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "30581:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "30571:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "30571:2:10"
																		},
																		"nativeSrc": "30571:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "30571:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "30564:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "30564:6:10"
																},
																"nativeSrc": "30564:40:10",
																"nodeType": "YulFunctionCall",
																"src": "30564:40:10"
															},
															"nativeSrc": "30561:60:10",
															"nodeType": "YulIf",
															"src": "30561:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "30511:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "30544:5:10",
														"nodeType": "YulTypedName",
														"src": "30544:5:10",
														"type": ""
													}
												],
												"src": "30511:116:10"
											},
											{
												"body": {
													"nativeSrc": "30693:77:10",
													"nodeType": "YulBlock",
													"src": "30693:77:10",
													"statements": [
														{
															"nativeSrc": "30703:22:10",
															"nodeType": "YulAssignment",
															"src": "30703:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "30718:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "30718:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "30712:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "30712:5:10"
																},
																"nativeSrc": "30712:13:10",
																"nodeType": "YulFunctionCall",
																"src": "30712:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "30703:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "30703:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "30758:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "30758:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "30734:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "30734:23:10"
																},
																"nativeSrc": "30734:30:10",
																"nodeType": "YulFunctionCall",
																"src": "30734:30:10"
															},
															"nativeSrc": "30734:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "30734:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "30633:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "30671:6:10",
														"nodeType": "YulTypedName",
														"src": "30671:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "30679:3:10",
														"nodeType": "YulTypedName",
														"src": "30679:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "30687:5:10",
														"nodeType": "YulTypedName",
														"src": "30687:5:10",
														"type": ""
													}
												],
												"src": "30633:137:10"
											},
											{
												"body": {
													"nativeSrc": "30850:271:10",
													"nodeType": "YulBlock",
													"src": "30850:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "30896:83:10",
																"nodeType": "YulBlock",
																"src": "30896:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "30898:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "30898:77:10"
																			},
																			"nativeSrc": "30898:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "30898:79:10"
																		},
																		"nativeSrc": "30898:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "30898:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "30871:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "30871:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30880:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "30880:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30867:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "30867:3:10"
																		},
																		"nativeSrc": "30867:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "30867:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30892:2:10",
																		"nodeType": "YulLiteral",
																		"src": "30892:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "30863:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "30863:3:10"
																},
																"nativeSrc": "30863:32:10",
																"nodeType": "YulFunctionCall",
																"src": "30863:32:10"
															},
															"nativeSrc": "30860:119:10",
															"nodeType": "YulIf",
															"src": "30860:119:10"
														},
														{
															"nativeSrc": "30989:125:10",
															"nodeType": "YulBlock",
															"src": "30989:125:10",
															"statements": [
																{
																	"nativeSrc": "31004:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "31004:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "31018:1:10",
																		"nodeType": "YulLiteral",
																		"src": "31018:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "31008:6:10",
																			"nodeType": "YulTypedName",
																			"src": "31008:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "31033:71:10",
																	"nodeType": "YulAssignment",
																	"src": "31033:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "31076:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "31076:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "31087:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "31087:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "31072:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "31072:3:10"
																				},
																				"nativeSrc": "31072:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "31072:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "31096:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "31096:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "31043:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "31043:28:10"
																		},
																		"nativeSrc": "31043:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "31043:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "31033:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "31033:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "30776:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30820:9:10",
														"nodeType": "YulTypedName",
														"src": "30820:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "30831:7:10",
														"nodeType": "YulTypedName",
														"src": "30831:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "30843:6:10",
														"nodeType": "YulTypedName",
														"src": "30843:6:10",
														"type": ""
													}
												],
												"src": "30776:345:10"
											},
											{
												"body": {
													"nativeSrc": "31281:288:10",
													"nodeType": "YulBlock",
													"src": "31281:288:10",
													"statements": [
														{
															"nativeSrc": "31291:26:10",
															"nodeType": "YulAssignment",
															"src": "31291:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31303:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "31303:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31314:2:10",
																		"nodeType": "YulLiteral",
																		"src": "31314:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31299:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "31299:3:10"
																},
																"nativeSrc": "31299:18:10",
																"nodeType": "YulFunctionCall",
																"src": "31299:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31291:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "31291:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "31371:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "31371:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31384:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "31384:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31395:1:10",
																				"nodeType": "YulLiteral",
																				"src": "31395:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31380:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "31380:3:10"
																		},
																		"nativeSrc": "31380:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "31380:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "31327:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "31327:43:10"
																},
																"nativeSrc": "31327:71:10",
																"nodeType": "YulFunctionCall",
																"src": "31327:71:10"
															},
															"nativeSrc": "31327:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "31327:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "31452:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "31452:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31465:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "31465:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31476:2:10",
																				"nodeType": "YulLiteral",
																				"src": "31476:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31461:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "31461:3:10"
																		},
																		"nativeSrc": "31461:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "31461:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "31408:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "31408:43:10"
																},
																"nativeSrc": "31408:72:10",
																"nodeType": "YulFunctionCall",
																"src": "31408:72:10"
															},
															"nativeSrc": "31408:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "31408:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "31534:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "31534:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31547:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "31547:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31558:2:10",
																				"nodeType": "YulLiteral",
																				"src": "31558:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31543:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "31543:3:10"
																		},
																		"nativeSrc": "31543:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "31543:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "31490:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "31490:43:10"
																},
																"nativeSrc": "31490:72:10",
																"nodeType": "YulFunctionCall",
																"src": "31490:72:10"
															},
															"nativeSrc": "31490:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "31490:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "31127:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31237:9:10",
														"nodeType": "YulTypedName",
														"src": "31237:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "31249:6:10",
														"nodeType": "YulTypedName",
														"src": "31249:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "31257:6:10",
														"nodeType": "YulTypedName",
														"src": "31257:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "31265:6:10",
														"nodeType": "YulTypedName",
														"src": "31265:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31276:4:10",
														"nodeType": "YulTypedName",
														"src": "31276:4:10",
														"type": ""
													}
												],
												"src": "31127:442:10"
											},
											{
												"body": {
													"nativeSrc": "31681:75:10",
													"nodeType": "YulBlock",
													"src": "31681:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "31703:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "31703:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31711:1:10",
																				"nodeType": "YulLiteral",
																				"src": "31711:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31699:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "31699:3:10"
																		},
																		"nativeSrc": "31699:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "31699:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "31715:33:10",
																		"nodeType": "YulLiteral",
																		"src": "31715:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31692:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "31692:6:10"
																},
																"nativeSrc": "31692:57:10",
																"nodeType": "YulFunctionCall",
																"src": "31692:57:10"
															},
															"nativeSrc": "31692:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "31692:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "31575:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "31673:6:10",
														"nodeType": "YulTypedName",
														"src": "31673:6:10",
														"type": ""
													}
												],
												"src": "31575:181:10"
											},
											{
												"body": {
													"nativeSrc": "31908:220:10",
													"nodeType": "YulBlock",
													"src": "31908:220:10",
													"statements": [
														{
															"nativeSrc": "31918:74:10",
															"nodeType": "YulAssignment",
															"src": "31918:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31984:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "31984:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31989:2:10",
																		"nodeType": "YulLiteral",
																		"src": "31989:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31925:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "31925:58:10"
																},
																"nativeSrc": "31925:67:10",
																"nodeType": "YulFunctionCall",
																"src": "31925:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "31918:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "31918:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32090:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "32090:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "32001:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "32001:88:10"
																},
																"nativeSrc": "32001:93:10",
																"nodeType": "YulFunctionCall",
																"src": "32001:93:10"
															},
															"nativeSrc": "32001:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "32001:93:10"
														},
														{
															"nativeSrc": "32103:19:10",
															"nodeType": "YulAssignment",
															"src": "32103:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32114:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "32114:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32119:2:10",
																		"nodeType": "YulLiteral",
																		"src": "32119:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32110:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "32110:3:10"
																},
																"nativeSrc": "32110:12:10",
																"nodeType": "YulFunctionCall",
																"src": "32110:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "32103:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "32103:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "31762:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "31896:3:10",
														"nodeType": "YulTypedName",
														"src": "31896:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "31904:3:10",
														"nodeType": "YulTypedName",
														"src": "31904:3:10",
														"type": ""
													}
												],
												"src": "31762:366:10"
											},
											{
												"body": {
													"nativeSrc": "32305:248:10",
													"nodeType": "YulBlock",
													"src": "32305:248:10",
													"statements": [
														{
															"nativeSrc": "32315:26:10",
															"nodeType": "YulAssignment",
															"src": "32315:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "32327:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "32327:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32338:2:10",
																		"nodeType": "YulLiteral",
																		"src": "32338:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32323:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "32323:3:10"
																},
																"nativeSrc": "32323:18:10",
																"nodeType": "YulFunctionCall",
																"src": "32323:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32315:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "32315:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32362:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "32362:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32373:1:10",
																				"nodeType": "YulLiteral",
																				"src": "32373:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32358:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "32358:3:10"
																		},
																		"nativeSrc": "32358:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "32358:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "32381:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "32381:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "32387:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "32387:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "32377:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "32377:3:10"
																		},
																		"nativeSrc": "32377:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "32377:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32351:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "32351:6:10"
																},
																"nativeSrc": "32351:47:10",
																"nodeType": "YulFunctionCall",
																"src": "32351:47:10"
															},
															"nativeSrc": "32351:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "32351:47:10"
														},
														{
															"nativeSrc": "32407:139:10",
															"nodeType": "YulAssignment",
															"src": "32407:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "32541:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "32541:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32415:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "32415:124:10"
																},
																"nativeSrc": "32415:131:10",
																"nodeType": "YulFunctionCall",
																"src": "32415:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32407:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "32407:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "32134:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "32285:9:10",
														"nodeType": "YulTypedName",
														"src": "32285:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "32300:4:10",
														"nodeType": "YulTypedName",
														"src": "32300:4:10",
														"type": ""
													}
												],
												"src": "32134:419:10"
											},
											{
												"body": {
													"nativeSrc": "32587:152:10",
													"nodeType": "YulBlock",
													"src": "32587:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "32604:1:10",
																		"nodeType": "YulLiteral",
																		"src": "32604:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32607:77:10",
																		"nodeType": "YulLiteral",
																		"src": "32607:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32597:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "32597:6:10"
																},
																"nativeSrc": "32597:88:10",
																"nodeType": "YulFunctionCall",
																"src": "32597:88:10"
															},
															"nativeSrc": "32597:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "32597:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "32701:1:10",
																		"nodeType": "YulLiteral",
																		"src": "32701:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32704:4:10",
																		"nodeType": "YulLiteral",
																		"src": "32704:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32694:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "32694:6:10"
																},
																"nativeSrc": "32694:15:10",
																"nodeType": "YulFunctionCall",
																"src": "32694:15:10"
															},
															"nativeSrc": "32694:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "32694:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "32725:1:10",
																		"nodeType": "YulLiteral",
																		"src": "32725:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32728:4:10",
																		"nodeType": "YulLiteral",
																		"src": "32728:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "32718:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "32718:6:10"
																},
																"nativeSrc": "32718:15:10",
																"nodeType": "YulFunctionCall",
																"src": "32718:15:10"
															},
															"nativeSrc": "32718:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "32718:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "32559:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "32559:180:10"
											},
											{
												"body": {
													"nativeSrc": "32793:362:10",
													"nodeType": "YulBlock",
													"src": "32793:362:10",
													"statements": [
														{
															"nativeSrc": "32803:25:10",
															"nodeType": "YulAssignment",
															"src": "32803:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "32826:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "32826:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "32808:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "32808:17:10"
																},
																"nativeSrc": "32808:20:10",
																"nodeType": "YulFunctionCall",
																"src": "32808:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "32803:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "32803:1:10"
																}
															]
														},
														{
															"nativeSrc": "32837:25:10",
															"nodeType": "YulAssignment",
															"src": "32837:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "32860:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "32860:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "32842:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "32842:17:10"
																},
																"nativeSrc": "32842:20:10",
																"nodeType": "YulFunctionCall",
																"src": "32842:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "32837:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "32837:1:10"
																}
															]
														},
														{
															"nativeSrc": "32871:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "32871:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "32894:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "32894:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "32897:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "32897:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "32890:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "32890:3:10"
																},
																"nativeSrc": "32890:9:10",
																"nodeType": "YulFunctionCall",
																"src": "32890:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "32875:11:10",
																	"nodeType": "YulTypedName",
																	"src": "32875:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "32908:41:10",
															"nodeType": "YulAssignment",
															"src": "32908:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "32937:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "32937:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "32919:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "32919:17:10"
																},
																"nativeSrc": "32919:30:10",
																"nodeType": "YulFunctionCall",
																"src": "32919:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "32908:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "32908:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "33126:22:10",
																"nodeType": "YulBlock",
																"src": "33126:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "33128:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "33128:16:10"
																			},
																			"nativeSrc": "33128:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "33128:18:10"
																		},
																		"nativeSrc": "33128:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "33128:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "33059:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "33059:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "33052:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "33052:6:10"
																				},
																				"nativeSrc": "33052:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "33052:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "33082:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "33082:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "33089:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "33089:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "33098:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "33098:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "33085:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "33085:3:10"
																						},
																						"nativeSrc": "33085:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "33085:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "33079:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "33079:2:10"
																				},
																				"nativeSrc": "33079:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "33079:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "33032:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "33032:2:10"
																		},
																		"nativeSrc": "33032:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "33032:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "33012:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "33012:6:10"
																},
																"nativeSrc": "33012:113:10",
																"nodeType": "YulFunctionCall",
																"src": "33012:113:10"
															},
															"nativeSrc": "33009:139:10",
															"nodeType": "YulIf",
															"src": "33009:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "32745:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "32776:1:10",
														"nodeType": "YulTypedName",
														"src": "32776:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "32779:1:10",
														"nodeType": "YulTypedName",
														"src": "32779:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "32785:7:10",
														"nodeType": "YulTypedName",
														"src": "32785:7:10",
														"type": ""
													}
												],
												"src": "32745:410:10"
											},
											{
												"body": {
													"nativeSrc": "33189:152:10",
													"nodeType": "YulBlock",
													"src": "33189:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "33206:1:10",
																		"nodeType": "YulLiteral",
																		"src": "33206:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33209:77:10",
																		"nodeType": "YulLiteral",
																		"src": "33209:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33199:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "33199:6:10"
																},
																"nativeSrc": "33199:88:10",
																"nodeType": "YulFunctionCall",
																"src": "33199:88:10"
															},
															"nativeSrc": "33199:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "33199:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "33303:1:10",
																		"nodeType": "YulLiteral",
																		"src": "33303:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33306:4:10",
																		"nodeType": "YulLiteral",
																		"src": "33306:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33296:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "33296:6:10"
																},
																"nativeSrc": "33296:15:10",
																"nodeType": "YulFunctionCall",
																"src": "33296:15:10"
															},
															"nativeSrc": "33296:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "33296:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "33327:1:10",
																		"nodeType": "YulLiteral",
																		"src": "33327:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33330:4:10",
																		"nodeType": "YulLiteral",
																		"src": "33330:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "33320:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "33320:6:10"
																},
																"nativeSrc": "33320:15:10",
																"nodeType": "YulFunctionCall",
																"src": "33320:15:10"
															},
															"nativeSrc": "33320:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "33320:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "33161:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "33161:180:10"
											},
											{
												"body": {
													"nativeSrc": "33389:143:10",
													"nodeType": "YulBlock",
													"src": "33389:143:10",
													"statements": [
														{
															"nativeSrc": "33399:25:10",
															"nodeType": "YulAssignment",
															"src": "33399:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "33422:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "33422:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "33404:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "33404:17:10"
																},
																"nativeSrc": "33404:20:10",
																"nodeType": "YulFunctionCall",
																"src": "33404:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "33399:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "33399:1:10"
																}
															]
														},
														{
															"nativeSrc": "33433:25:10",
															"nodeType": "YulAssignment",
															"src": "33433:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "33456:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "33456:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "33438:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "33438:17:10"
																},
																"nativeSrc": "33438:20:10",
																"nodeType": "YulFunctionCall",
																"src": "33438:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "33433:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "33433:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "33480:22:10",
																"nodeType": "YulBlock",
																"src": "33480:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "33482:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "33482:16:10"
																			},
																			"nativeSrc": "33482:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "33482:18:10"
																		},
																		"nativeSrc": "33482:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "33482:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "33477:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "33477:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "33470:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "33470:6:10"
																},
																"nativeSrc": "33470:9:10",
																"nodeType": "YulFunctionCall",
																"src": "33470:9:10"
															},
															"nativeSrc": "33467:35:10",
															"nodeType": "YulIf",
															"src": "33467:35:10"
														},
														{
															"nativeSrc": "33512:14:10",
															"nodeType": "YulAssignment",
															"src": "33512:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "33521:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "33521:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "33524:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "33524:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "33517:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "33517:3:10"
																},
																"nativeSrc": "33517:9:10",
																"nodeType": "YulFunctionCall",
																"src": "33517:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "33512:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "33512:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "33347:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "33378:1:10",
														"nodeType": "YulTypedName",
														"src": "33378:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "33381:1:10",
														"nodeType": "YulTypedName",
														"src": "33381:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "33387:1:10",
														"nodeType": "YulTypedName",
														"src": "33387:1:10",
														"type": ""
													}
												],
												"src": "33347:185:10"
											},
											{
												"body": {
													"nativeSrc": "33644:114:10",
													"nodeType": "YulBlock",
													"src": "33644:114:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "33666:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "33666:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33674:1:10",
																				"nodeType": "YulLiteral",
																				"src": "33674:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33662:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "33662:3:10"
																		},
																		"nativeSrc": "33662:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "33662:14:10"
																	},
																	{
																		"hexValue": "55534420616d6f756e74206d7573742062652067726561746572207468616e20",
																		"kind": "string",
																		"nativeSrc": "33678:34:10",
																		"nodeType": "YulLiteral",
																		"src": "33678:34:10",
																		"type": "",
																		"value": "USD amount must be greater than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33655:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "33655:6:10"
																},
																"nativeSrc": "33655:58:10",
																"nodeType": "YulFunctionCall",
																"src": "33655:58:10"
															},
															"nativeSrc": "33655:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "33655:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "33734:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "33734:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33742:2:10",
																				"nodeType": "YulLiteral",
																				"src": "33742:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33730:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "33730:3:10"
																		},
																		"nativeSrc": "33730:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "33730:15:10"
																	},
																	{
																		"hexValue": "30",
																		"kind": "string",
																		"nativeSrc": "33747:3:10",
																		"nodeType": "YulLiteral",
																		"src": "33747:3:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33723:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "33723:6:10"
																},
																"nativeSrc": "33723:28:10",
																"nodeType": "YulFunctionCall",
																"src": "33723:28:10"
															},
															"nativeSrc": "33723:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "33723:28:10"
														}
													]
												},
												"name": "store_literal_in_memory_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a",
												"nativeSrc": "33538:220:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "33636:6:10",
														"nodeType": "YulTypedName",
														"src": "33636:6:10",
														"type": ""
													}
												],
												"src": "33538:220:10"
											},
											{
												"body": {
													"nativeSrc": "33910:220:10",
													"nodeType": "YulBlock",
													"src": "33910:220:10",
													"statements": [
														{
															"nativeSrc": "33920:74:10",
															"nodeType": "YulAssignment",
															"src": "33920:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "33986:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "33986:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33991:2:10",
																		"nodeType": "YulLiteral",
																		"src": "33991:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "33927:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "33927:58:10"
																},
																"nativeSrc": "33927:67:10",
																"nodeType": "YulFunctionCall",
																"src": "33927:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "33920:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "33920:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "34092:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "34092:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a",
																	"nativeSrc": "34003:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "34003:88:10"
																},
																"nativeSrc": "34003:93:10",
																"nodeType": "YulFunctionCall",
																"src": "34003:93:10"
															},
															"nativeSrc": "34003:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "34003:93:10"
														},
														{
															"nativeSrc": "34105:19:10",
															"nodeType": "YulAssignment",
															"src": "34105:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "34116:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "34116:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "34121:2:10",
																		"nodeType": "YulLiteral",
																		"src": "34121:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "34112:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "34112:3:10"
																},
																"nativeSrc": "34112:12:10",
																"nodeType": "YulFunctionCall",
																"src": "34112:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "34105:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "34105:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "33764:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "33898:3:10",
														"nodeType": "YulTypedName",
														"src": "33898:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "33906:3:10",
														"nodeType": "YulTypedName",
														"src": "33906:3:10",
														"type": ""
													}
												],
												"src": "33764:366:10"
											},
											{
												"body": {
													"nativeSrc": "34307:248:10",
													"nodeType": "YulBlock",
													"src": "34307:248:10",
													"statements": [
														{
															"nativeSrc": "34317:26:10",
															"nodeType": "YulAssignment",
															"src": "34317:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "34329:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "34329:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "34340:2:10",
																		"nodeType": "YulLiteral",
																		"src": "34340:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "34325:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "34325:3:10"
																},
																"nativeSrc": "34325:18:10",
																"nodeType": "YulFunctionCall",
																"src": "34325:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "34317:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "34317:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34364:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "34364:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34375:1:10",
																				"nodeType": "YulLiteral",
																				"src": "34375:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34360:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "34360:3:10"
																		},
																		"nativeSrc": "34360:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "34360:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "34383:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "34383:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "34389:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "34389:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "34379:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "34379:3:10"
																		},
																		"nativeSrc": "34379:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "34379:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "34353:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "34353:6:10"
																},
																"nativeSrc": "34353:47:10",
																"nodeType": "YulFunctionCall",
																"src": "34353:47:10"
															},
															"nativeSrc": "34353:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "34353:47:10"
														},
														{
															"nativeSrc": "34409:139:10",
															"nodeType": "YulAssignment",
															"src": "34409:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "34543:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "34543:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "34417:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "34417:124:10"
																},
																"nativeSrc": "34417:131:10",
																"nodeType": "YulFunctionCall",
																"src": "34417:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "34409:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "34409:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "34136:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "34287:9:10",
														"nodeType": "YulTypedName",
														"src": "34287:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "34302:4:10",
														"nodeType": "YulTypedName",
														"src": "34302:4:10",
														"type": ""
													}
												],
												"src": "34136:419:10"
											},
											{
												"body": {
													"nativeSrc": "34667:123:10",
													"nodeType": "YulBlock",
													"src": "34667:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "34689:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "34689:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34697:1:10",
																				"nodeType": "YulLiteral",
																				"src": "34697:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34685:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "34685:3:10"
																		},
																		"nativeSrc": "34685:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "34685:14:10"
																	},
																	{
																		"hexValue": "507269766174652053616c6520746f6b656e73206d7573742062652067726561",
																		"kind": "string",
																		"nativeSrc": "34701:34:10",
																		"nodeType": "YulLiteral",
																		"src": "34701:34:10",
																		"type": "",
																		"value": "Private Sale tokens must be grea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "34678:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "34678:6:10"
																},
																"nativeSrc": "34678:58:10",
																"nodeType": "YulFunctionCall",
																"src": "34678:58:10"
															},
															"nativeSrc": "34678:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "34678:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "34757:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "34757:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34765:2:10",
																				"nodeType": "YulLiteral",
																				"src": "34765:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34753:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "34753:3:10"
																		},
																		"nativeSrc": "34753:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "34753:15:10"
																	},
																	{
																		"hexValue": "746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "34770:12:10",
																		"nodeType": "YulLiteral",
																		"src": "34770:12:10",
																		"type": "",
																		"value": "ter than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "34746:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "34746:6:10"
																},
																"nativeSrc": "34746:37:10",
																"nodeType": "YulFunctionCall",
																"src": "34746:37:10"
															},
															"nativeSrc": "34746:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "34746:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85",
												"nativeSrc": "34561:229:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "34659:6:10",
														"nodeType": "YulTypedName",
														"src": "34659:6:10",
														"type": ""
													}
												],
												"src": "34561:229:10"
											},
											{
												"body": {
													"nativeSrc": "34942:220:10",
													"nodeType": "YulBlock",
													"src": "34942:220:10",
													"statements": [
														{
															"nativeSrc": "34952:74:10",
															"nodeType": "YulAssignment",
															"src": "34952:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "35018:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "35018:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "35023:2:10",
																		"nodeType": "YulLiteral",
																		"src": "35023:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "34959:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "34959:58:10"
																},
																"nativeSrc": "34959:67:10",
																"nodeType": "YulFunctionCall",
																"src": "34959:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "34952:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "34952:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "35124:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "35124:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85",
																	"nativeSrc": "35035:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "35035:88:10"
																},
																"nativeSrc": "35035:93:10",
																"nodeType": "YulFunctionCall",
																"src": "35035:93:10"
															},
															"nativeSrc": "35035:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "35035:93:10"
														},
														{
															"nativeSrc": "35137:19:10",
															"nodeType": "YulAssignment",
															"src": "35137:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "35148:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "35148:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "35153:2:10",
																		"nodeType": "YulLiteral",
																		"src": "35153:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "35144:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "35144:3:10"
																},
																"nativeSrc": "35144:12:10",
																"nodeType": "YulFunctionCall",
																"src": "35144:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "35137:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "35137:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "34796:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "34930:3:10",
														"nodeType": "YulTypedName",
														"src": "34930:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "34938:3:10",
														"nodeType": "YulTypedName",
														"src": "34938:3:10",
														"type": ""
													}
												],
												"src": "34796:366:10"
											},
											{
												"body": {
													"nativeSrc": "35339:248:10",
													"nodeType": "YulBlock",
													"src": "35339:248:10",
													"statements": [
														{
															"nativeSrc": "35349:26:10",
															"nodeType": "YulAssignment",
															"src": "35349:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "35361:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "35361:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "35372:2:10",
																		"nodeType": "YulLiteral",
																		"src": "35372:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "35357:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "35357:3:10"
																},
																"nativeSrc": "35357:18:10",
																"nodeType": "YulFunctionCall",
																"src": "35357:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "35349:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "35349:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "35396:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "35396:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "35407:1:10",
																				"nodeType": "YulLiteral",
																				"src": "35407:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "35392:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "35392:3:10"
																		},
																		"nativeSrc": "35392:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "35392:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "35415:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "35415:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "35421:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "35421:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "35411:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "35411:3:10"
																		},
																		"nativeSrc": "35411:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "35411:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "35385:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "35385:6:10"
																},
																"nativeSrc": "35385:47:10",
																"nodeType": "YulFunctionCall",
																"src": "35385:47:10"
															},
															"nativeSrc": "35385:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "35385:47:10"
														},
														{
															"nativeSrc": "35441:139:10",
															"nodeType": "YulAssignment",
															"src": "35441:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "35575:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "35575:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "35449:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "35449:124:10"
																},
																"nativeSrc": "35449:131:10",
																"nodeType": "YulFunctionCall",
																"src": "35449:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "35441:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "35441:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "35168:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "35319:9:10",
														"nodeType": "YulTypedName",
														"src": "35319:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "35334:4:10",
														"nodeType": "YulTypedName",
														"src": "35334:4:10",
														"type": ""
													}
												],
												"src": "35168:419:10"
											},
											{
												"body": {
													"nativeSrc": "35699:129:10",
													"nodeType": "YulBlock",
													"src": "35699:129:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "35721:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "35721:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "35729:1:10",
																				"nodeType": "YulLiteral",
																				"src": "35729:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "35717:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "35717:3:10"
																		},
																		"nativeSrc": "35717:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "35717:14:10"
																	},
																	{
																		"hexValue": "507269766174652053616c6520736f6c6420746f6b656e732065786365656420",
																		"kind": "string",
																		"nativeSrc": "35733:34:10",
																		"nodeType": "YulLiteral",
																		"src": "35733:34:10",
																		"type": "",
																		"value": "Private Sale sold tokens exceed "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "35710:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "35710:6:10"
																},
																"nativeSrc": "35710:58:10",
																"nodeType": "YulFunctionCall",
																"src": "35710:58:10"
															},
															"nativeSrc": "35710:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "35710:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "35789:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "35789:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "35797:2:10",
																				"nodeType": "YulLiteral",
																				"src": "35797:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "35785:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "35785:3:10"
																		},
																		"nativeSrc": "35785:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "35785:15:10"
																	},
																	{
																		"hexValue": "617661696c61626c6520746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "35802:18:10",
																		"nodeType": "YulLiteral",
																		"src": "35802:18:10",
																		"type": "",
																		"value": "available tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "35778:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "35778:6:10"
																},
																"nativeSrc": "35778:43:10",
																"nodeType": "YulFunctionCall",
																"src": "35778:43:10"
															},
															"nativeSrc": "35778:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "35778:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2",
												"nativeSrc": "35593:235:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "35691:6:10",
														"nodeType": "YulTypedName",
														"src": "35691:6:10",
														"type": ""
													}
												],
												"src": "35593:235:10"
											},
											{
												"body": {
													"nativeSrc": "35980:220:10",
													"nodeType": "YulBlock",
													"src": "35980:220:10",
													"statements": [
														{
															"nativeSrc": "35990:74:10",
															"nodeType": "YulAssignment",
															"src": "35990:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "36056:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "36056:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "36061:2:10",
																		"nodeType": "YulLiteral",
																		"src": "36061:2:10",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "35997:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "35997:58:10"
																},
																"nativeSrc": "35997:67:10",
																"nodeType": "YulFunctionCall",
																"src": "35997:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "35990:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "35990:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "36162:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "36162:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2",
																	"nativeSrc": "36073:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "36073:88:10"
																},
																"nativeSrc": "36073:93:10",
																"nodeType": "YulFunctionCall",
																"src": "36073:93:10"
															},
															"nativeSrc": "36073:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "36073:93:10"
														},
														{
															"nativeSrc": "36175:19:10",
															"nodeType": "YulAssignment",
															"src": "36175:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "36186:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "36186:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "36191:2:10",
																		"nodeType": "YulLiteral",
																		"src": "36191:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "36182:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "36182:3:10"
																},
																"nativeSrc": "36182:12:10",
																"nodeType": "YulFunctionCall",
																"src": "36182:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "36175:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "36175:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "35834:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "35968:3:10",
														"nodeType": "YulTypedName",
														"src": "35968:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "35976:3:10",
														"nodeType": "YulTypedName",
														"src": "35976:3:10",
														"type": ""
													}
												],
												"src": "35834:366:10"
											},
											{
												"body": {
													"nativeSrc": "36377:248:10",
													"nodeType": "YulBlock",
													"src": "36377:248:10",
													"statements": [
														{
															"nativeSrc": "36387:26:10",
															"nodeType": "YulAssignment",
															"src": "36387:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "36399:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "36399:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "36410:2:10",
																		"nodeType": "YulLiteral",
																		"src": "36410:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "36395:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "36395:3:10"
																},
																"nativeSrc": "36395:18:10",
																"nodeType": "YulFunctionCall",
																"src": "36395:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "36387:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "36387:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "36434:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "36434:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "36445:1:10",
																				"nodeType": "YulLiteral",
																				"src": "36445:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "36430:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "36430:3:10"
																		},
																		"nativeSrc": "36430:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "36430:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "36453:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "36453:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "36459:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "36459:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "36449:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "36449:3:10"
																		},
																		"nativeSrc": "36449:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "36449:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "36423:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "36423:6:10"
																},
																"nativeSrc": "36423:47:10",
																"nodeType": "YulFunctionCall",
																"src": "36423:47:10"
															},
															"nativeSrc": "36423:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "36423:47:10"
														},
														{
															"nativeSrc": "36479:139:10",
															"nodeType": "YulAssignment",
															"src": "36479:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "36613:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "36613:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "36487:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "36487:124:10"
																},
																"nativeSrc": "36487:131:10",
																"nodeType": "YulFunctionCall",
																"src": "36487:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "36479:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "36479:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "36206:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "36357:9:10",
														"nodeType": "YulTypedName",
														"src": "36357:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "36372:4:10",
														"nodeType": "YulTypedName",
														"src": "36372:4:10",
														"type": ""
													}
												],
												"src": "36206:419:10"
											},
											{
												"body": {
													"nativeSrc": "36737:74:10",
													"nodeType": "YulBlock",
													"src": "36737:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "36759:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "36759:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "36767:1:10",
																				"nodeType": "YulLiteral",
																				"src": "36767:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "36755:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "36755:3:10"
																		},
																		"nativeSrc": "36755:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "36755:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2070726963652063616c63756c61746564",
																		"kind": "string",
																		"nativeSrc": "36771:32:10",
																		"nodeType": "YulLiteral",
																		"src": "36771:32:10",
																		"type": "",
																		"value": "Invalid token price calculated"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "36748:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "36748:6:10"
																},
																"nativeSrc": "36748:56:10",
																"nodeType": "YulFunctionCall",
																"src": "36748:56:10"
															},
															"nativeSrc": "36748:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "36748:56:10"
														}
													]
												},
												"name": "store_literal_in_memory_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4",
												"nativeSrc": "36631:180:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "36729:6:10",
														"nodeType": "YulTypedName",
														"src": "36729:6:10",
														"type": ""
													}
												],
												"src": "36631:180:10"
											},
											{
												"body": {
													"nativeSrc": "36963:220:10",
													"nodeType": "YulBlock",
													"src": "36963:220:10",
													"statements": [
														{
															"nativeSrc": "36973:74:10",
															"nodeType": "YulAssignment",
															"src": "36973:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "37039:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "37039:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "37044:2:10",
																		"nodeType": "YulLiteral",
																		"src": "37044:2:10",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "36980:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "36980:58:10"
																},
																"nativeSrc": "36980:67:10",
																"nodeType": "YulFunctionCall",
																"src": "36980:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "36973:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "36973:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "37145:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "37145:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4",
																	"nativeSrc": "37056:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "37056:88:10"
																},
																"nativeSrc": "37056:93:10",
																"nodeType": "YulFunctionCall",
																"src": "37056:93:10"
															},
															"nativeSrc": "37056:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "37056:93:10"
														},
														{
															"nativeSrc": "37158:19:10",
															"nodeType": "YulAssignment",
															"src": "37158:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "37169:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "37169:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "37174:2:10",
																		"nodeType": "YulLiteral",
																		"src": "37174:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "37165:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "37165:3:10"
																},
																"nativeSrc": "37165:12:10",
																"nodeType": "YulFunctionCall",
																"src": "37165:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "37158:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "37158:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "36817:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "36951:3:10",
														"nodeType": "YulTypedName",
														"src": "36951:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "36959:3:10",
														"nodeType": "YulTypedName",
														"src": "36959:3:10",
														"type": ""
													}
												],
												"src": "36817:366:10"
											},
											{
												"body": {
													"nativeSrc": "37360:248:10",
													"nodeType": "YulBlock",
													"src": "37360:248:10",
													"statements": [
														{
															"nativeSrc": "37370:26:10",
															"nodeType": "YulAssignment",
															"src": "37370:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "37382:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "37382:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "37393:2:10",
																		"nodeType": "YulLiteral",
																		"src": "37393:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "37378:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "37378:3:10"
																},
																"nativeSrc": "37378:18:10",
																"nodeType": "YulFunctionCall",
																"src": "37378:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "37370:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "37370:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "37417:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "37417:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "37428:1:10",
																				"nodeType": "YulLiteral",
																				"src": "37428:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "37413:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "37413:3:10"
																		},
																		"nativeSrc": "37413:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "37413:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "37436:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "37436:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "37442:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "37442:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "37432:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "37432:3:10"
																		},
																		"nativeSrc": "37432:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "37432:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "37406:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "37406:6:10"
																},
																"nativeSrc": "37406:47:10",
																"nodeType": "YulFunctionCall",
																"src": "37406:47:10"
															},
															"nativeSrc": "37406:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "37406:47:10"
														},
														{
															"nativeSrc": "37462:139:10",
															"nodeType": "YulAssignment",
															"src": "37462:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "37596:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "37596:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "37470:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "37470:124:10"
																},
																"nativeSrc": "37470:131:10",
																"nodeType": "YulFunctionCall",
																"src": "37470:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "37462:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "37462:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "37189:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "37340:9:10",
														"nodeType": "YulTypedName",
														"src": "37340:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "37355:4:10",
														"nodeType": "YulTypedName",
														"src": "37355:4:10",
														"type": ""
													}
												],
												"src": "37189:419:10"
											},
											{
												"body": {
													"nativeSrc": "37720:121:10",
													"nodeType": "YulBlock",
													"src": "37720:121:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "37742:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "37742:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "37750:1:10",
																				"nodeType": "YulLiteral",
																				"src": "37750:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "37738:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "37738:3:10"
																		},
																		"nativeSrc": "37738:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "37738:14:10"
																	},
																	{
																		"hexValue": "43616c63756c6174656420746f6b656e73206d75737420626520677265617465",
																		"kind": "string",
																		"nativeSrc": "37754:34:10",
																		"nodeType": "YulLiteral",
																		"src": "37754:34:10",
																		"type": "",
																		"value": "Calculated tokens must be greate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "37731:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "37731:6:10"
																},
																"nativeSrc": "37731:58:10",
																"nodeType": "YulFunctionCall",
																"src": "37731:58:10"
															},
															"nativeSrc": "37731:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "37731:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "37810:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "37810:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "37818:2:10",
																				"nodeType": "YulLiteral",
																				"src": "37818:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "37806:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "37806:3:10"
																		},
																		"nativeSrc": "37806:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "37806:15:10"
																	},
																	{
																		"hexValue": "72207468616e2030",
																		"kind": "string",
																		"nativeSrc": "37823:10:10",
																		"nodeType": "YulLiteral",
																		"src": "37823:10:10",
																		"type": "",
																		"value": "r than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "37799:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "37799:6:10"
																},
																"nativeSrc": "37799:35:10",
																"nodeType": "YulFunctionCall",
																"src": "37799:35:10"
															},
															"nativeSrc": "37799:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "37799:35:10"
														}
													]
												},
												"name": "store_literal_in_memory_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996",
												"nativeSrc": "37614:227:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "37712:6:10",
														"nodeType": "YulTypedName",
														"src": "37712:6:10",
														"type": ""
													}
												],
												"src": "37614:227:10"
											},
											{
												"body": {
													"nativeSrc": "37993:220:10",
													"nodeType": "YulBlock",
													"src": "37993:220:10",
													"statements": [
														{
															"nativeSrc": "38003:74:10",
															"nodeType": "YulAssignment",
															"src": "38003:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "38069:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "38069:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "38074:2:10",
																		"nodeType": "YulLiteral",
																		"src": "38074:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "38010:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "38010:58:10"
																},
																"nativeSrc": "38010:67:10",
																"nodeType": "YulFunctionCall",
																"src": "38010:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "38003:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "38003:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "38175:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "38175:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996",
																	"nativeSrc": "38086:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "38086:88:10"
																},
																"nativeSrc": "38086:93:10",
																"nodeType": "YulFunctionCall",
																"src": "38086:93:10"
															},
															"nativeSrc": "38086:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "38086:93:10"
														},
														{
															"nativeSrc": "38188:19:10",
															"nodeType": "YulAssignment",
															"src": "38188:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "38199:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "38199:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "38204:2:10",
																		"nodeType": "YulLiteral",
																		"src": "38204:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "38195:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "38195:3:10"
																},
																"nativeSrc": "38195:12:10",
																"nodeType": "YulFunctionCall",
																"src": "38195:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "38188:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "38188:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "37847:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "37981:3:10",
														"nodeType": "YulTypedName",
														"src": "37981:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "37989:3:10",
														"nodeType": "YulTypedName",
														"src": "37989:3:10",
														"type": ""
													}
												],
												"src": "37847:366:10"
											},
											{
												"body": {
													"nativeSrc": "38390:248:10",
													"nodeType": "YulBlock",
													"src": "38390:248:10",
													"statements": [
														{
															"nativeSrc": "38400:26:10",
															"nodeType": "YulAssignment",
															"src": "38400:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "38412:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "38412:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "38423:2:10",
																		"nodeType": "YulLiteral",
																		"src": "38423:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "38408:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "38408:3:10"
																},
																"nativeSrc": "38408:18:10",
																"nodeType": "YulFunctionCall",
																"src": "38408:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "38400:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "38400:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "38447:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "38447:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "38458:1:10",
																				"nodeType": "YulLiteral",
																				"src": "38458:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "38443:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "38443:3:10"
																		},
																		"nativeSrc": "38443:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "38443:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "38466:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "38466:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "38472:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "38472:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "38462:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "38462:3:10"
																		},
																		"nativeSrc": "38462:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "38462:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "38436:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "38436:6:10"
																},
																"nativeSrc": "38436:47:10",
																"nodeType": "YulFunctionCall",
																"src": "38436:47:10"
															},
															"nativeSrc": "38436:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "38436:47:10"
														},
														{
															"nativeSrc": "38492:139:10",
															"nodeType": "YulAssignment",
															"src": "38492:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "38626:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "38626:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "38500:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "38500:124:10"
																},
																"nativeSrc": "38500:131:10",
																"nodeType": "YulFunctionCall",
																"src": "38500:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "38492:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "38492:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "38219:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "38370:9:10",
														"nodeType": "YulTypedName",
														"src": "38370:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "38385:4:10",
														"nodeType": "YulTypedName",
														"src": "38385:4:10",
														"type": ""
													}
												],
												"src": "38219:419:10"
											},
											{
												"body": {
													"nativeSrc": "38688:147:10",
													"nodeType": "YulBlock",
													"src": "38688:147:10",
													"statements": [
														{
															"nativeSrc": "38698:25:10",
															"nodeType": "YulAssignment",
															"src": "38698:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "38721:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "38721:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "38703:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "38703:17:10"
																},
																"nativeSrc": "38703:20:10",
																"nodeType": "YulFunctionCall",
																"src": "38703:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "38698:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "38698:1:10"
																}
															]
														},
														{
															"nativeSrc": "38732:25:10",
															"nodeType": "YulAssignment",
															"src": "38732:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "38755:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "38755:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "38737:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "38737:17:10"
																},
																"nativeSrc": "38737:20:10",
																"nodeType": "YulFunctionCall",
																"src": "38737:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "38732:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "38732:1:10"
																}
															]
														},
														{
															"nativeSrc": "38766:16:10",
															"nodeType": "YulAssignment",
															"src": "38766:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "38777:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "38777:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "38780:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "38780:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "38773:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "38773:3:10"
																},
																"nativeSrc": "38773:9:10",
																"nodeType": "YulFunctionCall",
																"src": "38773:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "38766:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "38766:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "38806:22:10",
																"nodeType": "YulBlock",
																"src": "38806:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "38808:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "38808:16:10"
																			},
																			"nativeSrc": "38808:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "38808:18:10"
																		},
																		"nativeSrc": "38808:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "38808:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "38798:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "38798:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "38801:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "38801:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "38795:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "38795:2:10"
																},
																"nativeSrc": "38795:10:10",
																"nodeType": "YulFunctionCall",
																"src": "38795:10:10"
															},
															"nativeSrc": "38792:36:10",
															"nodeType": "YulIf",
															"src": "38792:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "38644:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "38675:1:10",
														"nodeType": "YulTypedName",
														"src": "38675:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "38678:1:10",
														"nodeType": "YulTypedName",
														"src": "38678:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "38684:3:10",
														"nodeType": "YulTypedName",
														"src": "38684:3:10",
														"type": ""
													}
												],
												"src": "38644:191:10"
											},
											{
												"body": {
													"nativeSrc": "38886:149:10",
													"nodeType": "YulBlock",
													"src": "38886:149:10",
													"statements": [
														{
															"nativeSrc": "38896:25:10",
															"nodeType": "YulAssignment",
															"src": "38896:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "38919:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "38919:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "38901:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "38901:17:10"
																},
																"nativeSrc": "38901:20:10",
																"nodeType": "YulFunctionCall",
																"src": "38901:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "38896:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "38896:1:10"
																}
															]
														},
														{
															"nativeSrc": "38930:25:10",
															"nodeType": "YulAssignment",
															"src": "38930:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "38953:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "38953:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "38935:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "38935:17:10"
																},
																"nativeSrc": "38935:20:10",
																"nodeType": "YulFunctionCall",
																"src": "38935:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "38930:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "38930:1:10"
																}
															]
														},
														{
															"nativeSrc": "38964:17:10",
															"nodeType": "YulAssignment",
															"src": "38964:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "38976:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "38976:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "38979:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "38979:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "38972:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "38972:3:10"
																},
																"nativeSrc": "38972:9:10",
																"nodeType": "YulFunctionCall",
																"src": "38972:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "38964:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "38964:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "39006:22:10",
																"nodeType": "YulBlock",
																"src": "39006:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "39008:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "39008:16:10"
																			},
																			"nativeSrc": "39008:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "39008:18:10"
																		},
																		"nativeSrc": "39008:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "39008:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "38997:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "38997:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "39003:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "39003:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "38994:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "38994:2:10"
																},
																"nativeSrc": "38994:11:10",
																"nodeType": "YulFunctionCall",
																"src": "38994:11:10"
															},
															"nativeSrc": "38991:37:10",
															"nodeType": "YulIf",
															"src": "38991:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "38841:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "38872:1:10",
														"nodeType": "YulTypedName",
														"src": "38872:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "38875:1:10",
														"nodeType": "YulTypedName",
														"src": "38875:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "38881:4:10",
														"nodeType": "YulTypedName",
														"src": "38881:4:10",
														"type": ""
													}
												],
												"src": "38841:194:10"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Direct ETH transfers not allowed\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_SaleStage_$1445(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_SaleStage_$1445(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_SaleStage_$1445(value)\n    }\n\n    function convert_t_enum$_SaleStage_$1445_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_SaleStage_$1445(value)\n    }\n\n    function abi_encode_t_enum$_SaleStage_$1445_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_SaleStage_$1445_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_SaleStage_$1445__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_SaleStage_$1445_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sales targets not yet met.\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_85a92b7d2f3c8949309a7dee9f4ca63adcd1660cd0a768c248f1d76c264451ae(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale can only start from\")\n\n        mstore(add(memPtr, 32), \" NONE stage.\")\n\n    }\n\n    function abi_encode_t_stringliteral_85a92b7d2f3c8949309a7dee9f4ca63adcd1660cd0a768c248f1d76c264451ae_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_85a92b7d2f3c8949309a7dee9f4ca63adcd1660cd0a768c248f1d76c264451ae(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_85a92b7d2f3c8949309a7dee9f4ca63adcd1660cd0a768c248f1d76c264451ae__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_85a92b7d2f3c8949309a7dee9f4ca63adcd1660cd0a768c248f1d76c264451ae_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d8e3511bc2ef1eacf227714a4be566bdacade7e0259e47bca8127d56e48d6281(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale tokens should be un\")\n\n        mstore(add(memPtr, 32), \"sold at start.\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8e3511bc2ef1eacf227714a4be566bdacade7e0259e47bca8127d56e48d6281_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_d8e3511bc2ef1eacf227714a4be566bdacade7e0259e47bca8127d56e48d6281(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8e3511bc2ef1eacf227714a4be566bdacade7e0259e47bca8127d56e48d6281__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8e3511bc2ef1eacf227714a4be566bdacade7e0259e47bca8127d56e48d6281_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b6838c7afcdde6199dc4da34991bafdb53e10c5b79115748c94bef6ed3648976(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pre-Sale should not have started\")\n\n        mstore(add(memPtr, 32), \" before Private Sale.\")\n\n    }\n\n    function abi_encode_t_stringliteral_b6838c7afcdde6199dc4da34991bafdb53e10c5b79115748c94bef6ed3648976_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_b6838c7afcdde6199dc4da34991bafdb53e10c5b79115748c94bef6ed3648976(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b6838c7afcdde6199dc4da34991bafdb53e10c5b79115748c94bef6ed3648976__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b6838c7afcdde6199dc4da34991bafdb53e10c5b79115748c94bef6ed3648976_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f(memPtr) {\n\n        mstore(add(memPtr, 0), \"No sale is active.\")\n\n    }\n\n    function abi_encode_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid price from oracle\")\n\n    }\n\n    function abi_encode_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale sold out.\")\n\n    }\n\n    function abi_encode_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds Private Sale token limit\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pre-Sale sold out.\")\n\n    }\n\n    function abi_encode_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec(memPtr) {\n\n        mstore(add(memPtr, 0), \"Purchase amount out of limits.\")\n\n    }\n\n    function abi_encode_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds Pre-Sale token limit.\")\n\n    }\n\n    function abi_encode_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting period not yet completed\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b(memPtr) {\n\n        mstore(add(memPtr, 0), \"No vested tokens to release\")\n\n    }\n\n    function abi_encode_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_05043e7e6a7e43f546dc3edaeb19e4aba3d9787fc557c8eb5421e8352d209d3b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pre-Sale can only start after Pr\")\n\n        mstore(add(memPtr, 32), \"ivate Sale.\")\n\n    }\n\n    function abi_encode_t_stringliteral_05043e7e6a7e43f546dc3edaeb19e4aba3d9787fc557c8eb5421e8352d209d3b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_05043e7e6a7e43f546dc3edaeb19e4aba3d9787fc557c8eb5421e8352d209d3b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_05043e7e6a7e43f546dc3edaeb19e4aba3d9787fc557c8eb5421e8352d209d3b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_05043e7e6a7e43f546dc3edaeb19e4aba3d9787fc557c8eb5421e8352d209d3b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2442b511367f0b2d1fcb1c2739922b9057f05346fc1b0da072e9b62ecd0f2126(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale must be completed b\")\n\n        mstore(add(memPtr, 32), \"efore starting Pre-Sale.\")\n\n    }\n\n    function abi_encode_t_stringliteral_2442b511367f0b2d1fcb1c2739922b9057f05346fc1b0da072e9b62ecd0f2126_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_2442b511367f0b2d1fcb1c2739922b9057f05346fc1b0da072e9b62ecd0f2126(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2442b511367f0b2d1fcb1c2739922b9057f05346fc1b0da072e9b62ecd0f2126__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2442b511367f0b2d1fcb1c2739922b9057f05346fc1b0da072e9b62ecd0f2126_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance to stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_17f20696f0fa86018195f469014cbcb189920391ba0d2a0304f597cf79bbbbe7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid price data from oracle\")\n\n    }\n\n    function abi_encode_t_stringliteral_17f20696f0fa86018195f469014cbcb189920391ba0d2a0304f597cf79bbbbe7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_17f20696f0fa86018195f469014cbcb189920391ba0d2a0304f597cf79bbbbe7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_17f20696f0fa86018195f469014cbcb189920391ba0d2a0304f597cf79bbbbe7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_17f20696f0fa86018195f469014cbcb189920391ba0d2a0304f597cf79bbbbe7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a(memPtr) {\n\n        mstore(add(memPtr, 0), \"USD amount must be greater than \")\n\n        mstore(add(memPtr, 32), \"0\")\n\n    }\n\n    function abi_encode_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale tokens must be grea\")\n\n        mstore(add(memPtr, 32), \"ter than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale sold tokens exceed \")\n\n        mstore(add(memPtr, 32), \"available tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token price calculated\")\n\n    }\n\n    function abi_encode_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996(memPtr) {\n\n        mstore(add(memPtr, 0), \"Calculated tokens must be greate\")\n\n        mstore(add(memPtr, 32), \"r than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x228 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x122 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xC040E6B8 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x801 JUMPI DUP1 PUSH4 0xC552E04B EQ PUSH2 0x82B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x855 JUMPI DUP1 PUSH4 0xE6BD92B9 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8BB JUMPI PUSH2 0x268 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0xB0E68630 EQ PUSH2 0x759 JUMPI DUP1 PUSH4 0xB68ED11F EQ PUSH2 0x783 JUMPI DUP1 PUSH4 0xBA20CF4C EQ PUSH2 0x7AD JUMPI DUP1 PUSH4 0xBDA95633 EQ PUSH2 0x7D7 JUMPI PUSH2 0x268 JUMP JUMPDEST DUP1 PUSH4 0x8F7713FF GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x8F7713FF EQ PUSH2 0x64D JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x677 JUMPI DUP1 PUSH4 0x920168B3 EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0x95CCEA67 EQ PUSH2 0x6CB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6F3 JUMPI PUSH2 0x268 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x5D1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5F9 JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x623 JUMPI PUSH2 0x268 JUMP JUMPDEST DUP1 PUSH4 0x2B1CBC38 GT PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x40F02AB6 GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x40F02AB6 EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0x54DD1DA4 EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0x55DD574C EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0x5FB3B944 EQ PUSH2 0x555 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x57F JUMPI PUSH2 0x268 JUMP JUMPDEST DUP1 PUSH4 0x2B1CBC38 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x32C85AC0 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x338DBF59 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0x4E3 JUMPI PUSH2 0x268 JUMP JUMPDEST DUP1 PUSH4 0x1514617E GT PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x1514617E EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x192399D1 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x43B JUMPI PUSH2 0x268 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xFE83BB8 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x10C7F0B9 EQ PUSH2 0x333 JUMPI PUSH2 0x268 JUMP JUMPDEST CALLDATASIZE PUSH2 0x268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A SWAP1 PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x27EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x289F JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x28F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x2938 JUMP JUMPDEST PUSH2 0x99B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x29BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x383 PUSH2 0x9D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AD PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x29D7 JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x425 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x2A02 JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x28F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH2 0xA28 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x477 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x29D7 JUMP JUMPDEST PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x2A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CB PUSH2 0xB04 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E1 PUSH2 0xBD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x2938 JUMP JUMPDEST PUSH2 0xD45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x513 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x534 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53D PUSH2 0x125D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x553 PUSH2 0x1450 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x569 PUSH2 0x1584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x29D7 JUMP JUMPDEST PUSH2 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CF PUSH2 0x15CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x2938 JUMP JUMPDEST PUSH2 0x15E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x604 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60D PUSH2 0x1809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x637 PUSH2 0x1831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x658 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x661 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x682 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x68B PUSH2 0x1995 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B5 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6EC SWAP2 SWAP1 PUSH2 0x289F JUMP JUMPDEST PUSH2 0x19AA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x707 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x27EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x728 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x743 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x73E SWAP2 SWAP1 PUSH2 0x289F JUMP JUMPDEST PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x750 SWAP2 SWAP1 PUSH2 0x28F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x764 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x76D PUSH2 0x1B50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77A SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x797 PUSH2 0x1B56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A4 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7EB PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x815 PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x2B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x836 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x83F PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x860 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x87B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x876 SWAP2 SWAP1 PUSH2 0x2B3A JUMP JUMPDEST PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x888 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A5 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8DC SWAP2 SWAP1 PUSH2 0x29D7 JUMP JUMPDEST PUSH2 0x1C08 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x8F2 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x91E SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x969 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x940 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x969 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x94C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x97D PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP PUSH2 0x98A DUP2 DUP6 DUP6 PUSH2 0x1C93 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9AA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA04 PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP PUSH2 0xA11 DUP6 DUP3 DUP6 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0xA1C DUP6 DUP6 DUP6 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA30 PUSH2 0x1E27 JUMP JUMPDEST PUSH2 0xA38 PUSH2 0x1EAE JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH2 0xA44 PUSH2 0x1809 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xA8F PUSH2 0x1809 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D DUP3 PUSH1 0x40 MLOAD PUSH2 0xAD4 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xAE5 PUSH2 0x1EFD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB0C PUSH2 0x1E27 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD EQ DUP1 PUSH2 0xB21 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x10 SLOAD EQ JUMPDEST PUSH2 0xB60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB57 SWAP1 PUSH2 0x2C1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB84 JUMPI PUSH2 0xB83 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x273467821F33675618854603EF917EBCEC8A1A39F95C43D5564ED1AEFAB870B3 PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0xBC6 SWAP2 SWAP1 PUSH2 0x2B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xBD8 PUSH2 0x1E27 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC0C JUMPI PUSH2 0xC0B PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST EQ PUSH2 0xC4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC43 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB SLOAD EQ PUSH2 0xC90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC87 SWAP1 PUSH2 0x2D3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x10 SLOAD EQ PUSH2 0xCD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCB SWAP1 PUSH2 0x2DC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCF9 JUMPI PUSH2 0xCF8 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x273467821F33675618854603EF917EBCEC8A1A39F95C43D5564ED1AEFAB870B3 PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0xD3B SWAP2 SWAP1 PUSH2 0x2B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xD4D PUSH2 0x1EAE JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD60 JUMPI PUSH2 0xD5F PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD81 JUMPI PUSH2 0xD80 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST SUB PUSH2 0xDC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB8 SWAP1 PUSH2 0x2E31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xDCA PUSH2 0x1831 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xE0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE05 SWAP1 PUSH2 0x2E99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE23 JUMPI PUSH2 0xE22 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE44 JUMPI PUSH2 0xE43 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1076 JUMPI PUSH1 0x8 SLOAD PUSH1 0xB SLOAD LT PUSH2 0xE8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE86 SWAP1 PUSH2 0x2F01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEC4 PUSH2 0xEBF PUSH8 0xDE0B6B3A7640000 PUSH2 0xEB1 DUP6 DUP8 PUSH2 0x1F07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F31 JUMP JUMPDEST SWAP1 POP PUSH2 0xEDB DUP2 PUSH1 0xB SLOAD PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH2 0xF28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1F SWAP1 PUSH2 0x2F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF78 DUP2 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xFE2 PUSH1 0x14 SLOAD PUSH2 0xFD4 PUSH1 0x15 SLOAD TIMESTAMP PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FA81BB0702332EA2A0AEE44BB9E4D359CF4A2C5A820DD59D9129369BDBCA73F DUP3 PUSH1 0x40 MLOAD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x1089 JUMPI PUSH2 0x1088 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x10AA JUMPI PUSH2 0x10A9 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1249 JUMPI PUSH1 0xD SLOAD PUSH1 0x10 SLOAD LT PUSH2 0x10F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EC SWAP1 PUSH2 0x2FF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH9 0x56BC75E2D63100000 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x1117 JUMPI POP PUSH9 0xA2A15D09519BE00000 DUP4 GT ISZERO JUMPDEST PUSH2 0x1156 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114D SWAP1 PUSH2 0x305F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x118B PUSH2 0x1186 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1178 DUP6 DUP8 PUSH2 0x1F07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2124 JUMP JUMPDEST SWAP1 POP PUSH2 0x11A2 DUP2 PUSH1 0x10 SLOAD PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 DUP2 SWAP1 SSTORE POP PUSH1 0xD SLOAD PUSH1 0x10 SLOAD GT ISZERO PUSH2 0x11EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E6 SWAP1 PUSH2 0x30C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11FA ADDRESS CALLER DUP4 PUSH2 0x1D37 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x550498DC565CC74203B9D14CBA907C9F60CEEFE26E82B37DF98F6CB98529CF19 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1240 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST JUMPDEST POP POP PUSH2 0x1254 PUSH2 0x1EFD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1265 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DC SWAP1 PUSH2 0x3155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135F SWAP1 PUSH2 0x31BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x13F7 ADDRESS CALLER DUP4 PUSH2 0x1D37 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6BC5063C7239B75C8BF325A2A2238F726FADA322163996BB6C93D5594FB119F0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x143D SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x144E PUSH2 0x1EFD JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1458 PUSH2 0x1E27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x146C JUMPI PUSH2 0x146B PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x148D JUMPI PUSH2 0x148C PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x14CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C4 SWAP1 PUSH2 0x324B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD EQ PUSH2 0x1513 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150A SWAP1 PUSH2 0x32D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1538 JUMPI PUSH2 0x1537 PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x273467821F33675618854603EF917EBCEC8A1A39F95C43D5564ED1AEFAB870B3 PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x157A SWAP2 SWAP1 PUSH2 0x2B21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D7 PUSH2 0x1E27 JUMP JUMPDEST PUSH2 0x15E0 PUSH0 PUSH2 0x2230 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x15EA PUSH2 0x1E27 JUMP JUMPDEST PUSH2 0x15F2 PUSH2 0x1EAE JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1634 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x162B SWAP1 PUSH2 0x3341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x163E CALLER PUSH2 0x158A JUMP JUMPDEST LT ISZERO PUSH2 0x167F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1676 SWAP1 PUSH2 0x33A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x168A CALLER ADDRESS DUP4 PUSH2 0x1D37 JUMP JUMPDEST PUSH2 0x16DA DUP2 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1730 PUSH1 0x15 SLOAD TIMESTAMP PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDD2A19C3BDD089CBE77C04F5655F83DE0504D6140D12C8667646F55D0557C4DC DUP3 PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x17F6 SWAP3 SWAP2 SWAP1 PUSH2 0x33C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1806 PUSH2 0x1EFD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x16 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1959 JUMPI PUSH0 PUSH1 0x16 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x185A JUMPI PUSH2 0x1859 PUSH2 0x33EE JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18EE SWAP2 SWAP1 PUSH2 0x34A1 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0x1936 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192D SWAP1 PUSH2 0x3562 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1949 DUP2 DUP5 PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1838 JUMP JUMPDEST POP PUSH2 0x1989 PUSH5 0x2540BE400 PUSH2 0x197B PUSH1 0x16 DUP1 SLOAD SWAP1 POP DUP5 PUSH2 0x1F1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH11 0xA56FA5B99019A5C8000000 DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19B2 PUSH2 0x1E27 JUMP JUMPDEST PUSH2 0x19BA PUSH2 0x1EAE JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x19DE PUSH2 0x1809 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19FC SWAP3 SWAP2 SWAP1 PUSH2 0x3580 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A18 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A3C SWAP2 SWAP1 PUSH2 0x35D1 JUMP JUMPDEST POP PUSH2 0x1A45 PUSH2 0x1809 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D DUP3 PUSH1 0x40 MLOAD PUSH2 0x1A8A SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1A9A PUSH2 0x1EFD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AAD SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AD9 SWAP1 PUSH2 0x2BA5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B24 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1AFB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B24 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B07 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1B38 PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP PUSH2 0x1B45 DUP2 DUP6 DUP6 PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C10 PUSH2 0x1E27 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C80 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C77 SWAP2 SWAP1 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C89 DUP2 PUSH2 0x2230 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1CA0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x22F3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB0 DUP5 DUP5 PUSH2 0x1B80 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1D31 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1D22 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D19 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D30 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x22F3 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DA7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9E SWAP2 SWAP1 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E17 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0E SWAP2 SWAP1 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E22 DUP4 DUP4 DUP4 PUSH2 0x24C2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1E2F PUSH2 0x1C8C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E4D PUSH2 0x1809 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EAC JUMPI PUSH2 0x1E70 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA3 SWAP2 SWAP1 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1EF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EEA SWAP1 PUSH2 0x367B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1F14 SWAP2 SWAP1 PUSH2 0x36C6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1F29 SWAP2 SWAP1 PUSH2 0x3734 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 GT PUSH2 0x1F74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6B SWAP1 PUSH2 0x37D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD GT PUSH2 0x1FB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FAF SWAP1 PUSH2 0x3862 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH2 0x1FFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF6 SWAP1 PUSH2 0x38F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2017 PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x26DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2057 PUSH2 0x2046 PUSH1 0x8 SLOAD PUSH2 0x2038 PUSH1 0xB SLOAD DUP7 PUSH2 0x1F07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x206D JUMPI POP PUSH1 0xA SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x20AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20A3 SWAP1 PUSH2 0x3958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x20C0 DUP3 DUP7 PUSH2 0x1F1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x2104 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20FB SWAP1 PUSH2 0x39E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x211C SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2179 PUSH2 0x2168 PUSH1 0xD SLOAD PUSH2 0x215A PUSH1 0x10 SLOAD PUSH2 0x214C PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH2 0x26DB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x210F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xE SLOAD DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x218F JUMPI POP PUSH1 0xF SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x21CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C5 SWAP1 PUSH2 0x3958 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x21E2 DUP3 DUP6 PUSH2 0x1F1C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x2226 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x221D SWAP1 PUSH2 0x39E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2363 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235A SWAP2 SWAP1 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x23D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23CA SWAP2 SWAP1 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x24BC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x24B3 SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2512 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2506 SWAP2 SWAP1 PUSH2 0x3A04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x25E0 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x259B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2592 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2627 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2671 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x26CE SWAP2 SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x26E8 SWAP2 SWAP1 PUSH2 0x3A37 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x44697265637420455448207472616E7366657273206E6F7420616C6C6F776564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x275A PUSH1 0x21 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2765 DUP3 PUSH2 0x2700 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2787 DUP2 PUSH2 0x274E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27C0 DUP3 PUSH2 0x278E JUMP JUMPDEST PUSH2 0x27CA DUP2 DUP6 PUSH2 0x26F0 JUMP JUMPDEST SWAP4 POP PUSH2 0x27DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2798 JUMP JUMPDEST PUSH2 0x27E3 DUP2 PUSH2 0x27A6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2806 DUP2 DUP5 PUSH2 0x27B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x283B DUP3 PUSH2 0x2812 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x284B DUP2 PUSH2 0x2831 JUMP JUMPDEST DUP2 EQ PUSH2 0x2855 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2866 DUP2 PUSH2 0x2842 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x287E DUP2 PUSH2 0x286C JUMP JUMPDEST DUP2 EQ PUSH2 0x2888 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2899 DUP2 PUSH2 0x2875 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28B5 JUMPI PUSH2 0x28B4 PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28C2 DUP6 DUP3 DUP7 ADD PUSH2 0x2858 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28D3 DUP6 DUP3 DUP7 ADD PUSH2 0x288B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F1 DUP2 PUSH2 0x28DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x290A PUSH0 DUP4 ADD DUP5 PUSH2 0x28E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2919 DUP2 PUSH2 0x286C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2932 PUSH0 DUP4 ADD DUP5 PUSH2 0x2910 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x294D JUMPI PUSH2 0x294C PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x295A DUP5 DUP3 DUP6 ADD PUSH2 0x288B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2986 PUSH2 0x2981 PUSH2 0x297C DUP5 PUSH2 0x2812 JUMP JUMPDEST PUSH2 0x2963 JUMP JUMPDEST PUSH2 0x2812 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2997 DUP3 PUSH2 0x296C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29A8 DUP3 PUSH2 0x298D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B8 DUP2 PUSH2 0x299E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29D1 PUSH0 DUP4 ADD DUP5 PUSH2 0x29AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29EC JUMPI PUSH2 0x29EB PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29F9 DUP5 DUP3 DUP6 ADD PUSH2 0x2858 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A19 JUMPI PUSH2 0x2A18 PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A26 DUP7 DUP3 DUP8 ADD PUSH2 0x2858 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2A37 DUP7 DUP3 DUP8 ADD PUSH2 0x2858 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2A48 DUP7 DUP3 DUP8 ADD PUSH2 0x288B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A67 DUP2 PUSH2 0x2A52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A80 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A8F DUP2 PUSH2 0x2831 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AA8 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2AEC JUMPI PUSH2 0x2AEB PUSH2 0x2AAE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2AFC DUP3 PUSH2 0x2ADB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B0B DUP3 PUSH2 0x2AEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B1B DUP2 PUSH2 0x2B01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B34 PUSH0 DUP4 ADD DUP5 PUSH2 0x2B12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B50 JUMPI PUSH2 0x2B4F PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B5D DUP6 DUP3 DUP7 ADD PUSH2 0x2858 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B6E DUP6 DUP3 DUP7 ADD PUSH2 0x2858 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2BBC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2BCF JUMPI PUSH2 0x2BCE PUSH2 0x2B78 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616C65732074617267657473206E6F7420796574206D65742E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C09 PUSH1 0x1A DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C14 DUP3 PUSH2 0x2BD5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C36 DUP2 PUSH2 0x2BFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C652063616E206F6E6C792073746172742066726F6D PUSH0 DUP3 ADD MSTORE PUSH32 0x204E4F4E452073746167652E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C97 PUSH1 0x2C DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA2 DUP3 PUSH2 0x2C3D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CC4 DUP2 PUSH2 0x2C8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520746F6B656E732073686F756C6420626520756E PUSH0 DUP3 ADD MSTORE PUSH32 0x736F6C642061742073746172742E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D25 PUSH1 0x2E DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D30 DUP3 PUSH2 0x2CCB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D52 DUP2 PUSH2 0x2D19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D53616C652073686F756C64206E6F7420686176652073746172746564 PUSH0 DUP3 ADD MSTORE PUSH32 0x206265666F726520507269766174652053616C652E0000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DB3 PUSH1 0x35 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DBE DUP3 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DE0 DUP2 PUSH2 0x2DA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2073616C65206973206163746976652E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E1B PUSH1 0x12 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E26 DUP3 PUSH2 0x2DE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E48 DUP2 PUSH2 0x2E0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642070726963652066726F6D206F7261636C6500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E83 PUSH1 0x19 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E8E DUP3 PUSH2 0x2E4F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EB0 DUP2 PUSH2 0x2E77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520736F6C64206F75742E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EEB PUSH1 0x16 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF6 DUP3 PUSH2 0x2EB7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F18 DUP2 PUSH2 0x2EDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4578636565647320507269766174652053616C6520746F6B656E206C696D6974 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F79 PUSH1 0x21 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F84 DUP3 PUSH2 0x2F1F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FA6 DUP2 PUSH2 0x2F6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D53616C6520736F6C64206F75742E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FE1 PUSH1 0x12 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FEC DUP3 PUSH2 0x2FAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x300E DUP2 PUSH2 0x2FD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507572636861736520616D6F756E74206F7574206F66206C696D6974732E0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3049 PUSH1 0x1E DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3054 DUP3 PUSH2 0x3015 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3076 DUP2 PUSH2 0x303D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473205072652D53616C6520746F6B656E206C696D69742E000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x30B1 PUSH1 0x1D DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x30BC DUP3 PUSH2 0x307D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30DE DUP2 PUSH2 0x30A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E6720706572696F64206E6F742079657420636F6D706C65746564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x313F PUSH1 0x21 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x314A DUP3 PUSH2 0x30E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x316C DUP2 PUSH2 0x3133 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2076657374656420746F6B656E7320746F2072656C656173650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x31A7 PUSH1 0x1B DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x31B2 DUP3 PUSH2 0x3173 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x31D4 DUP2 PUSH2 0x319B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D53616C652063616E206F6E6C79207374617274206166746572205072 PUSH0 DUP3 ADD MSTORE PUSH32 0x69766174652053616C652E000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3235 PUSH1 0x2B DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3240 DUP3 PUSH2 0x31DB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3262 DUP2 PUSH2 0x3229 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C65206D75737420626520636F6D706C657465642062 PUSH0 DUP3 ADD MSTORE PUSH32 0x65666F7265207374617274696E67205072652D53616C652E0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32C3 PUSH1 0x38 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x32CE DUP3 PUSH2 0x3269 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x32F0 DUP2 PUSH2 0x32B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x332B PUSH1 0x1D DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3336 DUP3 PUSH2 0x32F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3358 DUP2 PUSH2 0x331F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F207374616B65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3393 PUSH1 0x1D DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x339E DUP3 PUSH2 0x335F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33C0 DUP2 PUSH2 0x3387 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33DA PUSH0 DUP4 ADD DUP6 PUSH2 0x2910 JUMP JUMPDEST PUSH2 0x33E7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2910 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3439 DUP2 PUSH2 0x341B JUMP JUMPDEST DUP2 EQ PUSH2 0x3443 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3454 DUP2 PUSH2 0x3430 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x346C DUP2 PUSH2 0x345A JUMP JUMPDEST DUP2 EQ PUSH2 0x3476 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3487 DUP2 PUSH2 0x3463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x349B DUP2 PUSH2 0x2875 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x34BA JUMPI PUSH2 0x34B9 PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x34C7 DUP9 DUP3 DUP10 ADD PUSH2 0x3446 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x34D8 DUP9 DUP3 DUP10 ADD PUSH2 0x3479 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x34E9 DUP9 DUP3 DUP10 ADD PUSH2 0x348D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x34FA DUP9 DUP3 DUP10 ADD PUSH2 0x348D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x350B DUP9 DUP3 DUP10 ADD PUSH2 0x3446 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x496E76616C696420707269636520646174612066726F6D206F7261636C650000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x354C PUSH1 0x1E DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3557 DUP3 PUSH2 0x3518 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3579 DUP2 PUSH2 0x3540 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3593 PUSH0 DUP4 ADD DUP6 PUSH2 0x2A86 JUMP JUMPDEST PUSH2 0x35A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2910 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x35B0 DUP2 PUSH2 0x28DD JUMP JUMPDEST DUP2 EQ PUSH2 0x35BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x35CB DUP2 PUSH2 0x35A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35E6 JUMPI PUSH2 0x35E5 PUSH2 0x280E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x35F3 DUP5 DUP3 DUP6 ADD PUSH2 0x35BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x360F PUSH0 DUP4 ADD DUP7 PUSH2 0x2A86 JUMP JUMPDEST PUSH2 0x361C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2910 JUMP JUMPDEST PUSH2 0x3629 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2910 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3665 PUSH1 0x1F DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3670 DUP3 PUSH2 0x3631 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3692 DUP2 PUSH2 0x3659 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x36D0 DUP3 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x36DB DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x36E9 DUP2 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3700 JUMPI PUSH2 0x36FF PUSH2 0x3699 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x373E DUP3 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3749 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3759 JUMPI PUSH2 0x3758 PUSH2 0x3707 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55534420616D6F756E74206D7573742062652067726561746572207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x37BE PUSH1 0x21 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x37C9 DUP3 PUSH2 0x3764 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x37EB DUP2 PUSH2 0x37B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520746F6B656E73206D7573742062652067726561 PUSH0 DUP3 ADD MSTORE PUSH32 0x746572207468616E203000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x384C PUSH1 0x2A DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3857 DUP3 PUSH2 0x37F2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3879 DUP2 PUSH2 0x3840 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520736F6C6420746F6B656E732065786365656420 PUSH0 DUP3 ADD MSTORE PUSH32 0x617661696C61626C6520746F6B656E7300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x38DA PUSH1 0x30 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x38E5 DUP3 PUSH2 0x3880 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3907 DUP2 PUSH2 0x38CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E2070726963652063616C63756C617465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3942 PUSH1 0x1E DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x394D DUP3 PUSH2 0x390E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x396F DUP2 PUSH2 0x3936 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C63756C6174656420746F6B656E73206D75737420626520677265617465 PUSH0 DUP3 ADD MSTORE PUSH32 0x72207468616E2030000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x39D0 PUSH1 0x28 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x39DB DUP3 PUSH2 0x3976 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x39FD DUP2 PUSH2 0x39C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3A0E DUP3 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3A19 DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3A31 JUMPI PUSH2 0x3A30 PUSH2 0x3699 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3A41 DUP3 PUSH2 0x286C JUMP JUMPDEST SWAP2 POP PUSH2 0x3A4C DUP4 PUSH2 0x286C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3A64 JUMPI PUSH2 0x3A63 PUSH2 0x3699 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xB8 DUP5 OR CHAINID STATICCALL LOG3 0xD8 MSTORE8 0xAB MULMOD LOG0 SWAP3 PUSH8 0x2CAF5C2942261C27 SWAP5 STATICCALL 0xB5 EXP 0xF7 PUSH1 0xC2 0xB4 0x2B 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "367:8291:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8606:43;;;;;;;;;;:::i;:::-;;;;;;;;367:8291;8513:43;;;;;;;;;;:::i;:::-;;;;;;;;2074:89:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1082:53:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1720:41;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1609;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1495:49:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8268:201:9;;;;;;;;;;;;;:::i;:::-;;1550:53;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7791:259:9;;;;;;;;;;;;;:::i;:::-;;3083:407;;;;;;;;;;;;;:::i;:::-;;3843:1546;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1664:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7311:474;;;;;;;;;;;;;:::i;:::-;;3496:341;;;;;;;;;;;;;:::i;:::-;;926:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:1;;;;;;;;;;;;;:::i;:::-;;6794:511:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2564:513:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1242:47;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;459:61;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1161:52;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8056:206;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2276:93:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;760:55:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1315:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;594:55;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;843:54;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1423:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;679:56;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;999:52:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:4;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;1082:53:9:-;;;;:::o;1720:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1609:::-;;;;:::o;3144:97:4:-;3196:7;3222:12;;3215:19;;3144:97;:::o;1495:49:9:-;;;;;;;;;;;;;;;;;:::o;5039:244:4:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;8268:201:9:-;1531:13:1;:11;:13::i;:::-;2261:21:3::1;:19;:21::i;:::-;8335:14:9::2;8352:21;8335:38;;8391:7;:5;:7::i;:::-;8383:25;;:33;8409:6;8383:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;8446:7;:5;:7::i;:::-;8431:31;;;8455:6;8431:31;;;;;;:::i;:::-;;;;;;;;8325:144;2303:20:3::1;:18;:20::i;:::-;8268:201:9:o:0;1550:53::-;;;;;;;;;;;;;;;;;:::o;3002:82:4:-;3051:5;3075:2;3068:9;;3002:82;:::o;7791:259:9:-;1531:13:1;:11;:13::i;:::-;7874:17:9::1;;7849:21;;:42;:80;;;;7916:13;;7895:17;;:34;7849:80;7841:136;;;;;;;;;;;;:::i;:::-;;;;;;;;;7995:14;7987:5;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;8024:19;8037:5;;;;;;;;;;;8024:19;;;;;;:::i;:::-;;;;;;;;7791:259::o:0;3083:407::-;1531:13:1;:11;:13::i;:::-;3157:14:9::1;3148:23;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;3140:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;3263:1;3238:21;;:26;3230:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3354:1;3333:17;;:22;3325:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;3432:17;3424:5;;:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3464:19;3477:5;;;;;;;;;;;3464:19;;;;;;:::i;:::-;;;;;;;;3083:407::o:0;3843:1546::-;2261:21:3;:19;:21::i;:::-;3938:14:9::1;3929:23;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;::::0;3921:54:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3986:19;4008:16;:14;:16::i;:::-;3986:38;;4056:1;4042:11;:15;4034:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4098:19;4140:17;4131:26;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;::::0;4127:1256:::1;;4205:17;;4181:21;;:41;4173:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;4277:67;4304:39;4335:7;4304:26;4318:11;4304:9;:13;;:26;;;;:::i;:::-;:30;;:39;;;;:::i;:::-;4277:26;:67::i;:::-;4263:81;;4382:38;4408:11;4382:21;;:25;;:38;;;;:::i;:::-;4358:21;:62;;;;4467:17;;4442:21;;:42;;4434:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;4565:43;4596:11;4565:14;:26;4580:10;4565:26;;;;;;;;;;;;;;;;:30;;:43;;;;:::i;:::-;4536:14;:26;4551:10;4536:26;;;;;;;;;;;;;;;:72;;;;4655:55;4694:15;;4655:34;4675:13;;4655:15;:19;;:34;;;;:::i;:::-;:38;;:55;;;;:::i;:::-;4622:18;:30;4641:10;4622:30;;;;;;;;;;;;;;;:88;;;;4741:10;4729:36;;;4753:11;4729:36;;;;;;:::i;:::-;;;;;;;;4127:1256;;;4795:17;4786:26:::0;::::1;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;::::0;4782:601:::1;;4856:13;;4836:17;;:33;4828:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;4927:14;4914:9;:27;;:60;;;;;4958:16;4945:9;:29;;4914:60;4906:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5037:63;5060:39;5091:7;5060:26;5074:11;5060:9;:13;;:26;;;;:::i;:::-;:30;;:39;;;;:::i;:::-;5037:22;:63::i;:::-;5023:77;;5134:34;5156:11;5134:17;;:21;;:34;;;;:::i;:::-;5114:17;:54;;;;5211:13;;5190:17;;:34;;5182:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5272:49;5290:4;5297:10;5309:11;5272:9;:49::i;:::-;5348:10;5340:32;;;5360:11;5340:32;;;;;;:::i;:::-;;;;;;;;4782:601;4127:1256;3911:1478;;2303:20:3::0;:18;:20::i;:::-;3843:1546:9;:::o;1664:39::-;;;;:::o;7311:474::-;2261:21:3;:19;:21::i;:::-;7401:18:9::1;:30;7420:10;7401:30;;;;;;;;;;;;;;;;7382:15;:49;;7374:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;7479:14;7496;:26;7511:10;7496:26;;;;;;;;;;;;;;;;7479:43;;7549:1;7540:6;:10;7532:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;7622:1;7593:14;:26;7608:10;7593:26;;;;;;;;;;;;;;;:30;;;;7666:1;7633:18;:30;7652:10;7633:30;;;;;;;;;;;;;;;:34;;;;7678:44;7696:4;7703:10;7715:6;7678:9;:44::i;:::-;7759:10;7738:40;;;7771:6;7738:40;;;;;;:::i;:::-;;;;;;;;7364:421;2303:20:3::0;:18;:20::i;:::-;7311:474:9:o;3496:341::-;1531:13:1;:11;:13::i;:::-;3566:17:9::1;3557:26;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;3549:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3674:17;;3649:21;;:42;3641:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;3779:17;3771:5;;:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3811:19;3824:5;;;;;;;;;;;3811:19;;;;;;:::i;:::-;;;;;;;;3496:341::o:0;926:40::-;;;;:::o;3299:116:4:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;6794:511:9:-;1531:13:1;:11;:13::i;:::-;2261:21:3::1;:19;:21::i;:::-;6890:1:9::2;6881:6;:10;6873:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;6968:6;6943:21;6953:10;6943:9;:21::i;:::-;:31;;6935:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7019:44;7029:10;7049:4;7056:6;7019:9;:44::i;:::-;7103:38;7134:6;7103:14;:26;7118:10;7103:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;7074:14;:26;7089:10;7074:26;;;;;;;;;;;;;;;:67;;;;7184:34;7204:13;;7184:15;:19;;:34;;;;:::i;:::-;7151:18;:30;7170:10;7151:30;;;;;;;;;;;;;;;:67;;;;7247:10;7234:64;;;7259:6;7267:18;:30;7286:10;7267:30;;;;;;;;;;;;;;;;7234:64;;;;;;;:::i;:::-;;;;;;;;2303:20:3::1;:18;:20::i;:::-;6794:511:9::0;:::o;1638:85:1:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2564:513:9:-;2611:7;2630:18;2651:1;2630:22;;2667:9;2662:326;2686:10;:17;;;;2682:1;:21;2662:326;;;2760:9;2823:10;2834:1;2823:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2724:130;;;;;;2884:1;2876:5;:9;2868:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2947:30;2970:5;2947:10;:14;;:30;;;;:::i;:::-;2934:43;;2710:278;2705:3;;;;;;;2662:326;;;;3004:47;3042:8;3004:33;3019:10;:17;;;;3004:10;:14;;:33;;;;:::i;:::-;:37;;:47;;;;:::i;:::-;2997:54;;;2564:513;:::o;1242:47::-;;;;:::o;459:61::-;498:22;459:61;:::o;1161:52::-;;;;:::o;8056:206::-;1531:13:1;:11;:13::i;:::-;2261:21:3::1;:19;:21::i;:::-;8170:12:9::2;8163:29;;;8193:7;:5;:7::i;:::-;8202:6;8163:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8239:7;:5;:7::i;:::-;8224:31;;;8248:6;8224:31;;;;;;:::i;:::-;;;;;;;;2303:20:3::1;:18;:20::i;:::-;8056:206:9::0;;:::o;2276:93:4:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;760:55:9:-;;;;:::o;1315:36::-;;;;:::o;594:55::-;;;;:::o;843:54::-;;;;:::o;1423:39::-;;;;;;;;;;;;;:::o;679:56::-;;;;:::o;3846:140:4:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;999:52:9:-;;;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8989:128:4:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:1:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;3465:96:8:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;5395:864:9:-;5473:7;5512:1;5500:9;:13;5492:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;5589:1;5569:17;;:21;5561:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5680:17;;5655:21;;:42;;5647:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5761:18;5782:46;5806:21;;5782:19;;:23;;:46;;;;:::i;:::-;5761:67;;5838:20;5861:109;5900:60;5942:17;;5900:37;5915:21;;5900:10;:14;;:37;;;;:::i;:::-;:41;;:60;;;;:::i;:::-;5861:21;;:25;;:109;;;;:::i;:::-;5838:132;;6005:21;;5989:12;:37;;:76;;;;;6046:19;;6030:12;:35;;5989:76;5981:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;6111:14;6128:27;6142:12;6128:9;:13;;:27;;;;:::i;:::-;6111:44;;6182:1;6173:6;:10;6165:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;6246:6;6239:13;;;;;5395:864;;;:::o;2755:96:8:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;6265:523:9:-;6339:7;6358:20;6381:127;6416:82;6484:13;;6416:63;6461:17;;6417:38;6437:17;;6417:15;;:19;;:38;;;;:::i;:::-;6416:44;;:63;;;;:::i;:::-;:67;;:82;;;;:::i;:::-;6381:17;;:21;;:127;;;;:::i;:::-;6358:150;;6542:17;;6526:12;:33;;:68;;;;;6579:15;;6563:12;:31;;6526:68;6518:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;6640:14;6657:27;6671:12;6657:9;:13;;:27;;;;:::i;:::-;6640:44;;6711:1;6702:6;:10;6694:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;6775:6;6768:13;;;;6265:523;;;:::o;2912:187:1:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:4:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;3122:96:8:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;7:169:10:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:220::-;322:34;318:1;310:6;306:14;299:58;391:3;386:2;378:6;374:15;367:28;182:220;:::o;408:366::-;550:3;571:67;635:2;630:3;571:67;:::i;:::-;564:74;;647:93;736:3;647:93;:::i;:::-;765:2;760:3;756:12;749:19;;408:366;;;:::o;780:419::-;946:4;984:2;973:9;969:18;961:26;;1033:9;1027:4;1023:20;1019:1;1008:9;1004:17;997:47;1061:131;1187:4;1061:131;:::i;:::-;1053:139;;780:419;;;:::o;1205:99::-;1257:6;1291:5;1285:12;1275:22;;1205:99;;;:::o;1310:139::-;1399:6;1394:3;1389;1383:23;1440:1;1431:6;1426:3;1422:16;1415:27;1310:139;;;:::o;1455:102::-;1496:6;1547:2;1543:7;1538:2;1531:5;1527:14;1523:28;1513:38;;1455:102;;;:::o;1563:377::-;1651:3;1679:39;1712:5;1679:39;:::i;:::-;1734:71;1798:6;1793:3;1734:71;:::i;:::-;1727:78;;1814:65;1872:6;1867:3;1860:4;1853:5;1849:16;1814:65;:::i;:::-;1904:29;1926:6;1904:29;:::i;:::-;1899:3;1895:39;1888:46;;1655:285;1563:377;;;;:::o;1946:313::-;2059:4;2097:2;2086:9;2082:18;2074:26;;2146:9;2140:4;2136:20;2132:1;2121:9;2117:17;2110:47;2174:78;2247:4;2238:6;2174:78;:::i;:::-;2166:86;;1946:313;;;;:::o;2346:117::-;2455:1;2452;2445:12;2592:126;2629:7;2669:42;2662:5;2658:54;2647:65;;2592:126;;;:::o;2724:96::-;2761:7;2790:24;2808:5;2790:24;:::i;:::-;2779:35;;2724:96;;;:::o;2826:122::-;2899:24;2917:5;2899:24;:::i;:::-;2892:5;2889:35;2879:63;;2938:1;2935;2928:12;2879:63;2826:122;:::o;2954:139::-;3000:5;3038:6;3025:20;3016:29;;3054:33;3081:5;3054:33;:::i;:::-;2954:139;;;;:::o;3099:77::-;3136:7;3165:5;3154:16;;3099:77;;;:::o;3182:122::-;3255:24;3273:5;3255:24;:::i;:::-;3248:5;3245:35;3235:63;;3294:1;3291;3284:12;3235:63;3182:122;:::o;3310:139::-;3356:5;3394:6;3381:20;3372:29;;3410:33;3437:5;3410:33;:::i;:::-;3310:139;;;;:::o;3455:474::-;3523:6;3531;3580:2;3568:9;3559:7;3555:23;3551:32;3548:119;;;3586:79;;:::i;:::-;3548:119;3706:1;3731:53;3776:7;3767:6;3756:9;3752:22;3731:53;:::i;:::-;3721:63;;3677:117;3833:2;3859:53;3904:7;3895:6;3884:9;3880:22;3859:53;:::i;:::-;3849:63;;3804:118;3455:474;;;;;:::o;3935:90::-;3969:7;4012:5;4005:13;3998:21;3987:32;;3935:90;;;:::o;4031:109::-;4112:21;4127:5;4112:21;:::i;:::-;4107:3;4100:34;4031:109;;:::o;4146:210::-;4233:4;4271:2;4260:9;4256:18;4248:26;;4284:65;4346:1;4335:9;4331:17;4322:6;4284:65;:::i;:::-;4146:210;;;;:::o;4362:118::-;4449:24;4467:5;4449:24;:::i;:::-;4444:3;4437:37;4362:118;;:::o;4486:222::-;4579:4;4617:2;4606:9;4602:18;4594:26;;4630:71;4698:1;4687:9;4683:17;4674:6;4630:71;:::i;:::-;4486:222;;;;:::o;4714:329::-;4773:6;4822:2;4810:9;4801:7;4797:23;4793:32;4790:119;;;4828:79;;:::i;:::-;4790:119;4948:1;4973:53;5018:7;5009:6;4998:9;4994:22;4973:53;:::i;:::-;4963:63;;4919:117;4714:329;;;;:::o;5049:60::-;5077:3;5098:5;5091:12;;5049:60;;;:::o;5115:142::-;5165:9;5198:53;5216:34;5225:24;5243:5;5225:24;:::i;:::-;5216:34;:::i;:::-;5198:53;:::i;:::-;5185:66;;5115:142;;;:::o;5263:126::-;5313:9;5346:37;5377:5;5346:37;:::i;:::-;5333:50;;5263:126;;;:::o;5395:154::-;5473:9;5506:37;5537:5;5506:37;:::i;:::-;5493:50;;5395:154;;;:::o;5555:187::-;5670:65;5729:5;5670:65;:::i;:::-;5665:3;5658:78;5555:187;;:::o;5748:278::-;5869:4;5907:2;5896:9;5892:18;5884:26;;5920:99;6016:1;6005:9;6001:17;5992:6;5920:99;:::i;:::-;5748:278;;;;:::o;6032:329::-;6091:6;6140:2;6128:9;6119:7;6115:23;6111:32;6108:119;;;6146:79;;:::i;:::-;6108:119;6266:1;6291:53;6336:7;6327:6;6316:9;6312:22;6291:53;:::i;:::-;6281:63;;6237:117;6032:329;;;;:::o;6367:619::-;6444:6;6452;6460;6509:2;6497:9;6488:7;6484:23;6480:32;6477:119;;;6515:79;;:::i;:::-;6477:119;6635:1;6660:53;6705:7;6696:6;6685:9;6681:22;6660:53;:::i;:::-;6650:63;;6606:117;6762:2;6788:53;6833:7;6824:6;6813:9;6809:22;6788:53;:::i;:::-;6778:63;;6733:118;6890:2;6916:53;6961:7;6952:6;6941:9;6937:22;6916:53;:::i;:::-;6906:63;;6861:118;6367:619;;;;;:::o;6992:86::-;7027:7;7067:4;7060:5;7056:16;7045:27;;6992:86;;;:::o;7084:112::-;7167:22;7183:5;7167:22;:::i;:::-;7162:3;7155:35;7084:112;;:::o;7202:214::-;7291:4;7329:2;7318:9;7314:18;7306:26;;7342:67;7406:1;7395:9;7391:17;7382:6;7342:67;:::i;:::-;7202:214;;;;:::o;7422:118::-;7509:24;7527:5;7509:24;:::i;:::-;7504:3;7497:37;7422:118;;:::o;7546:222::-;7639:4;7677:2;7666:9;7662:18;7654:26;;7690:71;7758:1;7747:9;7743:17;7734:6;7690:71;:::i;:::-;7546:222;;;;:::o;7774:180::-;7822:77;7819:1;7812:88;7919:4;7916:1;7909:15;7943:4;7940:1;7933:15;7960:119;8047:1;8040:5;8037:12;8027:46;;8053:18;;:::i;:::-;8027:46;7960:119;:::o;8085:139::-;8136:7;8165:5;8154:16;;8171:47;8212:5;8171:47;:::i;:::-;8085:139;;;:::o;8230:::-;8292:9;8325:38;8357:5;8325:38;:::i;:::-;8312:51;;8230:139;;;:::o;8375:155::-;8474:49;8517:5;8474:49;:::i;:::-;8469:3;8462:62;8375:155;;:::o;8536:246::-;8641:4;8679:2;8668:9;8664:18;8656:26;;8692:83;8772:1;8761:9;8757:17;8748:6;8692:83;:::i;:::-;8536:246;;;;:::o;8788:474::-;8856:6;8864;8913:2;8901:9;8892:7;8888:23;8884:32;8881:119;;;8919:79;;:::i;:::-;8881:119;9039:1;9064:53;9109:7;9100:6;9089:9;9085:22;9064:53;:::i;:::-;9054:63;;9010:117;9166:2;9192:53;9237:7;9228:6;9217:9;9213:22;9192:53;:::i;:::-;9182:63;;9137:118;8788:474;;;;;:::o;9268:180::-;9316:77;9313:1;9306:88;9413:4;9410:1;9403:15;9437:4;9434:1;9427:15;9454:320;9498:6;9535:1;9529:4;9525:12;9515:22;;9582:1;9576:4;9572:12;9603:18;9593:81;;9659:4;9651:6;9647:17;9637:27;;9593:81;9721:2;9713:6;9710:14;9690:18;9687:38;9684:84;;9740:18;;:::i;:::-;9684:84;9505:269;9454:320;;;:::o;9780:176::-;9920:28;9916:1;9908:6;9904:14;9897:52;9780:176;:::o;9962:366::-;10104:3;10125:67;10189:2;10184:3;10125:67;:::i;:::-;10118:74;;10201:93;10290:3;10201:93;:::i;:::-;10319:2;10314:3;10310:12;10303:19;;9962:366;;;:::o;10334:419::-;10500:4;10538:2;10527:9;10523:18;10515:26;;10587:9;10581:4;10577:20;10573:1;10562:9;10558:17;10551:47;10615:131;10741:4;10615:131;:::i;:::-;10607:139;;10334:419;;;:::o;10759:231::-;10899:34;10895:1;10887:6;10883:14;10876:58;10968:14;10963:2;10955:6;10951:15;10944:39;10759:231;:::o;10996:366::-;11138:3;11159:67;11223:2;11218:3;11159:67;:::i;:::-;11152:74;;11235:93;11324:3;11235:93;:::i;:::-;11353:2;11348:3;11344:12;11337:19;;10996:366;;;:::o;11368:419::-;11534:4;11572:2;11561:9;11557:18;11549:26;;11621:9;11615:4;11611:20;11607:1;11596:9;11592:17;11585:47;11649:131;11775:4;11649:131;:::i;:::-;11641:139;;11368:419;;;:::o;11793:233::-;11933:34;11929:1;11921:6;11917:14;11910:58;12002:16;11997:2;11989:6;11985:15;11978:41;11793:233;:::o;12032:366::-;12174:3;12195:67;12259:2;12254:3;12195:67;:::i;:::-;12188:74;;12271:93;12360:3;12271:93;:::i;:::-;12389:2;12384:3;12380:12;12373:19;;12032:366;;;:::o;12404:419::-;12570:4;12608:2;12597:9;12593:18;12585:26;;12657:9;12651:4;12647:20;12643:1;12632:9;12628:17;12621:47;12685:131;12811:4;12685:131;:::i;:::-;12677:139;;12404:419;;;:::o;12829:240::-;12969:34;12965:1;12957:6;12953:14;12946:58;13038:23;13033:2;13025:6;13021:15;13014:48;12829:240;:::o;13075:366::-;13217:3;13238:67;13302:2;13297:3;13238:67;:::i;:::-;13231:74;;13314:93;13403:3;13314:93;:::i;:::-;13432:2;13427:3;13423:12;13416:19;;13075:366;;;:::o;13447:419::-;13613:4;13651:2;13640:9;13636:18;13628:26;;13700:9;13694:4;13690:20;13686:1;13675:9;13671:17;13664:47;13728:131;13854:4;13728:131;:::i;:::-;13720:139;;13447:419;;;:::o;13872:168::-;14012:20;14008:1;14000:6;13996:14;13989:44;13872:168;:::o;14046:366::-;14188:3;14209:67;14273:2;14268:3;14209:67;:::i;:::-;14202:74;;14285:93;14374:3;14285:93;:::i;:::-;14403:2;14398:3;14394:12;14387:19;;14046:366;;;:::o;14418:419::-;14584:4;14622:2;14611:9;14607:18;14599:26;;14671:9;14665:4;14661:20;14657:1;14646:9;14642:17;14635:47;14699:131;14825:4;14699:131;:::i;:::-;14691:139;;14418:419;;;:::o;14843:175::-;14983:27;14979:1;14971:6;14967:14;14960:51;14843:175;:::o;15024:366::-;15166:3;15187:67;15251:2;15246:3;15187:67;:::i;:::-;15180:74;;15263:93;15352:3;15263:93;:::i;:::-;15381:2;15376:3;15372:12;15365:19;;15024:366;;;:::o;15396:419::-;15562:4;15600:2;15589:9;15585:18;15577:26;;15649:9;15643:4;15639:20;15635:1;15624:9;15620:17;15613:47;15677:131;15803:4;15677:131;:::i;:::-;15669:139;;15396:419;;;:::o;15821:172::-;15961:24;15957:1;15949:6;15945:14;15938:48;15821:172;:::o;15999:366::-;16141:3;16162:67;16226:2;16221:3;16162:67;:::i;:::-;16155:74;;16238:93;16327:3;16238:93;:::i;:::-;16356:2;16351:3;16347:12;16340:19;;15999:366;;;:::o;16371:419::-;16537:4;16575:2;16564:9;16560:18;16552:26;;16624:9;16618:4;16614:20;16610:1;16599:9;16595:17;16588:47;16652:131;16778:4;16652:131;:::i;:::-;16644:139;;16371:419;;;:::o;16796:220::-;16936:34;16932:1;16924:6;16920:14;16913:58;17005:3;17000:2;16992:6;16988:15;16981:28;16796:220;:::o;17022:366::-;17164:3;17185:67;17249:2;17244:3;17185:67;:::i;:::-;17178:74;;17261:93;17350:3;17261:93;:::i;:::-;17379:2;17374:3;17370:12;17363:19;;17022:366;;;:::o;17394:419::-;17560:4;17598:2;17587:9;17583:18;17575:26;;17647:9;17641:4;17637:20;17633:1;17622:9;17618:17;17611:47;17675:131;17801:4;17675:131;:::i;:::-;17667:139;;17394:419;;;:::o;17819:168::-;17959:20;17955:1;17947:6;17943:14;17936:44;17819:168;:::o;17993:366::-;18135:3;18156:67;18220:2;18215:3;18156:67;:::i;:::-;18149:74;;18232:93;18321:3;18232:93;:::i;:::-;18350:2;18345:3;18341:12;18334:19;;17993:366;;;:::o;18365:419::-;18531:4;18569:2;18558:9;18554:18;18546:26;;18618:9;18612:4;18608:20;18604:1;18593:9;18589:17;18582:47;18646:131;18772:4;18646:131;:::i;:::-;18638:139;;18365:419;;;:::o;18790:180::-;18930:32;18926:1;18918:6;18914:14;18907:56;18790:180;:::o;18976:366::-;19118:3;19139:67;19203:2;19198:3;19139:67;:::i;:::-;19132:74;;19215:93;19304:3;19215:93;:::i;:::-;19333:2;19328:3;19324:12;19317:19;;18976:366;;;:::o;19348:419::-;19514:4;19552:2;19541:9;19537:18;19529:26;;19601:9;19595:4;19591:20;19587:1;19576:9;19572:17;19565:47;19629:131;19755:4;19629:131;:::i;:::-;19621:139;;19348:419;;;:::o;19773:179::-;19913:31;19909:1;19901:6;19897:14;19890:55;19773:179;:::o;19958:366::-;20100:3;20121:67;20185:2;20180:3;20121:67;:::i;:::-;20114:74;;20197:93;20286:3;20197:93;:::i;:::-;20315:2;20310:3;20306:12;20299:19;;19958:366;;;:::o;20330:419::-;20496:4;20534:2;20523:9;20519:18;20511:26;;20583:9;20577:4;20573:20;20569:1;20558:9;20554:17;20547:47;20611:131;20737:4;20611:131;:::i;:::-;20603:139;;20330:419;;;:::o;20755:220::-;20895:34;20891:1;20883:6;20879:14;20872:58;20964:3;20959:2;20951:6;20947:15;20940:28;20755:220;:::o;20981:366::-;21123:3;21144:67;21208:2;21203:3;21144:67;:::i;:::-;21137:74;;21220:93;21309:3;21220:93;:::i;:::-;21338:2;21333:3;21329:12;21322:19;;20981:366;;;:::o;21353:419::-;21519:4;21557:2;21546:9;21542:18;21534:26;;21606:9;21600:4;21596:20;21592:1;21581:9;21577:17;21570:47;21634:131;21760:4;21634:131;:::i;:::-;21626:139;;21353:419;;;:::o;21778:177::-;21918:29;21914:1;21906:6;21902:14;21895:53;21778:177;:::o;21961:366::-;22103:3;22124:67;22188:2;22183:3;22124:67;:::i;:::-;22117:74;;22200:93;22289:3;22200:93;:::i;:::-;22318:2;22313:3;22309:12;22302:19;;21961:366;;;:::o;22333:419::-;22499:4;22537:2;22526:9;22522:18;22514:26;;22586:9;22580:4;22576:20;22572:1;22561:9;22557:17;22550:47;22614:131;22740:4;22614:131;:::i;:::-;22606:139;;22333:419;;;:::o;22758:230::-;22898:34;22894:1;22886:6;22882:14;22875:58;22967:13;22962:2;22954:6;22950:15;22943:38;22758:230;:::o;22994:366::-;23136:3;23157:67;23221:2;23216:3;23157:67;:::i;:::-;23150:74;;23233:93;23322:3;23233:93;:::i;:::-;23351:2;23346:3;23342:12;23335:19;;22994:366;;;:::o;23366:419::-;23532:4;23570:2;23559:9;23555:18;23547:26;;23619:9;23613:4;23609:20;23605:1;23594:9;23590:17;23583:47;23647:131;23773:4;23647:131;:::i;:::-;23639:139;;23366:419;;;:::o;23791:243::-;23931:34;23927:1;23919:6;23915:14;23908:58;24000:26;23995:2;23987:6;23983:15;23976:51;23791:243;:::o;24040:366::-;24182:3;24203:67;24267:2;24262:3;24203:67;:::i;:::-;24196:74;;24279:93;24368:3;24279:93;:::i;:::-;24397:2;24392:3;24388:12;24381:19;;24040:366;;;:::o;24412:419::-;24578:4;24616:2;24605:9;24601:18;24593:26;;24665:9;24659:4;24655:20;24651:1;24640:9;24636:17;24629:47;24693:131;24819:4;24693:131;:::i;:::-;24685:139;;24412:419;;;:::o;24837:179::-;24977:31;24973:1;24965:6;24961:14;24954:55;24837:179;:::o;25022:366::-;25164:3;25185:67;25249:2;25244:3;25185:67;:::i;:::-;25178:74;;25261:93;25350:3;25261:93;:::i;:::-;25379:2;25374:3;25370:12;25363:19;;25022:366;;;:::o;25394:419::-;25560:4;25598:2;25587:9;25583:18;25575:26;;25647:9;25641:4;25637:20;25633:1;25622:9;25618:17;25611:47;25675:131;25801:4;25675:131;:::i;:::-;25667:139;;25394:419;;;:::o;25819:179::-;25959:31;25955:1;25947:6;25943:14;25936:55;25819:179;:::o;26004:366::-;26146:3;26167:67;26231:2;26226:3;26167:67;:::i;:::-;26160:74;;26243:93;26332:3;26243:93;:::i;:::-;26361:2;26356:3;26352:12;26345:19;;26004:366;;;:::o;26376:419::-;26542:4;26580:2;26569:9;26565:18;26557:26;;26629:9;26623:4;26619:20;26615:1;26604:9;26600:17;26593:47;26657:131;26783:4;26657:131;:::i;:::-;26649:139;;26376:419;;;:::o;26801:332::-;26922:4;26960:2;26949:9;26945:18;26937:26;;26973:71;27041:1;27030:9;27026:17;27017:6;26973:71;:::i;:::-;27054:72;27122:2;27111:9;27107:18;27098:6;27054:72;:::i;:::-;26801:332;;;;;:::o;27139:180::-;27187:77;27184:1;27177:88;27284:4;27281:1;27274:15;27308:4;27305:1;27298:15;27325:105;27361:7;27401:22;27394:5;27390:34;27379:45;;27325:105;;;:::o;27436:120::-;27508:23;27525:5;27508:23;:::i;:::-;27501:5;27498:34;27488:62;;27546:1;27543;27536:12;27488:62;27436:120;:::o;27562:141::-;27618:5;27649:6;27643:13;27634:22;;27665:32;27691:5;27665:32;:::i;:::-;27562:141;;;;:::o;27709:76::-;27745:7;27774:5;27763:16;;27709:76;;;:::o;27791:120::-;27863:23;27880:5;27863:23;:::i;:::-;27856:5;27853:34;27843:62;;27901:1;27898;27891:12;27843:62;27791:120;:::o;27917:141::-;27973:5;28004:6;27998:13;27989:22;;28020:32;28046:5;28020:32;:::i;:::-;27917:141;;;;:::o;28064:143::-;28121:5;28152:6;28146:13;28137:22;;28168:33;28195:5;28168:33;:::i;:::-;28064:143;;;;:::o;28213:971::-;28316:6;28324;28332;28340;28348;28397:3;28385:9;28376:7;28372:23;28368:33;28365:120;;;28404:79;;:::i;:::-;28365:120;28524:1;28549:63;28604:7;28595:6;28584:9;28580:22;28549:63;:::i;:::-;28539:73;;28495:127;28661:2;28687:63;28742:7;28733:6;28722:9;28718:22;28687:63;:::i;:::-;28677:73;;28632:128;28799:2;28825:64;28881:7;28872:6;28861:9;28857:22;28825:64;:::i;:::-;28815:74;;28770:129;28938:2;28964:64;29020:7;29011:6;29000:9;28996:22;28964:64;:::i;:::-;28954:74;;28909:129;29077:3;29104:63;29159:7;29150:6;29139:9;29135:22;29104:63;:::i;:::-;29094:73;;29048:129;28213:971;;;;;;;;:::o;29190:180::-;29330:32;29326:1;29318:6;29314:14;29307:56;29190:180;:::o;29376:366::-;29518:3;29539:67;29603:2;29598:3;29539:67;:::i;:::-;29532:74;;29615:93;29704:3;29615:93;:::i;:::-;29733:2;29728:3;29724:12;29717:19;;29376:366;;;:::o;29748:419::-;29914:4;29952:2;29941:9;29937:18;29929:26;;30001:9;29995:4;29991:20;29987:1;29976:9;29972:17;29965:47;30029:131;30155:4;30029:131;:::i;:::-;30021:139;;29748:419;;;:::o;30173:332::-;30294:4;30332:2;30321:9;30317:18;30309:26;;30345:71;30413:1;30402:9;30398:17;30389:6;30345:71;:::i;:::-;30426:72;30494:2;30483:9;30479:18;30470:6;30426:72;:::i;:::-;30173:332;;;;;:::o;30511:116::-;30581:21;30596:5;30581:21;:::i;:::-;30574:5;30571:32;30561:60;;30617:1;30614;30607:12;30561:60;30511:116;:::o;30633:137::-;30687:5;30718:6;30712:13;30703:22;;30734:30;30758:5;30734:30;:::i;:::-;30633:137;;;;:::o;30776:345::-;30843:6;30892:2;30880:9;30871:7;30867:23;30863:32;30860:119;;;30898:79;;:::i;:::-;30860:119;31018:1;31043:61;31096:7;31087:6;31076:9;31072:22;31043:61;:::i;:::-;31033:71;;30989:125;30776:345;;;;:::o;31127:442::-;31276:4;31314:2;31303:9;31299:18;31291:26;;31327:71;31395:1;31384:9;31380:17;31371:6;31327:71;:::i;:::-;31408:72;31476:2;31465:9;31461:18;31452:6;31408:72;:::i;:::-;31490;31558:2;31547:9;31543:18;31534:6;31490:72;:::i;:::-;31127:442;;;;;;:::o;31575:181::-;31715:33;31711:1;31703:6;31699:14;31692:57;31575:181;:::o;31762:366::-;31904:3;31925:67;31989:2;31984:3;31925:67;:::i;:::-;31918:74;;32001:93;32090:3;32001:93;:::i;:::-;32119:2;32114:3;32110:12;32103:19;;31762:366;;;:::o;32134:419::-;32300:4;32338:2;32327:9;32323:18;32315:26;;32387:9;32381:4;32377:20;32373:1;32362:9;32358:17;32351:47;32415:131;32541:4;32415:131;:::i;:::-;32407:139;;32134:419;;;:::o;32559:180::-;32607:77;32604:1;32597:88;32704:4;32701:1;32694:15;32728:4;32725:1;32718:15;32745:410;32785:7;32808:20;32826:1;32808:20;:::i;:::-;32803:25;;32842:20;32860:1;32842:20;:::i;:::-;32837:25;;32897:1;32894;32890:9;32919:30;32937:11;32919:30;:::i;:::-;32908:41;;33098:1;33089:7;33085:15;33082:1;33079:22;33059:1;33052:9;33032:83;33009:139;;33128:18;;:::i;:::-;33009:139;32793:362;32745:410;;;;:::o;33161:180::-;33209:77;33206:1;33199:88;33306:4;33303:1;33296:15;33330:4;33327:1;33320:15;33347:185;33387:1;33404:20;33422:1;33404:20;:::i;:::-;33399:25;;33438:20;33456:1;33438:20;:::i;:::-;33433:25;;33477:1;33467:35;;33482:18;;:::i;:::-;33467:35;33524:1;33521;33517:9;33512:14;;33347:185;;;;:::o;33538:220::-;33678:34;33674:1;33666:6;33662:14;33655:58;33747:3;33742:2;33734:6;33730:15;33723:28;33538:220;:::o;33764:366::-;33906:3;33927:67;33991:2;33986:3;33927:67;:::i;:::-;33920:74;;34003:93;34092:3;34003:93;:::i;:::-;34121:2;34116:3;34112:12;34105:19;;33764:366;;;:::o;34136:419::-;34302:4;34340:2;34329:9;34325:18;34317:26;;34389:9;34383:4;34379:20;34375:1;34364:9;34360:17;34353:47;34417:131;34543:4;34417:131;:::i;:::-;34409:139;;34136:419;;;:::o;34561:229::-;34701:34;34697:1;34689:6;34685:14;34678:58;34770:12;34765:2;34757:6;34753:15;34746:37;34561:229;:::o;34796:366::-;34938:3;34959:67;35023:2;35018:3;34959:67;:::i;:::-;34952:74;;35035:93;35124:3;35035:93;:::i;:::-;35153:2;35148:3;35144:12;35137:19;;34796:366;;;:::o;35168:419::-;35334:4;35372:2;35361:9;35357:18;35349:26;;35421:9;35415:4;35411:20;35407:1;35396:9;35392:17;35385:47;35449:131;35575:4;35449:131;:::i;:::-;35441:139;;35168:419;;;:::o;35593:235::-;35733:34;35729:1;35721:6;35717:14;35710:58;35802:18;35797:2;35789:6;35785:15;35778:43;35593:235;:::o;35834:366::-;35976:3;35997:67;36061:2;36056:3;35997:67;:::i;:::-;35990:74;;36073:93;36162:3;36073:93;:::i;:::-;36191:2;36186:3;36182:12;36175:19;;35834:366;;;:::o;36206:419::-;36372:4;36410:2;36399:9;36395:18;36387:26;;36459:9;36453:4;36449:20;36445:1;36434:9;36430:17;36423:47;36487:131;36613:4;36487:131;:::i;:::-;36479:139;;36206:419;;;:::o;36631:180::-;36771:32;36767:1;36759:6;36755:14;36748:56;36631:180;:::o;36817:366::-;36959:3;36980:67;37044:2;37039:3;36980:67;:::i;:::-;36973:74;;37056:93;37145:3;37056:93;:::i;:::-;37174:2;37169:3;37165:12;37158:19;;36817:366;;;:::o;37189:419::-;37355:4;37393:2;37382:9;37378:18;37370:26;;37442:9;37436:4;37432:20;37428:1;37417:9;37413:17;37406:47;37470:131;37596:4;37470:131;:::i;:::-;37462:139;;37189:419;;;:::o;37614:227::-;37754:34;37750:1;37742:6;37738:14;37731:58;37823:10;37818:2;37810:6;37806:15;37799:35;37614:227;:::o;37847:366::-;37989:3;38010:67;38074:2;38069:3;38010:67;:::i;:::-;38003:74;;38086:93;38175:3;38086:93;:::i;:::-;38204:2;38199:3;38195:12;38188:19;;37847:366;;;:::o;38219:419::-;38385:4;38423:2;38412:9;38408:18;38400:26;;38472:9;38466:4;38462:20;38458:1;38447:9;38443:17;38436:47;38500:131;38626:4;38500:131;:::i;:::-;38492:139;;38219:419;;;:::o;38644:191::-;38684:3;38703:20;38721:1;38703:20;:::i;:::-;38698:25;;38737:20;38755:1;38737:20;:::i;:::-;38732:25;;38780:1;38777;38773:9;38766:16;;38801:3;38798:1;38795:10;38792:36;;;38808:18;;:::i;:::-;38792:36;38644:191;;;;:::o;38841:194::-;38881:4;38901:20;38919:1;38901:20;:::i;:::-;38896:25;;38935:20;38953:1;38935:20;:::i;:::-;38930:25;;38979:1;38976;38972:9;38964:17;;39003:1;38997:4;38994:11;38991:37;;;39008:18;;:::i;:::-;38991:37;38841:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3001600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "531",
								"TOTAL_SUPPLY()": "392",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2962",
								"buyTokens(uint256)": "infinite",
								"decimals()": "406",
								"emergencyWithdraw(address,uint256)": "infinite",
								"getLatestPrice()": "infinite",
								"haltSales()": "infinite",
								"name()": "infinite",
								"owner()": "2605",
								"preSaleEndPrice()": "2470",
								"preSaleSoldTokens()": "2514",
								"preSaleStartPrice()": "2514",
								"preSaleTarget()": "2535",
								"preSaleTokens()": "2516",
								"priceFeeds(uint256)": "infinite",
								"privateSaleEndPrice()": "2558",
								"privateSaleSoldTokens()": "2536",
								"privateSaleStartPrice()": "2492",
								"privateSaleTarget()": "2536",
								"privateSaleTokens()": "2491",
								"releaseVestedTokens()": "infinite",
								"renounceOwnership()": "infinite",
								"stage()": "2598",
								"stakeDuration()": "2470",
								"stakeTokens(uint256)": "infinite",
								"startPreSale()": "infinite",
								"startPrivateSale()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"vestingBalance(address)": "2892",
								"vestingDuration()": "2471",
								"vestingReleaseTime(address)": "2848",
								"withdrawFunds()": "infinite"
							},
							"internal": {
								"calculatePreSaleTokens(uint256)": "infinite",
								"calculatePrivateSaleTokens(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 367,
									"end": 8658,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 367,
									"end": 8658,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 367,
									"end": 8658,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 629,
									"end": 649,
									"name": "PUSH",
									"source": 9,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 594,
									"end": 649,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 594,
									"end": 649,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 714,
									"end": 735,
									"name": "PUSH",
									"source": 9,
									"value": "201FCAFC2577D298500000"
								},
								{
									"begin": 679,
									"end": 735,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 679,
									"end": 735,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 799,
									"end": 815,
									"name": "PUSH",
									"source": 9,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 760,
									"end": 815,
									"name": "PUSH",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 760,
									"end": 815,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 880,
									"end": 897,
									"name": "PUSH",
									"source": 9,
									"value": "B3697B81284000"
								},
								{
									"begin": 843,
									"end": 897,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 843,
									"end": 897,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 965,
									"end": 966,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 966,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 926,
									"end": 966,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1051,
									"name": "PUSH",
									"source": 9,
									"value": "FB768105935A2F3000000"
								},
								{
									"begin": 999,
									"end": 1051,
									"name": "PUSH",
									"source": 9,
									"value": "C"
								},
								{
									"begin": 999,
									"end": 1051,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1113,
									"end": 1135,
									"name": "PUSH",
									"source": 9,
									"value": "854FDABD6AA1D32FB00000"
								},
								{
									"begin": 1082,
									"end": 1135,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 1082,
									"end": 1135,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1196,
									"end": 1213,
									"name": "PUSH",
									"source": 9,
									"value": "B3697B81284000"
								},
								{
									"begin": 1161,
									"end": 1213,
									"name": "PUSH",
									"source": 9,
									"value": "E"
								},
								{
									"begin": 1161,
									"end": 1213,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1275,
									"end": 1289,
									"name": "PUSH",
									"source": 9,
									"value": "16345785D8A0000"
								},
								{
									"begin": 1242,
									"end": 1289,
									"name": "PUSH",
									"source": 9,
									"value": "F"
								},
								{
									"begin": 1242,
									"end": 1289,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1351,
									"name": "PUSH",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 1315,
									"end": 1351,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1448,
									"end": 1462,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1423,
									"end": 1462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1423,
									"end": 1462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1642,
									"end": 1650,
									"name": "PUSH",
									"source": 9,
									"value": "ED4E00"
								},
								{
									"begin": 1609,
									"end": 1650,
									"name": "PUSH",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 1609,
									"end": 1650,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1695,
									"end": 1703,
									"name": "PUSH",
									"source": 9,
									"value": "1E13380"
								},
								{
									"begin": 1664,
									"end": 1703,
									"name": "PUSH",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1664,
									"end": 1703,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2224,
									"end": 2500,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "tag",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2310,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "426574746F6B656E000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "4245545400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2322,
									"end": 2356,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2336,
									"end": 2340,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 498,
									"end": 520,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "A56FA5B99019A5C8000000"
								},
								{
									"begin": 2322,
									"end": 2327,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2322,
									"end": 2327,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2322,
									"end": 2327,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2322,
									"end": 2356,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2322,
									"end": 2356,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2322,
									"end": 2356,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2322,
									"end": 2356,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2322,
									"end": 2356,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2371,
									"end": 2380,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2366,
									"end": 2494,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2366,
									"end": 2494,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2390,
									"end": 2401,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2390,
									"end": 2408,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2386,
									"end": 2387,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2386,
									"end": 2408,
									"modifierDepth": 2,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2494,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2494,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 2366,
									"end": 2494,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2439,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 2467,
									"end": 2478,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2479,
									"end": 2480,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 2467,
									"end": 2481,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2481,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2429,
									"end": 2483,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2410,
									"end": 2413,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2410,
									"end": 2413,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2410,
									"end": 2413,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2413,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2410,
									"end": 2413,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2410,
									"end": 2413,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2410,
									"end": 2413,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2494,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2366,
									"end": 2494,
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2494,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 2366,
									"end": 2494,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2366,
									"end": 2494,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2500,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 367,
									"end": 8658,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 367,
									"end": 8658,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 193,
									"end": 268,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 193,
									"end": 268,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 261,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 253,
									"end": 262,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 243,
									"end": 262,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 243,
									"end": 262,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 193,
									"end": 268,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 193,
									"end": 268,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 274,
									"end": 391,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 274,
									"end": 391,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 383,
									"end": 384,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 380,
									"end": 381,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 373,
									"end": 385,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 397,
									"end": 514,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 397,
									"end": 514,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 506,
									"end": 507,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 503,
									"end": 504,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 496,
									"end": 508,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 520,
									"end": 637,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 520,
									"end": 637,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 629,
									"end": 630,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 626,
									"end": 627,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 619,
									"end": 631,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 643,
									"end": 745,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 643,
									"end": 745,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 684,
									"end": 690,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 731,
									"end": 738,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 726,
									"end": 728,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 719,
									"end": 724,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 715,
									"end": 729,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 711,
									"end": 739,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 701,
									"end": 739,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 701,
									"end": 739,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 643,
									"end": 745,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 643,
									"end": 745,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 643,
									"end": 745,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 643,
									"end": 745,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 751,
									"end": 931,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 751,
									"end": 931,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 799,
									"end": 876,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 796,
									"end": 797,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 789,
									"end": 877,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 896,
									"end": 900,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 893,
									"end": 894,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 886,
									"end": 901,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 920,
									"end": 924,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 917,
									"end": 918,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 910,
									"end": 925,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 937,
									"end": 1218,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 937,
									"end": 1218,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1020,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 1042,
									"end": 1046,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1020,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1020,
									"end": 1047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1020,
									"end": 1047,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 1020,
									"end": 1047,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1012,
									"end": 1018,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1008,
									"end": 1048,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1150,
									"end": 1156,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1135,
									"end": 1157,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1114,
									"end": 1132,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1102,
									"end": 1112,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1099,
									"end": 1133,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1096,
									"end": 1158,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1093,
									"end": 1181,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1093,
									"end": 1181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 1093,
									"end": 1181,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1161,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1161,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1179,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1161,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1093,
									"end": 1181,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 1093,
									"end": 1181,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1201,
									"end": 1211,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1197,
									"end": 1199,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1190,
									"end": 1212,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 980,
									"end": 1218,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 937,
									"end": 1218,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 937,
									"end": 1218,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 937,
									"end": 1218,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1224,
									"end": 1353,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1224,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1258,
									"end": 1264,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1285,
									"end": 1305,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 1285,
									"end": 1305,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 1285,
									"end": 1305,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1285,
									"end": 1305,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 1285,
									"end": 1305,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1275,
									"end": 1305,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1275,
									"end": 1305,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1314,
									"end": 1347,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 1342,
									"end": 1346,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1334,
									"end": 1340,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1314,
									"end": 1347,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1314,
									"end": 1347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1314,
									"end": 1347,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 1314,
									"end": 1347,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1224,
									"end": 1353,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1224,
									"end": 1353,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1224,
									"end": 1353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1224,
									"end": 1353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1359,
									"end": 1670,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1359,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1436,
									"end": 1440,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1518,
									"end": 1524,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1515,
									"end": 1545,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1512,
									"end": 1568,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1512,
									"end": 1568,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 1512,
									"end": 1568,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1548,
									"end": 1566,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 1548,
									"end": 1566,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1548,
									"end": 1566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1548,
									"end": 1566,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 1548,
									"end": 1566,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1512,
									"end": 1568,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 1512,
									"end": 1568,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1598,
									"end": 1602,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1590,
									"end": 1596,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1586,
									"end": 1603,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1578,
									"end": 1603,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1578,
									"end": 1603,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1658,
									"end": 1662,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1652,
									"end": 1656,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1663,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1640,
									"end": 1663,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1640,
									"end": 1663,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1359,
									"end": 1670,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1359,
									"end": 1670,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1359,
									"end": 1670,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1359,
									"end": 1670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1676,
									"end": 1793,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1676,
									"end": 1793,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1785,
									"end": 1786,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1782,
									"end": 1783,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1775,
									"end": 1787,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1799,
									"end": 1925,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1799,
									"end": 1925,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1836,
									"end": 1843,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1876,
									"end": 1918,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1869,
									"end": 1874,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1919,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1854,
									"end": 1919,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1854,
									"end": 1919,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1799,
									"end": 1925,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1799,
									"end": 1925,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1799,
									"end": 1925,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1799,
									"end": 1925,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1931,
									"end": 2027,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1931,
									"end": 2027,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1968,
									"end": 1975,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1997,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 2015,
									"end": 2020,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1997,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1997,
									"end": 2021,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1997,
									"end": 2021,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 1997,
									"end": 2021,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1986,
									"end": 2021,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1986,
									"end": 2021,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1931,
									"end": 2027,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1931,
									"end": 2027,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1931,
									"end": 2027,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1931,
									"end": 2027,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2033,
									"end": 2155,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2033,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2106,
									"end": 2130,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 2124,
									"end": 2129,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2106,
									"end": 2130,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2106,
									"end": 2130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2106,
									"end": 2130,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 2106,
									"end": 2130,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2099,
									"end": 2104,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2096,
									"end": 2131,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2086,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 2086,
									"end": 2149,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2146,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2142,
									"end": 2143,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2135,
									"end": 2147,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2086,
									"end": 2149,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 2086,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2033,
									"end": 2155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2033,
									"end": 2155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2304,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2161,
									"end": 2304,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2223,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2249,
									"end": 2255,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2243,
									"end": 2256,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2234,
									"end": 2256,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2234,
									"end": 2256,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2265,
									"end": 2298,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 2292,
									"end": 2297,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2265,
									"end": 2298,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2265,
									"end": 2298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2265,
									"end": 2298,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 2265,
									"end": 2298,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2304,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2304,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2304,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2304,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2327,
									"end": 3059,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2327,
									"end": 3059,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2434,
									"end": 2439,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2459,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 2475,
									"end": 2539,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 2532,
									"end": 2538,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2475,
									"end": 2539,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 2475,
									"end": 2539,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2475,
									"end": 2539,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 2475,
									"end": 2539,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 2459,
									"end": 2540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2540,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 2459,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2450,
									"end": 2540,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2450,
									"end": 2540,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2560,
									"end": 2565,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2582,
									"end": 2587,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2596,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2623,
									"end": 2627,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2616,
									"end": 2621,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2612,
									"end": 2628,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2605,
									"end": 2628,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2605,
									"end": 2628,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2676,
									"end": 2680,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2668,
									"end": 2674,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2664,
									"end": 2681,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2656,
									"end": 2662,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2652,
									"end": 2682,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2705,
									"end": 2708,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2697,
									"end": 2703,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2694,
									"end": 2709,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2691,
									"end": 2813,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2691,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 2691,
									"end": 2813,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2724,
									"end": 2803,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 2724,
									"end": 2803,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2724,
									"end": 2803,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2724,
									"end": 2803,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 2724,
									"end": 2803,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2691,
									"end": 2813,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 2691,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2839,
									"end": 2845,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 3053,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 2822,
									"end": 3053,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2856,
									"end": 2862,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2851,
									"end": 2854,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2848,
									"end": 2863,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 3053,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 2822,
									"end": 3053,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2931,
									"end": 2934,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2960,
									"end": 3008,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 3004,
									"end": 3007,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2992,
									"end": 3002,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2960,
									"end": 3008,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2960,
									"end": 3008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2960,
									"end": 3008,
									"name": "tag",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 2960,
									"end": 3008,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2955,
									"end": 2958,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2948,
									"end": 3009,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3033,
									"end": 3036,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3029,
									"end": 3043,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3022,
									"end": 3043,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 3022,
									"end": 3043,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2898,
									"end": 3053,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2882,
									"end": 2886,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2877,
									"end": 2880,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2873,
									"end": 2887,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2866,
									"end": 2887,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2866,
									"end": 2887,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 2822,
									"end": 3053,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 3053,
									"name": "tag",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 2822,
									"end": 3053,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2826,
									"end": 2847,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 3059,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 3059,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2327,
									"end": 3059,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2327,
									"end": 3059,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2327,
									"end": 3059,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2327,
									"end": 3059,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2327,
									"end": 3059,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2327,
									"end": 3059,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3082,
									"end": 3467,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 3082,
									"end": 3467,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3164,
									"end": 3169,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3213,
									"end": 3216,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3206,
									"end": 3210,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 3198,
									"end": 3204,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3194,
									"end": 3211,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3190,
									"end": 3217,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 3180,
									"end": 3302,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 3180,
									"end": 3302,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3221,
									"end": 3300,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 3221,
									"end": 3300,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 3221,
									"end": 3300,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3221,
									"end": 3300,
									"name": "tag",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 3221,
									"end": 3300,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3180,
									"end": 3302,
									"name": "tag",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 3180,
									"end": 3302,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3331,
									"end": 3337,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3325,
									"end": 3338,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3356,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 3457,
									"end": 3460,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3449,
									"end": 3455,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3442,
									"end": 3446,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3434,
									"end": 3440,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3430,
									"end": 3447,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3356,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 3356,
									"end": 3461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3356,
									"end": 3461,
									"name": "tag",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 3356,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3347,
									"end": 3461,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3347,
									"end": 3461,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3170,
									"end": 3467,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3082,
									"end": 3467,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3082,
									"end": 3467,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3082,
									"end": 3467,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3082,
									"end": 3467,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3082,
									"end": 3467,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3473,
									"end": 4027,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 3473,
									"end": 4027,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3568,
									"end": 3574,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3619,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3605,
									"end": 3614,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3596,
									"end": 3603,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3592,
									"end": 3615,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3588,
									"end": 3620,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 3585,
									"end": 3704,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3585,
									"end": 3704,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 3585,
									"end": 3704,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3623,
									"end": 3702,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 3623,
									"end": 3702,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 3623,
									"end": 3702,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3623,
									"end": 3702,
									"name": "tag",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 3623,
									"end": 3702,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3585,
									"end": 3704,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 3585,
									"end": 3704,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3764,
									"end": 3765,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3753,
									"end": 3762,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3749,
									"end": 3766,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3743,
									"end": 3767,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3794,
									"end": 3812,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3786,
									"end": 3792,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3783,
									"end": 3813,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3780,
									"end": 3897,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3780,
									"end": 3897,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 3780,
									"end": 3897,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3816,
									"end": 3895,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 3816,
									"end": 3895,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 3816,
									"end": 3895,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3816,
									"end": 3895,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 3816,
									"end": 3895,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3780,
									"end": 3897,
									"name": "tag",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 3780,
									"end": 3897,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3921,
									"end": 4010,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 4002,
									"end": 4009,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3993,
									"end": 3999,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3982,
									"end": 3991,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3978,
									"end": 4000,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3921,
									"end": 4010,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 3921,
									"end": 4010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3921,
									"end": 4010,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 3921,
									"end": 4010,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3911,
									"end": 4010,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3911,
									"end": 4010,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3714,
									"end": 4020,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3473,
									"end": 4027,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3473,
									"end": 4027,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3473,
									"end": 4027,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3473,
									"end": 4027,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3473,
									"end": 4027,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4033,
									"end": 4132,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 4033,
									"end": 4132,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4085,
									"end": 4091,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4119,
									"end": 4124,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4113,
									"end": 4125,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4103,
									"end": 4125,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4103,
									"end": 4125,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4033,
									"end": 4132,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4033,
									"end": 4132,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4033,
									"end": 4132,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4033,
									"end": 4132,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4138,
									"end": 4318,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 4138,
									"end": 4318,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4186,
									"end": 4263,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4183,
									"end": 4184,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4176,
									"end": 4264,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4283,
									"end": 4287,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 4280,
									"end": 4281,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 4273,
									"end": 4288,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4307,
									"end": 4311,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4304,
									"end": 4305,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4297,
									"end": 4312,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 4324,
									"end": 4644,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 4324,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4368,
									"end": 4374,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4405,
									"end": 4406,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 4399,
									"end": 4403,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4395,
									"end": 4407,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4385,
									"end": 4407,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4385,
									"end": 4407,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4452,
									"end": 4453,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4446,
									"end": 4450,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4442,
									"end": 4454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4473,
									"end": 4491,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4463,
									"end": 4544,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 4463,
									"end": 4544,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 4521,
									"end": 4527,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4517,
									"end": 4534,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4507,
									"end": 4534,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4507,
									"end": 4534,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4463,
									"end": 4544,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 4463,
									"end": 4544,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4591,
									"end": 4593,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4583,
									"end": 4589,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4580,
									"end": 4594,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4560,
									"end": 4578,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4557,
									"end": 4595,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4638,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 4554,
									"end": 4638,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4610,
									"end": 4628,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 4610,
									"end": 4628,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 4610,
									"end": 4628,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4610,
									"end": 4628,
									"name": "tag",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 4610,
									"end": 4628,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4638,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 4554,
									"end": 4638,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4375,
									"end": 4644,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4324,
									"end": 4644,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4324,
									"end": 4644,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4324,
									"end": 4644,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4324,
									"end": 4644,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4650,
									"end": 4791,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 4650,
									"end": 4791,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4699,
									"end": 4703,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4722,
									"end": 4725,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4714,
									"end": 4725,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4714,
									"end": 4725,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4748,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4742,
									"end": 4743,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4735,
									"end": 4749,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4779,
									"end": 4783,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4776,
									"end": 4777,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4766,
									"end": 4784,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 4758,
									"end": 4784,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4758,
									"end": 4784,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4650,
									"end": 4791,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4650,
									"end": 4791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4650,
									"end": 4791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4650,
									"end": 4791,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4797,
									"end": 4890,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 4797,
									"end": 4890,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4834,
									"end": 4840,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4881,
									"end": 4883,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4876,
									"end": 4878,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4869,
									"end": 4874,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4865,
									"end": 4879,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4884,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4851,
									"end": 4884,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4851,
									"end": 4884,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4797,
									"end": 4890,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4797,
									"end": 4890,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4797,
									"end": 4890,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4797,
									"end": 4890,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4896,
									"end": 5003,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 4896,
									"end": 5003,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4940,
									"end": 4948,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4990,
									"end": 4995,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4984,
									"end": 4988,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4980,
									"end": 4996,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 4959,
									"end": 4996,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4959,
									"end": 4996,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4896,
									"end": 5003,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4896,
									"end": 5003,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4896,
									"end": 5003,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4896,
									"end": 5003,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4896,
									"end": 5003,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5009,
									"end": 5402,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 5009,
									"end": 5402,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5078,
									"end": 5084,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5128,
									"end": 5129,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 5116,
									"end": 5126,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5112,
									"end": 5130,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5151,
									"end": 5248,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 5181,
									"end": 5247,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5170,
									"end": 5179,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5151,
									"end": 5248,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 5151,
									"end": 5248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5151,
									"end": 5248,
									"name": "tag",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 5151,
									"end": 5248,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5269,
									"end": 5308,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 5299,
									"end": 5307,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5288,
									"end": 5297,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5269,
									"end": 5308,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 5269,
									"end": 5308,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5269,
									"end": 5308,
									"name": "tag",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 5269,
									"end": 5308,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5257,
									"end": 5308,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 5257,
									"end": 5308,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5341,
									"end": 5345,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5337,
									"end": 5346,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5330,
									"end": 5335,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5326,
									"end": 5347,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5317,
									"end": 5347,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 5317,
									"end": 5347,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5390,
									"end": 5394,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5380,
									"end": 5388,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5376,
									"end": 5395,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5369,
									"end": 5374,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5396,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 5356,
									"end": 5396,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5356,
									"end": 5396,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5085,
									"end": 5402,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5085,
									"end": 5402,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5009,
									"end": 5402,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 5009,
									"end": 5402,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5009,
									"end": 5402,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5009,
									"end": 5402,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5009,
									"end": 5402,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5009,
									"end": 5402,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5408,
									"end": 5485,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 5408,
									"end": 5485,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5445,
									"end": 5452,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5474,
									"end": 5479,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5463,
									"end": 5479,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5463,
									"end": 5479,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5408,
									"end": 5485,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5408,
									"end": 5485,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5408,
									"end": 5485,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5408,
									"end": 5485,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5491,
									"end": 5551,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 5491,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5519,
									"end": 5522,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5540,
									"end": 5545,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5533,
									"end": 5545,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5533,
									"end": 5545,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5491,
									"end": 5551,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5491,
									"end": 5551,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5491,
									"end": 5551,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5491,
									"end": 5551,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5557,
									"end": 5699,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 5557,
									"end": 5699,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5607,
									"end": 5616,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5640,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 5658,
									"end": 5692,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 5667,
									"end": 5691,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 5685,
									"end": 5690,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5667,
									"end": 5691,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 5667,
									"end": 5691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5667,
									"end": 5691,
									"name": "tag",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 5667,
									"end": 5691,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5658,
									"end": 5692,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 5658,
									"end": 5692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5658,
									"end": 5692,
									"name": "tag",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 5658,
									"end": 5692,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5640,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 5640,
									"end": 5693,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5640,
									"end": 5693,
									"name": "tag",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 5640,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5627,
									"end": 5693,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5627,
									"end": 5693,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5557,
									"end": 5699,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5557,
									"end": 5699,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5557,
									"end": 5699,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5557,
									"end": 5699,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5705,
									"end": 5780,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 5705,
									"end": 5780,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5748,
									"end": 5751,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5769,
									"end": 5774,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5762,
									"end": 5774,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5762,
									"end": 5774,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5705,
									"end": 5780,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5705,
									"end": 5780,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5705,
									"end": 5780,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5705,
									"end": 5780,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5786,
									"end": 6055,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 5786,
									"end": 6055,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5896,
									"end": 5935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 5927,
									"end": 5934,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5896,
									"end": 5935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 5896,
									"end": 5935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5896,
									"end": 5935,
									"name": "tag",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 5896,
									"end": 5935,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5957,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 6006,
									"end": 6047,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 6030,
									"end": 6046,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6047,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 6006,
									"end": 6047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6047,
									"name": "tag",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 6006,
									"end": 6047,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5998,
									"end": 6004,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5991,
									"end": 5995,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5985,
									"end": 5996,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5957,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 5957,
									"end": 6048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5957,
									"end": 6048,
									"name": "tag",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 5957,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5951,
									"end": 5955,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5944,
									"end": 6049,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5862,
									"end": 6055,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5786,
									"end": 6055,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5786,
									"end": 6055,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5786,
									"end": 6055,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5786,
									"end": 6055,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6061,
									"end": 6134,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 6061,
									"end": 6134,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6106,
									"end": 6109,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6061,
									"end": 6134,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6061,
									"end": 6134,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6140,
									"end": 6329,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 6140,
									"end": 6329,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6217,
									"end": 6249,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 6217,
									"end": 6249,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 6217,
									"end": 6249,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6217,
									"end": 6249,
									"name": "tag",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 6217,
									"end": 6249,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6258,
									"end": 6323,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 6316,
									"end": 6322,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6308,
									"end": 6314,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6302,
									"end": 6306,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6258,
									"end": 6323,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 6258,
									"end": 6323,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6258,
									"end": 6323,
									"name": "tag",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 6258,
									"end": 6323,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6193,
									"end": 6329,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6140,
									"end": 6329,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6140,
									"end": 6329,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6140,
									"end": 6329,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6335,
									"end": 6521,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 6335,
									"end": 6521,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6395,
									"end": 6515,
									"name": "tag",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 6395,
									"end": 6515,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6412,
									"end": 6415,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6405,
									"end": 6410,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6402,
									"end": 6416,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6395,
									"end": 6515,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6395,
									"end": 6515,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 6395,
									"end": 6515,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6466,
									"end": 6505,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 6503,
									"end": 6504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6501,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6466,
									"end": 6505,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 6466,
									"end": 6505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6466,
									"end": 6505,
									"name": "tag",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 6466,
									"end": 6505,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6439,
									"end": 6440,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6432,
									"end": 6437,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6428,
									"end": 6441,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6419,
									"end": 6441,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6419,
									"end": 6441,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6395,
									"end": 6515,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 6395,
									"end": 6515,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6395,
									"end": 6515,
									"name": "tag",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 6395,
									"end": 6515,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6335,
									"end": 6521,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6335,
									"end": 6521,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6335,
									"end": 6521,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6527,
									"end": 7070,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 6527,
									"end": 7070,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6623,
									"end": 6626,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6620,
									"end": 6631,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6617,
									"end": 7063,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6617,
									"end": 7063,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 6617,
									"end": 7063,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6662,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 6694,
									"end": 6699,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6662,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 6662,
									"end": 6700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6662,
									"end": 6700,
									"name": "tag",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 6662,
									"end": 6700,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6746,
									"end": 6775,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 6764,
									"end": 6774,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6746,
									"end": 6775,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 6746,
									"end": 6775,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6746,
									"end": 6775,
									"name": "tag",
									"source": 10,
									"value": "170"
								},
								{
									"begin": 6746,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6736,
									"end": 6744,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6732,
									"end": 6776,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6929,
									"end": 6931,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6917,
									"end": 6927,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6914,
									"end": 6932,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6911,
									"end": 6960,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6911,
									"end": 6960,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 6911,
									"end": 6960,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6950,
									"end": 6958,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6935,
									"end": 6958,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6935,
									"end": 6958,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6911,
									"end": 6960,
									"name": "tag",
									"source": 10,
									"value": "171"
								},
								{
									"begin": 6911,
									"end": 6960,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6973,
									"end": 7053,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 7047,
									"end": 7050,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 7029,
									"end": 7051,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "tag",
									"source": 10,
									"value": "173"
								},
								{
									"begin": 7029,
									"end": 7051,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7019,
									"end": 7027,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7015,
									"end": 7052,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7002,
									"end": 7013,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6973,
									"end": 7053,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 6973,
									"end": 7053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6973,
									"end": 7053,
									"name": "tag",
									"source": 10,
									"value": "172"
								},
								{
									"begin": 6973,
									"end": 7053,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6632,
									"end": 7063,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6632,
									"end": 7063,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6617,
									"end": 7063,
									"name": "tag",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 6617,
									"end": 7063,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6527,
									"end": 7070,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6527,
									"end": 7070,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6527,
									"end": 7070,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6527,
									"end": 7070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7076,
									"end": 7193,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 7076,
									"end": 7193,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7130,
									"end": 7138,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7180,
									"end": 7185,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7174,
									"end": 7178,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7170,
									"end": 7186,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 7149,
									"end": 7186,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7149,
									"end": 7186,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7076,
									"end": 7193,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7076,
									"end": 7193,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7076,
									"end": 7193,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7076,
									"end": 7193,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7076,
									"end": 7193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7199,
									"end": 7368,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 7199,
									"end": 7368,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7243,
									"end": 7249,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7276,
									"end": 7327,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 7324,
									"end": 7325,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7320,
									"end": 7326,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7312,
									"end": 7317,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7309,
									"end": 7310,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 7305,
									"end": 7318,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7276,
									"end": 7327,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 7276,
									"end": 7327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7276,
									"end": 7327,
									"name": "tag",
									"source": 10,
									"value": "176"
								},
								{
									"begin": 7276,
									"end": 7327,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7272,
									"end": 7328,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7357,
									"end": 7361,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 7351,
									"end": 7355,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7347,
									"end": 7362,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7337,
									"end": 7362,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7337,
									"end": 7362,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7250,
									"end": 7368,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7199,
									"end": 7368,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7199,
									"end": 7368,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7199,
									"end": 7368,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7199,
									"end": 7368,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7199,
									"end": 7368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7373,
									"end": 7668,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 7373,
									"end": 7668,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7449,
									"end": 7453,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "178"
								},
								{
									"begin": 7620,
									"end": 7623,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7614,
									"end": 7618,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 7595,
									"end": 7624,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "tag",
									"source": 10,
									"value": "178"
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7587,
									"end": 7624,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7587,
									"end": 7624,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7657,
									"end": 7660,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7654,
									"end": 7655,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 7650,
									"end": 7661,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7644,
									"end": 7648,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7641,
									"end": 7662,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 7633,
									"end": 7662,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7633,
									"end": 7662,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7373,
									"end": 7668,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7373,
									"end": 7668,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7373,
									"end": 7668,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7373,
									"end": 7668,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7373,
									"end": 7668,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7673,
									"end": 9068,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 7673,
									"end": 9068,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7790,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "180"
								},
								{
									"begin": 7823,
									"end": 7826,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7790,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 7790,
									"end": 7827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7790,
									"end": 7827,
									"name": "tag",
									"source": 10,
									"value": "180"
								},
								{
									"begin": 7790,
									"end": 7827,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7892,
									"end": 7910,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7884,
									"end": 7890,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7881,
									"end": 7911,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7878,
									"end": 7934,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7878,
									"end": 7934,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "181"
								},
								{
									"begin": 7878,
									"end": 7934,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7914,
									"end": 7932,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "182"
								},
								{
									"begin": 7914,
									"end": 7932,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 7914,
									"end": 7932,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7914,
									"end": 7932,
									"name": "tag",
									"source": 10,
									"value": "182"
								},
								{
									"begin": 7914,
									"end": 7932,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7878,
									"end": 7934,
									"name": "tag",
									"source": 10,
									"value": "181"
								},
								{
									"begin": 7878,
									"end": 7934,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7958,
									"end": 7996,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 7990,
									"end": 7994,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7984,
									"end": 7995,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 7958,
									"end": 7996,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 7958,
									"end": 7996,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7958,
									"end": 7996,
									"name": "tag",
									"source": 10,
									"value": "183"
								},
								{
									"begin": 7958,
									"end": 7996,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8043,
									"end": 8110,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "184"
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8095,
									"end": 8101,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8089,
									"end": 8093,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8043,
									"end": 8110,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 8043,
									"end": 8110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8043,
									"end": 8110,
									"name": "tag",
									"source": 10,
									"value": "184"
								},
								{
									"begin": 8043,
									"end": 8110,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8137,
									"end": 8138,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8161,
									"end": 8165,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8148,
									"end": 8165,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8148,
									"end": 8165,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8193,
									"end": 8195,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8185,
									"end": 8191,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8182,
									"end": 8196,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 8210,
									"end": 8211,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8205,
									"end": 8823,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8205,
									"end": 8823,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 8205,
									"end": 8823,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "186"
								},
								{
									"begin": 8205,
									"end": 8823,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8867,
									"end": 8868,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8884,
									"end": 8890,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8881,
									"end": 8958,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8881,
									"end": 8958,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 8881,
									"end": 8958,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8933,
									"end": 8942,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8928,
									"end": 8931,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 8924,
									"end": 8943,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8918,
									"end": 8944,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8909,
									"end": 8944,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8909,
									"end": 8944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8881,
									"end": 8958,
									"name": "tag",
									"source": 10,
									"value": "187"
								},
								{
									"begin": 8881,
									"end": 8958,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8984,
									"end": 9051,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "188"
								},
								{
									"begin": 9044,
									"end": 9050,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 9037,
									"end": 9042,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8984,
									"end": 9051,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 8984,
									"end": 9051,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8984,
									"end": 9051,
									"name": "tag",
									"source": 10,
									"value": "188"
								},
								{
									"begin": 8984,
									"end": 9051,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8978,
									"end": 8982,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8971,
									"end": 9052,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8840,
									"end": 9062,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8175,
									"end": 9062,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 8175,
									"end": 9062,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8205,
									"end": 8823,
									"name": "tag",
									"source": 10,
									"value": "186"
								},
								{
									"begin": 8205,
									"end": 8823,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8257,
									"end": 8261,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8253,
									"end": 8262,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 8245,
									"end": 8251,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8241,
									"end": 8263,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 8291,
									"end": 8328,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "189"
								},
								{
									"begin": 8323,
									"end": 8327,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8291,
									"end": 8328,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 8291,
									"end": 8328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8291,
									"end": 8328,
									"name": "tag",
									"source": 10,
									"value": "189"
								},
								{
									"begin": 8291,
									"end": 8328,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8350,
									"end": 8351,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8364,
									"end": 8572,
									"name": "tag",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 8364,
									"end": 8572,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8378,
									"end": 8385,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8375,
									"end": 8376,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8372,
									"end": 8386,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 8364,
									"end": 8572,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8364,
									"end": 8572,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "192"
								},
								{
									"begin": 8364,
									"end": 8572,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8457,
									"end": 8466,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8452,
									"end": 8455,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8448,
									"end": 8467,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8442,
									"end": 8468,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8434,
									"end": 8440,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8427,
									"end": 8469,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8508,
									"end": 8509,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8500,
									"end": 8506,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8496,
									"end": 8510,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8486,
									"end": 8510,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8486,
									"end": 8510,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8555,
									"end": 8557,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8544,
									"end": 8553,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8540,
									"end": 8558,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8527,
									"end": 8558,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 8527,
									"end": 8558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8401,
									"end": 8405,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8398,
									"end": 8399,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8394,
									"end": 8406,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8389,
									"end": 8406,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8389,
									"end": 8406,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8364,
									"end": 8572,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "190"
								},
								{
									"begin": 8364,
									"end": 8572,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8364,
									"end": 8572,
									"name": "tag",
									"source": 10,
									"value": "192"
								},
								{
									"begin": 8364,
									"end": 8572,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8600,
									"end": 8606,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8591,
									"end": 8598,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8588,
									"end": 8607,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 8585,
									"end": 8764,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8585,
									"end": 8764,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "193"
								},
								{
									"begin": 8585,
									"end": 8764,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8658,
									"end": 8667,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8653,
									"end": 8656,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8649,
									"end": 8668,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8643,
									"end": 8669,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8701,
									"end": 8749,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "194"
								},
								{
									"begin": 8743,
									"end": 8747,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8735,
									"end": 8741,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8731,
									"end": 8748,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 8720,
									"end": 8729,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8701,
									"end": 8749,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 8701,
									"end": 8749,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8701,
									"end": 8749,
									"name": "tag",
									"source": 10,
									"value": "194"
								},
								{
									"begin": 8701,
									"end": 8749,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8693,
									"end": 8699,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8686,
									"end": 8750,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8608,
									"end": 8764,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8585,
									"end": 8764,
									"name": "tag",
									"source": 10,
									"value": "193"
								},
								{
									"begin": 8585,
									"end": 8764,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8810,
									"end": 8811,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8806,
									"end": 8807,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 8798,
									"end": 8804,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8794,
									"end": 8808,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 8790,
									"end": 8812,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8784,
									"end": 8788,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8777,
									"end": 8813,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8212,
									"end": 8823,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8212,
									"end": 8823,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8212,
									"end": 8823,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8175,
									"end": 9062,
									"name": "tag",
									"source": 10,
									"value": "185"
								},
								{
									"begin": 8175,
									"end": 9062,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8175,
									"end": 9062,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7765,
									"end": 9068,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7765,
									"end": 9068,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7765,
									"end": 9068,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7673,
									"end": 9068,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7673,
									"end": 9068,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7673,
									"end": 9068,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9074,
									"end": 9192,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 9074,
									"end": 9192,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9161,
									"end": 9185,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 9179,
									"end": 9184,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9161,
									"end": 9185,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 9161,
									"end": 9185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9161,
									"end": 9185,
									"name": "tag",
									"source": 10,
									"value": "196"
								},
								{
									"begin": 9161,
									"end": 9185,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9156,
									"end": 9159,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9149,
									"end": 9186,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9074,
									"end": 9192,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9074,
									"end": 9192,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9074,
									"end": 9192,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9198,
									"end": 9420,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 9198,
									"end": 9420,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9291,
									"end": 9295,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9329,
									"end": 9331,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9318,
									"end": 9327,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9314,
									"end": 9332,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9306,
									"end": 9332,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9306,
									"end": 9332,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9342,
									"end": 9413,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "198"
								},
								{
									"begin": 9410,
									"end": 9411,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9399,
									"end": 9408,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9395,
									"end": 9412,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9386,
									"end": 9392,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9342,
									"end": 9413,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 9342,
									"end": 9413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9342,
									"end": 9413,
									"name": "tag",
									"source": 10,
									"value": "198"
								},
								{
									"begin": 9342,
									"end": 9413,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9198,
									"end": 9420,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9198,
									"end": 9420,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9198,
									"end": 9420,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9198,
									"end": 9420,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9198,
									"end": 9420,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9426,
									"end": 9606,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 9426,
									"end": 9606,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9474,
									"end": 9551,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9471,
									"end": 9472,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9464,
									"end": 9552,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9571,
									"end": 9575,
									"name": "PUSH",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 9568,
									"end": 9569,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 9561,
									"end": 9576,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9595,
									"end": 9599,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 9592,
									"end": 9593,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9585,
									"end": 9600,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 9612,
									"end": 9792,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 9612,
									"end": 9792,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9660,
									"end": 9737,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9657,
									"end": 9658,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9650,
									"end": 9738,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9757,
									"end": 9761,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 9754,
									"end": 9755,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 9747,
									"end": 9762,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9781,
									"end": 9785,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 9778,
									"end": 9779,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9771,
									"end": 9786,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 9798,
									"end": 9989,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 9798,
									"end": 9989,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9838,
									"end": 9841,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9857,
									"end": 9877,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "202"
								},
								{
									"begin": 9875,
									"end": 9876,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9857,
									"end": 9877,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 9857,
									"end": 9877,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9857,
									"end": 9877,
									"name": "tag",
									"source": 10,
									"value": "202"
								},
								{
									"begin": 9857,
									"end": 9877,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9852,
									"end": 9877,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9852,
									"end": 9877,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9891,
									"end": 9911,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "203"
								},
								{
									"begin": 9909,
									"end": 9910,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9891,
									"end": 9911,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 9891,
									"end": 9911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9891,
									"end": 9911,
									"name": "tag",
									"source": 10,
									"value": "203"
								},
								{
									"begin": 9891,
									"end": 9911,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9886,
									"end": 9911,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9886,
									"end": 9911,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9934,
									"end": 9935,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9931,
									"end": 9932,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9927,
									"end": 9936,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9920,
									"end": 9936,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9920,
									"end": 9936,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9955,
									"end": 9958,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 9952,
									"end": 9953,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9949,
									"end": 9959,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 9946,
									"end": 9982,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 9946,
									"end": 9982,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "204"
								},
								{
									"begin": 9946,
									"end": 9982,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 9962,
									"end": 9980,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "205"
								},
								{
									"begin": 9962,
									"end": 9980,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 9962,
									"end": 9980,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9962,
									"end": 9980,
									"name": "tag",
									"source": 10,
									"value": "205"
								},
								{
									"begin": 9962,
									"end": 9980,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9946,
									"end": 9982,
									"name": "tag",
									"source": 10,
									"value": "204"
								},
								{
									"begin": 9946,
									"end": 9982,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9798,
									"end": 9989,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9798,
									"end": 9989,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9798,
									"end": 9989,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9798,
									"end": 9989,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9798,
									"end": 9989,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9995,
									"end": 10113,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 9995,
									"end": 10113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10082,
									"end": 10106,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "207"
								},
								{
									"begin": 10100,
									"end": 10105,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 10082,
									"end": 10106,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 10082,
									"end": 10106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10082,
									"end": 10106,
									"name": "tag",
									"source": 10,
									"value": "207"
								},
								{
									"begin": 10082,
									"end": 10106,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10077,
									"end": 10080,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10070,
									"end": 10107,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9995,
									"end": 10113,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9995,
									"end": 10113,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9995,
									"end": 10113,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10119,
									"end": 10561,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 10119,
									"end": 10561,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10268,
									"end": 10272,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10306,
									"end": 10308,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 10295,
									"end": 10304,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10291,
									"end": 10309,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10283,
									"end": 10309,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10283,
									"end": 10309,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10319,
									"end": 10390,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "209"
								},
								{
									"begin": 10387,
									"end": 10388,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10376,
									"end": 10385,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10372,
									"end": 10389,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10363,
									"end": 10369,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 10319,
									"end": 10390,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 10319,
									"end": 10390,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10319,
									"end": 10390,
									"name": "tag",
									"source": 10,
									"value": "209"
								},
								{
									"begin": 10319,
									"end": 10390,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10400,
									"end": 10472,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "210"
								},
								{
									"begin": 10468,
									"end": 10470,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 10457,
									"end": 10466,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10453,
									"end": 10471,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10444,
									"end": 10450,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 10400,
									"end": 10472,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 10400,
									"end": 10472,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10400,
									"end": 10472,
									"name": "tag",
									"source": 10,
									"value": "210"
								},
								{
									"begin": 10400,
									"end": 10472,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10482,
									"end": 10554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "211"
								},
								{
									"begin": 10550,
									"end": 10552,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 10539,
									"end": 10548,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10535,
									"end": 10553,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10526,
									"end": 10532,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10482,
									"end": 10554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 10482,
									"end": 10554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10482,
									"end": 10554,
									"name": "tag",
									"source": 10,
									"value": "211"
								},
								{
									"begin": 10482,
									"end": 10554,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10119,
									"end": 10561,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 10119,
									"end": 10561,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 10119,
									"end": 10561,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10119,
									"end": 10561,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10119,
									"end": 10561,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10119,
									"end": 10561,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10119,
									"end": 10561,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10567,
									"end": 10789,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 10567,
									"end": 10789,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10660,
									"end": 10664,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10698,
									"end": 10700,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 10687,
									"end": 10696,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10683,
									"end": 10701,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10675,
									"end": 10701,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 10675,
									"end": 10701,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10711,
									"end": 10782,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "213"
								},
								{
									"begin": 10779,
									"end": 10780,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10768,
									"end": 10777,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 10764,
									"end": 10781,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10755,
									"end": 10761,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10711,
									"end": 10782,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 10711,
									"end": 10782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10711,
									"end": 10782,
									"name": "tag",
									"source": 10,
									"value": "213"
								},
								{
									"begin": 10711,
									"end": 10782,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10567,
									"end": 10789,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 10567,
									"end": 10789,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 10567,
									"end": 10789,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10567,
									"end": 10789,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10567,
									"end": 10789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 367,
									"end": 8658,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 367,
									"end": 8658,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 367,
									"end": 8658,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 8658,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 8658,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 8658,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 8658,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 367,
									"end": 8658,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 8658,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1b8841746faa3d853ab09a092672caf5c2942261c2794fab50af760c2b42bc564736f6c634300081a0033",
									".code": [
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "C040E6B8"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "C040E6B8"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "C552E04B"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "E6BD92B9"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "B0E68630"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "B68ED11F"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "BA20CF4C"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "BDA95633"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "8F7713FF"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "8F7713FF"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "902D55A5"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "920168B3"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "95CCEA67"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "7547C7A3"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "8E15F473"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "2B1CBC38"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "40F02AB6"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "40F02AB6"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "54DD1DA4"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "55DD574C"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "5FB3B944"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "2B1CBC38"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "32C85AC0"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "338DBF59"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "3610724E"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "1514617E"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "1514617E"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "192399D1"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "24600FC3"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "FE83BB8"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH",
											"source": 9,
											"value": "10C7F0B9"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 8606,
											"end": 8649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8649,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 8513,
											"end": 8556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8513,
											"end": 8556,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1082,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1082,
											"end": 1135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1720,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1720,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1720,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1609,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1609,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1495,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1495,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1495,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 8268,
											"end": 8469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1550,
											"end": 1603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1550,
											"end": 1603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1550,
											"end": 1603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 7791,
											"end": 8050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 3083,
											"end": 3490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3843,
											"end": 5389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 3843,
											"end": 5389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1664,
											"end": 1703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1664,
											"end": 1703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 7311,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3496,
											"end": 3837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 926,
											"end": 966,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 966,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 926,
											"end": 966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 926,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 926,
											"end": 966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 926,
											"end": 966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 966,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 926,
											"end": 966,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 926,
											"end": 966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 926,
											"end": 966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 966,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 6794,
											"end": 7305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 6794,
											"end": 7305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2564,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2564,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1242,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1242,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 459,
											"end": 520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 459,
											"end": 520,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 459,
											"end": 520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 459,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 459,
											"end": 520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 459,
											"end": 520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 459,
											"end": 520,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 459,
											"end": 520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 459,
											"end": 520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 459,
											"end": 520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 459,
											"end": 520,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1161,
											"end": 1213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1161,
											"end": 1213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 8056,
											"end": 8262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 8056,
											"end": 8262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 760,
											"end": 815,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 760,
											"end": 815,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 760,
											"end": 815,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 815,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 760,
											"end": 815,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 760,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 760,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 760,
											"end": 815,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 815,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 760,
											"end": 815,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 760,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 760,
											"end": 815,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 815,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 1315,
											"end": 1351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1315,
											"end": 1351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 594,
											"end": 649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 594,
											"end": 649,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 649,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 594,
											"end": 649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 594,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 594,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 594,
											"end": 649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 649,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 594,
											"end": 649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 594,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 594,
											"end": 649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 649,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 843,
											"end": 897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 843,
											"end": 897,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 897,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 843,
											"end": 897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 843,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 843,
											"end": 897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 843,
											"end": 897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 897,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 843,
											"end": 897,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 843,
											"end": 897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 843,
											"end": 897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 897,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 1423,
											"end": 1462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 1423,
											"end": 1462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 679,
											"end": 735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 679,
											"end": 735,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 735,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 679,
											"end": 735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 679,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 679,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 679,
											"end": 735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 735,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 679,
											"end": 735,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 679,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 679,
											"end": 735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 735,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 999,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 999,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 8268,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8335,
											"end": 8349,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8352,
											"end": 8373,
											"modifierDepth": 2,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 8335,
											"end": 8373,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8335,
											"end": 8373,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8391,
											"end": 8398,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 8391,
											"end": 8396,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 8391,
											"end": 8398,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8391,
											"end": 8398,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 8391,
											"end": 8398,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8408,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8383,
											"end": 8408,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 8409,
											"end": 8415,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8416,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8416,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8446,
											"end": 8453,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 8446,
											"end": 8451,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 8446,
											"end": 8453,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8446,
											"end": 8453,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 8446,
											"end": 8453,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "EAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D"
										},
										{
											"begin": 8455,
											"end": 8461,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 8431,
											"end": 8462,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8431,
											"end": 8462,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8469,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8268,
											"end": 8469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 7791,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7874,
											"end": 7891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7874,
											"end": 7891,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7849,
											"end": 7870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 7849,
											"end": 7870,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7849,
											"end": 7891,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7849,
											"end": 7929,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7849,
											"end": 7929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 7849,
											"end": 7929,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7849,
											"end": 7929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7916,
											"end": 7929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 7916,
											"end": 7929,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7895,
											"end": 7912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 7895,
											"end": 7912,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7895,
											"end": 7929,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7849,
											"end": 7929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 7849,
											"end": 7929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 7841,
											"end": 7977,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 7841,
											"end": 7977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7995,
											"end": 8009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 7992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7987,
											"end": 7992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 7987,
											"end": 8009,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "273467821F33675618854603EF917EBCEC8A1A39F95C43D5564ED1AEFAB870B3"
										},
										{
											"begin": 8037,
											"end": 8042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 8037,
											"end": 8042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8037,
											"end": 8042,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8037,
											"end": 8042,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8037,
											"end": 8042,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8037,
											"end": 8042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8037,
											"end": 8042,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8037,
											"end": 8042,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8037,
											"end": 8042,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8037,
											"end": 8042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8037,
											"end": 8042,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 8024,
											"end": 8043,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8043,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 8050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 3083,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3148,
											"end": 3171,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3148,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3148,
											"end": 3153,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3153,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3148,
											"end": 3153,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3148,
											"end": 3171,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3148,
											"end": 3171,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 3140,
											"end": 3220,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 3140,
											"end": 3220,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3238,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 3238,
											"end": 3259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3264,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 3230,
											"end": 3315,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 3230,
											"end": 3315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3354,
											"end": 3355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 3333,
											"end": 3350,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3355,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 3325,
											"end": 3413,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3325,
											"end": 3413,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3424,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3424,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3424,
											"end": 3449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "273467821F33675618854603EF917EBCEC8A1A39F95C43D5564ED1AEFAB870B3"
										},
										{
											"begin": 3477,
											"end": 3482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3477,
											"end": 3482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3477,
											"end": 3482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3482,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3477,
											"end": 3482,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3482,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3477,
											"end": 3482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3464,
											"end": 3483,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3483,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 3083,
											"end": 3490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3938,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3929,
											"end": 3952,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3929,
											"end": 3934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3934,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3929,
											"end": 3934,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3934,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3929,
											"end": 3934,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3929,
											"end": 3952,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 3929,
											"end": 3952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3952,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 3921,
											"end": 3975,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 3921,
											"end": 3975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 4008,
											"end": 4022,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4008,
											"end": 4024,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4008,
											"end": 4024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 4008,
											"end": 4024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4024,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4056,
											"end": 4057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4042,
											"end": 4053,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4057,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 4034,
											"end": 4087,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 4034,
											"end": 4087,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4098,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4131,
											"end": 4157,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4131,
											"end": 4136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4136,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4131,
											"end": 4136,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4136,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4131,
											"end": 4136,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4131,
											"end": 4157,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 4131,
											"end": 4157,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4131,
											"end": 4157,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 5383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 4127,
											"end": 5383,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4205,
											"end": 4222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4205,
											"end": 4222,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4181,
											"end": 4202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 4181,
											"end": 4202,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4181,
											"end": 4222,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 4173,
											"end": 4249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 4173,
											"end": 4249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 4304,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 4335,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4304,
											"end": 4330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 4318,
											"end": 4329,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4313,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 4304,
											"end": 4317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4330,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4330,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4304,
											"end": 4330,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4330,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4330,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 4304,
											"end": 4330,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 4304,
											"end": 4334,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4343,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4343,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4304,
											"end": 4343,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4343,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4343,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 4304,
											"end": 4343,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 4277,
											"end": 4344,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 4277,
											"end": 4344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4344,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 4408,
											"end": 4419,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 4382,
											"end": 4403,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 4382,
											"end": 4407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4420,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4420,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4420,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4382,
											"end": 4420,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 4382,
											"end": 4420,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4358,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 4358,
											"end": 4420,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4358,
											"end": 4420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4358,
											"end": 4420,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4358,
											"end": 4420,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4467,
											"end": 4484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4467,
											"end": 4484,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4442,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 4442,
											"end": 4463,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4442,
											"end": 4484,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4442,
											"end": 4484,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 4434,
											"end": 4522,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 4434,
											"end": 4522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 4596,
											"end": 4607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4580,
											"end": 4590,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4591,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 4565,
											"end": 4595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4608,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4565,
											"end": 4608,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4608,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 4565,
											"end": 4608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4536,
											"end": 4550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4562,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4536,
											"end": 4608,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4536,
											"end": 4608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4536,
											"end": 4608,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4536,
											"end": 4608,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 4694,
											"end": 4709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 4694,
											"end": 4709,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 4675,
											"end": 4688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 4675,
											"end": 4688,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4670,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 4655,
											"end": 4674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4689,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4689,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4655,
											"end": 4689,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 4655,
											"end": 4689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 4655,
											"end": 4693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4655,
											"end": 4710,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 4655,
											"end": 4710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4641,
											"end": 4651,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4622,
											"end": 4652,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4710,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4710,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4741,
											"end": 4751,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FA81BB0702332EA2A0AEE44BB9E4D359CF4A2C5A820DD59D9129369BDBCA73F"
										},
										{
											"begin": 4753,
											"end": 4764,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 4729,
											"end": 4765,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4765,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 5383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 4127,
											"end": 5383,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 5383,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 4127,
											"end": 5383,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4795,
											"end": 4812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4786,
											"end": 4812,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4786,
											"end": 4812,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4786,
											"end": 4791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4786,
											"end": 4791,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4791,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4791,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4786,
											"end": 4791,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4791,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4791,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4786,
											"end": 4791,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4786,
											"end": 4812,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 4786,
											"end": 4812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4812,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 5383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 4782,
											"end": 5383,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4856,
											"end": 4869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 4856,
											"end": 4869,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4836,
											"end": 4853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 4836,
											"end": 4853,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4836,
											"end": 4869,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 4828,
											"end": 4892,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 4828,
											"end": 4892,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4927,
											"end": 4941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 4914,
											"end": 4923,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4941,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4941,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4974,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4974,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 4914,
											"end": 4974,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4974,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4958,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A2A15D09519BE00000"
										},
										{
											"begin": 4945,
											"end": 4954,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4945,
											"end": 4974,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4945,
											"end": 4974,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4974,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 4914,
											"end": 4974,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 4906,
											"end": 5009,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 4906,
											"end": 5009,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5037,
											"end": 5100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 5060,
											"end": 5099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 5091,
											"end": 5098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5060,
											"end": 5086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 5074,
											"end": 5085,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5069,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5060,
											"end": 5073,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5086,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5060,
											"end": 5086,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5086,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 5060,
											"end": 5086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5060,
											"end": 5090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5099,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5060,
											"end": 5099,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5099,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 5060,
											"end": 5099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5037,
											"end": 5059,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 5037,
											"end": 5100,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5037,
											"end": 5100,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 5037,
											"end": 5100,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5100,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5100,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 5156,
											"end": 5167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 5134,
											"end": 5151,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5155,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5134,
											"end": 5155,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5168,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5134,
											"end": 5168,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5168,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5168,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 5134,
											"end": 5168,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5114,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 5114,
											"end": 5168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5114,
											"end": 5168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5114,
											"end": 5168,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5114,
											"end": 5168,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5211,
											"end": 5224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 5211,
											"end": 5224,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 5190,
											"end": 5207,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5224,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5224,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 5182,
											"end": 5258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 5182,
											"end": 5258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 5290,
											"end": 5294,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 5297,
											"end": 5307,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5309,
											"end": 5320,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5272,
											"end": 5321,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5321,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 5272,
											"end": 5321,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5358,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "550498DC565CC74203B9D14CBA907C9F60CEEFE26E82B37DF98F6CB98529CF19"
										},
										{
											"begin": 5360,
											"end": 5371,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 5340,
											"end": 5372,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5372,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 5383,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 4782,
											"end": 5383,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 5383,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 4127,
											"end": 5383,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 5389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 5389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 5389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3843,
											"end": 5389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 7311,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7401,
											"end": 7419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7420,
											"end": 7430,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7401,
											"end": 7431,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7382,
											"end": 7397,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 7382,
											"end": 7431,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7382,
											"end": 7431,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 7374,
											"end": 7469,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 7374,
											"end": 7469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7479,
											"end": 7493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7496,
											"end": 7510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7511,
											"end": 7521,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7496,
											"end": 7522,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7479,
											"end": 7522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7479,
											"end": 7522,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7549,
											"end": 7550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7540,
											"end": 7546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7540,
											"end": 7550,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 7532,
											"end": 7582,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 7532,
											"end": 7582,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7593,
											"end": 7607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7608,
											"end": 7618,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7593,
											"end": 7619,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7623,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7623,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7623,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7593,
											"end": 7623,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7666,
											"end": 7667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7633,
											"end": 7651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7652,
											"end": 7662,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7633,
											"end": 7663,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7667,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 7667,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7678,
											"end": 7722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 7696,
											"end": 7700,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 7703,
											"end": 7713,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7715,
											"end": 7721,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7678,
											"end": 7687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 7678,
											"end": 7722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7678,
											"end": 7722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 7678,
											"end": 7722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7759,
											"end": 7769,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6BC5063C7239B75C8BF325A2A2238F726FADA322163996BB6C93D5594FB119F0"
										},
										{
											"begin": 7771,
											"end": 7777,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7738,
											"end": 7778,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 7778,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7785,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7311,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3496,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3566,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3557,
											"end": 3583,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3557,
											"end": 3562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3562,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3557,
											"end": 3562,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3562,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3557,
											"end": 3562,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3557,
											"end": 3583,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3583,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 3549,
											"end": 3631,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 3549,
											"end": 3631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3674,
											"end": 3691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3674,
											"end": 3691,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 3649,
											"end": 3670,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3691,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 3641,
											"end": 3752,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 3641,
											"end": 3752,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3771,
											"end": 3776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3771,
											"end": 3776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3771,
											"end": 3796,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3796,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "273467821F33675618854603EF917EBCEC8A1A39F95C43D5564ED1AEFAB870B3"
										},
										{
											"begin": 3824,
											"end": 3829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3824,
											"end": 3829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3829,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3824,
											"end": 3829,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3829,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3824,
											"end": 3829,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3811,
											"end": 3830,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3830,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 926,
											"end": 966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 926,
											"end": 966,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 926,
											"end": 966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6890,
											"end": 6891,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6881,
											"end": 6887,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6881,
											"end": 6891,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 6873,
											"end": 6925,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 6873,
											"end": 6925,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6968,
											"end": 6974,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6964,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 6953,
											"end": 6963,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6952,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 6943,
											"end": 6964,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6964,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 6943,
											"end": 6964,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6974,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6974,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 6935,
											"end": 7008,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 6935,
											"end": 7008,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7063,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 7029,
											"end": 7039,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7049,
											"end": 7053,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 7056,
											"end": 7062,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7028,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 7019,
											"end": 7063,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7019,
											"end": 7063,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 7019,
											"end": 7063,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7141,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 7134,
											"end": 7140,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7128,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7129,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7133,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 7103,
											"end": 7133,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7141,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7141,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7141,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7103,
											"end": 7141,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7141,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7103,
											"end": 7141,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 7103,
											"end": 7141,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7088,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7089,
											"end": 7099,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7074,
											"end": 7100,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7141,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7141,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7141,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7141,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7218,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 7204,
											"end": 7217,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 7204,
											"end": 7217,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7199,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7203,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 7184,
											"end": 7203,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7218,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7218,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7184,
											"end": 7218,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7218,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7218,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 7184,
											"end": 7218,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7151,
											"end": 7169,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7170,
											"end": 7180,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7151,
											"end": 7181,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7151,
											"end": 7218,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7151,
											"end": 7218,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7151,
											"end": 7218,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7151,
											"end": 7218,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7247,
											"end": 7257,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "DD2A19C3BDD089CBE77C04F5655F83DE0504D6140D12C8667646F55D0557C4DC"
										},
										{
											"begin": 7259,
											"end": 7265,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7285,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7296,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7267,
											"end": 7297,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 7234,
											"end": 7298,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7234,
											"end": 7298,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 7305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 7305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2611,
											"end": 2618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2648,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2651,
											"end": 2652,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2630,
											"end": 2652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2988,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 2662,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 2696,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2686,
											"end": 2703,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 2703,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 2703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 2703,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2683,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2682,
											"end": 2703,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2662,
											"end": 2988,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2662,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 2662,
											"end": 2988,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2760,
											"end": 2769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2834,
											"end": 2835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 2823,
											"end": 2836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2852,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2852,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2852,
											"name": "PUSH",
											"source": 9,
											"value": "FEAF968C"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 2823,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2854,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2884,
											"end": 2885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2876,
											"end": 2881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2876,
											"end": 2885,
											"name": "SGT",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 2868,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 2868,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 2970,
											"end": 2975,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 2957,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 2947,
											"end": 2961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 2977,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 2977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 2977,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2947,
											"end": 2977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 2977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 2977,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 2947,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2934,
											"end": 2977,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2934,
											"end": 2977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2988,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2662,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 2662,
											"end": 2988,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2662,
											"end": 2988,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 2662,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2662,
											"end": 2988,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 3042,
											"end": 3050,
											"name": "PUSH",
											"source": 9,
											"value": "2540BE400"
										},
										{
											"begin": 3004,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 3019,
											"end": 3029,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3036,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3014,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 3004,
											"end": 3018,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3037,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3037,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3037,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3037,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 3004,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 3004,
											"end": 3041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3051,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3051,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3051,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3051,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 3004,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3051,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1242,
											"end": 1289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 459,
											"end": 520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 498,
											"end": 520,
											"name": "PUSH",
											"source": 9,
											"value": "A56FA5B99019A5C8000000"
										},
										{
											"begin": 459,
											"end": 520,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 459,
											"end": 520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8170,
											"end": 8182,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8192,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8163,
											"end": 8192,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8192,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 8193,
											"end": 8200,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 8193,
											"end": 8198,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 8193,
											"end": 8200,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8193,
											"end": 8200,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 8193,
											"end": 8200,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8202,
											"end": 8208,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 8163,
											"end": 8209,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8209,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 8163,
											"end": 8209,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8209,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8246,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 8239,
											"end": 8244,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 8239,
											"end": 8246,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8246,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 8239,
											"end": 8246,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "EAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D"
										},
										{
											"begin": 8248,
											"end": 8254,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 8224,
											"end": 8255,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8255,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8056,
											"end": 8262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 760,
											"end": 815,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 760,
											"end": 815,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 760,
											"end": 815,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 760,
											"end": 815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 594,
											"end": 649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 594,
											"end": 649,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 594,
											"end": 649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 843,
											"end": 897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 843,
											"end": 897,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 843,
											"end": 897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 679,
											"end": 735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 679,
											"end": 735,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 679,
											"end": 735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 999,
											"end": 1051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "454"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 4,
											"value": "454"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "455"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "456"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 4,
											"value": "456"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 4,
											"value": "455"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5395,
											"end": 6259,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 5395,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5473,
											"end": 5480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5513,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5500,
											"end": 5509,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5500,
											"end": 5513,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 5492,
											"end": 5551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 5492,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5589,
											"end": 5590,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5569,
											"end": 5586,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5569,
											"end": 5586,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5569,
											"end": 5590,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 5561,
											"end": 5637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 5561,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5680,
											"end": 5697,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5680,
											"end": 5697,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 5655,
											"end": 5676,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5697,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5697,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 5647,
											"end": 5750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 5647,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5761,
											"end": 5779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5782,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5801,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5782,
											"end": 5801,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 5782,
											"end": 5805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5828,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5828,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5828,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5782,
											"end": 5828,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5828,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 5782,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5761,
											"end": 5828,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5761,
											"end": 5828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5838,
											"end": 5858,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 5900,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 5942,
											"end": 5959,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5942,
											"end": 5959,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 5915,
											"end": 5936,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 5915,
											"end": 5936,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5910,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5900,
											"end": 5914,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5937,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5937,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5937,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5900,
											"end": 5937,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5937,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 5900,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5960,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5960,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5900,
											"end": 5960,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5960,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 5900,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5882,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5861,
											"end": 5882,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5861,
											"end": 5886,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5970,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5970,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5970,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5861,
											"end": 5970,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5970,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 5861,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5838,
											"end": 5970,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5838,
											"end": 5970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6005,
											"end": 6026,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6005,
											"end": 6026,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6026,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6026,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6065,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 5989,
											"end": 6065,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6046,
											"end": 6065,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6030,
											"end": 6042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6030,
											"end": 6065,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6030,
											"end": 6065,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6065,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 5989,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 5981,
											"end": 6100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 5981,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6128,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 6142,
											"end": 6154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6137,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 6128,
											"end": 6141,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6155,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6155,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6155,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6128,
											"end": 6155,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6155,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 6128,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6155,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6155,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6182,
											"end": 6183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6173,
											"end": 6179,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6183,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 6165,
											"end": 6228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 6165,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6246,
											"end": 6252,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6252,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 6259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 6259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 6259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 6259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6265,
											"end": 6788,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 6265,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6339,
											"end": 6346,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6358,
											"end": 6378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6381,
											"end": 6508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 6416,
											"end": 6498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 6484,
											"end": 6497,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 6484,
											"end": 6497,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 6461,
											"end": 6478,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 6461,
											"end": 6478,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 6437,
											"end": 6454,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 6437,
											"end": 6454,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6432,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 6417,
											"end": 6432,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 6417,
											"end": 6436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6455,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6455,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6417,
											"end": 6455,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6455,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 6417,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 6416,
											"end": 6460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6479,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6479,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6479,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6416,
											"end": 6479,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6479,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 6416,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 6416,
											"end": 6483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6498,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6498,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6498,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6416,
											"end": 6498,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6416,
											"end": 6498,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 6416,
											"end": 6498,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6381,
											"end": 6398,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 6381,
											"end": 6398,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6381,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 6381,
											"end": 6402,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6381,
											"end": 6508,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6381,
											"end": 6508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6381,
											"end": 6508,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6381,
											"end": 6508,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6381,
											"end": 6508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6381,
											"end": 6508,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 6381,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6358,
											"end": 6508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6358,
											"end": 6508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6559,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 6542,
											"end": 6559,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6538,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6559,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6559,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6594,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6594,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 6526,
											"end": 6594,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6594,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 6579,
											"end": 6594,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6575,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6594,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6594,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6594,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 6526,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 6518,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 6518,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6640,
											"end": 6654,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 6671,
											"end": 6683,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6657,
											"end": 6666,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6657,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 6657,
											"end": 6670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6657,
											"end": 6684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6657,
											"end": 6684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6657,
											"end": 6684,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6657,
											"end": 6684,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6657,
											"end": 6684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6657,
											"end": 6684,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 6657,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6640,
											"end": 6684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6640,
											"end": 6684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6702,
											"end": 6708,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6702,
											"end": 6712,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 6694,
											"end": 6757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 6694,
											"end": 6757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6775,
											"end": 6781,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6768,
											"end": 6781,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6768,
											"end": 6781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6768,
											"end": 6781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6768,
											"end": 6781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6265,
											"end": 6788,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6265,
											"end": 6788,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6265,
											"end": 6788,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6265,
											"end": 6788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 4,
											"value": "452"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "523"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "524"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 4,
											"value": "524"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 4,
											"value": "523"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "525"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "526"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 4,
											"value": "526"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 4,
											"value": "525"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "527"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "528"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 4,
											"value": "528"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 4,
											"value": "527"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "530"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "531"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "509"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 4,
											"value": "531"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "532"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "530"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "533"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "534"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "458"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 4,
											"value": "534"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 4,
											"value": "533"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "532"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "535"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "536"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "535"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "536"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "537"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 4,
											"value": "537"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 182,
											"end": 402,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 182,
											"end": 402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 322,
											"end": 356,
											"name": "PUSH",
											"source": 10,
											"value": "44697265637420455448207472616E7366657273206E6F7420616C6C6F776564"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 299,
											"end": 357,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 391,
											"end": 394,
											"name": "PUSH",
											"source": 10,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 386,
											"end": 388,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 384,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 374,
											"end": 389,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 367,
											"end": 395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 182,
											"end": 402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 182,
											"end": 402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 408,
											"end": 774,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 408,
											"end": 774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 550,
											"end": 553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 635,
											"end": 637,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 571,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 571,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 571,
											"end": 638,
											"name": "tag",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 571,
											"end": 638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 564,
											"end": 638,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 564,
											"end": 638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 647,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 647,
											"end": 740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 740,
											"name": "tag",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 647,
											"end": 740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 765,
											"end": 767,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 763,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 756,
											"end": 768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 749,
											"end": 768,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 749,
											"end": 768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 408,
											"end": 774,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 408,
											"end": 774,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 408,
											"end": 774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 408,
											"end": 774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 780,
											"end": 1199,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 780,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 946,
											"end": 950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 986,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 982,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 969,
											"end": 987,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 961,
											"end": 987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 987,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 1042,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1023,
											"end": 1043,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1004,
											"end": 1021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1044,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 1061,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1061,
											"end": 1192,
											"name": "tag",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 1061,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1053,
											"end": 1192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1053,
											"end": 1192,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 780,
											"end": 1199,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 780,
											"end": 1199,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 780,
											"end": 1199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 780,
											"end": 1199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1205,
											"end": 1304,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 1205,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1285,
											"end": 1297,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1275,
											"end": 1297,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1275,
											"end": 1297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1205,
											"end": 1304,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1205,
											"end": 1304,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1205,
											"end": 1304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1205,
											"end": 1304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1310,
											"end": 1449,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 1310,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1394,
											"end": 1397,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1406,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1437,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1426,
											"end": 1429,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1415,
											"end": 1442,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1310,
											"end": 1449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1310,
											"end": 1449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1310,
											"end": 1449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1310,
											"end": 1449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1455,
											"end": 1557,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 1455,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1549,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1543,
											"end": 1550,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1540,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1523,
											"end": 1551,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1513,
											"end": 1551,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1513,
											"end": 1551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1455,
											"end": 1557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1455,
											"end": 1557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1455,
											"end": 1557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1455,
											"end": 1557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1651,
											"end": 1654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 1712,
											"end": 1717,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 1679,
											"end": 1718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1718,
											"name": "tag",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 1679,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1734,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 1798,
											"end": 1804,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1793,
											"end": 1796,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1734,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 1734,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1734,
											"end": 1805,
											"name": "tag",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 1734,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1805,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1805,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1870,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 1864,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1853,
											"end": 1858,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1865,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 1814,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1879,
											"name": "tag",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 1814,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 1904,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1933,
											"name": "tag",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 1904,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1895,
											"end": 1934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1888,
											"end": 1934,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1888,
											"end": 1934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1655,
											"end": 1940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2063,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2099,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2095,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2146,
											"end": 2155,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2140,
											"end": 2144,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2156,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2132,
											"end": 2133,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2134,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2110,
											"end": 2157,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2174,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 2247,
											"end": 2251,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2174,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 2174,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2174,
											"end": 2252,
											"name": "tag",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 2174,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2252,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1946,
											"end": 2259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2346,
											"end": 2463,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 2346,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2453,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2718,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 2592,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2629,
											"end": 2636,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2711,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2662,
											"end": 2667,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2712,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2712,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2718,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2718,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2718,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 2820,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 2724,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2768,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 2808,
											"end": 2813,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 2790,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2814,
											"name": "tag",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 2790,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 2820,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 2820,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 2820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2948,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 2826,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "658"
										},
										{
											"begin": 2917,
											"end": 2922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 2899,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "tag",
											"source": 10,
											"value": "658"
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2892,
											"end": 2897,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2924,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "659"
										},
										{
											"begin": 2879,
											"end": 2942,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2936,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2940,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 2942,
											"name": "tag",
											"source": 10,
											"value": "659"
										},
										{
											"begin": 2879,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3005,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3044,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 3081,
											"end": 3086,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 3054,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "tag",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 3093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3136,
											"end": 3143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3304,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 3182,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "664"
										},
										{
											"begin": 3273,
											"end": 3278,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 3255,
											"end": 3279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3279,
											"name": "tag",
											"source": 10,
											"value": "664"
										},
										{
											"begin": 3255,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3248,
											"end": 3253,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3245,
											"end": 3280,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "665"
										},
										{
											"begin": 3235,
											"end": 3298,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3295,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3292,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3284,
											"end": 3296,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3298,
											"name": "tag",
											"source": 10,
											"value": "665"
										},
										{
											"begin": 3235,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3356,
											"end": 3361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "667"
										},
										{
											"begin": 3437,
											"end": 3442,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 3410,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3443,
											"name": "tag",
											"source": 10,
											"value": "667"
										},
										{
											"begin": 3410,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3523,
											"end": 3529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3580,
											"end": 3582,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3568,
											"end": 3577,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3559,
											"end": 3566,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3555,
											"end": 3578,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3583,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3667,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "669"
										},
										{
											"begin": 3548,
											"end": 3667,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3586,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "670"
										},
										{
											"begin": 3586,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 3586,
											"end": 3665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3586,
											"end": 3665,
											"name": "tag",
											"source": 10,
											"value": "670"
										},
										{
											"begin": 3586,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3667,
											"name": "tag",
											"source": 10,
											"value": "669"
										},
										{
											"begin": 3548,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3706,
											"end": 3707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "671"
										},
										{
											"begin": 3776,
											"end": 3783,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3773,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3765,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3752,
											"end": 3774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 3731,
											"end": 3784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3784,
											"name": "tag",
											"source": 10,
											"value": "671"
										},
										{
											"begin": 3731,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3784,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3859,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "672"
										},
										{
											"begin": 3904,
											"end": 3911,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3895,
											"end": 3901,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3893,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3902,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3859,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 3859,
											"end": 3912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3859,
											"end": 3912,
											"name": "tag",
											"source": 10,
											"value": "672"
										},
										{
											"begin": 3859,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3849,
											"end": 3912,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3849,
											"end": 3912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3455,
											"end": 3929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3935,
											"end": 4025,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 3935,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 3976,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4019,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3987,
											"end": 4019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3987,
											"end": 4019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3935,
											"end": 4025,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3935,
											"end": 4025,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3935,
											"end": 4025,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3935,
											"end": 4025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4031,
											"end": 4140,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 4031,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "675"
										},
										{
											"begin": 4127,
											"end": 4132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 4112,
											"end": 4133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4133,
											"name": "tag",
											"source": 10,
											"value": "675"
										},
										{
											"begin": 4112,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4107,
											"end": 4110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4134,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4031,
											"end": 4140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4031,
											"end": 4140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4031,
											"end": 4140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4271,
											"end": 4273,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4260,
											"end": 4269,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4256,
											"end": 4274,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4248,
											"end": 4274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4248,
											"end": 4274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "677"
										},
										{
											"begin": 4346,
											"end": 4347,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4344,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4331,
											"end": 4348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 4284,
											"end": 4349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4349,
											"name": "tag",
											"source": 10,
											"value": "677"
										},
										{
											"begin": 4284,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4480,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 4362,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4449,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "679"
										},
										{
											"begin": 4467,
											"end": 4472,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4449,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 4449,
											"end": 4473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4449,
											"end": 4473,
											"name": "tag",
											"source": 10,
											"value": "679"
										},
										{
											"begin": 4449,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4444,
											"end": 4447,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 4474,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4579,
											"end": 4583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 4619,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4606,
											"end": 4615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4630,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "681"
										},
										{
											"begin": 4698,
											"end": 4699,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4687,
											"end": 4696,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4630,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 4630,
											"end": 4701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4630,
											"end": 4701,
											"name": "tag",
											"source": 10,
											"value": "681"
										},
										{
											"begin": 4630,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4779,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4824,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4810,
											"end": 4819,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4801,
											"end": 4808,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4797,
											"end": 4820,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 4825,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4790,
											"end": 4909,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4790,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "683"
										},
										{
											"begin": 4790,
											"end": 4909,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4828,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "684"
										},
										{
											"begin": 4828,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 4828,
											"end": 4907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4828,
											"end": 4907,
											"name": "tag",
											"source": 10,
											"value": "684"
										},
										{
											"begin": 4828,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4790,
											"end": 4909,
											"name": "tag",
											"source": 10,
											"value": "683"
										},
										{
											"begin": 4790,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4948,
											"end": 4949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "685"
										},
										{
											"begin": 5018,
											"end": 5025,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4998,
											"end": 5007,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 5016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 4973,
											"end": 5026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "tag",
											"source": 10,
											"value": "685"
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4963,
											"end": 5026,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4963,
											"end": 5026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4919,
											"end": 5036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4714,
											"end": 5043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5049,
											"end": 5109,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 5049,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5080,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5049,
											"end": 5109,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5049,
											"end": 5109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5049,
											"end": 5109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5049,
											"end": 5109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5115,
											"end": 5257,
											"name": "tag",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 5115,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5165,
											"end": 5174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5198,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "688"
										},
										{
											"begin": 5216,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "689"
										},
										{
											"begin": 5225,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "690"
										},
										{
											"begin": 5243,
											"end": 5248,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 5225,
											"end": 5249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5249,
											"name": "tag",
											"source": 10,
											"value": "690"
										},
										{
											"begin": 5225,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5216,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 5216,
											"end": 5250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5216,
											"end": 5250,
											"name": "tag",
											"source": 10,
											"value": "689"
										},
										{
											"begin": 5216,
											"end": 5250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5198,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 5198,
											"end": 5251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5198,
											"end": 5251,
											"name": "tag",
											"source": 10,
											"value": "688"
										},
										{
											"begin": 5198,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5185,
											"end": 5251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5185,
											"end": 5251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5115,
											"end": 5257,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5115,
											"end": 5257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5115,
											"end": 5257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5115,
											"end": 5257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5263,
											"end": 5389,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 5263,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "692"
										},
										{
											"begin": 5377,
											"end": 5382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 5346,
											"end": 5383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5346,
											"end": 5383,
											"name": "tag",
											"source": 10,
											"value": "692"
										},
										{
											"begin": 5346,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5333,
											"end": 5383,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5333,
											"end": 5383,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5263,
											"end": 5389,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5263,
											"end": 5389,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5263,
											"end": 5389,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5263,
											"end": 5389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5549,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 5395,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5482,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5506,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "694"
										},
										{
											"begin": 5537,
											"end": 5542,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 5506,
											"end": 5543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5543,
											"name": "tag",
											"source": 10,
											"value": "694"
										},
										{
											"begin": 5506,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5493,
											"end": 5543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5493,
											"end": 5543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5549,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5549,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5395,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5742,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 5555,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5670,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "696"
										},
										{
											"begin": 5729,
											"end": 5734,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5670,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 5670,
											"end": 5735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5670,
											"end": 5735,
											"name": "tag",
											"source": 10,
											"value": "696"
										},
										{
											"begin": 5670,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5668,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5658,
											"end": 5736,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5748,
											"end": 6026,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 5748,
											"end": 6026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5909,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5896,
											"end": 5905,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5892,
											"end": 5910,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5884,
											"end": 5910,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5884,
											"end": 5910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "698"
										},
										{
											"begin": 6016,
											"end": 6017,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6005,
											"end": 6014,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6001,
											"end": 6018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5992,
											"end": 5998,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 5920,
											"end": 6019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 6019,
											"name": "tag",
											"source": 10,
											"value": "698"
										},
										{
											"begin": 5920,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5748,
											"end": 6026,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5748,
											"end": 6026,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5748,
											"end": 6026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5748,
											"end": 6026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5748,
											"end": 6026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6361,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 6032,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6140,
											"end": 6142,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6128,
											"end": 6137,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6119,
											"end": 6126,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6115,
											"end": 6138,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6111,
											"end": 6143,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6227,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "700"
										},
										{
											"begin": 6108,
											"end": 6227,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "701"
										},
										{
											"begin": 6146,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 6146,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6225,
											"name": "tag",
											"source": 10,
											"value": "701"
										},
										{
											"begin": 6146,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6108,
											"end": 6227,
											"name": "tag",
											"source": 10,
											"value": "700"
										},
										{
											"begin": 6108,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6267,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "702"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6327,
											"end": 6333,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6325,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6312,
											"end": 6334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 6291,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6344,
											"name": "tag",
											"source": 10,
											"value": "702"
										},
										{
											"begin": 6291,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6281,
											"end": 6344,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6281,
											"end": 6344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6237,
											"end": 6354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6361,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6361,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6032,
											"end": 6361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6986,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 6367,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6444,
											"end": 6450,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6458,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6460,
											"end": 6466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6509,
											"end": 6511,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6497,
											"end": 6506,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6495,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6484,
											"end": 6507,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6480,
											"end": 6512,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6477,
											"end": 6596,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6477,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 6477,
											"end": 6596,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6515,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "705"
										},
										{
											"begin": 6515,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 6515,
											"end": 6594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6515,
											"end": 6594,
											"name": "tag",
											"source": 10,
											"value": "705"
										},
										{
											"begin": 6515,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6477,
											"end": 6596,
											"name": "tag",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 6477,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6635,
											"end": 6636,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "706"
										},
										{
											"begin": 6705,
											"end": 6712,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6685,
											"end": 6694,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6703,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6660,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 6660,
											"end": 6713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6660,
											"end": 6713,
											"name": "tag",
											"source": 10,
											"value": "706"
										},
										{
											"begin": 6660,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6650,
											"end": 6713,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6650,
											"end": 6713,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6762,
											"end": 6764,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6788,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "707"
										},
										{
											"begin": 6833,
											"end": 6840,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6813,
											"end": 6822,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6809,
											"end": 6831,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 6788,
											"end": 6841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6788,
											"end": 6841,
											"name": "tag",
											"source": 10,
											"value": "707"
										},
										{
											"begin": 6788,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6778,
											"end": 6841,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6778,
											"end": 6841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6890,
											"end": 6892,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6916,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "708"
										},
										{
											"begin": 6961,
											"end": 6968,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6952,
											"end": 6958,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6941,
											"end": 6950,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6937,
											"end": 6959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6916,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 6916,
											"end": 6969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6916,
											"end": 6969,
											"name": "tag",
											"source": 10,
											"value": "708"
										},
										{
											"begin": 6916,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6906,
											"end": 6969,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6906,
											"end": 6969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6861,
											"end": 6979,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6986,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6986,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6986,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6992,
											"end": 7078,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 6992,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7027,
											"end": 7034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7071,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7060,
											"end": 7065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7056,
											"end": 7072,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7045,
											"end": 7072,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7045,
											"end": 7072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6992,
											"end": 7078,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6992,
											"end": 7078,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6992,
											"end": 7078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6992,
											"end": 7078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7196,
											"name": "tag",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 7084,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7167,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "711"
										},
										{
											"begin": 7183,
											"end": 7188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7167,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 7167,
											"end": 7189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7167,
											"end": 7189,
											"name": "tag",
											"source": 10,
											"value": "711"
										},
										{
											"begin": 7167,
											"end": 7189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7165,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7155,
											"end": 7190,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7202,
											"end": 7416,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 7202,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7291,
											"end": 7295,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7329,
											"end": 7331,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7318,
											"end": 7327,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7332,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7306,
											"end": 7332,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7342,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "713"
										},
										{
											"begin": 7406,
											"end": 7407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7395,
											"end": 7404,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7391,
											"end": 7408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7342,
											"end": 7409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 7342,
											"end": 7409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7342,
											"end": 7409,
											"name": "tag",
											"source": 10,
											"value": "713"
										},
										{
											"begin": 7342,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7202,
											"end": 7416,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7202,
											"end": 7416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7202,
											"end": 7416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7202,
											"end": 7416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7202,
											"end": 7416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7540,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 7422,
											"end": 7540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7509,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "715"
										},
										{
											"begin": 7527,
											"end": 7532,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7509,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 7509,
											"end": 7533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7509,
											"end": 7533,
											"name": "tag",
											"source": 10,
											"value": "715"
										},
										{
											"begin": 7509,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7507,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7497,
											"end": 7534,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7422,
											"end": 7540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7768,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 7546,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7666,
											"end": 7675,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7662,
											"end": 7680,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7654,
											"end": 7680,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7654,
											"end": 7680,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "717"
										},
										{
											"begin": 7758,
											"end": 7759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7747,
											"end": 7756,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7743,
											"end": 7760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7734,
											"end": 7740,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 7690,
											"end": 7761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7761,
											"name": "tag",
											"source": 10,
											"value": "717"
										},
										{
											"begin": 7690,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7768,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7768,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7774,
											"end": 7954,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 7774,
											"end": 7954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7822,
											"end": 7899,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7819,
											"end": 7820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7812,
											"end": 7900,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7919,
											"end": 7923,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 7916,
											"end": 7917,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7909,
											"end": 7924,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7943,
											"end": 7947,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7940,
											"end": 7941,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7933,
											"end": 7948,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7960,
											"end": 8079,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 7960,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8048,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 8040,
											"end": 8045,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8037,
											"end": 8049,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8027,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "720"
										},
										{
											"begin": 8027,
											"end": 8073,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8053,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "721"
										},
										{
											"begin": 8053,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 8053,
											"end": 8071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8053,
											"end": 8071,
											"name": "tag",
											"source": 10,
											"value": "721"
										},
										{
											"begin": 8053,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8027,
											"end": 8073,
											"name": "tag",
											"source": 10,
											"value": "720"
										},
										{
											"begin": 8027,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7960,
											"end": 8079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7960,
											"end": 8079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8085,
											"end": 8224,
											"name": "tag",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 8085,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8136,
											"end": 8143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8170,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "723"
										},
										{
											"begin": 8212,
											"end": 8217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 8171,
											"end": 8218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8218,
											"name": "tag",
											"source": 10,
											"value": "723"
										},
										{
											"begin": 8171,
											"end": 8218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8085,
											"end": 8224,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8085,
											"end": 8224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8085,
											"end": 8224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8085,
											"end": 8224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8369,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 8230,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8292,
											"end": 8301,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8325,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "725"
										},
										{
											"begin": 8357,
											"end": 8362,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8325,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 8325,
											"end": 8363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8325,
											"end": 8363,
											"name": "tag",
											"source": 10,
											"value": "725"
										},
										{
											"begin": 8325,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8312,
											"end": 8363,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8312,
											"end": 8363,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8369,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8369,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8375,
											"end": 8530,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 8375,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8474,
											"end": 8523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "727"
										},
										{
											"begin": 8517,
											"end": 8522,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8474,
											"end": 8523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 8474,
											"end": 8523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8474,
											"end": 8523,
											"name": "tag",
											"source": 10,
											"value": "727"
										},
										{
											"begin": 8474,
											"end": 8523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8469,
											"end": 8472,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8462,
											"end": 8524,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8375,
											"end": 8530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8375,
											"end": 8530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8375,
											"end": 8530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8782,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 8536,
											"end": 8782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8641,
											"end": 8645,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8679,
											"end": 8681,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8668,
											"end": 8677,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 8682,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8682,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8692,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "729"
										},
										{
											"begin": 8772,
											"end": 8773,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8761,
											"end": 8770,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8757,
											"end": 8774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8748,
											"end": 8754,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8692,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 8692,
											"end": 8775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8692,
											"end": 8775,
											"name": "tag",
											"source": 10,
											"value": "729"
										},
										{
											"begin": 8692,
											"end": 8775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8782,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8782,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8788,
											"end": 9262,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 8788,
											"end": 9262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8862,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8864,
											"end": 8870,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8915,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8901,
											"end": 8910,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8892,
											"end": 8899,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8888,
											"end": 8911,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8884,
											"end": 8916,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8881,
											"end": 9000,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8881,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "731"
										},
										{
											"begin": 8881,
											"end": 9000,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8919,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "732"
										},
										{
											"begin": 8919,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 8919,
											"end": 8998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8919,
											"end": 8998,
											"name": "tag",
											"source": 10,
											"value": "732"
										},
										{
											"begin": 8919,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8881,
											"end": 9000,
											"name": "tag",
											"source": 10,
											"value": "731"
										},
										{
											"begin": 8881,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9039,
											"end": 9040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9064,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "733"
										},
										{
											"begin": 9109,
											"end": 9116,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9100,
											"end": 9106,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9089,
											"end": 9098,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9085,
											"end": 9107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9064,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 9064,
											"end": 9117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9064,
											"end": 9117,
											"name": "tag",
											"source": 10,
											"value": "733"
										},
										{
											"begin": 9064,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9054,
											"end": 9117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9054,
											"end": 9117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9010,
											"end": 9127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9166,
											"end": 9168,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9192,
											"end": 9245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "734"
										},
										{
											"begin": 9237,
											"end": 9244,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9228,
											"end": 9234,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9226,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9213,
											"end": 9235,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9192,
											"end": 9245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 9192,
											"end": 9245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9192,
											"end": 9245,
											"name": "tag",
											"source": 10,
											"value": "734"
										},
										{
											"begin": 9192,
											"end": 9245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9182,
											"end": 9245,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9182,
											"end": 9245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9137,
											"end": 9255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8788,
											"end": 9262,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8788,
											"end": 9262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8788,
											"end": 9262,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8788,
											"end": 9262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8788,
											"end": 9262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8788,
											"end": 9262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9268,
											"end": 9448,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 9268,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9316,
											"end": 9393,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9313,
											"end": 9314,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9306,
											"end": 9394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9417,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 9410,
											"end": 9411,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9437,
											"end": 9441,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9434,
											"end": 9435,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9442,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9454,
											"end": 9774,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 9454,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9498,
											"end": 9504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9535,
											"end": 9536,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 9529,
											"end": 9533,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9525,
											"end": 9537,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9582,
											"end": 9583,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9576,
											"end": 9580,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9572,
											"end": 9584,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9593,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "737"
										},
										{
											"begin": 9593,
											"end": 9674,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9659,
											"end": 9663,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 9651,
											"end": 9657,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9647,
											"end": 9664,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9637,
											"end": 9664,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9637,
											"end": 9664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9593,
											"end": 9674,
											"name": "tag",
											"source": 10,
											"value": "737"
										},
										{
											"begin": 9593,
											"end": 9674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9721,
											"end": 9723,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9713,
											"end": 9719,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9710,
											"end": 9724,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9690,
											"end": 9708,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9687,
											"end": 9725,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9684,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "738"
										},
										{
											"begin": 9684,
											"end": 9768,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "739"
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 9740,
											"end": 9758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "tag",
											"source": 10,
											"value": "739"
										},
										{
											"begin": 9740,
											"end": 9758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9684,
											"end": 9768,
											"name": "tag",
											"source": 10,
											"value": "738"
										},
										{
											"begin": 9684,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9505,
											"end": 9774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9454,
											"end": 9774,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9454,
											"end": 9774,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9454,
											"end": 9774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9454,
											"end": 9774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9956,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 9780,
											"end": 9956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9920,
											"end": 9948,
											"name": "PUSH",
											"source": 10,
											"value": "53616C65732074617267657473206E6F7420796574206D65742E000000000000"
										},
										{
											"begin": 9916,
											"end": 9917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9908,
											"end": 9914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9904,
											"end": 9918,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9897,
											"end": 9949,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9956,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9780,
											"end": 9956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 10328,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 9962,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10107,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10125,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "742"
										},
										{
											"begin": 10189,
											"end": 10191,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 10184,
											"end": 10187,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10125,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 10125,
											"end": 10192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10125,
											"end": 10192,
											"name": "tag",
											"source": 10,
											"value": "742"
										},
										{
											"begin": 10125,
											"end": 10192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10118,
											"end": 10192,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10118,
											"end": 10192,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10201,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "743"
										},
										{
											"begin": 10290,
											"end": 10293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10201,
											"end": 10294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 10201,
											"end": 10294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10201,
											"end": 10294,
											"name": "tag",
											"source": 10,
											"value": "743"
										},
										{
											"begin": 10201,
											"end": 10294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10319,
											"end": 10321,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10314,
											"end": 10317,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10310,
											"end": 10322,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10303,
											"end": 10322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10303,
											"end": 10322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 10328,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 10328,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 10328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9962,
											"end": 10328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10334,
											"end": 10753,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 10334,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10500,
											"end": 10504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10538,
											"end": 10540,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10527,
											"end": 10536,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10523,
											"end": 10541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10515,
											"end": 10541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10515,
											"end": 10541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10587,
											"end": 10596,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10581,
											"end": 10585,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10577,
											"end": 10597,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10573,
											"end": 10574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10562,
											"end": 10571,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10558,
											"end": 10575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10551,
											"end": 10598,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10615,
											"end": 10746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "745"
										},
										{
											"begin": 10741,
											"end": 10745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10615,
											"end": 10746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 10615,
											"end": 10746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10615,
											"end": 10746,
											"name": "tag",
											"source": 10,
											"value": "745"
										},
										{
											"begin": 10615,
											"end": 10746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10607,
											"end": 10746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10607,
											"end": 10746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10334,
											"end": 10753,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10334,
											"end": 10753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10334,
											"end": 10753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10334,
											"end": 10753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10759,
											"end": 10990,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 10759,
											"end": 10990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10899,
											"end": 10933,
											"name": "PUSH",
											"source": 10,
											"value": "507269766174652053616C652063616E206F6E6C792073746172742066726F6D"
										},
										{
											"begin": 10895,
											"end": 10896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10887,
											"end": 10893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10883,
											"end": 10897,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10934,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10968,
											"end": 10982,
											"name": "PUSH",
											"source": 10,
											"value": "204E4F4E452073746167652E0000000000000000000000000000000000000000"
										},
										{
											"begin": 10963,
											"end": 10965,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10955,
											"end": 10961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10951,
											"end": 10966,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10944,
											"end": 10983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10759,
											"end": 10990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10759,
											"end": 10990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10996,
											"end": 11362,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 10996,
											"end": 11362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11138,
											"end": 11141,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11159,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "748"
										},
										{
											"begin": 11223,
											"end": 11225,
											"name": "PUSH",
											"source": 10,
											"value": "2C"
										},
										{
											"begin": 11218,
											"end": 11221,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11159,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 11159,
											"end": 11226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11159,
											"end": 11226,
											"name": "tag",
											"source": 10,
											"value": "748"
										},
										{
											"begin": 11159,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11152,
											"end": 11226,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11152,
											"end": 11226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11235,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "749"
										},
										{
											"begin": 11324,
											"end": 11327,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11235,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 11235,
											"end": 11328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11235,
											"end": 11328,
											"name": "tag",
											"source": 10,
											"value": "749"
										},
										{
											"begin": 11235,
											"end": 11328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11353,
											"end": 11355,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11348,
											"end": 11351,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11344,
											"end": 11356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11337,
											"end": 11356,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11337,
											"end": 11356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10996,
											"end": 11362,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10996,
											"end": 11362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10996,
											"end": 11362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10996,
											"end": 11362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11368,
											"end": 11787,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 11368,
											"end": 11787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11534,
											"end": 11538,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11572,
											"end": 11574,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11561,
											"end": 11570,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11557,
											"end": 11575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11549,
											"end": 11575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11549,
											"end": 11575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11621,
											"end": 11630,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11615,
											"end": 11619,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11611,
											"end": 11631,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11607,
											"end": 11608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11596,
											"end": 11605,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11592,
											"end": 11609,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11585,
											"end": 11632,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11649,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "751"
										},
										{
											"begin": 11775,
											"end": 11779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11649,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 11649,
											"end": 11780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11649,
											"end": 11780,
											"name": "tag",
											"source": 10,
											"value": "751"
										},
										{
											"begin": 11649,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11641,
											"end": 11780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11641,
											"end": 11780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11368,
											"end": 11787,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11368,
											"end": 11787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11368,
											"end": 11787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11368,
											"end": 11787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11793,
											"end": 12026,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 11793,
											"end": 12026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11933,
											"end": 11967,
											"name": "PUSH",
											"source": 10,
											"value": "507269766174652053616C6520746F6B656E732073686F756C6420626520756E"
										},
										{
											"begin": 11929,
											"end": 11930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11921,
											"end": 11927,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11917,
											"end": 11931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11910,
											"end": 11968,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12002,
											"end": 12018,
											"name": "PUSH",
											"source": 10,
											"value": "736F6C642061742073746172742E000000000000000000000000000000000000"
										},
										{
											"begin": 11997,
											"end": 11999,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11989,
											"end": 11995,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11985,
											"end": 12000,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11978,
											"end": 12019,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11793,
											"end": 12026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11793,
											"end": 12026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12032,
											"end": 12398,
											"name": "tag",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 12032,
											"end": 12398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12174,
											"end": 12177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12195,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "754"
										},
										{
											"begin": 12259,
											"end": 12261,
											"name": "PUSH",
											"source": 10,
											"value": "2E"
										},
										{
											"begin": 12254,
											"end": 12257,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12195,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 12195,
											"end": 12262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12195,
											"end": 12262,
											"name": "tag",
											"source": 10,
											"value": "754"
										},
										{
											"begin": 12195,
											"end": 12262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12188,
											"end": 12262,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12188,
											"end": 12262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12271,
											"end": 12364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "755"
										},
										{
											"begin": 12360,
											"end": 12363,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12271,
											"end": 12364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 12271,
											"end": 12364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12271,
											"end": 12364,
											"name": "tag",
											"source": 10,
											"value": "755"
										},
										{
											"begin": 12271,
											"end": 12364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12389,
											"end": 12391,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12384,
											"end": 12387,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12380,
											"end": 12392,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12392,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12032,
											"end": 12398,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12032,
											"end": 12398,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12032,
											"end": 12398,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12032,
											"end": 12398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12404,
											"end": 12823,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 12404,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12608,
											"end": 12610,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12597,
											"end": 12606,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12593,
											"end": 12611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12585,
											"end": 12611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12585,
											"end": 12611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12657,
											"end": 12666,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12651,
											"end": 12655,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12647,
											"end": 12667,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12643,
											"end": 12644,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12632,
											"end": 12641,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12628,
											"end": 12645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12621,
											"end": 12668,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12685,
											"end": 12816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "757"
										},
										{
											"begin": 12811,
											"end": 12815,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12685,
											"end": 12816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 12685,
											"end": 12816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12685,
											"end": 12816,
											"name": "tag",
											"source": 10,
											"value": "757"
										},
										{
											"begin": 12685,
											"end": 12816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12677,
											"end": 12816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12677,
											"end": 12816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12404,
											"end": 12823,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12404,
											"end": 12823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12404,
											"end": 12823,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12404,
											"end": 12823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12829,
											"end": 13069,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 12829,
											"end": 13069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12969,
											"end": 13003,
											"name": "PUSH",
											"source": 10,
											"value": "5072652D53616C652073686F756C64206E6F7420686176652073746172746564"
										},
										{
											"begin": 12965,
											"end": 12966,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12957,
											"end": 12963,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12946,
											"end": 13004,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13038,
											"end": 13061,
											"name": "PUSH",
											"source": 10,
											"value": "206265666F726520507269766174652053616C652E0000000000000000000000"
										},
										{
											"begin": 13033,
											"end": 13035,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13025,
											"end": 13031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13021,
											"end": 13036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13014,
											"end": 13062,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12829,
											"end": 13069,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12829,
											"end": 13069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13441,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 13075,
											"end": 13441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13217,
											"end": 13220,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13238,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "760"
										},
										{
											"begin": 13302,
											"end": 13304,
											"name": "PUSH",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 13297,
											"end": 13300,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13238,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 13238,
											"end": 13305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13238,
											"end": 13305,
											"name": "tag",
											"source": 10,
											"value": "760"
										},
										{
											"begin": 13238,
											"end": 13305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13231,
											"end": 13305,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13231,
											"end": 13305,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13314,
											"end": 13407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "761"
										},
										{
											"begin": 13403,
											"end": 13406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13314,
											"end": 13407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 13314,
											"end": 13407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13314,
											"end": 13407,
											"name": "tag",
											"source": 10,
											"value": "761"
										},
										{
											"begin": 13314,
											"end": 13407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13432,
											"end": 13434,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13427,
											"end": 13430,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13423,
											"end": 13435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13416,
											"end": 13435,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13416,
											"end": 13435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13441,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13441,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13447,
											"end": 13866,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 13447,
											"end": 13866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13613,
											"end": 13617,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13651,
											"end": 13653,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13640,
											"end": 13649,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13636,
											"end": 13654,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13628,
											"end": 13654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13628,
											"end": 13654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13700,
											"end": 13709,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13694,
											"end": 13698,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13690,
											"end": 13710,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13686,
											"end": 13687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13675,
											"end": 13684,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13671,
											"end": 13688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13664,
											"end": 13711,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13728,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "763"
										},
										{
											"begin": 13854,
											"end": 13858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13728,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 13728,
											"end": 13859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13728,
											"end": 13859,
											"name": "tag",
											"source": 10,
											"value": "763"
										},
										{
											"begin": 13728,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13720,
											"end": 13859,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13720,
											"end": 13859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13447,
											"end": 13866,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13447,
											"end": 13866,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13447,
											"end": 13866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13447,
											"end": 13866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13872,
											"end": 14040,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 13872,
											"end": 14040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14012,
											"end": 14032,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F2073616C65206973206163746976652E0000000000000000000000000000"
										},
										{
											"begin": 14008,
											"end": 14009,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14000,
											"end": 14006,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13996,
											"end": 14010,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13989,
											"end": 14033,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13872,
											"end": 14040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13872,
											"end": 14040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14046,
											"end": 14412,
											"name": "tag",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 14046,
											"end": 14412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14188,
											"end": 14191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14209,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "766"
										},
										{
											"begin": 14273,
											"end": 14275,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 14268,
											"end": 14271,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14209,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 14209,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14209,
											"end": 14276,
											"name": "tag",
											"source": 10,
											"value": "766"
										},
										{
											"begin": 14209,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14202,
											"end": 14276,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14202,
											"end": 14276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14285,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "767"
										},
										{
											"begin": 14374,
											"end": 14377,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14285,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 14285,
											"end": 14378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14285,
											"end": 14378,
											"name": "tag",
											"source": 10,
											"value": "767"
										},
										{
											"begin": 14285,
											"end": 14378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14403,
											"end": 14405,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14398,
											"end": 14401,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14394,
											"end": 14406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14387,
											"end": 14406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14387,
											"end": 14406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14046,
											"end": 14412,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14046,
											"end": 14412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14046,
											"end": 14412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14046,
											"end": 14412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14837,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 14418,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14584,
											"end": 14588,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14622,
											"end": 14624,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14611,
											"end": 14620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14607,
											"end": 14625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14599,
											"end": 14625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14599,
											"end": 14625,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14671,
											"end": 14680,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14665,
											"end": 14669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14661,
											"end": 14681,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14657,
											"end": 14658,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14646,
											"end": 14655,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14642,
											"end": 14659,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14635,
											"end": 14682,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14699,
											"end": 14830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "769"
										},
										{
											"begin": 14825,
											"end": 14829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14699,
											"end": 14830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 14699,
											"end": 14830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14699,
											"end": 14830,
											"name": "tag",
											"source": 10,
											"value": "769"
										},
										{
											"begin": 14699,
											"end": 14830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14691,
											"end": 14830,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14691,
											"end": 14830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14837,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14837,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14843,
											"end": 15018,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 14843,
											"end": 15018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14983,
											"end": 15010,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C69642070726963652066726F6D206F7261636C6500000000000000"
										},
										{
											"begin": 14979,
											"end": 14980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14971,
											"end": 14977,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14967,
											"end": 14981,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14960,
											"end": 15011,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14843,
											"end": 15018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14843,
											"end": 15018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15390,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 15024,
											"end": 15390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15166,
											"end": 15169,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15187,
											"end": 15254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "772"
										},
										{
											"begin": 15251,
											"end": 15253,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 15246,
											"end": 15249,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15187,
											"end": 15254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 15187,
											"end": 15254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15187,
											"end": 15254,
											"name": "tag",
											"source": 10,
											"value": "772"
										},
										{
											"begin": 15187,
											"end": 15254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15180,
											"end": 15254,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15180,
											"end": 15254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15263,
											"end": 15356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "773"
										},
										{
											"begin": 15352,
											"end": 15355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15263,
											"end": 15356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 15263,
											"end": 15356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15263,
											"end": 15356,
											"name": "tag",
											"source": 10,
											"value": "773"
										},
										{
											"begin": 15263,
											"end": 15356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15381,
											"end": 15383,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15376,
											"end": 15379,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15372,
											"end": 15384,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15365,
											"end": 15384,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15365,
											"end": 15384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15390,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15024,
											"end": 15390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15396,
											"end": 15815,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 15396,
											"end": 15815,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15562,
											"end": 15566,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15600,
											"end": 15602,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15589,
											"end": 15598,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15585,
											"end": 15603,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15603,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15577,
											"end": 15603,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15649,
											"end": 15658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15643,
											"end": 15647,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15639,
											"end": 15659,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15635,
											"end": 15636,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15624,
											"end": 15633,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15620,
											"end": 15637,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15613,
											"end": 15660,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15677,
											"end": 15808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "775"
										},
										{
											"begin": 15803,
											"end": 15807,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15677,
											"end": 15808,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 15677,
											"end": 15808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15677,
											"end": 15808,
											"name": "tag",
											"source": 10,
											"value": "775"
										},
										{
											"begin": 15677,
											"end": 15808,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15669,
											"end": 15808,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15669,
											"end": 15808,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15396,
											"end": 15815,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15396,
											"end": 15815,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15396,
											"end": 15815,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15396,
											"end": 15815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15821,
											"end": 15993,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 15821,
											"end": 15993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15961,
											"end": 15985,
											"name": "PUSH",
											"source": 10,
											"value": "507269766174652053616C6520736F6C64206F75742E00000000000000000000"
										},
										{
											"begin": 15957,
											"end": 15958,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15949,
											"end": 15955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15945,
											"end": 15959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15938,
											"end": 15986,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15821,
											"end": 15993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15821,
											"end": 15993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15999,
											"end": 16365,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 15999,
											"end": 16365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16141,
											"end": 16144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16162,
											"end": 16229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "778"
										},
										{
											"begin": 16226,
											"end": 16228,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 16221,
											"end": 16224,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16162,
											"end": 16229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 16162,
											"end": 16229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16162,
											"end": 16229,
											"name": "tag",
											"source": 10,
											"value": "778"
										},
										{
											"begin": 16162,
											"end": 16229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16155,
											"end": 16229,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16155,
											"end": 16229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "779"
										},
										{
											"begin": 16327,
											"end": 16330,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 16238,
											"end": 16331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16238,
											"end": 16331,
											"name": "tag",
											"source": 10,
											"value": "779"
										},
										{
											"begin": 16238,
											"end": 16331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16356,
											"end": 16358,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16351,
											"end": 16354,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16347,
											"end": 16359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16340,
											"end": 16359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16340,
											"end": 16359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15999,
											"end": 16365,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15999,
											"end": 16365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15999,
											"end": 16365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15999,
											"end": 16365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16371,
											"end": 16790,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 16371,
											"end": 16790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16537,
											"end": 16541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16575,
											"end": 16577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16564,
											"end": 16573,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16560,
											"end": 16578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16552,
											"end": 16578,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16552,
											"end": 16578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16624,
											"end": 16633,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16618,
											"end": 16622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16614,
											"end": 16634,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16610,
											"end": 16611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16599,
											"end": 16608,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16595,
											"end": 16612,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16588,
											"end": 16635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16652,
											"end": 16783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "781"
										},
										{
											"begin": 16778,
											"end": 16782,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16652,
											"end": 16783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 16652,
											"end": 16783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16652,
											"end": 16783,
											"name": "tag",
											"source": 10,
											"value": "781"
										},
										{
											"begin": 16652,
											"end": 16783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16644,
											"end": 16783,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16644,
											"end": 16783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16371,
											"end": 16790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16371,
											"end": 16790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16371,
											"end": 16790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16371,
											"end": 16790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16796,
											"end": 17016,
											"name": "tag",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 16796,
											"end": 17016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16936,
											"end": 16970,
											"name": "PUSH",
											"source": 10,
											"value": "4578636565647320507269766174652053616C6520746F6B656E206C696D6974"
										},
										{
											"begin": 16932,
											"end": 16933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16924,
											"end": 16930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16920,
											"end": 16934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16913,
											"end": 16971,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17005,
											"end": 17008,
											"name": "PUSH",
											"source": 10,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17000,
											"end": 17002,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16992,
											"end": 16998,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16988,
											"end": 17003,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16981,
											"end": 17009,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16796,
											"end": 17016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16796,
											"end": 17016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17022,
											"end": 17388,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 17022,
											"end": 17388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17164,
											"end": 17167,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17185,
											"end": 17252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "784"
										},
										{
											"begin": 17249,
											"end": 17251,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 17244,
											"end": 17247,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17185,
											"end": 17252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 17185,
											"end": 17252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17185,
											"end": 17252,
											"name": "tag",
											"source": 10,
											"value": "784"
										},
										{
											"begin": 17185,
											"end": 17252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17178,
											"end": 17252,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17178,
											"end": 17252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17261,
											"end": 17354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "785"
										},
										{
											"begin": 17350,
											"end": 17353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17261,
											"end": 17354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 17261,
											"end": 17354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17261,
											"end": 17354,
											"name": "tag",
											"source": 10,
											"value": "785"
										},
										{
											"begin": 17261,
											"end": 17354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17379,
											"end": 17381,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17374,
											"end": 17377,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17370,
											"end": 17382,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17363,
											"end": 17382,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17363,
											"end": 17382,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17022,
											"end": 17388,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17022,
											"end": 17388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17022,
											"end": 17388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17022,
											"end": 17388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17394,
											"end": 17813,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 17394,
											"end": 17813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17560,
											"end": 17564,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17598,
											"end": 17600,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17587,
											"end": 17596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17583,
											"end": 17601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17575,
											"end": 17601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17575,
											"end": 17601,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17647,
											"end": 17656,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17641,
											"end": 17645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17637,
											"end": 17657,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17633,
											"end": 17634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17622,
											"end": 17631,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17618,
											"end": 17635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17611,
											"end": 17658,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17675,
											"end": 17806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "787"
										},
										{
											"begin": 17801,
											"end": 17805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17675,
											"end": 17806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 17675,
											"end": 17806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17675,
											"end": 17806,
											"name": "tag",
											"source": 10,
											"value": "787"
										},
										{
											"begin": 17675,
											"end": 17806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17667,
											"end": 17806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17667,
											"end": 17806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17394,
											"end": 17813,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17394,
											"end": 17813,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17394,
											"end": 17813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17394,
											"end": 17813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17819,
											"end": 17987,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 17819,
											"end": 17987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17959,
											"end": 17979,
											"name": "PUSH",
											"source": 10,
											"value": "5072652D53616C6520736F6C64206F75742E0000000000000000000000000000"
										},
										{
											"begin": 17955,
											"end": 17956,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17947,
											"end": 17953,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17943,
											"end": 17957,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17936,
											"end": 17980,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17819,
											"end": 17987,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17819,
											"end": 17987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17993,
											"end": 18359,
											"name": "tag",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 17993,
											"end": 18359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18135,
											"end": 18138,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18156,
											"end": 18223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "790"
										},
										{
											"begin": 18220,
											"end": 18222,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 18215,
											"end": 18218,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18156,
											"end": 18223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 18156,
											"end": 18223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18156,
											"end": 18223,
											"name": "tag",
											"source": 10,
											"value": "790"
										},
										{
											"begin": 18156,
											"end": 18223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18149,
											"end": 18223,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18149,
											"end": 18223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18232,
											"end": 18325,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "791"
										},
										{
											"begin": 18321,
											"end": 18324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18232,
											"end": 18325,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 18232,
											"end": 18325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18232,
											"end": 18325,
											"name": "tag",
											"source": 10,
											"value": "791"
										},
										{
											"begin": 18232,
											"end": 18325,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18350,
											"end": 18352,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18345,
											"end": 18348,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18341,
											"end": 18353,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18334,
											"end": 18353,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18334,
											"end": 18353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17993,
											"end": 18359,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17993,
											"end": 18359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17993,
											"end": 18359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17993,
											"end": 18359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18365,
											"end": 18784,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 18365,
											"end": 18784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18531,
											"end": 18535,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18569,
											"end": 18571,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18558,
											"end": 18567,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18554,
											"end": 18572,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18546,
											"end": 18572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18546,
											"end": 18572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18618,
											"end": 18627,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18612,
											"end": 18616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18608,
											"end": 18628,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18604,
											"end": 18605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18593,
											"end": 18602,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18589,
											"end": 18606,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18582,
											"end": 18629,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18646,
											"end": 18777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "793"
										},
										{
											"begin": 18772,
											"end": 18776,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18646,
											"end": 18777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 18646,
											"end": 18777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18646,
											"end": 18777,
											"name": "tag",
											"source": 10,
											"value": "793"
										},
										{
											"begin": 18646,
											"end": 18777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18638,
											"end": 18777,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18638,
											"end": 18777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18365,
											"end": 18784,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18365,
											"end": 18784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18365,
											"end": 18784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18365,
											"end": 18784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18790,
											"end": 18970,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 18790,
											"end": 18970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18930,
											"end": 18962,
											"name": "PUSH",
											"source": 10,
											"value": "507572636861736520616D6F756E74206F7574206F66206C696D6974732E0000"
										},
										{
											"begin": 18926,
											"end": 18927,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18918,
											"end": 18924,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18914,
											"end": 18928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18907,
											"end": 18963,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18790,
											"end": 18970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18790,
											"end": 18970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18976,
											"end": 19342,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 18976,
											"end": 19342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19118,
											"end": 19121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19139,
											"end": 19206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "796"
										},
										{
											"begin": 19203,
											"end": 19205,
											"name": "PUSH",
											"source": 10,
											"value": "1E"
										},
										{
											"begin": 19198,
											"end": 19201,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19139,
											"end": 19206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 19139,
											"end": 19206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19139,
											"end": 19206,
											"name": "tag",
											"source": 10,
											"value": "796"
										},
										{
											"begin": 19139,
											"end": 19206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19132,
											"end": 19206,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19132,
											"end": 19206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19215,
											"end": 19308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "797"
										},
										{
											"begin": 19304,
											"end": 19307,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19215,
											"end": 19308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 19215,
											"end": 19308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19215,
											"end": 19308,
											"name": "tag",
											"source": 10,
											"value": "797"
										},
										{
											"begin": 19215,
											"end": 19308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19333,
											"end": 19335,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19328,
											"end": 19331,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19324,
											"end": 19336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19317,
											"end": 19336,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19317,
											"end": 19336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18976,
											"end": 19342,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18976,
											"end": 19342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18976,
											"end": 19342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18976,
											"end": 19342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19348,
											"end": 19767,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 19348,
											"end": 19767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19514,
											"end": 19518,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19552,
											"end": 19554,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19541,
											"end": 19550,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19537,
											"end": 19555,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19529,
											"end": 19555,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19529,
											"end": 19555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19601,
											"end": 19610,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19595,
											"end": 19599,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19591,
											"end": 19611,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19587,
											"end": 19588,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19576,
											"end": 19585,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19572,
											"end": 19589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19565,
											"end": 19612,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19629,
											"end": 19760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "799"
										},
										{
											"begin": 19755,
											"end": 19759,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19629,
											"end": 19760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 19629,
											"end": 19760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19629,
											"end": 19760,
											"name": "tag",
											"source": 10,
											"value": "799"
										},
										{
											"begin": 19629,
											"end": 19760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19621,
											"end": 19760,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19621,
											"end": 19760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19348,
											"end": 19767,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19348,
											"end": 19767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19348,
											"end": 19767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19348,
											"end": 19767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19773,
											"end": 19952,
											"name": "tag",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 19773,
											"end": 19952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19913,
											"end": 19944,
											"name": "PUSH",
											"source": 10,
											"value": "45786365656473205072652D53616C6520746F6B656E206C696D69742E000000"
										},
										{
											"begin": 19909,
											"end": 19910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19901,
											"end": 19907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19897,
											"end": 19911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19890,
											"end": 19945,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19773,
											"end": 19952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19773,
											"end": 19952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19958,
											"end": 20324,
											"name": "tag",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 19958,
											"end": 20324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20100,
											"end": 20103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20121,
											"end": 20188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "802"
										},
										{
											"begin": 20185,
											"end": 20187,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 20180,
											"end": 20183,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20121,
											"end": 20188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 20121,
											"end": 20188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20121,
											"end": 20188,
											"name": "tag",
											"source": 10,
											"value": "802"
										},
										{
											"begin": 20121,
											"end": 20188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20114,
											"end": 20188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20114,
											"end": 20188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20197,
											"end": 20290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "803"
										},
										{
											"begin": 20286,
											"end": 20289,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20197,
											"end": 20290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 20197,
											"end": 20290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20197,
											"end": 20290,
											"name": "tag",
											"source": 10,
											"value": "803"
										},
										{
											"begin": 20197,
											"end": 20290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20315,
											"end": 20317,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20310,
											"end": 20313,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20306,
											"end": 20318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20299,
											"end": 20318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20299,
											"end": 20318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19958,
											"end": 20324,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19958,
											"end": 20324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19958,
											"end": 20324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19958,
											"end": 20324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20330,
											"end": 20749,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 20330,
											"end": 20749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20496,
											"end": 20500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20534,
											"end": 20536,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20523,
											"end": 20532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20519,
											"end": 20537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20511,
											"end": 20537,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20511,
											"end": 20537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20583,
											"end": 20592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20577,
											"end": 20581,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20573,
											"end": 20593,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20569,
											"end": 20570,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20558,
											"end": 20567,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20554,
											"end": 20571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20547,
											"end": 20594,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20611,
											"end": 20742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "805"
										},
										{
											"begin": 20737,
											"end": 20741,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20611,
											"end": 20742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 20611,
											"end": 20742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20611,
											"end": 20742,
											"name": "tag",
											"source": 10,
											"value": "805"
										},
										{
											"begin": 20611,
											"end": 20742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20603,
											"end": 20742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20603,
											"end": 20742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20330,
											"end": 20749,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20330,
											"end": 20749,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20330,
											"end": 20749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20330,
											"end": 20749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20755,
											"end": 20975,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 20755,
											"end": 20975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20895,
											"end": 20929,
											"name": "PUSH",
											"source": 10,
											"value": "56657374696E6720706572696F64206E6F742079657420636F6D706C65746564"
										},
										{
											"begin": 20891,
											"end": 20892,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20883,
											"end": 20889,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20879,
											"end": 20893,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20872,
											"end": 20930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20964,
											"end": 20967,
											"name": "PUSH",
											"source": 10,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20959,
											"end": 20961,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20951,
											"end": 20957,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20947,
											"end": 20962,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20940,
											"end": 20968,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20755,
											"end": 20975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20755,
											"end": 20975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20981,
											"end": 21347,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 20981,
											"end": 21347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21123,
											"end": 21126,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21144,
											"end": 21211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "808"
										},
										{
											"begin": 21208,
											"end": 21210,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 21203,
											"end": 21206,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21144,
											"end": 21211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 21144,
											"end": 21211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21144,
											"end": 21211,
											"name": "tag",
											"source": 10,
											"value": "808"
										},
										{
											"begin": 21144,
											"end": 21211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21137,
											"end": 21211,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21137,
											"end": 21211,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21220,
											"end": 21313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "809"
										},
										{
											"begin": 21309,
											"end": 21312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21220,
											"end": 21313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 21220,
											"end": 21313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21220,
											"end": 21313,
											"name": "tag",
											"source": 10,
											"value": "809"
										},
										{
											"begin": 21220,
											"end": 21313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21338,
											"end": 21340,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21333,
											"end": 21336,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21329,
											"end": 21341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21322,
											"end": 21341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21322,
											"end": 21341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20981,
											"end": 21347,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20981,
											"end": 21347,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20981,
											"end": 21347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20981,
											"end": 21347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21353,
											"end": 21772,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 21353,
											"end": 21772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21519,
											"end": 21523,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21557,
											"end": 21559,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21546,
											"end": 21555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21542,
											"end": 21560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21534,
											"end": 21560,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21534,
											"end": 21560,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21606,
											"end": 21615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21600,
											"end": 21604,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21596,
											"end": 21616,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21592,
											"end": 21593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21581,
											"end": 21590,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21577,
											"end": 21594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21570,
											"end": 21617,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21634,
											"end": 21765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "811"
										},
										{
											"begin": 21760,
											"end": 21764,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21634,
											"end": 21765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 21634,
											"end": 21765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21634,
											"end": 21765,
											"name": "tag",
											"source": 10,
											"value": "811"
										},
										{
											"begin": 21634,
											"end": 21765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21626,
											"end": 21765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21626,
											"end": 21765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21353,
											"end": 21772,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21353,
											"end": 21772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21353,
											"end": 21772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21353,
											"end": 21772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21778,
											"end": 21955,
											"name": "tag",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 21778,
											"end": 21955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21918,
											"end": 21947,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F2076657374656420746F6B656E7320746F2072656C656173650000000000"
										},
										{
											"begin": 21914,
											"end": 21915,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21906,
											"end": 21912,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21902,
											"end": 21916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21895,
											"end": 21948,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21778,
											"end": 21955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21778,
											"end": 21955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21961,
											"end": 22327,
											"name": "tag",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 21961,
											"end": 22327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22103,
											"end": 22106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22124,
											"end": 22191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "814"
										},
										{
											"begin": 22188,
											"end": 22190,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 22183,
											"end": 22186,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22124,
											"end": 22191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 22124,
											"end": 22191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22124,
											"end": 22191,
											"name": "tag",
											"source": 10,
											"value": "814"
										},
										{
											"begin": 22124,
											"end": 22191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22117,
											"end": 22191,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22117,
											"end": 22191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22200,
											"end": 22293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "815"
										},
										{
											"begin": 22289,
											"end": 22292,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22200,
											"end": 22293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 22200,
											"end": 22293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22200,
											"end": 22293,
											"name": "tag",
											"source": 10,
											"value": "815"
										},
										{
											"begin": 22200,
											"end": 22293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22318,
											"end": 22320,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22313,
											"end": 22316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22309,
											"end": 22321,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22302,
											"end": 22321,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22302,
											"end": 22321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21961,
											"end": 22327,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21961,
											"end": 22327,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21961,
											"end": 22327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21961,
											"end": 22327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22333,
											"end": 22752,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 22333,
											"end": 22752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22499,
											"end": 22503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22537,
											"end": 22539,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22526,
											"end": 22535,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22522,
											"end": 22540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22514,
											"end": 22540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22514,
											"end": 22540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22586,
											"end": 22595,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22580,
											"end": 22584,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22576,
											"end": 22596,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22572,
											"end": 22573,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22561,
											"end": 22570,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22557,
											"end": 22574,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22550,
											"end": 22597,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22614,
											"end": 22745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "817"
										},
										{
											"begin": 22740,
											"end": 22744,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22614,
											"end": 22745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 22614,
											"end": 22745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22614,
											"end": 22745,
											"name": "tag",
											"source": 10,
											"value": "817"
										},
										{
											"begin": 22614,
											"end": 22745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22606,
											"end": 22745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22606,
											"end": 22745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22333,
											"end": 22752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22333,
											"end": 22752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22333,
											"end": 22752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22333,
											"end": 22752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22758,
											"end": 22988,
											"name": "tag",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 22758,
											"end": 22988,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22898,
											"end": 22932,
											"name": "PUSH",
											"source": 10,
											"value": "5072652D53616C652063616E206F6E6C79207374617274206166746572205072"
										},
										{
											"begin": 22894,
											"end": 22895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22886,
											"end": 22892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22882,
											"end": 22896,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22875,
											"end": 22933,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22967,
											"end": 22980,
											"name": "PUSH",
											"source": 10,
											"value": "69766174652053616C652E000000000000000000000000000000000000000000"
										},
										{
											"begin": 22962,
											"end": 22964,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22954,
											"end": 22960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22950,
											"end": 22965,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22943,
											"end": 22981,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22758,
											"end": 22988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22758,
											"end": 22988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22994,
											"end": 23360,
											"name": "tag",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 22994,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23136,
											"end": 23139,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23157,
											"end": 23224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "820"
										},
										{
											"begin": 23221,
											"end": 23223,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 23216,
											"end": 23219,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23157,
											"end": 23224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 23157,
											"end": 23224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23157,
											"end": 23224,
											"name": "tag",
											"source": 10,
											"value": "820"
										},
										{
											"begin": 23157,
											"end": 23224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23150,
											"end": 23224,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23150,
											"end": 23224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23233,
											"end": 23326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "821"
										},
										{
											"begin": 23322,
											"end": 23325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23233,
											"end": 23326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 23233,
											"end": 23326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23233,
											"end": 23326,
											"name": "tag",
											"source": 10,
											"value": "821"
										},
										{
											"begin": 23233,
											"end": 23326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23351,
											"end": 23353,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 23346,
											"end": 23349,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23342,
											"end": 23354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23335,
											"end": 23354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23335,
											"end": 23354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22994,
											"end": 23360,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22994,
											"end": 23360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22994,
											"end": 23360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22994,
											"end": 23360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23366,
											"end": 23785,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 23366,
											"end": 23785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23532,
											"end": 23536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23570,
											"end": 23572,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23559,
											"end": 23568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23555,
											"end": 23573,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23547,
											"end": 23573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23547,
											"end": 23573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23619,
											"end": 23628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23613,
											"end": 23617,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23609,
											"end": 23629,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23605,
											"end": 23606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23594,
											"end": 23603,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23590,
											"end": 23607,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23583,
											"end": 23630,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23647,
											"end": 23778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "823"
										},
										{
											"begin": 23773,
											"end": 23777,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23647,
											"end": 23778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 23647,
											"end": 23778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23647,
											"end": 23778,
											"name": "tag",
											"source": 10,
											"value": "823"
										},
										{
											"begin": 23647,
											"end": 23778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23639,
											"end": 23778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23639,
											"end": 23778,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23366,
											"end": 23785,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23366,
											"end": 23785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23366,
											"end": 23785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23366,
											"end": 23785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23791,
											"end": 24034,
											"name": "tag",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 23791,
											"end": 24034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23931,
											"end": 23965,
											"name": "PUSH",
											"source": 10,
											"value": "507269766174652053616C65206D75737420626520636F6D706C657465642062"
										},
										{
											"begin": 23927,
											"end": 23928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23919,
											"end": 23925,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23915,
											"end": 23929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23908,
											"end": 23966,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24000,
											"end": 24026,
											"name": "PUSH",
											"source": 10,
											"value": "65666F7265207374617274696E67205072652D53616C652E0000000000000000"
										},
										{
											"begin": 23995,
											"end": 23997,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23987,
											"end": 23993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23983,
											"end": 23998,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23976,
											"end": 24027,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23791,
											"end": 24034,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23791,
											"end": 24034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24040,
											"end": 24406,
											"name": "tag",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 24040,
											"end": 24406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24182,
											"end": 24185,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24203,
											"end": 24270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "826"
										},
										{
											"begin": 24267,
											"end": 24269,
											"name": "PUSH",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 24262,
											"end": 24265,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24203,
											"end": 24270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 24203,
											"end": 24270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24203,
											"end": 24270,
											"name": "tag",
											"source": 10,
											"value": "826"
										},
										{
											"begin": 24203,
											"end": 24270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24196,
											"end": 24270,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24196,
											"end": 24270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24279,
											"end": 24372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "827"
										},
										{
											"begin": 24368,
											"end": 24371,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24279,
											"end": 24372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 24279,
											"end": 24372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24279,
											"end": 24372,
											"name": "tag",
											"source": 10,
											"value": "827"
										},
										{
											"begin": 24279,
											"end": 24372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24397,
											"end": 24399,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 24392,
											"end": 24395,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24388,
											"end": 24400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24381,
											"end": 24400,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24381,
											"end": 24400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24040,
											"end": 24406,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24040,
											"end": 24406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24040,
											"end": 24406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24040,
											"end": 24406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24412,
											"end": 24831,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 24412,
											"end": 24831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24578,
											"end": 24582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24616,
											"end": 24618,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24605,
											"end": 24614,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24601,
											"end": 24619,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24593,
											"end": 24619,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24593,
											"end": 24619,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24665,
											"end": 24674,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24659,
											"end": 24663,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24655,
											"end": 24675,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 24651,
											"end": 24652,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24640,
											"end": 24649,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24636,
											"end": 24653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24629,
											"end": 24676,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24693,
											"end": 24824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "829"
										},
										{
											"begin": 24819,
											"end": 24823,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24693,
											"end": 24824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 24693,
											"end": 24824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24693,
											"end": 24824,
											"name": "tag",
											"source": 10,
											"value": "829"
										},
										{
											"begin": 24693,
											"end": 24824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24685,
											"end": 24824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24685,
											"end": 24824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24412,
											"end": 24831,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24412,
											"end": 24831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24412,
											"end": 24831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24412,
											"end": 24831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24837,
											"end": 25016,
											"name": "tag",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 24837,
											"end": 25016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24977,
											"end": 25008,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 24973,
											"end": 24974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24965,
											"end": 24971,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24961,
											"end": 24975,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24954,
											"end": 25009,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24837,
											"end": 25016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24837,
											"end": 25016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25022,
											"end": 25388,
											"name": "tag",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 25022,
											"end": 25388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25164,
											"end": 25167,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25185,
											"end": 25252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "832"
										},
										{
											"begin": 25249,
											"end": 25251,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 25244,
											"end": 25247,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25185,
											"end": 25252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 25185,
											"end": 25252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25185,
											"end": 25252,
											"name": "tag",
											"source": 10,
											"value": "832"
										},
										{
											"begin": 25185,
											"end": 25252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25178,
											"end": 25252,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25178,
											"end": 25252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25261,
											"end": 25354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "833"
										},
										{
											"begin": 25350,
											"end": 25353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25261,
											"end": 25354,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 25261,
											"end": 25354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25261,
											"end": 25354,
											"name": "tag",
											"source": 10,
											"value": "833"
										},
										{
											"begin": 25261,
											"end": 25354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25379,
											"end": 25381,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25374,
											"end": 25377,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25370,
											"end": 25382,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25363,
											"end": 25382,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25363,
											"end": 25382,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25022,
											"end": 25388,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25022,
											"end": 25388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25022,
											"end": 25388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25022,
											"end": 25388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25394,
											"end": 25813,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 25394,
											"end": 25813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25560,
											"end": 25564,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25598,
											"end": 25600,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25587,
											"end": 25596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25583,
											"end": 25601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25575,
											"end": 25601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25575,
											"end": 25601,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25647,
											"end": 25656,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25641,
											"end": 25645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25637,
											"end": 25657,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 25633,
											"end": 25634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25622,
											"end": 25631,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25618,
											"end": 25635,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25611,
											"end": 25658,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25675,
											"end": 25806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "835"
										},
										{
											"begin": 25801,
											"end": 25805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25675,
											"end": 25806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 25675,
											"end": 25806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25675,
											"end": 25806,
											"name": "tag",
											"source": 10,
											"value": "835"
										},
										{
											"begin": 25675,
											"end": 25806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25667,
											"end": 25806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25667,
											"end": 25806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25394,
											"end": 25813,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25394,
											"end": 25813,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25394,
											"end": 25813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25394,
											"end": 25813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25819,
											"end": 25998,
											"name": "tag",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 25819,
											"end": 25998,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25959,
											"end": 25990,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E742062616C616E636520746F207374616B65000000"
										},
										{
											"begin": 25955,
											"end": 25956,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25947,
											"end": 25953,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25943,
											"end": 25957,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25936,
											"end": 25991,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25819,
											"end": 25998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25819,
											"end": 25998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26004,
											"end": 26370,
											"name": "tag",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 26004,
											"end": 26370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26146,
											"end": 26149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26167,
											"end": 26234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "838"
										},
										{
											"begin": 26231,
											"end": 26233,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 26226,
											"end": 26229,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26167,
											"end": 26234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 26167,
											"end": 26234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26167,
											"end": 26234,
											"name": "tag",
											"source": 10,
											"value": "838"
										},
										{
											"begin": 26167,
											"end": 26234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26160,
											"end": 26234,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26160,
											"end": 26234,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26243,
											"end": 26336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "839"
										},
										{
											"begin": 26332,
											"end": 26335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26243,
											"end": 26336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 26243,
											"end": 26336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26243,
											"end": 26336,
											"name": "tag",
											"source": 10,
											"value": "839"
										},
										{
											"begin": 26243,
											"end": 26336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26361,
											"end": 26363,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26356,
											"end": 26359,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26352,
											"end": 26364,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26345,
											"end": 26364,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26345,
											"end": 26364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26004,
											"end": 26370,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26004,
											"end": 26370,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26004,
											"end": 26370,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26004,
											"end": 26370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26376,
											"end": 26795,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 26376,
											"end": 26795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26542,
											"end": 26546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26580,
											"end": 26582,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26569,
											"end": 26578,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26565,
											"end": 26583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26557,
											"end": 26583,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26557,
											"end": 26583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26629,
											"end": 26638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26623,
											"end": 26627,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26619,
											"end": 26639,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 26615,
											"end": 26616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26604,
											"end": 26613,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26600,
											"end": 26617,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26593,
											"end": 26640,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26657,
											"end": 26788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "841"
										},
										{
											"begin": 26783,
											"end": 26787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26657,
											"end": 26788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 26657,
											"end": 26788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26657,
											"end": 26788,
											"name": "tag",
											"source": 10,
											"value": "841"
										},
										{
											"begin": 26657,
											"end": 26788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26649,
											"end": 26788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26649,
											"end": 26788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26376,
											"end": 26795,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26376,
											"end": 26795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26376,
											"end": 26795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26376,
											"end": 26795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26801,
											"end": 27133,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 26801,
											"end": 27133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26922,
											"end": 26926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26960,
											"end": 26962,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 26949,
											"end": 26958,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26945,
											"end": 26963,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26937,
											"end": 26963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26937,
											"end": 26963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26973,
											"end": 27044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "843"
										},
										{
											"begin": 27041,
											"end": 27042,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27030,
											"end": 27039,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27026,
											"end": 27043,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27017,
											"end": 27023,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26973,
											"end": 27044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 26973,
											"end": 27044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26973,
											"end": 27044,
											"name": "tag",
											"source": 10,
											"value": "843"
										},
										{
											"begin": 26973,
											"end": 27044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27054,
											"end": 27126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "844"
										},
										{
											"begin": 27122,
											"end": 27124,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27111,
											"end": 27120,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27107,
											"end": 27125,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27098,
											"end": 27104,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 27054,
											"end": 27126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 27054,
											"end": 27126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27054,
											"end": 27126,
											"name": "tag",
											"source": 10,
											"value": "844"
										},
										{
											"begin": 27054,
											"end": 27126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26801,
											"end": 27133,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 26801,
											"end": 27133,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26801,
											"end": 27133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26801,
											"end": 27133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26801,
											"end": 27133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26801,
											"end": 27133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27139,
											"end": 27319,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 27139,
											"end": 27319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27187,
											"end": 27264,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27184,
											"end": 27185,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27177,
											"end": 27265,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27284,
											"end": 27288,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 27281,
											"end": 27282,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 27274,
											"end": 27289,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27308,
											"end": 27312,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 27305,
											"end": 27306,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27298,
											"end": 27313,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 27325,
											"end": 27430,
											"name": "tag",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 27325,
											"end": 27430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27361,
											"end": 27368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27401,
											"end": 27423,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27394,
											"end": 27399,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27390,
											"end": 27424,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 27379,
											"end": 27424,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27379,
											"end": 27424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27325,
											"end": 27430,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27325,
											"end": 27430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27325,
											"end": 27430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27325,
											"end": 27430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27436,
											"end": 27556,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 27436,
											"end": 27556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27508,
											"end": 27531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "848"
										},
										{
											"begin": 27525,
											"end": 27530,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27508,
											"end": 27531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 27508,
											"end": 27531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27508,
											"end": 27531,
											"name": "tag",
											"source": 10,
											"value": "848"
										},
										{
											"begin": 27508,
											"end": 27531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27501,
											"end": 27506,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27498,
											"end": 27532,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 27488,
											"end": 27550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "849"
										},
										{
											"begin": 27488,
											"end": 27550,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 27546,
											"end": 27547,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27543,
											"end": 27544,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 27536,
											"end": 27548,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 27488,
											"end": 27550,
											"name": "tag",
											"source": 10,
											"value": "849"
										},
										{
											"begin": 27488,
											"end": 27550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27436,
											"end": 27556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27436,
											"end": 27556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27562,
											"end": 27703,
											"name": "tag",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 27562,
											"end": 27703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27618,
											"end": 27623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27649,
											"end": 27655,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27643,
											"end": 27656,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 27634,
											"end": 27656,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27634,
											"end": 27656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27665,
											"end": 27697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "851"
										},
										{
											"begin": 27691,
											"end": 27696,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27665,
											"end": 27697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 27665,
											"end": 27697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27665,
											"end": 27697,
											"name": "tag",
											"source": 10,
											"value": "851"
										},
										{
											"begin": 27665,
											"end": 27697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27562,
											"end": 27703,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 27562,
											"end": 27703,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27562,
											"end": 27703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27562,
											"end": 27703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27562,
											"end": 27703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27709,
											"end": 27785,
											"name": "tag",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 27709,
											"end": 27785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27745,
											"end": 27752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27774,
											"end": 27779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27763,
											"end": 27779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27763,
											"end": 27779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27709,
											"end": 27785,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27709,
											"end": 27785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27709,
											"end": 27785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27709,
											"end": 27785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27791,
											"end": 27911,
											"name": "tag",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 27791,
											"end": 27911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27863,
											"end": 27886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "854"
										},
										{
											"begin": 27880,
											"end": 27885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27863,
											"end": 27886,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 27863,
											"end": 27886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27863,
											"end": 27886,
											"name": "tag",
											"source": 10,
											"value": "854"
										},
										{
											"begin": 27863,
											"end": 27886,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27856,
											"end": 27861,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27853,
											"end": 27887,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 27843,
											"end": 27905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "855"
										},
										{
											"begin": 27843,
											"end": 27905,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 27901,
											"end": 27902,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27898,
											"end": 27899,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 27891,
											"end": 27903,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 27843,
											"end": 27905,
											"name": "tag",
											"source": 10,
											"value": "855"
										},
										{
											"begin": 27843,
											"end": 27905,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27791,
											"end": 27911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27791,
											"end": 27911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27917,
											"end": 28058,
											"name": "tag",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 27917,
											"end": 28058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27973,
											"end": 27978,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28004,
											"end": 28010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27998,
											"end": 28011,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 27989,
											"end": 28011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27989,
											"end": 28011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28020,
											"end": 28052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "857"
										},
										{
											"begin": 28046,
											"end": 28051,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28020,
											"end": 28052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 28020,
											"end": 28052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28020,
											"end": 28052,
											"name": "tag",
											"source": 10,
											"value": "857"
										},
										{
											"begin": 28020,
											"end": 28052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27917,
											"end": 28058,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 27917,
											"end": 28058,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27917,
											"end": 28058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27917,
											"end": 28058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27917,
											"end": 28058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28064,
											"end": 28207,
											"name": "tag",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 28064,
											"end": 28207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28121,
											"end": 28126,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28152,
											"end": 28158,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28146,
											"end": 28159,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 28137,
											"end": 28159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28137,
											"end": 28159,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28168,
											"end": 28201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "859"
										},
										{
											"begin": 28195,
											"end": 28200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28168,
											"end": 28201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 28168,
											"end": 28201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28168,
											"end": 28201,
											"name": "tag",
											"source": 10,
											"value": "859"
										},
										{
											"begin": 28168,
											"end": 28201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28064,
											"end": 28207,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 28064,
											"end": 28207,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28064,
											"end": 28207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28064,
											"end": 28207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28064,
											"end": 28207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28213,
											"end": 29184,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 28213,
											"end": 29184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28316,
											"end": 28322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28324,
											"end": 28330,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 28332,
											"end": 28338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28340,
											"end": 28346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 28348,
											"end": 28354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28397,
											"end": 28400,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 28385,
											"end": 28394,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 28376,
											"end": 28383,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 28372,
											"end": 28395,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 28368,
											"end": 28401,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 28365,
											"end": 28485,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 28365,
											"end": 28485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "861"
										},
										{
											"begin": 28365,
											"end": 28485,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 28404,
											"end": 28483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "862"
										},
										{
											"begin": 28404,
											"end": 28483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 28404,
											"end": 28483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28404,
											"end": 28483,
											"name": "tag",
											"source": 10,
											"value": "862"
										},
										{
											"begin": 28404,
											"end": 28483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28365,
											"end": 28485,
											"name": "tag",
											"source": 10,
											"value": "861"
										},
										{
											"begin": 28365,
											"end": 28485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28524,
											"end": 28525,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28549,
											"end": 28612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "863"
										},
										{
											"begin": 28604,
											"end": 28611,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 28595,
											"end": 28601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28584,
											"end": 28593,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 28580,
											"end": 28602,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28549,
											"end": 28612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 28549,
											"end": 28612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28549,
											"end": 28612,
											"name": "tag",
											"source": 10,
											"value": "863"
										},
										{
											"begin": 28549,
											"end": 28612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28539,
											"end": 28612,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 28539,
											"end": 28612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28495,
											"end": 28622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28661,
											"end": 28663,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28687,
											"end": 28750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "864"
										},
										{
											"begin": 28742,
											"end": 28749,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 28733,
											"end": 28739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28722,
											"end": 28731,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 28718,
											"end": 28740,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28687,
											"end": 28750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 28687,
											"end": 28750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28687,
											"end": 28750,
											"name": "tag",
											"source": 10,
											"value": "864"
										},
										{
											"begin": 28687,
											"end": 28750,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28677,
											"end": 28750,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 28677,
											"end": 28750,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28632,
											"end": 28760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28799,
											"end": 28801,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 28825,
											"end": 28889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "865"
										},
										{
											"begin": 28881,
											"end": 28888,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 28872,
											"end": 28878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28861,
											"end": 28870,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 28857,
											"end": 28879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28825,
											"end": 28889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 28825,
											"end": 28889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28825,
											"end": 28889,
											"name": "tag",
											"source": 10,
											"value": "865"
										},
										{
											"begin": 28825,
											"end": 28889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28815,
											"end": 28889,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 28815,
											"end": 28889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28770,
											"end": 28899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28938,
											"end": 28940,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 28964,
											"end": 29028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "866"
										},
										{
											"begin": 29020,
											"end": 29027,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 29011,
											"end": 29017,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29000,
											"end": 29009,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 28996,
											"end": 29018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28964,
											"end": 29028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 28964,
											"end": 29028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28964,
											"end": 29028,
											"name": "tag",
											"source": 10,
											"value": "866"
										},
										{
											"begin": 28964,
											"end": 29028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28954,
											"end": 29028,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 28954,
											"end": 29028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28909,
											"end": 29038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29077,
											"end": 29080,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 29104,
											"end": 29167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "867"
										},
										{
											"begin": 29159,
											"end": 29166,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 29150,
											"end": 29156,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29139,
											"end": 29148,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 29135,
											"end": 29157,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29104,
											"end": 29167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 29104,
											"end": 29167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29104,
											"end": 29167,
											"name": "tag",
											"source": 10,
											"value": "867"
										},
										{
											"begin": 29104,
											"end": 29167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29094,
											"end": 29167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29094,
											"end": 29167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29048,
											"end": 29177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28213,
											"end": 29184,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 28213,
											"end": 29184,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 28213,
											"end": 29184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28213,
											"end": 29184,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 28213,
											"end": 29184,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 28213,
											"end": 29184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28213,
											"end": 29184,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 28213,
											"end": 29184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28213,
											"end": 29184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29190,
											"end": 29370,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 29190,
											"end": 29370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29330,
											"end": 29362,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420707269636520646174612066726F6D206F7261636C650000"
										},
										{
											"begin": 29326,
											"end": 29327,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29318,
											"end": 29324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29314,
											"end": 29328,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29307,
											"end": 29363,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 29190,
											"end": 29370,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29190,
											"end": 29370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29376,
											"end": 29742,
											"name": "tag",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 29376,
											"end": 29742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29518,
											"end": 29521,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29539,
											"end": 29606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "870"
										},
										{
											"begin": 29603,
											"end": 29605,
											"name": "PUSH",
											"source": 10,
											"value": "1E"
										},
										{
											"begin": 29598,
											"end": 29601,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 29539,
											"end": 29606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 29539,
											"end": 29606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29539,
											"end": 29606,
											"name": "tag",
											"source": 10,
											"value": "870"
										},
										{
											"begin": 29539,
											"end": 29606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29532,
											"end": 29606,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29532,
											"end": 29606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29615,
											"end": 29708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "871"
										},
										{
											"begin": 29704,
											"end": 29707,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29615,
											"end": 29708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 29615,
											"end": 29708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29615,
											"end": 29708,
											"name": "tag",
											"source": 10,
											"value": "871"
										},
										{
											"begin": 29615,
											"end": 29708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29733,
											"end": 29735,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29728,
											"end": 29731,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29724,
											"end": 29736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29717,
											"end": 29736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29717,
											"end": 29736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29376,
											"end": 29742,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29376,
											"end": 29742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29376,
											"end": 29742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29376,
											"end": 29742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29748,
											"end": 30167,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 29748,
											"end": 30167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29914,
											"end": 29918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29952,
											"end": 29954,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29941,
											"end": 29950,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29937,
											"end": 29955,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29929,
											"end": 29955,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29929,
											"end": 29955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30001,
											"end": 30010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29995,
											"end": 29999,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29991,
											"end": 30011,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 29987,
											"end": 29988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29976,
											"end": 29985,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 29972,
											"end": 29989,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29965,
											"end": 30012,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 30029,
											"end": 30160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "873"
										},
										{
											"begin": 30155,
											"end": 30159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30029,
											"end": 30160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 30029,
											"end": 30160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30029,
											"end": 30160,
											"name": "tag",
											"source": 10,
											"value": "873"
										},
										{
											"begin": 30029,
											"end": 30160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30021,
											"end": 30160,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30021,
											"end": 30160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29748,
											"end": 30167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29748,
											"end": 30167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29748,
											"end": 30167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29748,
											"end": 30167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30173,
											"end": 30505,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 30173,
											"end": 30505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30294,
											"end": 30298,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30332,
											"end": 30334,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 30321,
											"end": 30330,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30317,
											"end": 30335,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30309,
											"end": 30335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30309,
											"end": 30335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30345,
											"end": 30416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "875"
										},
										{
											"begin": 30413,
											"end": 30414,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30402,
											"end": 30411,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30398,
											"end": 30415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30389,
											"end": 30395,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 30345,
											"end": 30416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 30345,
											"end": 30416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30345,
											"end": 30416,
											"name": "tag",
											"source": 10,
											"value": "875"
										},
										{
											"begin": 30345,
											"end": 30416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30426,
											"end": 30498,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "876"
										},
										{
											"begin": 30494,
											"end": 30496,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30483,
											"end": 30492,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30479,
											"end": 30497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30470,
											"end": 30476,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 30426,
											"end": 30498,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 30426,
											"end": 30498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30426,
											"end": 30498,
											"name": "tag",
											"source": 10,
											"value": "876"
										},
										{
											"begin": 30426,
											"end": 30498,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30173,
											"end": 30505,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 30173,
											"end": 30505,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 30173,
											"end": 30505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30173,
											"end": 30505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30173,
											"end": 30505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30173,
											"end": 30505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30511,
											"end": 30627,
											"name": "tag",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 30511,
											"end": 30627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30581,
											"end": 30602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "878"
										},
										{
											"begin": 30596,
											"end": 30601,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30581,
											"end": 30602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 30581,
											"end": 30602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30581,
											"end": 30602,
											"name": "tag",
											"source": 10,
											"value": "878"
										},
										{
											"begin": 30581,
											"end": 30602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30574,
											"end": 30579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30571,
											"end": 30603,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 30561,
											"end": 30621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "879"
										},
										{
											"begin": 30561,
											"end": 30621,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 30617,
											"end": 30618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30614,
											"end": 30615,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 30607,
											"end": 30619,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 30561,
											"end": 30621,
											"name": "tag",
											"source": 10,
											"value": "879"
										},
										{
											"begin": 30561,
											"end": 30621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30511,
											"end": 30627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30511,
											"end": 30627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30633,
											"end": 30770,
											"name": "tag",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 30633,
											"end": 30770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30687,
											"end": 30692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30718,
											"end": 30724,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30712,
											"end": 30725,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 30703,
											"end": 30725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30703,
											"end": 30725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30734,
											"end": 30764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "881"
										},
										{
											"begin": 30758,
											"end": 30763,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30734,
											"end": 30764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 30734,
											"end": 30764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30734,
											"end": 30764,
											"name": "tag",
											"source": 10,
											"value": "881"
										},
										{
											"begin": 30734,
											"end": 30764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30633,
											"end": 30770,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 30633,
											"end": 30770,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30633,
											"end": 30770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30633,
											"end": 30770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30633,
											"end": 30770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30776,
											"end": 31121,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 30776,
											"end": 31121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30843,
											"end": 30849,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30892,
											"end": 30894,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30880,
											"end": 30889,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30871,
											"end": 30878,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 30867,
											"end": 30890,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 30863,
											"end": 30895,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 30860,
											"end": 30979,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 30860,
											"end": 30979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "883"
										},
										{
											"begin": 30860,
											"end": 30979,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 30898,
											"end": 30977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "884"
										},
										{
											"begin": 30898,
											"end": 30977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 30898,
											"end": 30977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30898,
											"end": 30977,
											"name": "tag",
											"source": 10,
											"value": "884"
										},
										{
											"begin": 30898,
											"end": 30977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30860,
											"end": 30979,
											"name": "tag",
											"source": 10,
											"value": "883"
										},
										{
											"begin": 30860,
											"end": 30979,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31018,
											"end": 31019,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31043,
											"end": 31104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "885"
										},
										{
											"begin": 31096,
											"end": 31103,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 31087,
											"end": 31093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31076,
											"end": 31085,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 31072,
											"end": 31094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31043,
											"end": 31104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 31043,
											"end": 31104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31043,
											"end": 31104,
											"name": "tag",
											"source": 10,
											"value": "885"
										},
										{
											"begin": 31043,
											"end": 31104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31033,
											"end": 31104,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 31033,
											"end": 31104,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30989,
											"end": 31114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30776,
											"end": 31121,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 30776,
											"end": 31121,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30776,
											"end": 31121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30776,
											"end": 31121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30776,
											"end": 31121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31127,
											"end": 31569,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 31127,
											"end": 31569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31276,
											"end": 31280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31314,
											"end": 31316,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 31303,
											"end": 31312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31299,
											"end": 31317,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31291,
											"end": 31317,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31291,
											"end": 31317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31327,
											"end": 31398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "887"
										},
										{
											"begin": 31395,
											"end": 31396,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31384,
											"end": 31393,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31380,
											"end": 31397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31371,
											"end": 31377,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 31327,
											"end": 31398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 31327,
											"end": 31398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31327,
											"end": 31398,
											"name": "tag",
											"source": 10,
											"value": "887"
										},
										{
											"begin": 31327,
											"end": 31398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31408,
											"end": 31480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "888"
										},
										{
											"begin": 31476,
											"end": 31478,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 31465,
											"end": 31474,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31461,
											"end": 31479,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31452,
											"end": 31458,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 31408,
											"end": 31480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 31408,
											"end": 31480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31408,
											"end": 31480,
											"name": "tag",
											"source": 10,
											"value": "888"
										},
										{
											"begin": 31408,
											"end": 31480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31490,
											"end": 31562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "889"
										},
										{
											"begin": 31558,
											"end": 31560,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 31547,
											"end": 31556,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31543,
											"end": 31561,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31534,
											"end": 31540,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 31490,
											"end": 31562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 31490,
											"end": 31562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31490,
											"end": 31562,
											"name": "tag",
											"source": 10,
											"value": "889"
										},
										{
											"begin": 31490,
											"end": 31562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31127,
											"end": 31569,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 31127,
											"end": 31569,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 31127,
											"end": 31569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31127,
											"end": 31569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31127,
											"end": 31569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31127,
											"end": 31569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31127,
											"end": 31569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31575,
											"end": 31756,
											"name": "tag",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 31575,
											"end": 31756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31715,
											"end": 31748,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 31711,
											"end": 31712,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31703,
											"end": 31709,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31699,
											"end": 31713,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31692,
											"end": 31749,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 31575,
											"end": 31756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31575,
											"end": 31756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31762,
											"end": 32128,
											"name": "tag",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 31762,
											"end": 32128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31904,
											"end": 31907,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31925,
											"end": 31992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "892"
										},
										{
											"begin": 31989,
											"end": 31991,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 31984,
											"end": 31987,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31925,
											"end": 31992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 31925,
											"end": 31992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31925,
											"end": 31992,
											"name": "tag",
											"source": 10,
											"value": "892"
										},
										{
											"begin": 31925,
											"end": 31992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31918,
											"end": 31992,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 31918,
											"end": 31992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32001,
											"end": 32094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "893"
										},
										{
											"begin": 32090,
											"end": 32093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 32001,
											"end": 32094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 32001,
											"end": 32094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32001,
											"end": 32094,
											"name": "tag",
											"source": 10,
											"value": "893"
										},
										{
											"begin": 32001,
											"end": 32094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32119,
											"end": 32121,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 32114,
											"end": 32117,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 32110,
											"end": 32122,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 32103,
											"end": 32122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 32103,
											"end": 32122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31762,
											"end": 32128,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 31762,
											"end": 32128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31762,
											"end": 32128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31762,
											"end": 32128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32134,
											"end": 32553,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 32134,
											"end": 32553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32300,
											"end": 32304,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 32338,
											"end": 32340,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 32327,
											"end": 32336,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 32323,
											"end": 32341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 32315,
											"end": 32341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 32315,
											"end": 32341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32387,
											"end": 32396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 32381,
											"end": 32385,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 32377,
											"end": 32397,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 32373,
											"end": 32374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 32362,
											"end": 32371,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 32358,
											"end": 32375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 32351,
											"end": 32398,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 32415,
											"end": 32546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "895"
										},
										{
											"begin": 32541,
											"end": 32545,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 32415,
											"end": 32546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 32415,
											"end": 32546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32415,
											"end": 32546,
											"name": "tag",
											"source": 10,
											"value": "895"
										},
										{
											"begin": 32415,
											"end": 32546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32407,
											"end": 32546,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 32407,
											"end": 32546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32134,
											"end": 32553,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 32134,
											"end": 32553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 32134,
											"end": 32553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32134,
											"end": 32553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32559,
											"end": 32739,
											"name": "tag",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 32559,
											"end": 32739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32607,
											"end": 32684,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32604,
											"end": 32605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 32597,
											"end": 32685,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 32704,
											"end": 32708,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 32701,
											"end": 32702,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 32694,
											"end": 32709,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 32728,
											"end": 32732,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 32725,
											"end": 32726,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 32718,
											"end": 32733,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 32745,
											"end": 33155,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 32745,
											"end": 33155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32785,
											"end": 32792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 32808,
											"end": 32828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "898"
										},
										{
											"begin": 32826,
											"end": 32827,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 32808,
											"end": 32828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 32808,
											"end": 32828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32808,
											"end": 32828,
											"name": "tag",
											"source": 10,
											"value": "898"
										},
										{
											"begin": 32808,
											"end": 32828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32803,
											"end": 32828,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 32803,
											"end": 32828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32842,
											"end": 32862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "899"
										},
										{
											"begin": 32860,
											"end": 32861,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 32842,
											"end": 32862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 32842,
											"end": 32862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32842,
											"end": 32862,
											"name": "tag",
											"source": 10,
											"value": "899"
										},
										{
											"begin": 32842,
											"end": 32862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32837,
											"end": 32862,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 32837,
											"end": 32862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32897,
											"end": 32898,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 32894,
											"end": 32895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 32890,
											"end": 32899,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 32919,
											"end": 32949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "900"
										},
										{
											"begin": 32937,
											"end": 32948,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 32919,
											"end": 32949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 32919,
											"end": 32949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32919,
											"end": 32949,
											"name": "tag",
											"source": 10,
											"value": "900"
										},
										{
											"begin": 32919,
											"end": 32949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32908,
											"end": 32949,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 32908,
											"end": 32949,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33098,
											"end": 33099,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 33089,
											"end": 33096,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 33085,
											"end": 33100,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 33082,
											"end": 33083,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 33079,
											"end": 33101,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 33059,
											"end": 33060,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 33052,
											"end": 33061,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 33032,
											"end": 33115,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 33009,
											"end": 33148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "901"
										},
										{
											"begin": 33009,
											"end": 33148,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 33128,
											"end": 33146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "902"
										},
										{
											"begin": 33128,
											"end": 33146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 33128,
											"end": 33146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33128,
											"end": 33146,
											"name": "tag",
											"source": 10,
											"value": "902"
										},
										{
											"begin": 33128,
											"end": 33146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33009,
											"end": 33148,
											"name": "tag",
											"source": 10,
											"value": "901"
										},
										{
											"begin": 33009,
											"end": 33148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32793,
											"end": 33155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32745,
											"end": 33155,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 32745,
											"end": 33155,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 32745,
											"end": 33155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32745,
											"end": 33155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32745,
											"end": 33155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33161,
											"end": 33341,
											"name": "tag",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 33161,
											"end": 33341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33209,
											"end": 33286,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33206,
											"end": 33207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 33199,
											"end": 33287,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 33306,
											"end": 33310,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 33303,
											"end": 33304,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 33296,
											"end": 33311,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 33330,
											"end": 33334,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 33327,
											"end": 33328,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 33320,
											"end": 33335,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 33347,
											"end": 33532,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 33347,
											"end": 33532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33387,
											"end": 33388,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 33404,
											"end": 33424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "905"
										},
										{
											"begin": 33422,
											"end": 33423,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 33404,
											"end": 33424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 33404,
											"end": 33424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33404,
											"end": 33424,
											"name": "tag",
											"source": 10,
											"value": "905"
										},
										{
											"begin": 33404,
											"end": 33424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33399,
											"end": 33424,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 33399,
											"end": 33424,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33438,
											"end": 33458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "906"
										},
										{
											"begin": 33456,
											"end": 33457,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 33438,
											"end": 33458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 33438,
											"end": 33458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33438,
											"end": 33458,
											"name": "tag",
											"source": 10,
											"value": "906"
										},
										{
											"begin": 33438,
											"end": 33458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33433,
											"end": 33458,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 33433,
											"end": 33458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33477,
											"end": 33478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 33467,
											"end": 33502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "907"
										},
										{
											"begin": 33467,
											"end": 33502,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 33482,
											"end": 33500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "908"
										},
										{
											"begin": 33482,
											"end": 33500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 33482,
											"end": 33500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33482,
											"end": 33500,
											"name": "tag",
											"source": 10,
											"value": "908"
										},
										{
											"begin": 33482,
											"end": 33500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33467,
											"end": 33502,
											"name": "tag",
											"source": 10,
											"value": "907"
										},
										{
											"begin": 33467,
											"end": 33502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33524,
											"end": 33525,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 33521,
											"end": 33522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 33517,
											"end": 33526,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 33512,
											"end": 33526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 33512,
											"end": 33526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33347,
											"end": 33532,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 33347,
											"end": 33532,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 33347,
											"end": 33532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33347,
											"end": 33532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33347,
											"end": 33532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33538,
											"end": 33758,
											"name": "tag",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 33538,
											"end": 33758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33678,
											"end": 33712,
											"name": "PUSH",
											"source": 10,
											"value": "55534420616D6F756E74206D7573742062652067726561746572207468616E20"
										},
										{
											"begin": 33674,
											"end": 33675,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 33666,
											"end": 33672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 33662,
											"end": 33676,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 33655,
											"end": 33713,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 33747,
											"end": 33750,
											"name": "PUSH",
											"source": 10,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33742,
											"end": 33744,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 33734,
											"end": 33740,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 33730,
											"end": 33745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 33723,
											"end": 33751,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 33538,
											"end": 33758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33538,
											"end": 33758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33764,
											"end": 34130,
											"name": "tag",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 33764,
											"end": 34130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33906,
											"end": 33909,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 33927,
											"end": 33994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "911"
										},
										{
											"begin": 33991,
											"end": 33993,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 33986,
											"end": 33989,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 33927,
											"end": 33994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 33927,
											"end": 33994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33927,
											"end": 33994,
											"name": "tag",
											"source": 10,
											"value": "911"
										},
										{
											"begin": 33927,
											"end": 33994,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33920,
											"end": 33994,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 33920,
											"end": 33994,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34003,
											"end": 34096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "912"
										},
										{
											"begin": 34092,
											"end": 34095,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 34003,
											"end": 34096,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 34003,
											"end": 34096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 34003,
											"end": 34096,
											"name": "tag",
											"source": 10,
											"value": "912"
										},
										{
											"begin": 34003,
											"end": 34096,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34121,
											"end": 34123,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 34116,
											"end": 34119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 34112,
											"end": 34124,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 34105,
											"end": 34124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 34105,
											"end": 34124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33764,
											"end": 34130,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 33764,
											"end": 34130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 33764,
											"end": 34130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33764,
											"end": 34130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 34136,
											"end": 34555,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 34136,
											"end": 34555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34302,
											"end": 34306,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 34340,
											"end": 34342,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 34329,
											"end": 34338,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 34325,
											"end": 34343,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 34317,
											"end": 34343,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 34317,
											"end": 34343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34389,
											"end": 34398,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 34383,
											"end": 34387,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 34379,
											"end": 34399,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 34375,
											"end": 34376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 34364,
											"end": 34373,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 34360,
											"end": 34377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 34353,
											"end": 34400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 34417,
											"end": 34548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "914"
										},
										{
											"begin": 34543,
											"end": 34547,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 34417,
											"end": 34548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 34417,
											"end": 34548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 34417,
											"end": 34548,
											"name": "tag",
											"source": 10,
											"value": "914"
										},
										{
											"begin": 34417,
											"end": 34548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34409,
											"end": 34548,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 34409,
											"end": 34548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34136,
											"end": 34555,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 34136,
											"end": 34555,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 34136,
											"end": 34555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34136,
											"end": 34555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 34561,
											"end": 34790,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 34561,
											"end": 34790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34701,
											"end": 34735,
											"name": "PUSH",
											"source": 10,
											"value": "507269766174652053616C6520746F6B656E73206D7573742062652067726561"
										},
										{
											"begin": 34697,
											"end": 34698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 34689,
											"end": 34695,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 34685,
											"end": 34699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 34678,
											"end": 34736,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 34770,
											"end": 34782,
											"name": "PUSH",
											"source": 10,
											"value": "746572207468616E203000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34765,
											"end": 34767,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 34757,
											"end": 34763,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 34753,
											"end": 34768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 34746,
											"end": 34783,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 34561,
											"end": 34790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34561,
											"end": 34790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 34796,
											"end": 35162,
											"name": "tag",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 34796,
											"end": 35162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34938,
											"end": 34941,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 34959,
											"end": 35026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "917"
										},
										{
											"begin": 35023,
											"end": 35025,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 35018,
											"end": 35021,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 34959,
											"end": 35026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 34959,
											"end": 35026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 34959,
											"end": 35026,
											"name": "tag",
											"source": 10,
											"value": "917"
										},
										{
											"begin": 34959,
											"end": 35026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34952,
											"end": 35026,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 34952,
											"end": 35026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35035,
											"end": 35128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "918"
										},
										{
											"begin": 35124,
											"end": 35127,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 35035,
											"end": 35128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 35035,
											"end": 35128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 35035,
											"end": 35128,
											"name": "tag",
											"source": 10,
											"value": "918"
										},
										{
											"begin": 35035,
											"end": 35128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35153,
											"end": 35155,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 35148,
											"end": 35151,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 35144,
											"end": 35156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 35137,
											"end": 35156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 35137,
											"end": 35156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34796,
											"end": 35162,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 34796,
											"end": 35162,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 34796,
											"end": 35162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34796,
											"end": 35162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 35168,
											"end": 35587,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 35168,
											"end": 35587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35334,
											"end": 35338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 35372,
											"end": 35374,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 35361,
											"end": 35370,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 35357,
											"end": 35375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 35349,
											"end": 35375,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 35349,
											"end": 35375,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35421,
											"end": 35430,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 35415,
											"end": 35419,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 35411,
											"end": 35431,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 35407,
											"end": 35408,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 35396,
											"end": 35405,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 35392,
											"end": 35409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 35385,
											"end": 35432,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 35449,
											"end": 35580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "920"
										},
										{
											"begin": 35575,
											"end": 35579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 35449,
											"end": 35580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 35449,
											"end": 35580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 35449,
											"end": 35580,
											"name": "tag",
											"source": 10,
											"value": "920"
										},
										{
											"begin": 35449,
											"end": 35580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35441,
											"end": 35580,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 35441,
											"end": 35580,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35168,
											"end": 35587,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 35168,
											"end": 35587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 35168,
											"end": 35587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35168,
											"end": 35587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 35593,
											"end": 35828,
											"name": "tag",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 35593,
											"end": 35828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35733,
											"end": 35767,
											"name": "PUSH",
											"source": 10,
											"value": "507269766174652053616C6520736F6C6420746F6B656E732065786365656420"
										},
										{
											"begin": 35729,
											"end": 35730,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 35721,
											"end": 35727,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 35717,
											"end": 35731,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 35710,
											"end": 35768,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 35802,
											"end": 35820,
											"name": "PUSH",
											"source": 10,
											"value": "617661696C61626C6520746F6B656E7300000000000000000000000000000000"
										},
										{
											"begin": 35797,
											"end": 35799,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 35789,
											"end": 35795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 35785,
											"end": 35800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 35778,
											"end": 35821,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 35593,
											"end": 35828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35593,
											"end": 35828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 35834,
											"end": 36200,
											"name": "tag",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 35834,
											"end": 36200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35976,
											"end": 35979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 35997,
											"end": 36064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "923"
										},
										{
											"begin": 36061,
											"end": 36063,
											"name": "PUSH",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 36056,
											"end": 36059,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 35997,
											"end": 36064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 35997,
											"end": 36064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 35997,
											"end": 36064,
											"name": "tag",
											"source": 10,
											"value": "923"
										},
										{
											"begin": 35997,
											"end": 36064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35990,
											"end": 36064,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 35990,
											"end": 36064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 36073,
											"end": 36166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "924"
										},
										{
											"begin": 36162,
											"end": 36165,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 36073,
											"end": 36166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 36073,
											"end": 36166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 36073,
											"end": 36166,
											"name": "tag",
											"source": 10,
											"value": "924"
										},
										{
											"begin": 36073,
											"end": 36166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 36191,
											"end": 36193,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 36186,
											"end": 36189,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 36182,
											"end": 36194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 36175,
											"end": 36194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 36175,
											"end": 36194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35834,
											"end": 36200,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 35834,
											"end": 36200,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 35834,
											"end": 36200,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35834,
											"end": 36200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 36206,
											"end": 36625,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 36206,
											"end": 36625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 36372,
											"end": 36376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 36410,
											"end": 36412,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 36399,
											"end": 36408,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 36395,
											"end": 36413,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 36387,
											"end": 36413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 36387,
											"end": 36413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 36459,
											"end": 36468,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 36453,
											"end": 36457,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 36449,
											"end": 36469,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 36445,
											"end": 36446,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 36434,
											"end": 36443,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 36430,
											"end": 36447,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 36423,
											"end": 36470,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 36487,
											"end": 36618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "926"
										},
										{
											"begin": 36613,
											"end": 36617,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 36487,
											"end": 36618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 36487,
											"end": 36618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 36487,
											"end": 36618,
											"name": "tag",
											"source": 10,
											"value": "926"
										},
										{
											"begin": 36487,
											"end": 36618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 36479,
											"end": 36618,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 36479,
											"end": 36618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 36206,
											"end": 36625,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 36206,
											"end": 36625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 36206,
											"end": 36625,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 36206,
											"end": 36625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 36631,
											"end": 36811,
											"name": "tag",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 36631,
											"end": 36811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 36771,
											"end": 36803,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420746F6B656E2070726963652063616C63756C617465640000"
										},
										{
											"begin": 36767,
											"end": 36768,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 36759,
											"end": 36765,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 36755,
											"end": 36769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 36748,
											"end": 36804,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 36631,
											"end": 36811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 36631,
											"end": 36811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 36817,
											"end": 37183,
											"name": "tag",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 36817,
											"end": 37183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 36959,
											"end": 36962,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 36980,
											"end": 37047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "929"
										},
										{
											"begin": 37044,
											"end": 37046,
											"name": "PUSH",
											"source": 10,
											"value": "1E"
										},
										{
											"begin": 37039,
											"end": 37042,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 36980,
											"end": 37047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 36980,
											"end": 37047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 36980,
											"end": 37047,
											"name": "tag",
											"source": 10,
											"value": "929"
										},
										{
											"begin": 36980,
											"end": 37047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 36973,
											"end": 37047,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 36973,
											"end": 37047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 37056,
											"end": 37149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "930"
										},
										{
											"begin": 37145,
											"end": 37148,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 37056,
											"end": 37149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 37056,
											"end": 37149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 37056,
											"end": 37149,
											"name": "tag",
											"source": 10,
											"value": "930"
										},
										{
											"begin": 37056,
											"end": 37149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 37174,
											"end": 37176,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 37169,
											"end": 37172,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 37165,
											"end": 37177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 37158,
											"end": 37177,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 37158,
											"end": 37177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 36817,
											"end": 37183,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 36817,
											"end": 37183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 36817,
											"end": 37183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 36817,
											"end": 37183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 37189,
											"end": 37608,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 37189,
											"end": 37608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 37355,
											"end": 37359,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 37393,
											"end": 37395,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 37382,
											"end": 37391,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 37378,
											"end": 37396,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 37370,
											"end": 37396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 37370,
											"end": 37396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 37442,
											"end": 37451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 37436,
											"end": 37440,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 37432,
											"end": 37452,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 37428,
											"end": 37429,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 37417,
											"end": 37426,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 37413,
											"end": 37430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 37406,
											"end": 37453,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 37470,
											"end": 37601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "932"
										},
										{
											"begin": 37596,
											"end": 37600,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 37470,
											"end": 37601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 37470,
											"end": 37601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 37470,
											"end": 37601,
											"name": "tag",
											"source": 10,
											"value": "932"
										},
										{
											"begin": 37470,
											"end": 37601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 37462,
											"end": 37601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 37462,
											"end": 37601,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 37189,
											"end": 37608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 37189,
											"end": 37608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 37189,
											"end": 37608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 37189,
											"end": 37608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 37614,
											"end": 37841,
											"name": "tag",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 37614,
											"end": 37841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 37754,
											"end": 37788,
											"name": "PUSH",
											"source": 10,
											"value": "43616C63756C6174656420746F6B656E73206D75737420626520677265617465"
										},
										{
											"begin": 37750,
											"end": 37751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 37742,
											"end": 37748,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 37738,
											"end": 37752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 37731,
											"end": 37789,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 37823,
											"end": 37833,
											"name": "PUSH",
											"source": 10,
											"value": "72207468616E2030000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37818,
											"end": 37820,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 37810,
											"end": 37816,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 37806,
											"end": 37821,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 37799,
											"end": 37834,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 37614,
											"end": 37841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 37614,
											"end": 37841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 37847,
											"end": 38213,
											"name": "tag",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 37847,
											"end": 38213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 37989,
											"end": 37992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 38010,
											"end": 38077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "935"
										},
										{
											"begin": 38074,
											"end": 38076,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 38069,
											"end": 38072,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 38010,
											"end": 38077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 38010,
											"end": 38077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 38010,
											"end": 38077,
											"name": "tag",
											"source": 10,
											"value": "935"
										},
										{
											"begin": 38010,
											"end": 38077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 38003,
											"end": 38077,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 38003,
											"end": 38077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 38086,
											"end": 38179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "936"
										},
										{
											"begin": 38175,
											"end": 38178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 38086,
											"end": 38179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 38086,
											"end": 38179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 38086,
											"end": 38179,
											"name": "tag",
											"source": 10,
											"value": "936"
										},
										{
											"begin": 38086,
											"end": 38179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 38204,
											"end": 38206,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 38199,
											"end": 38202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 38195,
											"end": 38207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 38188,
											"end": 38207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 38188,
											"end": 38207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 37847,
											"end": 38213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 37847,
											"end": 38213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 37847,
											"end": 38213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 37847,
											"end": 38213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 38219,
											"end": 38638,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 38219,
											"end": 38638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 38385,
											"end": 38389,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 38423,
											"end": 38425,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 38412,
											"end": 38421,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 38408,
											"end": 38426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 38400,
											"end": 38426,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 38400,
											"end": 38426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 38472,
											"end": 38481,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 38466,
											"end": 38470,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 38462,
											"end": 38482,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 38458,
											"end": 38459,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 38447,
											"end": 38456,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 38443,
											"end": 38460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 38436,
											"end": 38483,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 38500,
											"end": 38631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "938"
										},
										{
											"begin": 38626,
											"end": 38630,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 38500,
											"end": 38631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 38500,
											"end": 38631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 38500,
											"end": 38631,
											"name": "tag",
											"source": 10,
											"value": "938"
										},
										{
											"begin": 38500,
											"end": 38631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 38492,
											"end": 38631,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 38492,
											"end": 38631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 38219,
											"end": 38638,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 38219,
											"end": 38638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 38219,
											"end": 38638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 38219,
											"end": 38638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 38644,
											"end": 38835,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 38644,
											"end": 38835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 38684,
											"end": 38687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 38703,
											"end": 38723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "940"
										},
										{
											"begin": 38721,
											"end": 38722,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 38703,
											"end": 38723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 38703,
											"end": 38723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 38703,
											"end": 38723,
											"name": "tag",
											"source": 10,
											"value": "940"
										},
										{
											"begin": 38703,
											"end": 38723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 38698,
											"end": 38723,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 38698,
											"end": 38723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 38737,
											"end": 38757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "941"
										},
										{
											"begin": 38755,
											"end": 38756,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 38737,
											"end": 38757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 38737,
											"end": 38757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 38737,
											"end": 38757,
											"name": "tag",
											"source": 10,
											"value": "941"
										},
										{
											"begin": 38737,
											"end": 38757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 38732,
											"end": 38757,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 38732,
											"end": 38757,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 38780,
											"end": 38781,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 38777,
											"end": 38778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 38773,
											"end": 38782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 38766,
											"end": 38782,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 38766,
											"end": 38782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 38801,
											"end": 38804,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 38798,
											"end": 38799,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 38795,
											"end": 38805,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 38792,
											"end": 38828,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 38792,
											"end": 38828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "942"
										},
										{
											"begin": 38792,
											"end": 38828,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 38808,
											"end": 38826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "943"
										},
										{
											"begin": 38808,
											"end": 38826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 38808,
											"end": 38826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 38808,
											"end": 38826,
											"name": "tag",
											"source": 10,
											"value": "943"
										},
										{
											"begin": 38808,
											"end": 38826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 38792,
											"end": 38828,
											"name": "tag",
											"source": 10,
											"value": "942"
										},
										{
											"begin": 38792,
											"end": 38828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 38644,
											"end": 38835,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 38644,
											"end": 38835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 38644,
											"end": 38835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 38644,
											"end": 38835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 38644,
											"end": 38835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 38841,
											"end": 39035,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 38841,
											"end": 39035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 38881,
											"end": 38885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 38901,
											"end": 38921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "945"
										},
										{
											"begin": 38919,
											"end": 38920,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 38901,
											"end": 38921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 38901,
											"end": 38921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 38901,
											"end": 38921,
											"name": "tag",
											"source": 10,
											"value": "945"
										},
										{
											"begin": 38901,
											"end": 38921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 38896,
											"end": 38921,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 38896,
											"end": 38921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 38935,
											"end": 38955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "946"
										},
										{
											"begin": 38953,
											"end": 38954,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 38935,
											"end": 38955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 38935,
											"end": 38955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 38935,
											"end": 38955,
											"name": "tag",
											"source": 10,
											"value": "946"
										},
										{
											"begin": 38935,
											"end": 38955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 38930,
											"end": 38955,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 38930,
											"end": 38955,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 38979,
											"end": 38980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 38976,
											"end": 38977,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 38972,
											"end": 38981,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 38964,
											"end": 38981,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 38964,
											"end": 38981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 39003,
											"end": 39004,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 38997,
											"end": 39001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 38994,
											"end": 39005,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 38991,
											"end": 39028,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 38991,
											"end": 39028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "947"
										},
										{
											"begin": 38991,
											"end": 39028,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 39008,
											"end": 39026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "948"
										},
										{
											"begin": 39008,
											"end": 39026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 39008,
											"end": 39026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 39008,
											"end": 39026,
											"name": "tag",
											"source": 10,
											"value": "948"
										},
										{
											"begin": 39008,
											"end": 39026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 38991,
											"end": 39028,
											"name": "tag",
											"source": 10,
											"value": "947"
										},
										{
											"begin": 38991,
											"end": 39028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 38841,
											"end": 39035,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 38841,
											"end": 39035,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 38841,
											"end": 39035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 38841,
											"end": 39035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 38841,
											"end": 39035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/bettoken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TOTAL_SUPPLY()": "902d55a5",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyTokens(uint256)": "3610724e",
							"decimals()": "313ce567",
							"emergencyWithdraw(address,uint256)": "95ccea67",
							"getLatestPrice()": "8e15f473",
							"haltSales()": "32c85ac0",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"preSaleEndPrice()": "8f7713ff",
							"preSaleSoldTokens()": "b68ed11f",
							"preSaleStartPrice()": "920168b3",
							"preSaleTarget()": "e6bd92b9",
							"preSaleTokens()": "0fe83bb8",
							"priceFeeds(uint256)": "10c7f0b9",
							"privateSaleEndPrice()": "bda95633",
							"privateSaleSoldTokens()": "5fb3b944",
							"privateSaleStartPrice()": "b0e68630",
							"privateSaleTarget()": "ba20cf4c",
							"privateSaleTokens()": "c552e04b",
							"releaseVestedTokens()": "54dd1da4",
							"renounceOwnership()": "715018a6",
							"stage()": "c040e6b8",
							"stakeDuration()": "40f02ab6",
							"stakeTokens(uint256)": "7547c7a3",
							"startPreSale()": "55dd574c",
							"startPrivateSale()": "338dbf59",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"vestingBalance(address)": "192399d1",
							"vestingDuration()": "1514617e",
							"vestingReleaseTime(address)": "2b1cbc38",
							"withdrawFunds()": "24600fc3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_priceFeeds\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PreSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrivateSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum Bettoken.SaleStage\",\"name\":\"newStage\",\"type\":\"uint8\"}],\"name\":\"StageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"VestedTokensReleased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"haltSales\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleEndPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleSoldTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleStartPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleTarget\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"priceFeeds\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleEndPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleSoldTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleStartPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleTarget\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseVestedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"internalType\":\"enum Bettoken.SaleStage\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPreSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPrivateSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingReleaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bettoken.sol\":\"Bettoken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/bettoken.sol\":{\"keccak256\":\"0xf6829ac0c533901cf734644756665cb474e6e58cc432110765506917752ec725\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b94e5cd00fde0b80c6abd9774daaa1851e9f52a1e8d03f4234446e92f8441aac\",\"dweb:/ipfs/QmXUBgjLdH1wXQGcxThUcxBKkpBR3bT1DmxW3NeYfwrGJc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 418,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 424,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 426,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 428,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 430,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 54,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 341,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1386,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "privateSaleTarget",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1393,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "privateSaleTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1400,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "privateSaleStartPrice",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1407,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "privateSaleEndPrice",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1410,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "privateSaleSoldTokens",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1417,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "preSaleTarget",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1424,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "preSaleTokens",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1431,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "preSaleStartPrice",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1438,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "preSaleEndPrice",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 1441,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "preSaleSoldTokens",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 1450,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "stage",
								"offset": 0,
								"slot": "17",
								"type": "t_enum(SaleStage)1445"
							},
							{
								"astId": 1454,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "vestingBalance",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1458,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "vestingReleaseTime",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1461,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "vestingDuration",
								"offset": 0,
								"slot": "20",
								"type": "t_uint256"
							},
							{
								"astId": 1464,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "stakeDuration",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							},
							{
								"astId": 1468,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "priceFeeds",
								"offset": 0,
								"slot": "22",
								"type": "t_array(t_contract(AggregatorV3Interface)45)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_contract(AggregatorV3Interface)45)dyn_storage": {
								"base": "t_contract(AggregatorV3Interface)45",
								"encoding": "dynamic_array",
								"label": "contract AggregatorV3Interface[]",
								"numberOfBytes": "32"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_enum(SaleStage)1445": {
								"encoding": "inplace",
								"label": "enum Bettoken.SaleStage",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"Ownable": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 1045,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 51,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "692:7:1"
									},
									"id": 52,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								1044
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 59,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 64,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 70,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 76,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 77,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 85,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 83,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 82,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 88,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 91,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 96,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 193,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 99,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 102,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 104,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 109,
												"id": 111,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 193,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 117,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 119,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 128,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 123,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1026,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 122,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 126,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 193,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 136,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 133,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 193,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 152,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 159,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 158,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 149,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 193,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"id": 180,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 183,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 187,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 186,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 193,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 194,
							"src": "663:2438:1",
							"usedErrors": [
								59,
								64
							],
							"usedEvents": [
								70
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							330
						],
						"IERC20Errors": [
							235
						],
						"IERC721Errors": [
							283
						]
					},
					"id": 331,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 196,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 235,
							"linearizedBaseContracts": [
								235
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 205,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 210,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 215,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 224,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 229,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 234,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 331,
							"src": "278:1764:2",
							"usedErrors": [
								205,
								210,
								215,
								224,
								229,
								234
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 283,
							"linearizedBaseContracts": [
								283
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 241,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 246,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 255,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 260,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 265,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 272,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 277,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 282,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 331,
							"src": "2186:2092:2",
							"usedErrors": [
								241,
								246,
								255,
								260,
								265,
								272,
								277,
								282
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 284,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 330,
							"linearizedBaseContracts": [
								330
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 295,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 300,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 305,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 312,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 317,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 322,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 329,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 331,
							"src": "4424:2107:2",
							"usedErrors": [
								295,
								300,
								305,
								312,
								317,
								322,
								329
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							395
						]
					},
					"id": 396,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 332,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 333,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 395,
							"linearizedBaseContracts": [
								395
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 336,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 334,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 335,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 339,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 338,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 341,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 395,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 340,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 344,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 345,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 349,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 395,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 356,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 360,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 364,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 365,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 370,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 371,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 395,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 378,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 379,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 395,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 389,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 390,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 388,
												"id": 392,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 395,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 396,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"ERC20": [
							910
						],
						"IERC20": [
							988
						],
						"IERC20Errors": [
							235
						],
						"IERC20Metadata": [
							1014
						]
					},
					"id": 911,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 397,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 399,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 911,
							"sourceUnit": 989,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 398,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 988,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 401,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 911,
							"sourceUnit": 1015,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 400,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1014,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 403,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 911,
							"sourceUnit": 1045,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 402,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 405,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 911,
							"sourceUnit": 331,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 404,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 235,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 407,
										"name": "Context",
										"nameLocations": [
											"1428:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "1428:7:4"
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:4"
								},
								{
									"baseName": {
										"id": 409,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 988,
										"src": "1437:6:4"
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:4"
								},
								{
									"baseName": {
										"id": 411,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1014,
										"src": "1445:14:4"
									},
									"id": 412,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:4"
								},
								{
									"baseName": {
										"id": 413,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 235,
										"src": "1461:12:4"
									},
									"id": 414,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 910,
							"linearizedBaseContracts": [
								910,
								235,
								1014,
								988,
								1044
							],
							"name": "ERC20",
							"nameLocation": "1419:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 418,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 910,
									"src": "1480:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 417,
										"keyName": "account",
										"keyNameLocation": "1496:7:4",
										"keyType": {
											"id": 415,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 416,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 424,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 910,
									"src": "1540:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 423,
										"keyName": "account",
										"keyNameLocation": "1556:7:4",
										"keyType": {
											"id": 419,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 422,
											"keyName": "spender",
											"keyNameLocation": "1583:7:4",
											"keyType": {
												"id": 420,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 421,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 426,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 910,
									"src": "1630:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 425,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 428,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 910,
									"src": "1665:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 427,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 430,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 910,
									"src": "1691:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 429,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "1952:57:4",
										"statements": [
											{
												"expression": {
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 438,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "1962:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 439,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "1970:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:4"
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 442,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "1985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 443,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "1995:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:4"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 447,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1908:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 432,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1929:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:4"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:4"
									},
									"scope": 910,
									"src": "1896:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1001
									],
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "2134:29:4",
										"statements": [
											{
												"expression": {
													"id": 453,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 428,
													"src": "2151:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 452,
												"id": 454,
												"nodeType": "Return",
												"src": "2144:12:4"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:4"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "2119:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:4"
									},
									"scope": 910,
									"src": "2074:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "2338:31:4",
										"statements": [
											{
												"expression": {
													"id": 462,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 430,
													"src": "2355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 461,
												"id": 463,
												"nodeType": "Return",
												"src": "2348:14:4"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:4"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2323:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:4"
									},
									"scope": 910,
									"src": "2276:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1013
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3058:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 470,
												"id": 472,
												"nodeType": "Return",
												"src": "3068:9:4"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:4"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3051:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 468,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:4"
									},
									"scope": 910,
									"src": "3002:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										937
									],
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "3205:36:4",
										"statements": [
											{
												"expression": {
													"id": 480,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 426,
													"src": "3222:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 479,
												"id": 481,
												"nodeType": "Return",
												"src": "3215:19:4"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:4"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3196:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:4"
									},
									"scope": 910,
									"src": "3144:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										945
									],
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "3373:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 491,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "3390:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 493,
													"indexExpression": {
														"id": 492,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "3400:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 490,
												"id": 494,
												"nodeType": "Return",
												"src": "3383:25:4"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "3318:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:4"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "3364:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:4"
									},
									"scope": 910,
									"src": "3299:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "3685:103:4",
										"statements": [
											{
												"assignments": [
													507
												],
												"declarations": [
													{
														"constant": false,
														"id": 507,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 519,
														"src": "3695:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 506,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 510,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 508,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "3711:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 512,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "3743:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "3750:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "3754:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "3733:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 505,
												"id": 518,
												"nodeType": "Return",
												"src": "3770:11:4"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "3628:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "3640:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:4"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "3679:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:4"
									},
									"scope": 910,
									"src": "3610:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										965
									],
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3935:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 530,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "3952:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 532,
														"indexExpression": {
															"id": 531,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "3964:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 534,
													"indexExpression": {
														"id": 533,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "3971:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 529,
												"id": 535,
												"nodeType": "Return",
												"src": "3945:34:4"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3865:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3880:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:4"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:4"
									},
									"scope": 910,
									"src": "3846:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										975
									],
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "4372:107:4",
										"statements": [
											{
												"assignments": [
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "4382:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 547,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 551,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 549,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "4398:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 553,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "4429:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "4436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4445:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 552,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															801,
															861
														],
														"referencedDeclaration": 801,
														"src": "4420:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 546,
												"id": 559,
												"nodeType": "Return",
												"src": "4461:11:4"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "4310:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "4327:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:4"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "4366:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:4"
									},
									"scope": 910,
									"src": "4293:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										987
									],
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "5132:151:4",
										"statements": [
											{
												"assignments": [
													574
												],
												"declarations": [
													{
														"constant": false,
														"id": 574,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 592,
														"src": "5142:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 573,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 577,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 575,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "5160:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 579,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5198:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 580,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "5204:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 581,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "5213:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 578,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "5182:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 585,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5239:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 586,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "5245:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 587,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "5249:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 584,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "5229:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 572,
												"id": 591,
												"nodeType": "Return",
												"src": "5265:11:4"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "5061:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "5075:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "5087:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:4"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "5126:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 570,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:4"
									},
									"scope": 910,
									"src": "5039:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "5725:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 603,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "5739:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 604,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 617,
												"nodeType": "IfStatement",
												"src": "5735:86:4",
												"trueBody": {
													"id": 616,
													"nodeType": "Block",
													"src": "5759:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 610,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 609,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "5780:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 615,
															"nodeType": "RevertStatement",
															"src": "5773:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 618,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "5834:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 619,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 632,
												"nodeType": "IfStatement",
												"src": "5830:86:4",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5852:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 625,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 624,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "5873:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 630,
															"nodeType": "RevertStatement",
															"src": "5866:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 634,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "5933:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "5939:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "5943:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 633,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "5925:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:4"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "5675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "5689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "5701:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:4"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:4"
									},
									"scope": 910,
									"src": "5656:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "6346:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 650,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "6360:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 651,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "6534:362:4",
													"statements": [
														{
															"assignments": [
																662
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 662,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 687,
																	"src": "6548:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 661,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 666,
															"initialValue": {
																"baseExpression": {
																	"id": 663,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "6570:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 665,
																"indexExpression": {
																	"id": 664,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "6580:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 667,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "6603:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 668,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "6617:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 677,
															"nodeType": "IfStatement",
															"src": "6599:115:4",
															"trueBody": {
																"id": 676,
																"nodeType": "Block",
																"src": "6624:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 671,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 643,
																					"src": "6674:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 672,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 662,
																					"src": "6680:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 673,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 647,
																					"src": "6693:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 670,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 205,
																				"src": "6649:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 675,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:4"
																	}
																]
															}
														},
														{
															"id": 686,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 678,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 418,
																				"src": "6834:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 680,
																			"indexExpression": {
																				"id": 679,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 643,
																				"src": "6844:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 681,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "6852:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 682,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "6866:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 685,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:4"
																}
															]
														}
													]
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "6356:540:4",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "6380:148:4",
													"statements": [
														{
															"expression": {
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 656,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "6496:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 657,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "6512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 659,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "6910:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 708,
													"nodeType": "Block",
													"src": "7125:206:4",
													"statements": [
														{
															"id": 707,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 701,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 418,
																				"src": "7284:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 703,
																			"indexExpression": {
																				"id": 702,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 645,
																				"src": "7294:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 704,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 647,
																			"src": "7301:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 706,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:4"
																}
															]
														}
													]
												},
												"id": 709,
												"nodeType": "IfStatement",
												"src": "6906:425:4",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "6928:191:4",
													"statements": [
														{
															"id": 699,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 695,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 426,
																			"src": "7073:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 696,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 647,
																			"src": "7089:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 698,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 711,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "7355:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "7361:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 713,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "7365:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 710,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "7346:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "EmitStatement",
												"src": "7341:30:4"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "6288:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "6302:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "6314:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:4"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:4"
									},
									"scope": 910,
									"src": "6271:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "7777:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 725,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "7791:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 726,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 739,
												"nodeType": "IfStatement",
												"src": "7787:91:4",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "7814:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 732,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 731,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "7835:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 737,
															"nodeType": "RevertStatement",
															"src": "7828:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 741,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 745,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "7907:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 746,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "7916:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 740,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "7887:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:4"
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "7736:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "7753:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:4"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:4"
									},
									"scope": 910,
									"src": "7721:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "8303:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "8317:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 759,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 772,
												"nodeType": "IfStatement",
												"src": "8313:89:4",
												"trueBody": {
													"id": 771,
													"nodeType": "Block",
													"src": "8340:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 767,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 765,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 764,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "8361:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 770,
															"nodeType": "RevertStatement",
															"src": "8354:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 774,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "8419:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 775,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "8440:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 773,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "8411:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:4"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "8262:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "8279:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:4"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:4"
									},
									"scope": 910,
									"src": "8247:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "9063:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 794,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "9082:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 795,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "9089:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 796,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "9098:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 793,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															801,
															861
														],
														"referencedDeclaration": 861,
														"src": "9073:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:4"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "9007:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "9022:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "9039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:4"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:4"
									},
									"scope": 910,
									"src": "8989:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "10047:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "10061:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 814,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 827,
												"nodeType": "IfStatement",
												"src": "10057:89:4",
												"trueBody": {
													"id": 826,
													"nodeType": "Block",
													"src": "10082:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 820,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 819,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "10103:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 825,
															"nodeType": "RevertStatement",
															"src": "10096:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 828,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "10159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 829,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 842,
												"nodeType": "IfStatement",
												"src": "10155:90:4",
												"trueBody": {
													"id": 841,
													"nodeType": "Block",
													"src": "10182:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 835,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 834,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "10203:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 840,
															"nodeType": "RevertStatement",
															"src": "10196:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 843,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "10254:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 846,
															"indexExpression": {
																"id": 844,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "10266:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 847,
														"indexExpression": {
															"id": 845,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "10273:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 848,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "10284:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:4"
											},
											{
												"condition": {
													"id": 851,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 810,
													"src": "10303:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "10299:76:4",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "10314:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 853,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "10342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 854,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "10349:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 855,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "10358:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 852,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "10333:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 857,
															"nodeType": "EmitStatement",
															"src": "10328:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "9967:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "9999:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "10014:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 809,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:4"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:4"
									},
									"scope": 910,
									"src": "9949:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "10752:388:4",
										"statements": [
											{
												"assignments": [
													872
												],
												"declarations": [
													{
														"constant": false,
														"id": 872,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 908,
														"src": "10762:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 871,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 877,
												"initialValue": {
													"arguments": [
														{
															"id": 874,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "10799:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "10806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 873,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "10789:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "10828:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 880,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 879,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 907,
												"nodeType": "IfStatement",
												"src": "10824:310:4",
												"trueBody": {
													"id": 906,
													"nodeType": "Block",
													"src": "10867:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 885,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 872,
																	"src": "10885:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 886,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "10904:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 895,
															"nodeType": "IfStatement",
															"src": "10881:130:4",
															"trueBody": {
																"id": 894,
																"nodeType": "Block",
																"src": "10911:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 889,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 866,
																					"src": "10963:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 890,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 872,
																					"src": "10972:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 891,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 868,
																					"src": "10990:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 888,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "10936:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 893,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:4"
																	}
																]
															}
														},
														{
															"id": 905,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 897,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 864,
																				"src": "11061:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 898,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 866,
																				"src": "11068:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 899,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 872,
																					"src": "11077:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 900,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 868,
																					"src": "11096:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 896,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				801,
																				861
																			],
																			"referencedDeclaration": 861,
																			"src": "11052:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 904,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "10688:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "10703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "10720:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:4"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:4"
									},
									"scope": 910,
									"src": "10663:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 911,
							"src": "1401:9741:4",
							"usedErrors": [
								205,
								210,
								215,
								224,
								229,
								234
							],
							"usedEvents": [
								922,
								931
							]
						}
					],
					"src": "105:11038:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							988
						]
					},
					"id": 989,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 912,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 913,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 988,
							"linearizedBaseContracts": [
								988
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 922,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 931,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 988,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 945,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 988,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 952,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 988,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 965,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 988,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 972,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 988,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 987,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 984,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 988,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 989,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								922,
								931
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							988
						],
						"IERC20Metadata": [
							1014
						]
					},
					"id": 1015,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 990,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 992,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 989,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 991,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 988,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 994,
										"name": "IERC20",
										"nameLocations": [
											"305:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 988,
										"src": "305:6:6"
									},
									"id": 995,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 993,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1014,
							"linearizedBaseContracts": [
								1014,
								988
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:6"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "416:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:6"
									},
									"scope": 1014,
									"src": "377:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:6"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "539:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1004,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:6"
									},
									"scope": 1014,
									"src": "498:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1013,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:6"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "673:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1010,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:6"
									},
									"scope": 1014,
									"src": "630:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1015,
							"src": "277:405:6",
							"usedErrors": [],
							"usedEvents": [
								922,
								931
							]
						}
					],
					"src": "125:558:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1044
						]
					},
					"id": 1045,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1016,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1017,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1044,
							"linearizedBaseContracts": [
								1044
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1022,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1024,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1044,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1031,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1030,
												"id": 1033,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1044,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1039,
												"id": 1041,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1044,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1045,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1356
						]
					},
					"id": 1357,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1046,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1047,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:8",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1356,
							"linearizedBaseContracts": [
								1356
							],
							"name": "SafeMath",
							"nameLocation": "490:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "717:140:8",
										"statements": [
											{
												"id": 1077,
												"nodeType": "UncheckedBlock",
												"src": "727:124:8",
												"statements": [
													{
														"assignments": [
															1060
														],
														"declarations": [
															{
																"constant": false,
																"id": 1060,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1077,
																"src": "751:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1059,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1064,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1061,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "763:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1062,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "767:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1065,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "786:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1066,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "790:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1072,
														"nodeType": "IfStatement",
														"src": "782:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1070,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1058,
															"id": 1071,
															"nodeType": "Return",
															"src": "793:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1074,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "838:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1075,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1058,
														"id": 1076,
														"nodeType": "Return",
														"src": "824:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "657:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "668:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:8"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "702:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1054,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "708:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:8"
									},
									"scope": 1356,
									"src": "641:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "1078:113:8",
										"statements": [
											{
												"id": 1105,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1091,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "1116:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1092,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "1120:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1098,
														"nodeType": "IfStatement",
														"src": "1112:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1096,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1090,
															"id": 1097,
															"nodeType": "Return",
															"src": "1123:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1100,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "1168:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1101,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "1172:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1103,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1090,
														"id": 1104,
														"nodeType": "Return",
														"src": "1154:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1018:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1029:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:8"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1063:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1086,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "1069:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:8"
									},
									"scope": 1356,
									"src": "1002:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "1415:417:8",
										"statements": [
											{
												"id": 1147,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1119,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "1683:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1126,
														"nodeType": "IfStatement",
														"src": "1679:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1124,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1118,
															"id": 1125,
															"nodeType": "Return",
															"src": "1691:16:8"
														}
													},
													{
														"assignments": [
															1128
														],
														"declarations": [
															{
																"constant": false,
																"id": 1128,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1147,
																"src": "1721:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1127,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1132,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1129,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "1733:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1130,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "1737:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1133,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1128,
																	"src": "1756:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1134,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "1760:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1136,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "1765:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1142,
														"nodeType": "IfStatement",
														"src": "1752:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1140,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1118,
															"id": 1141,
															"nodeType": "Return",
															"src": "1768:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1144,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1128,
																	"src": "1813:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1145,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1118,
														"id": 1146,
														"nodeType": "Return",
														"src": "1799:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1355:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1366:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:8"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1400:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1114,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1406:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:8"
									},
									"scope": 1356,
									"src": "1339:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "2057:114:8",
										"statements": [
											{
												"id": 1175,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1161,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "2095:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1168,
														"nodeType": "IfStatement",
														"src": "2091:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1166,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1160,
															"id": 1167,
															"nodeType": "Return",
															"src": "2103:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1170,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "2148:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1171,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "2152:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1173,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1160,
														"id": 1174,
														"nodeType": "Return",
														"src": "2134:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "1997:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2008:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:8"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2042:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2048:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:8"
									},
									"scope": 1356,
									"src": "1981:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "2406:114:8",
										"statements": [
											{
												"id": 1203,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1189,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "2444:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1196,
														"nodeType": "IfStatement",
														"src": "2440:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1194,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1188,
															"id": 1195,
															"nodeType": "Return",
															"src": "2452:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1198,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "2497:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1199,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "2501:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1201,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1188,
														"id": 1202,
														"nodeType": "Return",
														"src": "2483:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2346:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2357:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:8"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2391:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "2397:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:8"
									},
									"scope": 1356,
									"src": "2330:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "2822:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "2839:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "2843:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1214,
												"id": 1218,
												"nodeType": "Return",
												"src": "2832:12:8"
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "2768:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "2779:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:8"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "2813:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:8"
									},
									"scope": 1356,
									"src": "2755:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "3189:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "3206:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "3210:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1229,
												"id": 1233,
												"nodeType": "Return",
												"src": "3199:12:8"
											}
										]
									},
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3135:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3146:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:8"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3180:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:8"
									},
									"scope": 1356,
									"src": "3122:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "3532:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "3549:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1246,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "3553:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1244,
												"id": 1248,
												"nodeType": "Return",
												"src": "3542:12:8"
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "3478:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "3489:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:8"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "3523:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:8"
									},
									"scope": 1356,
									"src": "3465:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "3917:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1260,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "3934:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1261,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "3938:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1259,
												"id": 1263,
												"nodeType": "Return",
												"src": "3927:12:8"
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "3863:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "3874:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:8"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "3908:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:8"
									},
									"scope": 1356,
									"src": "3850:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "4466:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1275,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "4483:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1276,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "4487:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1274,
												"id": 1278,
												"nodeType": "Return",
												"src": "4476:12:8"
											}
										]
									},
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "4412:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "4423:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:8"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "4457:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:8"
									},
									"scope": 1356,
									"src": "4399:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "5054:106:8",
										"statements": [
											{
												"id": 1303,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1293,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "5096:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1294,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "5101:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1296,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "5104:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1292,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1298,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1299,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "5138:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1300,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "5142:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1291,
														"id": 1302,
														"nodeType": "Return",
														"src": "5131:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4972:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4983:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4994:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1286,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:8"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "5045:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:8"
									},
									"scope": 1356,
									"src": "4959:201:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "5739:105:8",
										"statements": [
											{
												"id": 1328,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1318,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "5781:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1321,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1312,
																	"src": "5788:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1317,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1323,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1324,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "5822:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1325,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "5826:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1316,
														"id": 1327,
														"nodeType": "Return",
														"src": "5815:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5657:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5668:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5679:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:8"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5730:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:8"
									},
									"scope": 1356,
									"src": "5644:200:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "6585:105:8",
										"statements": [
											{
												"id": 1353,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1343,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "6627:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1346,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "6634:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1342,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1348,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1349,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "6668:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1350,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "6672:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1341,
														"id": 1352,
														"nodeType": "Return",
														"src": "6661:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "6503:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "6514:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "6525:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:8"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "6576:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:8"
									},
									"scope": 1356,
									"src": "6490:200:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1357,
							"src": "482:6210:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:8"
				},
				"id": 8
			},
			"contracts/bettoken.sol": {
				"ast": {
					"absolutePath": "contracts/bettoken.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Bettoken": [
							2215
						],
						"Context": [
							1044
						],
						"ERC20": [
							910
						],
						"IERC20": [
							988
						],
						"IERC20Errors": [
							235
						],
						"IERC20Metadata": [
							1014
						],
						"Ownable": [
							193
						],
						"ReentrancyGuard": [
							395
						],
						"SafeMath": [
							1356
						]
					},
					"id": 2216,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1358,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2216,
							"sourceUnit": 911,
							"src": "59:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1360,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2216,
							"sourceUnit": 194,
							"src": "115:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1361,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2216,
							"sourceUnit": 396,
							"src": "168:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1362,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2216,
							"sourceUnit": 1357,
							"src": "231:57:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 1363,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2216,
							"sourceUnit": 46,
							"src": "289:76:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1364,
										"name": "ERC20",
										"nameLocations": [
											"388:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 910,
										"src": "388:5:9"
									},
									"id": 1365,
									"nodeType": "InheritanceSpecifier",
									"src": "388:5:9"
								},
								{
									"baseName": {
										"id": 1366,
										"name": "Ownable",
										"nameLocations": [
											"395:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 193,
										"src": "395:7:9"
									},
									"id": 1367,
									"nodeType": "InheritanceSpecifier",
									"src": "395:7:9"
								},
								{
									"baseName": {
										"id": 1368,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"404:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 395,
										"src": "404:15:9"
									},
									"id": 1369,
									"nodeType": "InheritanceSpecifier",
									"src": "404:15:9"
								}
							],
							"canonicalName": "Bettoken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2215,
							"linearizedBaseContracts": [
								2215,
								395,
								193,
								910,
								235,
								1014,
								988,
								1044
							],
							"name": "Bettoken",
							"nameLocation": "376:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1372,
									"libraryName": {
										"id": 1370,
										"name": "SafeMath",
										"nameLocations": [
											"432:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1356,
										"src": "432:8:9"
									},
									"nodeType": "UsingForDirective",
									"src": "426:27:9",
									"typeName": {
										"id": 1371,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "445:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 1379,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "483:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "459:61:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1373,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "459:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000000000"
										},
										"id": 1378,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3230305f3030305f303030",
											"id": 1374,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "498:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_200000000_by_1",
												"typeString": "int_const 200000000"
											},
											"value": "200_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1377,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1375,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "512:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1376,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "518:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "512:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "498:22:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ba20cf4c",
									"id": 1386,
									"mutability": "mutable",
									"name": "privateSaleTarget",
									"nameLocation": "609:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "594:55:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1380,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "594:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 1385,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f303030",
											"id": 1381,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "629:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1384,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1382,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "641:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1383,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "647:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "641:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "629:20:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c552e04b",
									"id": 1393,
									"mutability": "mutable",
									"name": "privateSaleTokens",
									"nameLocation": "694:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "679:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1387,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "679:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_38835764000000000000000000_by_1",
											"typeString": "int_const 38835764000000000000000000"
										},
										"id": 1392,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "33385f3833355f373634",
											"id": 1388,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "714:10:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_38835764_by_1",
												"typeString": "int_const 38835764"
											},
											"value": "38_835_764"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1391,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1389,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "727:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1390,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "733:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "727:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "714:21:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_38835764000000000000000000_by_1",
											"typeString": "int_const 38835764000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b0e68630",
									"id": 1400,
									"mutability": "mutable",
									"name": "privateSaleStartPrice",
									"nameLocation": "775:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "760:55:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1394,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "760:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										},
										"id": 1399,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e303031",
											"id": 1395,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "799:5:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1000",
												"typeString": "rational_const 1 / 1000"
											},
											"value": "0.001"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1398,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1396,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "807:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1397,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "813:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "807:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "799:16:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bda95633",
									"id": 1407,
									"mutability": "mutable",
									"name": "privateSaleEndPrice",
									"nameLocation": "858:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "843:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1401,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "843:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										},
										"id": 1406,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e30353035",
											"id": 1402,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "880:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_101_by_2000",
												"typeString": "rational_const 101 / 2000"
											},
											"value": "0.0505"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1405,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1403,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "889:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1404,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "895:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "889:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "880:17:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5fb3b944",
									"id": 1410,
									"mutability": "mutable",
									"name": "privateSaleSoldTokens",
									"nameLocation": "941:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "926:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1408,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "926:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1409,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "965:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6bd92b9",
									"id": 1417,
									"mutability": "mutable",
									"name": "preSaleTarget",
									"nameLocation": "1014:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "999:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1411,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "999:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_19000000000000000000000000_by_1",
											"typeString": "int_const 19000000000000000000000000"
										},
										"id": 1416,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31395f3030305f303030",
											"id": 1412,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1030:10:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_19000000_by_1",
												"typeString": "int_const 19000000"
											},
											"value": "19_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1415,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1413,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1043:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1414,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1049:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1043:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1030:21:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_19000000000000000000000000_by_1",
											"typeString": "int_const 19000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fe83bb8",
									"id": 1424,
									"mutability": "mutable",
									"name": "preSaleTokens",
									"nameLocation": "1097:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1082:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1418,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1082:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_161164236000000000000000000_by_1",
											"typeString": "int_const 161164236000000000000000000"
										},
										"id": 1423,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3136315f3136345f323336",
											"id": 1419,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1113:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_161164236_by_1",
												"typeString": "int_const 161164236"
											},
											"value": "161_164_236"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1422,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1420,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1127:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1421,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1133:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1127:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1113:22:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_161164236000000000000000000_by_1",
											"typeString": "int_const 161164236000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "920168b3",
									"id": 1431,
									"mutability": "mutable",
									"name": "preSaleStartPrice",
									"nameLocation": "1176:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1161:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1425,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1161:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										},
										"id": 1430,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e30353035",
											"id": 1426,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1196:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_101_by_2000",
												"typeString": "rational_const 101 / 2000"
											},
											"value": "0.0505"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1429,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1427,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1205:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1428,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1211:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1205:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1196:17:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f7713ff",
									"id": 1438,
									"mutability": "mutable",
									"name": "preSaleEndPrice",
									"nameLocation": "1257:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1242:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1432,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1242:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000_by_1",
											"typeString": "int_const 100000000000000000"
										},
										"id": 1437,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e31",
											"id": 1433,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1275:3:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_10",
												"typeString": "rational_const 1 / 10"
											},
											"value": "0.1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1436,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1434,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1281:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1435,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1287:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1281:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1275:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000_by_1",
											"typeString": "int_const 100000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b68ed11f",
									"id": 1441,
									"mutability": "mutable",
									"name": "preSaleSoldTokens",
									"nameLocation": "1330:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1315:36:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1439,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1315:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1440,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1350:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Bettoken.SaleStage",
									"id": 1445,
									"members": [
										{
											"id": 1442,
											"name": "NONE",
											"nameLocation": "1394:4:9",
											"nodeType": "EnumValue",
											"src": "1394:4:9"
										},
										{
											"id": 1443,
											"name": "PRIVATE",
											"nameLocation": "1400:7:9",
											"nodeType": "EnumValue",
											"src": "1400:7:9"
										},
										{
											"id": 1444,
											"name": "PRESALE",
											"nameLocation": "1409:7:9",
											"nodeType": "EnumValue",
											"src": "1409:7:9"
										}
									],
									"name": "SaleStage",
									"nameLocation": "1382:9:9",
									"nodeType": "EnumDefinition",
									"src": "1377:41:9"
								},
								{
									"constant": false,
									"functionSelector": "c040e6b8",
									"id": 1450,
									"mutability": "mutable",
									"name": "stage",
									"nameLocation": "1440:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1423:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_SaleStage_$1445",
										"typeString": "enum Bettoken.SaleStage"
									},
									"typeName": {
										"id": 1447,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1446,
											"name": "SaleStage",
											"nameLocations": [
												"1423:9:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1445,
											"src": "1423:9:9"
										},
										"referencedDeclaration": 1445,
										"src": "1423:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_SaleStage_$1445",
											"typeString": "enum Bettoken.SaleStage"
										}
									},
									"value": {
										"expression": {
											"id": 1448,
											"name": "SaleStage",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1445,
											"src": "1448:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_SaleStage_$1445_$",
												"typeString": "type(enum Bettoken.SaleStage)"
											}
										},
										"id": 1449,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberLocation": "1458:4:9",
										"memberName": "NONE",
										"nodeType": "MemberAccess",
										"referencedDeclaration": 1442,
										"src": "1448:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_SaleStage_$1445",
											"typeString": "enum Bettoken.SaleStage"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "192399d1",
									"id": 1454,
									"mutability": "mutable",
									"name": "vestingBalance",
									"nameLocation": "1530:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1495:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1453,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1451,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1503:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1495:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1452,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1514:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2b1cbc38",
									"id": 1458,
									"mutability": "mutable",
									"name": "vestingReleaseTime",
									"nameLocation": "1585:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1550:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1457,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1455,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1558:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1550:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1456,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1569:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1514617e",
									"id": 1461,
									"mutability": "mutable",
									"name": "vestingDuration",
									"nameLocation": "1624:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1609:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1609:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 1460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1642:8:9",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15552000_by_1",
											"typeString": "int_const 15552000"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "40f02ab6",
									"id": 1464,
									"mutability": "mutable",
									"name": "stakeDuration",
									"nameLocation": "1679:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1664:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1462,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1664:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 1463,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1695:8:9",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "10c7f0b9",
									"id": 1468,
									"mutability": "mutable",
									"name": "priceFeeds",
									"nameLocation": "1751:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1720:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$45_$dyn_storage",
										"typeString": "contract AggregatorV3Interface[]"
									},
									"typeName": {
										"baseType": {
											"id": 1466,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1465,
												"name": "AggregatorV3Interface",
												"nameLocations": [
													"1720:21:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "1720:21:9"
											},
											"referencedDeclaration": 45,
											"src": "1720:21:9",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
												"typeString": "contract AggregatorV3Interface"
											}
										},
										"id": 1467,
										"nodeType": "ArrayTypeName",
										"src": "1720:23:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$45_$dyn_storage_ptr",
											"typeString": "contract AggregatorV3Interface[]"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8fa81bb0702332ea2a0aee44bb9e4d359cf4a2c5a820dd59d9129369bdbca73f",
									"id": 1474,
									"name": "PrivateSale",
									"nameLocation": "1838:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1866:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "1850:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1850:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1881:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "1873:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1849:39:9"
									},
									"src": "1832:57:9"
								},
								{
									"anonymous": false,
									"eventSelector": "550498dc565cc74203b9d14cba907c9f60ceefe26e82b37df98f6cb98529cf19",
									"id": 1480,
									"name": "PreSale",
									"nameLocation": "1900:7:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1924:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "1908:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1939:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "1931:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1931:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:39:9"
									},
									"src": "1894:53:9"
								},
								{
									"anonymous": false,
									"eventSelector": "dd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc",
									"id": 1488,
									"name": "TokensStaked",
									"nameLocation": "1958:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1987:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1971:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2003:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1995:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "2019:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "2011:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1970:61:9"
									},
									"src": "1952:80:9"
								},
								{
									"anonymous": false,
									"eventSelector": "6bc5063c7239b75c8bf325a2a2238f726fada322163996bb6c93d5594fb119f0",
									"id": 1494,
									"name": "VestedTokensReleased",
									"nameLocation": "2043:20:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2080:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "2064:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2064:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2101:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "2093:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2063:45:9"
									},
									"src": "2037:72:9"
								},
								{
									"anonymous": false,
									"eventSelector": "273467821f33675618854603ef917ebcec8a1a39f95c43d5564ed1aefab870b3",
									"id": 1499,
									"name": "StageChanged",
									"nameLocation": "2120:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"indexed": false,
												"mutability": "mutable",
												"name": "newStage",
												"nameLocation": "2143:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2133:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_SaleStage_$1445",
													"typeString": "enum Bettoken.SaleStage"
												},
												"typeName": {
													"id": 1496,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1495,
														"name": "SaleStage",
														"nameLocations": [
															"2133:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1445,
														"src": "2133:9:9"
													},
													"referencedDeclaration": 1445,
													"src": "2133:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SaleStage_$1445",
														"typeString": "enum Bettoken.SaleStage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:20:9"
									},
									"src": "2114:39:9"
								},
								{
									"anonymous": false,
									"eventSelector": "eaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d",
									"id": 1505,
									"name": "FundsWithdrawn",
									"nameLocation": "2164:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2195:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "2179:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2210:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "2202:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2178:39:9"
									},
									"src": "2158:60:9"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "2312:188:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1522,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2336:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Bettoken_$2215",
																		"typeString": "contract Bettoken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Bettoken_$2215",
																		"typeString": "contract Bettoken"
																	}
																],
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2328:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1520,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2328:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2328:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1524,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "2343:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1519,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "2322:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2322:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "2322:34:9"
											},
											{
												"body": {
													"id": 1548,
													"nodeType": "Block",
													"src": "2415:79:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1542,
																					"name": "_priceFeeds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1508,
																					"src": "2467:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1544,
																				"indexExpression": {
																					"id": 1543,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1528,
																					"src": "2479:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2467:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1541,
																			"name": "AggregatorV3Interface",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 45,
																			"src": "2445:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																				"typeString": "type(contract AggregatorV3Interface)"
																			}
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2445:37:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	],
																	"expression": {
																		"id": 1538,
																		"name": "priceFeeds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1468,
																		"src": "2429:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$45_$dyn_storage",
																			"typeString": "contract AggregatorV3Interface[] storage ref"
																		}
																	},
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2440:4:9",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2429:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_AggregatorV3Interface_$45_$dyn_storage_ptr_$_t_contract$_AggregatorV3Interface_$45_$returns$__$attached_to$_t_array$_t_contract$_AggregatorV3Interface_$45_$dyn_storage_ptr_$",
																		"typeString": "function (contract AggregatorV3Interface[] storage pointer,contract AggregatorV3Interface)"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2429:54:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1547,
															"nodeType": "ExpressionStatement",
															"src": "2429:54:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1531,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "2386:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1532,
															"name": "_priceFeeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "2390:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2402:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2390:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2386:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1549,
												"initializationExpression": {
													"assignments": [
														1528
													],
													"declarations": [
														{
															"constant": false,
															"id": 1528,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2379:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1549,
															"src": "2371:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1527,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2371:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1530,
													"initialValue": {
														"hexValue": "30",
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2383:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2371:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2410:3:9",
														"subExpression": {
															"id": 1535,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "2410:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1537,
													"nodeType": "ExpressionStatement",
													"src": "2410:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2366:128:9"
											}
										]
									},
									"id": 1551,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "426574746f6b656e",
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2272:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_50252e7dcf80edd4c485aa3c52d8ff1d489c68f4538c7d0c90fd6f79a8bdf23d",
														"typeString": "literal_string \"Bettoken\""
													},
													"value": "Bettoken"
												},
												{
													"hexValue": "42455454",
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2284:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ec659342723f951f23b427400907d3b03293f1ce4abc0899fe27c23f6997c8e2",
														"typeString": "literal_string \"BETT\""
													},
													"value": "BETT"
												}
											],
											"id": 1513,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1510,
												"name": "ERC20",
												"nameLocations": [
													"2266:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 910,
												"src": "2266:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2266:25:9"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1515,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2300:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2304:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2300:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1517,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1514,
												"name": "Ownable",
												"nameLocations": [
													"2292:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 193,
												"src": "2292:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2292:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "_priceFeeds",
												"nameLocation": "2253:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "2236:28:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1506,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2236:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1507,
													"nodeType": "ArrayTypeName",
													"src": "2236:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2235:30:9"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2312:0:9"
									},
									"scope": 2215,
									"src": "2224:276:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "2620:457:9",
										"statements": [
											{
												"assignments": [
													1557
												],
												"declarations": [
													{
														"constant": false,
														"id": 1557,
														"mutability": "mutable",
														"name": "totalPrice",
														"nameLocation": "2638:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1609,
														"src": "2630:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1556,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2630:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1559,
												"initialValue": {
													"hexValue": "30",
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2651:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2630:22:9"
											},
											{
												"body": {
													"id": 1596,
													"nodeType": "Block",
													"src": "2710:278:9",
													"statements": [
														{
															"assignments": [
																null,
																1572,
																null,
																null,
																null
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 1572,
																	"mutability": "mutable",
																	"name": "price",
																	"nameLocation": "2764:5:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1596,
																	"src": "2760:9:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 1571,
																		"name": "int",
																		"nodeType": "ElementaryTypeName",
																		"src": "2760:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null
															],
															"id": 1578,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"baseExpression": {
																			"id": 1573,
																			"name": "priceFeeds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "2823:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$45_$dyn_storage",
																				"typeString": "contract AggregatorV3Interface[] storage ref"
																			}
																		},
																		"id": 1575,
																		"indexExpression": {
																			"id": 1574,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1561,
																			"src": "2834:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2823:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	},
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2837:15:9",
																	"memberName": "latestRoundData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "2823:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																		"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
																	}
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2823:31:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																	"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2724:130:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1580,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "2876:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2884:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2876:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c696420707269636520646174612066726f6d206f7261636c65",
																		"id": 1583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2887:32:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_17f20696f0fa86018195f469014cbcb189920391ba0d2a0304f597cf79bbbbe7",
																			"typeString": "literal_string \"Invalid price data from oracle\""
																		},
																		"value": "Invalid price data from oracle"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_17f20696f0fa86018195f469014cbcb189920391ba0d2a0304f597cf79bbbbe7",
																			"typeString": "literal_string \"Invalid price data from oracle\""
																		}
																	],
																	"id": 1579,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2868:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2868:52:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1585,
															"nodeType": "ExpressionStatement",
															"src": "2868:52:9"
														},
														{
															"expression": {
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1586,
																	"name": "totalPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1557,
																	"src": "2934:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1591,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "2970:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 1590,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2962:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1589,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2962:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2962:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1587,
																			"name": "totalPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "2947:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2958:3:9",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1220,
																		"src": "2947:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2947:30:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2934:43:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1595,
															"nodeType": "ExpressionStatement",
															"src": "2934:43:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1564,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "2682:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1565,
															"name": "priceFeeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "2686:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$45_$dyn_storage",
																"typeString": "contract AggregatorV3Interface[] storage ref"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2697:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2686:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2682:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1597,
												"initializationExpression": {
													"assignments": [
														1561
													],
													"declarations": [
														{
															"constant": false,
															"id": 1561,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2675:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1597,
															"src": "2667:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1560,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2667:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1563,
													"initialValue": {
														"hexValue": "30",
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2679:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2667:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2705:3:9",
														"subExpression": {
															"id": 1568,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "2705:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1570,
													"nodeType": "ExpressionStatement",
													"src": "2705:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2662:326:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_rational_10000000000_by_1",
																"typeString": "int_const 10000000000"
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3042:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3130",
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3048:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "3042:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000_by_1",
																"typeString": "int_const 10000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000000000_by_1",
																"typeString": "int_const 10000000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1600,
																		"name": "priceFeeds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1468,
																		"src": "3019:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_AggregatorV3Interface_$45_$dyn_storage",
																			"typeString": "contract AggregatorV3Interface[] storage ref"
																		}
																	},
																	"id": 1601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3030:6:9",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3019:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1598,
																	"name": "totalPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1557,
																	"src": "3004:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3015:3:9",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1265,
																"src": "3004:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3004:33:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3038:3:9",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1250,
														"src": "3004:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3004:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1555,
												"id": 1608,
												"nodeType": "Return",
												"src": "2997:54:9"
											}
										]
									},
									"functionSelector": "8e15f473",
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestPrice",
									"nameLocation": "2573:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2587:2:9"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2611:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2611:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2610:9:9"
									},
									"scope": 2215,
									"src": "2564:513:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1646,
										"nodeType": "Block",
										"src": "3130:360:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_SaleStage_$1445",
																"typeString": "enum Bettoken.SaleStage"
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1616,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "3148:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1445",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1617,
																	"name": "SaleStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "3157:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_SaleStage_$1445_$",
																		"typeString": "type(enum Bettoken.SaleStage)"
																	}
																},
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3167:4:9",
																"memberName": "NONE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1442,
																"src": "3157:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1445",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"src": "3148:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c652063616e206f6e6c792073746172742066726f6d204e4f4e452073746167652e",
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3173:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_85a92b7d2f3c8949309a7dee9f4ca63adcd1660cd0a768c248f1d76c264451ae",
																"typeString": "literal_string \"Private Sale can only start from NONE stage.\""
															},
															"value": "Private Sale can only start from NONE stage."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_85a92b7d2f3c8949309a7dee9f4ca63adcd1660cd0a768c248f1d76c264451ae",
																"typeString": "literal_string \"Private Sale can only start from NONE stage.\""
															}
														],
														"id": 1615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3140:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3140:80:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "3140:80:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1624,
																"name": "privateSaleSoldTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "3238:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3263:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3238:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c6520746f6b656e732073686f756c6420626520756e736f6c642061742073746172742e",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3266:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d8e3511bc2ef1eacf227714a4be566bdacade7e0259e47bca8127d56e48d6281",
																"typeString": "literal_string \"Private Sale tokens should be unsold at start.\""
															},
															"value": "Private Sale tokens should be unsold at start."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d8e3511bc2ef1eacf227714a4be566bdacade7e0259e47bca8127d56e48d6281",
																"typeString": "literal_string \"Private Sale tokens should be unsold at start.\""
															}
														],
														"id": 1623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3230:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3230:85:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "3230:85:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1631,
																"name": "preSaleSoldTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1441,
																"src": "3333:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3354:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3333:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072652d53616c652073686f756c64206e6f7420686176652073746172746564206265666f726520507269766174652053616c652e",
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3357:55:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b6838c7afcdde6199dc4da34991bafdb53e10c5b79115748c94bef6ed3648976",
																"typeString": "literal_string \"Pre-Sale should not have started before Private Sale.\""
															},
															"value": "Pre-Sale should not have started before Private Sale."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b6838c7afcdde6199dc4da34991bafdb53e10c5b79115748c94bef6ed3648976",
																"typeString": "literal_string \"Pre-Sale should not have started before Private Sale.\""
															}
														],
														"id": 1630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:88:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "3325:88:9"
											},
											{
												"expression": {
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1637,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "3424:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1445",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1638,
															"name": "SaleStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "3432:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SaleStage_$1445_$",
																"typeString": "type(enum Bettoken.SaleStage)"
															}
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3442:7:9",
														"memberName": "PRIVATE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1443,
														"src": "3432:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1445",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"src": "3424:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SaleStage_$1445",
														"typeString": "enum Bettoken.SaleStage"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "3424:25:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1643,
															"name": "stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "3477:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_SaleStage_$1445",
																"typeString": "enum Bettoken.SaleStage"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_SaleStage_$1445",
																"typeString": "enum Bettoken.SaleStage"
															}
														],
														"id": 1642,
														"name": "StageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "3464:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_enum$_SaleStage_$1445_$returns$__$",
															"typeString": "function (enum Bettoken.SaleStage)"
														}
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3464:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1645,
												"nodeType": "EmitStatement",
												"src": "3459:24:9"
											}
										]
									},
									"functionSelector": "338dbf59",
									"id": 1647,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1613,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1612,
												"name": "onlyOwner",
												"nameLocations": [
													"3120:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "3120:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3120:9:9"
										}
									],
									"name": "startPrivateSale",
									"nameLocation": "3092:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3108:2:9"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3130:0:9"
									},
									"scope": 2215,
									"src": "3083:407:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "3539:298:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_SaleStage_$1445",
																"typeString": "enum Bettoken.SaleStage"
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1653,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "3557:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1445",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1654,
																	"name": "SaleStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "3566:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_SaleStage_$1445_$",
																		"typeString": "type(enum Bettoken.SaleStage)"
																	}
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3576:7:9",
																"memberName": "PRIVATE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1443,
																"src": "3566:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1445",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"src": "3557:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072652d53616c652063616e206f6e6c7920737461727420616674657220507269766174652053616c652e",
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3585:45:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05043e7e6a7e43f546dc3edaeb19e4aba3d9787fc557c8eb5421e8352d209d3b",
																"typeString": "literal_string \"Pre-Sale can only start after Private Sale.\""
															},
															"value": "Pre-Sale can only start after Private Sale."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05043e7e6a7e43f546dc3edaeb19e4aba3d9787fc557c8eb5421e8352d209d3b",
																"typeString": "literal_string \"Pre-Sale can only start after Private Sale.\""
															}
														],
														"id": 1652,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3549:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3549:82:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "3549:82:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1661,
																"name": "privateSaleSoldTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "3649:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1662,
																"name": "privateSaleTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "3674:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3649:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c65206d75737420626520636f6d706c65746564206265666f7265207374617274696e67205072652d53616c652e",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3693:58:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2442b511367f0b2d1fcb1c2739922b9057f05346fc1b0da072e9b62ecd0f2126",
																"typeString": "literal_string \"Private Sale must be completed before starting Pre-Sale.\""
															},
															"value": "Private Sale must be completed before starting Pre-Sale."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2442b511367f0b2d1fcb1c2739922b9057f05346fc1b0da072e9b62ecd0f2126",
																"typeString": "literal_string \"Private Sale must be completed before starting Pre-Sale.\""
															}
														],
														"id": 1660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3641:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3641:111:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "3641:111:9"
											},
											{
												"expression": {
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1667,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "3771:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1445",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1668,
															"name": "SaleStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "3779:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SaleStage_$1445_$",
																"typeString": "type(enum Bettoken.SaleStage)"
															}
														},
														"id": 1669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3789:7:9",
														"memberName": "PRESALE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1444,
														"src": "3779:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1445",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"src": "3771:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SaleStage_$1445",
														"typeString": "enum Bettoken.SaleStage"
													}
												},
												"id": 1671,
												"nodeType": "ExpressionStatement",
												"src": "3771:25:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1673,
															"name": "stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "3824:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_SaleStage_$1445",
																"typeString": "enum Bettoken.SaleStage"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_SaleStage_$1445",
																"typeString": "enum Bettoken.SaleStage"
															}
														],
														"id": 1672,
														"name": "StageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "3811:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_enum$_SaleStage_$1445_$returns$__$",
															"typeString": "function (enum Bettoken.SaleStage)"
														}
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3811:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1675,
												"nodeType": "EmitStatement",
												"src": "3806:24:9"
											}
										]
									},
									"functionSelector": "55dd574c",
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1650,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1649,
												"name": "onlyOwner",
												"nameLocations": [
													"3529:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "3529:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3529:9:9"
										}
									],
									"name": "startPreSale",
									"nameLocation": "3505:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3517:2:9"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3539:0:9"
									},
									"scope": 2215,
									"src": "3496:341:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "3911:1478:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_SaleStage_$1445",
																"typeString": "enum Bettoken.SaleStage"
															},
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1685,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "3929:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1445",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 1686,
																	"name": "SaleStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "3938:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_SaleStage_$1445_$",
																		"typeString": "type(enum Bettoken.SaleStage)"
																	}
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3948:4:9",
																"memberName": "NONE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1442,
																"src": "3938:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1445",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"src": "3929:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2073616c65206973206163746976652e",
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3954:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f",
																"typeString": "literal_string \"No sale is active.\""
															},
															"value": "No sale is active."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f",
																"typeString": "literal_string \"No sale is active.\""
															}
														],
														"id": 1684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3921:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3921:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1691,
												"nodeType": "ExpressionStatement",
												"src": "3921:54:9"
											},
											{
												"assignments": [
													1693
												],
												"declarations": [
													{
														"constant": false,
														"id": 1693,
														"mutability": "mutable",
														"name": "latestPrice",
														"nameLocation": "3994:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1853,
														"src": "3986:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3986:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1696,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1694,
														"name": "getLatestPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "4008:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4008:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3986:38:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1698,
																"name": "latestPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1693,
																"src": "4042:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4056:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4042:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726963652066726f6d206f7261636c65",
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4059:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620",
																"typeString": "literal_string \"Invalid price from oracle\""
															},
															"value": "Invalid price from oracle"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620",
																"typeString": "literal_string \"Invalid price from oracle\""
															}
														],
														"id": 1697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4034:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4034:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "4034:53:9"
											},
											{
												"assignments": [
													1705
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "tokensToBuy",
														"nameLocation": "4106:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1853,
														"src": "4098:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4098:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1706,
												"nodeType": "VariableDeclarationStatement",
												"src": "4098:19:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_SaleStage_$1445",
														"typeString": "enum Bettoken.SaleStage"
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1707,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "4131:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1445",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1708,
															"name": "SaleStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "4140:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SaleStage_$1445_$",
																"typeString": "type(enum Bettoken.SaleStage)"
															}
														},
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4150:7:9",
														"memberName": "PRIVATE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1443,
														"src": "4140:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1445",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"src": "4131:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_SaleStage_$1445",
															"typeString": "enum Bettoken.SaleStage"
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1778,
															"name": "stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "4786:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_SaleStage_$1445",
																"typeString": "enum Bettoken.SaleStage"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1779,
																"name": "SaleStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "4795:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_SaleStage_$1445_$",
																	"typeString": "type(enum Bettoken.SaleStage)"
																}
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4805:7:9",
															"memberName": "PRESALE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1444,
															"src": "4795:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_SaleStage_$1445",
																"typeString": "enum Bettoken.SaleStage"
															}
														},
														"src": "4786:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1851,
													"nodeType": "IfStatement",
													"src": "4782:601:9",
													"trueBody": {
														"id": 1850,
														"nodeType": "Block",
														"src": "4814:569:9",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1783,
																				"name": "preSaleSoldTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1441,
																				"src": "4836:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1784,
																				"name": "preSaleTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1424,
																				"src": "4856:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4836:33:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "5072652d53616c6520736f6c64206f75742e",
																			"id": 1786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4871:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513",
																				"typeString": "literal_string \"Pre-Sale sold out.\""
																			},
																			"value": "Pre-Sale sold out."
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513",
																				"typeString": "literal_string \"Pre-Sale sold out.\""
																			}
																		],
																		"id": 1782,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "4828:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4828:64:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1788,
																"nodeType": "ExpressionStatement",
																"src": "4828:64:9"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1790,
																					"name": "usdAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1679,
																					"src": "4914:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_rational_100000000000000000000_by_1",
																						"typeString": "int_const 100000000000000000000"
																					},
																					"id": 1795,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "313030",
																						"id": 1791,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4927:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"id": 1794,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3130",
																							"id": 1792,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4933:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"hexValue": "3138",
																							"id": 1793,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4939:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18_by_1",
																								"typeString": "int_const 18"
																							},
																							"value": "18"
																						},
																						"src": "4933:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					},
																					"src": "4927:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000000000000000000_by_1",
																						"typeString": "int_const 100000000000000000000"
																					}
																				},
																				"src": "4914:27:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1797,
																					"name": "usdAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1679,
																					"src": "4945:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_rational_3000000000000000000000_by_1",
																						"typeString": "int_const 3000000000000000000000"
																					},
																					"id": 1802,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "335f303030",
																						"id": 1798,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4958:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3000_by_1",
																							"typeString": "int_const 3000"
																						},
																						"value": "3_000"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"id": 1801,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3130",
																							"id": 1799,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4966:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"hexValue": "3138",
																							"id": 1800,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4972:2:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18_by_1",
																								"typeString": "int_const 18"
																							},
																							"value": "18"
																						},
																						"src": "4966:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					},
																					"src": "4958:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3000000000000000000000_by_1",
																						"typeString": "int_const 3000000000000000000000"
																					}
																				},
																				"src": "4945:29:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "4914:60:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "507572636861736520616d6f756e74206f7574206f66206c696d6974732e",
																			"id": 1805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4976:32:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec",
																				"typeString": "literal_string \"Purchase amount out of limits.\""
																			},
																			"value": "Purchase amount out of limits."
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec",
																				"typeString": "literal_string \"Purchase amount out of limits.\""
																			}
																		],
																		"id": 1789,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "4906:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4906:103:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1807,
																"nodeType": "ExpressionStatement",
																"src": "4906:103:9"
															},
															{
																"expression": {
																	"id": 1818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1808,
																		"name": "tokensToBuy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "5023:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "31",
																						"id": 1815,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5091:7:9",
																						"subdenomination": "ether",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 1812,
																								"name": "latestPrice",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1693,
																								"src": "5074:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1810,
																								"name": "usdAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1679,
																								"src": "5060:9:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1811,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5070:3:9",
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1250,
																							"src": "5060:13:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1813,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5060:26:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1814,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5087:3:9",
																					"memberName": "div",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1265,
																					"src": "5060:30:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5060:39:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1809,
																			"name": "calculatePreSaleTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1982,
																			"src": "5037:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) view returns (uint256)"
																			}
																		},
																		"id": 1817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5037:63:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5023:77:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1819,
																"nodeType": "ExpressionStatement",
																"src": "5023:77:9"
															},
															{
																"expression": {
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1820,
																		"name": "preSaleSoldTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "5114:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1823,
																				"name": "tokensToBuy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1705,
																				"src": "5156:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1821,
																				"name": "preSaleSoldTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1441,
																				"src": "5134:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5152:3:9",
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1220,
																			"src": "5134:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5134:34:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5114:54:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1826,
																"nodeType": "ExpressionStatement",
																"src": "5114:54:9"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1828,
																				"name": "preSaleSoldTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1441,
																				"src": "5190:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 1829,
																				"name": "preSaleTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1424,
																				"src": "5211:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5190:34:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "45786365656473205072652d53616c6520746f6b656e206c696d69742e",
																			"id": 1831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5226:31:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67",
																				"typeString": "literal_string \"Exceeds Pre-Sale token limit.\""
																			},
																			"value": "Exceeds Pre-Sale token limit."
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67",
																				"typeString": "literal_string \"Exceeds Pre-Sale token limit.\""
																			}
																		],
																		"id": 1827,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "5182:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5182:76:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1833,
																"nodeType": "ExpressionStatement",
																"src": "5182:76:9"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1837,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "5290:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Bettoken_$2215",
																						"typeString": "contract Bettoken"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Bettoken_$2215",
																						"typeString": "contract Bettoken"
																					}
																				],
																				"id": 1836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5282:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1835,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5282:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5282:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"expression": {
																				"id": 1839,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5297:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5301:6:9",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5297:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1841,
																			"name": "tokensToBuy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "5309:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1834,
																		"name": "_transfer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "5272:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 1842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5272:49:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1843,
																"nodeType": "ExpressionStatement",
																"src": "5272:49:9"
															},
															{
																"eventCall": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1845,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5348:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5352:6:9",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5348:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1847,
																			"name": "tokensToBuy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "5360:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1844,
																		"name": "PreSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1480,
																		"src": "5340:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5340:32:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1849,
																"nodeType": "EmitStatement",
																"src": "5335:37:9"
															}
														]
													}
												},
												"id": 1852,
												"nodeType": "IfStatement",
												"src": "4127:1256:9",
												"trueBody": {
													"id": 1777,
													"nodeType": "Block",
													"src": "4159:617:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1712,
																			"name": "privateSaleSoldTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "4181:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1713,
																			"name": "privateSaleTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1393,
																			"src": "4205:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4181:41:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "507269766174652053616c6520736f6c64206f75742e",
																		"id": 1715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4224:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb",
																			"typeString": "literal_string \"Private Sale sold out.\""
																		},
																		"value": "Private Sale sold out."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb",
																			"typeString": "literal_string \"Private Sale sold out.\""
																		}
																	],
																	"id": 1711,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4173:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4173:76:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1717,
															"nodeType": "ExpressionStatement",
															"src": "4173:76:9"
														},
														{
															"expression": {
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1718,
																	"name": "tokensToBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1705,
																	"src": "4263:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "31",
																					"id": 1725,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4335:7:9",
																					"subdenomination": "ether",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1722,
																							"name": "latestPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1693,
																							"src": "4318:11:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1720,
																							"name": "usdAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1679,
																							"src": "4304:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1721,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4314:3:9",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1250,
																						"src": "4304:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1723,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4304:26:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1724,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4331:3:9",
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1265,
																				"src": "4304:30:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4304:39:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1719,
																		"name": "calculatePrivateSaleTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1930,
																		"src": "4277:26:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4277:67:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4263:81:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1729,
															"nodeType": "ExpressionStatement",
															"src": "4263:81:9"
														},
														{
															"expression": {
																"id": 1735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1730,
																	"name": "privateSaleSoldTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1410,
																	"src": "4358:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1733,
																			"name": "tokensToBuy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "4408:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1731,
																			"name": "privateSaleSoldTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "4382:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4404:3:9",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1220,
																		"src": "4382:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4382:38:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4358:62:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1736,
															"nodeType": "ExpressionStatement",
															"src": "4358:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1738,
																			"name": "privateSaleSoldTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "4442:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1739,
																			"name": "privateSaleTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1393,
																			"src": "4467:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4442:42:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4578636565647320507269766174652053616c6520746f6b656e206c696d69742e",
																		"id": 1741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4486:35:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e",
																			"typeString": "literal_string \"Exceeds Private Sale token limit.\""
																		},
																		"value": "Exceeds Private Sale token limit."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e",
																			"typeString": "literal_string \"Exceeds Private Sale token limit.\""
																		}
																	],
																	"id": 1737,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4434:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4434:88:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1743,
															"nodeType": "ExpressionStatement",
															"src": "4434:88:9"
														},
														{
															"expression": {
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1744,
																		"name": "vestingBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "4536:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1747,
																	"indexExpression": {
																		"expression": {
																			"id": 1745,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4551:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4555:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4551:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4536:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1753,
																			"name": "tokensToBuy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1705,
																			"src": "4596:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1748,
																				"name": "vestingBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1454,
																				"src": "4565:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1751,
																			"indexExpression": {
																				"expression": {
																					"id": 1749,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4580:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1750,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4584:6:9",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4580:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4565:26:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4592:3:9",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1220,
																		"src": "4565:30:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4565:43:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4536:72:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1756,
															"nodeType": "ExpressionStatement",
															"src": "4536:72:9"
														},
														{
															"expression": {
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1757,
																		"name": "vestingReleaseTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1458,
																		"src": "4622:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1760,
																	"indexExpression": {
																		"expression": {
																			"id": 1758,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4641:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4645:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4641:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4622:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1767,
																			"name": "vestingDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "4694:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1764,
																					"name": "stakeDuration",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1464,
																					"src": "4675:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1761,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "4655:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1762,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4661:9:9",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "4655:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4671:3:9",
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1220,
																				"src": "4655:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4655:34:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4690:3:9",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1220,
																		"src": "4655:38:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4655:55:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4622:88:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1770,
															"nodeType": "ExpressionStatement",
															"src": "4622:88:9"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1772,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4741:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4745:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4741:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1774,
																		"name": "tokensToBuy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "4753:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1771,
																	"name": "PrivateSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "4729:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4729:36:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1776,
															"nodeType": "EmitStatement",
															"src": "4724:41:9"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3610724e",
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1682,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1681,
												"name": "nonReentrant",
												"nameLocations": [
													"3898:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 360,
												"src": "3898:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3898:12:9"
										}
									],
									"name": "buyTokens",
									"nameLocation": "3852:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "3870:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "3862:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3862:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3861:19:9"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3911:0:9"
									},
									"scope": 2215,
									"src": "3843:1546:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "5482:777:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1862,
																"name": "usdAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "5500:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5512:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5500:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55534420616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5515:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a",
																"typeString": "literal_string \"USD amount must be greater than 0\""
															},
															"value": "USD amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a",
																"typeString": "literal_string \"USD amount must be greater than 0\""
															}
														],
														"id": 1861,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5492:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5492:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1867,
												"nodeType": "ExpressionStatement",
												"src": "5492:59:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1869,
																"name": "privateSaleTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "5569:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5589:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5569:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c6520746f6b656e73206d7573742062652067726561746572207468616e2030",
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5592:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85",
																"typeString": "literal_string \"Private Sale tokens must be greater than 0\""
															},
															"value": "Private Sale tokens must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85",
																"typeString": "literal_string \"Private Sale tokens must be greater than 0\""
															}
														],
														"id": 1868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5561:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5561:76:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "5561:76:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1876,
																"name": "privateSaleSoldTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "5655:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1877,
																"name": "privateSaleTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "5680:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5655:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c6520736f6c6420746f6b656e732065786365656420617661696c61626c6520746f6b656e73",
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5699:50:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2",
																"typeString": "literal_string \"Private Sale sold tokens exceed available tokens\""
															},
															"value": "Private Sale sold tokens exceed available tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2",
																"typeString": "literal_string \"Private Sale sold tokens exceed available tokens\""
															}
														],
														"id": 1875,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5647:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5647:103:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1881,
												"nodeType": "ExpressionStatement",
												"src": "5647:103:9"
											},
											{
												"assignments": [
													1883
												],
												"declarations": [
													{
														"constant": false,
														"id": 1883,
														"mutability": "mutable",
														"name": "tokenRange",
														"nameLocation": "5769:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1929,
														"src": "5761:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1882,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5761:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1888,
												"initialValue": {
													"arguments": [
														{
															"id": 1886,
															"name": "privateSaleStartPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "5806:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1884,
															"name": "privateSaleEndPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "5782:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5802:3:9",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1235,
														"src": "5782:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5782:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5761:67:9"
											},
											{
												"assignments": [
													1890
												],
												"declarations": [
													{
														"constant": false,
														"id": 1890,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "5846:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1929,
														"src": "5838:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1889,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5838:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1901,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1898,
																	"name": "privateSaleTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "5942:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1895,
																			"name": "privateSaleSoldTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "5915:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1893,
																			"name": "tokenRange",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1883,
																			"src": "5900:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5911:3:9",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1250,
																		"src": "5900:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5900:37:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5938:3:9",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1265,
																"src": "5900:41:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5900:60:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1891,
															"name": "privateSaleStartPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "5861:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5883:3:9",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1220,
														"src": "5861:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5861:109:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5838:132:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1903,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "5989:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1904,
																	"name": "privateSaleStartPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "6005:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5989:37:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1906,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "6030:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1907,
																	"name": "privateSaleEndPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "6046:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6030:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5989:76:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2070726963652063616c63756c61746564",
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6067:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4",
																"typeString": "literal_string \"Invalid token price calculated\""
															},
															"value": "Invalid token price calculated"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4",
																"typeString": "literal_string \"Invalid token price calculated\""
															}
														],
														"id": 1902,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5981:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5981:119:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1912,
												"nodeType": "ExpressionStatement",
												"src": "5981:119:9"
											},
											{
												"assignments": [
													1914
												],
												"declarations": [
													{
														"constant": false,
														"id": 1914,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "6119:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1929,
														"src": "6111:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1913,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6111:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1919,
												"initialValue": {
													"arguments": [
														{
															"id": 1917,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "6142:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1915,
															"name": "usdAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "6128:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6138:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1265,
														"src": "6128:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6128:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6111:44:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1921,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1914,
																"src": "6173:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6182:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6173:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c63756c6174656420746f6b656e73206d7573742062652067726561746572207468616e2030",
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6185:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996",
																"typeString": "literal_string \"Calculated tokens must be greater than 0\""
															},
															"value": "Calculated tokens must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996",
																"typeString": "literal_string \"Calculated tokens must be greater than 0\""
															}
														],
														"id": 1920,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6165:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "6165:63:9"
											},
											{
												"expression": {
													"id": 1927,
													"name": "tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1914,
													"src": "6246:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1860,
												"id": 1928,
												"nodeType": "Return",
												"src": "6239:13:9"
											}
										]
									},
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePrivateSaleTokens",
									"nameLocation": "5404:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "5439:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "5431:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5431:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5430:19:9"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "5473:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5473:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5472:9:9"
									},
									"scope": 2215,
									"src": "5395:864:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "6348:440:9",
										"statements": [
											{
												"assignments": [
													1938
												],
												"declarations": [
													{
														"constant": false,
														"id": 1938,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "6366:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1981,
														"src": "6358:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1937,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6358:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1953,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1950,
																	"name": "preSaleTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "6484:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1947,
																			"name": "preSaleSoldTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1441,
																			"src": "6461:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"arguments": [
																						{
																							"id": 1943,
																							"name": "preSaleStartPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1431,
																							"src": "6437:17:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1941,
																							"name": "preSaleEndPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1438,
																							"src": "6417:15:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1942,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6433:3:9",
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1235,
																						"src": "6417:19:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1944,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6417:38:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1945,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6416:40:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6457:3:9",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1250,
																		"src": "6416:44:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6416:63:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6480:3:9",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1265,
																"src": "6416:67:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6416:82:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1939,
															"name": "preSaleStartPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "6381:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6399:3:9",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1220,
														"src": "6381:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6381:127:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6358:150:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1955,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "6526:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1956,
																	"name": "preSaleStartPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "6542:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6526:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1958,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "6563:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1959,
																	"name": "preSaleEndPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1438,
																	"src": "6579:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6563:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6526:68:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2070726963652063616c63756c61746564",
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6596:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4",
																"typeString": "literal_string \"Invalid token price calculated\""
															},
															"value": "Invalid token price calculated"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4",
																"typeString": "literal_string \"Invalid token price calculated\""
															}
														],
														"id": 1954,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6518:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6518:111:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1964,
												"nodeType": "ExpressionStatement",
												"src": "6518:111:9"
											},
											{
												"assignments": [
													1966
												],
												"declarations": [
													{
														"constant": false,
														"id": 1966,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "6648:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1981,
														"src": "6640:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1965,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6640:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1971,
												"initialValue": {
													"arguments": [
														{
															"id": 1969,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "6671:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1967,
															"name": "usdAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "6657:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6667:3:9",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1265,
														"src": "6657:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6657:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6640:44:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1973,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "6702:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6711:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6702:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c63756c6174656420746f6b656e73206d7573742062652067726561746572207468616e2030",
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6714:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996",
																"typeString": "literal_string \"Calculated tokens must be greater than 0\""
															},
															"value": "Calculated tokens must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996",
																"typeString": "literal_string \"Calculated tokens must be greater than 0\""
															}
														],
														"id": 1972,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6694:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6694:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1978,
												"nodeType": "ExpressionStatement",
												"src": "6694:63:9"
											},
											{
												"expression": {
													"id": 1979,
													"name": "tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1966,
													"src": "6775:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1936,
												"id": 1980,
												"nodeType": "Return",
												"src": "6768:13:9"
											}
										]
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePreSaleTokens",
									"nameLocation": "6274:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "6305:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "6297:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6297:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6296:19:9"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "6339:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6339:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6338:9:9"
									},
									"scope": 2215,
									"src": "6265:523:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2052,
										"nodeType": "Block",
										"src": "6863:442:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1992,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1984,
																"src": "6881:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6890:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6881:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6893:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1991,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6873:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6873:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1997,
												"nodeType": "ExpressionStatement",
												"src": "6873:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2000,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6953:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6957:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6953:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1999,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "6943:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6943:21:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2003,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1984,
																"src": "6968:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6943:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636520746f207374616b65",
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6976:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0",
																"typeString": "literal_string \"Insufficient balance to stake\""
															},
															"value": "Insufficient balance to stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0",
																"typeString": "literal_string \"Insufficient balance to stake\""
															}
														],
														"id": 1998,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6935:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6935:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "6935:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2009,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7029:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7033:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7029:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2013,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7049:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Bettoken_$2215",
																		"typeString": "contract Bettoken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Bettoken_$2215",
																		"typeString": "contract Bettoken"
																	}
																],
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7041:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2011,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7041:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7041:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2015,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1984,
															"src": "7056:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2008,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "7019:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7019:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "7019:44:9"
											},
											{
												"expression": {
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2018,
															"name": "vestingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "7074:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2021,
														"indexExpression": {
															"expression": {
																"id": 2019,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7089:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7093:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7089:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7074:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2027,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1984,
																"src": "7134:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2022,
																	"name": "vestingBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1454,
																	"src": "7103:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2025,
																"indexExpression": {
																	"expression": {
																		"id": 2023,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7118:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7122:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7118:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7103:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7130:3:9",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1220,
															"src": "7103:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7103:38:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7074:67:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2030,
												"nodeType": "ExpressionStatement",
												"src": "7074:67:9"
											},
											{
												"expression": {
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2031,
															"name": "vestingReleaseTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "7151:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2034,
														"indexExpression": {
															"expression": {
																"id": 2032,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7170:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7174:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7170:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7151:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2038,
																"name": "stakeDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "7204:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2035,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7184:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7190:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7184:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7200:3:9",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1220,
															"src": "7184:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7184:34:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7151:67:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2041,
												"nodeType": "ExpressionStatement",
												"src": "7151:67:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2043,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7247:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7251:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7247:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2045,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1984,
															"src": "7259:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 2046,
																"name": "vestingReleaseTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1458,
																"src": "7267:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2049,
															"indexExpression": {
																"expression": {
																	"id": 2047,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7286:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7290:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7286:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7267:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2042,
														"name": "TokensStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "7234:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7234:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2051,
												"nodeType": "EmitStatement",
												"src": "7229:69:9"
											}
										]
									},
									"functionSelector": "7547c7a3",
									"id": 2053,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1987,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1986,
												"name": "onlyOwner",
												"nameLocations": [
													"6840:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "6840:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6840:9:9"
										},
										{
											"id": 1989,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1988,
												"name": "nonReentrant",
												"nameLocations": [
													"6850:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 360,
												"src": "6850:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6850:12:9"
										}
									],
									"name": "stakeTokens",
									"nameLocation": "6803:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6823:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "6815:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6815:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6814:16:9"
									},
									"returnParameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6863:0:9"
									},
									"scope": 2215,
									"src": "6794:511:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2113,
										"nodeType": "Block",
										"src": "7364:421:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2059,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7382:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7388:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7382:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"baseExpression": {
																	"id": 2061,
																	"name": "vestingReleaseTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1458,
																	"src": "7401:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2064,
																"indexExpression": {
																	"expression": {
																		"id": 2062,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7420:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7424:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7420:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7401:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7382:49:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e6720706572696f64206e6f742079657420636f6d706c657465642e",
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7433:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d",
																"typeString": "literal_string \"Vesting period not yet completed.\""
															},
															"value": "Vesting period not yet completed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d",
																"typeString": "literal_string \"Vesting period not yet completed.\""
															}
														],
														"id": 2058,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7374:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7374:95:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2068,
												"nodeType": "ExpressionStatement",
												"src": "7374:95:9"
											},
											{
												"assignments": [
													2070
												],
												"declarations": [
													{
														"constant": false,
														"id": 2070,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "7487:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2113,
														"src": "7479:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2069,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7479:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2075,
												"initialValue": {
													"baseExpression": {
														"id": 2071,
														"name": "vestingBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "7496:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2074,
													"indexExpression": {
														"expression": {
															"id": 2072,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7511:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7515:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7511:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7496:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7479:43:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2077,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2070,
																"src": "7540:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7549:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7540:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2076657374656420746f6b656e7320746f2072656c65617365",
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7552:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b",
																"typeString": "literal_string \"No vested tokens to release\""
															},
															"value": "No vested tokens to release"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b",
																"typeString": "literal_string \"No vested tokens to release\""
															}
														],
														"id": 2076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7532:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7532:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2082,
												"nodeType": "ExpressionStatement",
												"src": "7532:50:9"
											},
											{
												"expression": {
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2083,
															"name": "vestingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "7593:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2086,
														"indexExpression": {
															"expression": {
																"id": 2084,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7608:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7612:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7608:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7593:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7622:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7593:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2089,
												"nodeType": "ExpressionStatement",
												"src": "7593:30:9"
											},
											{
												"expression": {
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2090,
															"name": "vestingReleaseTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "7633:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2093,
														"indexExpression": {
															"expression": {
																"id": 2091,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7652:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7656:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7652:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7633:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7666:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7633:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "7633:34:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2100,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7696:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Bettoken_$2215",
																		"typeString": "contract Bettoken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Bettoken_$2215",
																		"typeString": "contract Bettoken"
																	}
																],
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7688:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2098,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7688:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7688:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2102,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7703:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7707:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7703:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2104,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "7715:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2097,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "7678:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7678:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2106,
												"nodeType": "ExpressionStatement",
												"src": "7678:44:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2108,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7759:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7763:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7759:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2110,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "7771:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2107,
														"name": "VestedTokensReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "7738:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7738:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2112,
												"nodeType": "EmitStatement",
												"src": "7733:45:9"
											}
										]
									},
									"functionSelector": "54dd1da4",
									"id": 2114,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2056,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2055,
												"name": "nonReentrant",
												"nameLocations": [
													"7351:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 360,
												"src": "7351:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7351:12:9"
										}
									],
									"name": "releaseVestedTokens",
									"nameLocation": "7320:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7339:2:9"
									},
									"returnParameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7364:0:9"
									},
									"scope": 2215,
									"src": "7311:474:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2139,
										"nodeType": "Block",
										"src": "7831:219:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2120,
																	"name": "privateSaleSoldTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1410,
																	"src": "7849:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2121,
																	"name": "privateSaleTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "7874:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7849:42:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2123,
																	"name": "preSaleSoldTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1441,
																	"src": "7895:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2124,
																	"name": "preSaleTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "7916:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7895:34:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7849:80:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65732074617267657473206e6f7420796574206d65742e",
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7948:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef",
																"typeString": "literal_string \"Sales targets not yet met.\""
															},
															"value": "Sales targets not yet met."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef",
																"typeString": "literal_string \"Sales targets not yet met.\""
															}
														],
														"id": 2119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7841:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7841:136:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2129,
												"nodeType": "ExpressionStatement",
												"src": "7841:136:9"
											},
											{
												"expression": {
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2130,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "7987:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1445",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2131,
															"name": "SaleStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "7995:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SaleStage_$1445_$",
																"typeString": "type(enum Bettoken.SaleStage)"
															}
														},
														"id": 2132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8005:4:9",
														"memberName": "NONE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1442,
														"src": "7995:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1445",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"src": "7987:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SaleStage_$1445",
														"typeString": "enum Bettoken.SaleStage"
													}
												},
												"id": 2134,
												"nodeType": "ExpressionStatement",
												"src": "7987:22:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2136,
															"name": "stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "8037:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_SaleStage_$1445",
																"typeString": "enum Bettoken.SaleStage"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_SaleStage_$1445",
																"typeString": "enum Bettoken.SaleStage"
															}
														],
														"id": 2135,
														"name": "StageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "8024:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_enum$_SaleStage_$1445_$returns$__$",
															"typeString": "function (enum Bettoken.SaleStage)"
														}
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8024:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2138,
												"nodeType": "EmitStatement",
												"src": "8019:24:9"
											}
										]
									},
									"functionSelector": "32c85ac0",
									"id": 2140,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2117,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2116,
												"name": "onlyOwner",
												"nameLocations": [
													"7821:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "7821:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7821:9:9"
										}
									],
									"name": "haltSales",
									"nameLocation": "7800:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7809:2:9"
									},
									"returnParameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7831:0:9"
									},
									"scope": 2215,
									"src": "7791:259:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2166,
										"nodeType": "Block",
										"src": "8153:109:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2155,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "8193:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8193:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2157,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "8202:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2152,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2142,
																	"src": "8170:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2151,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "8163:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$988_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8163:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$988",
																"typeString": "contract IERC20"
															}
														},
														"id": 2154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8184:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 955,
														"src": "8163:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2159,
												"nodeType": "ExpressionStatement",
												"src": "8163:46:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2161,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "8239:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8239:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2163,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "8248:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2160,
														"name": "FundsWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "8224:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8224:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2165,
												"nodeType": "EmitStatement",
												"src": "8219:36:9"
											}
										]
									},
									"functionSelector": "95ccea67",
									"id": 2167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2147,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2146,
												"name": "onlyOwner",
												"nameLocations": [
													"8130:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "8130:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8130:9:9"
										},
										{
											"id": 2149,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2148,
												"name": "nonReentrant",
												"nameLocations": [
													"8140:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 360,
												"src": "8140:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8140:12:9"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "8065:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "8091:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "8083:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8083:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8113:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "8105:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8105:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8082:38:9"
									},
									"returnParameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8153:0:9"
									},
									"scope": 2215,
									"src": "8056:206:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "8325:144:9",
										"statements": [
											{
												"assignments": [
													2175
												],
												"declarations": [
													{
														"constant": false,
														"id": 2175,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "8343:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2197,
														"src": "8335:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2174,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8335:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2181,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2178,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "8360:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Bettoken_$2215",
																	"typeString": "contract Bettoken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Bettoken_$2215",
																	"typeString": "contract Bettoken"
																}
															],
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8352:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2176,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8352:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8352:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8366:7:9",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "8352:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8335:38:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2188,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2175,
															"src": "8409:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2184,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 113,
																		"src": "8391:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8391:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8383:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2182,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8383:8:9",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8383:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8400:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8383:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8383:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2190,
												"nodeType": "ExpressionStatement",
												"src": "8383:33:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2192,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "8446:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8446:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2194,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2175,
															"src": "8455:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2191,
														"name": "FundsWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "8431:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8431:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2196,
												"nodeType": "EmitStatement",
												"src": "8426:36:9"
											}
										]
									},
									"functionSelector": "24600fc3",
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2170,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2169,
												"name": "onlyOwner",
												"nameLocations": [
													"8302:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "8302:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8302:9:9"
										},
										{
											"id": 2172,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2171,
												"name": "nonReentrant",
												"nameLocations": [
													"8312:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 360,
												"src": "8312:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8312:12:9"
										}
									],
									"name": "withdrawFunds",
									"nameLocation": "8277:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8290:2:9"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8325:0:9"
									},
									"scope": 2215,
									"src": "8268:201:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2205,
										"nodeType": "Block",
										"src": "8503:60:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "44697265637420455448207472616e7366657273206e6f7420616c6c6f7765642e",
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8520:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
																"typeString": "literal_string \"Direct ETH transfers not allowed.\""
															},
															"value": "Direct ETH transfers not allowed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
																"typeString": "literal_string \"Direct ETH transfers not allowed.\""
															}
														],
														"id": 2201,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "8513:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2204,
												"nodeType": "ExpressionStatement",
												"src": "8513:43:9"
											}
										]
									},
									"id": 2206,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8483:2:9"
									},
									"returnParameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8503:0:9"
									},
									"scope": 2215,
									"src": "8475:88:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2213,
										"nodeType": "Block",
										"src": "8596:60:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "44697265637420455448207472616e7366657273206e6f7420616c6c6f7765642e",
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8613:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
																"typeString": "literal_string \"Direct ETH transfers not allowed.\""
															},
															"value": "Direct ETH transfers not allowed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
																"typeString": "literal_string \"Direct ETH transfers not allowed.\""
															}
														],
														"id": 2209,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "8606:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8606:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2212,
												"nodeType": "ExpressionStatement",
												"src": "8606:43:9"
											}
										]
									},
									"id": 2214,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8576:2:9"
									},
									"returnParameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8596:0:9"
									},
									"scope": 2215,
									"src": "8569:87:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2216,
							"src": "367:8291:9",
							"usedErrors": [
								59,
								64,
								205,
								210,
								215,
								224,
								229,
								234
							],
							"usedEvents": [
								70,
								922,
								931,
								1474,
								1480,
								1488,
								1494,
								1499,
								1505
							]
						}
					],
					"src": "34:8625:9"
				},
				"id": 9
			}
		}
	}
}